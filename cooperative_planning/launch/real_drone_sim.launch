<?xml version="1.0"?>
<launch>

  
   <!-- Arguments received when starting the environment -->
  <arg name="nameShuttle" default="typhoon_h480"/>
  <arg name="nameTarget" default="plane"/>
  <arg name="mission" default="simulation"/>
  <arg name="IDShuttle" default="1"/>
  <arg name="IDTarget" default="1"/>

  <!-- Define the namespace for this drone being launched -->
  <arg name="namespaceShuttle" value="$(arg nameShuttle)$(arg IDShuttle)"/>
  <arg name="namespaceTarget" value="$(arg nameTarget)$(arg IDTarget)"/>


 <!-- Load global vehicle parameters -->
  <rosparam command="load" file="$(find drone_bringup)/config/$(arg mission)/$(arg nameShuttle)/config.yaml"/>
  <param name="IDShuttle" type="int" value="$(arg IDShuttle)"/>
  <param name="namespaceShuttle" type="string" value="$(arg namespaceShuttle)"/>
  <param name="IDTarget" type="int" value="$(arg IDTarget)"/>
  <param name="namespaceTarget" type="string" value="$(arg namespaceTarget)"/>

 
 
    <!--
   <node pkg="rosbag" type="record" name="rosbag_node"
       args="record -a -o $(find cooperative_planning)/ROSBAG_virtual_point"/>   


   <node pkg="cooperative_planning" type="field_test_offboard_shuttle_follower_mpc_virtual_point" name="controller_node"  output="screen"/> 
   <node pkg="cooperative_planning" type="state_machine.py" name="state_machine_node"/> --> 
   <node pkg="cooperative_planning" type="field_test_offboard_shuttle_vel_control" name="controller_node"  output="screen"/> 
   <node pkg="cooperative_planning" type="field_test_send_shuttle_target_pos" name="desired_positions_node"  output="screen"/> 


 

</launch>
