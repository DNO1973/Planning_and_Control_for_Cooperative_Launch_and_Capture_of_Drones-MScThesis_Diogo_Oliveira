/* This file was automatically generated by CasADi 3.6.3.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) gen_ ## ID
#endif

#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdarg.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

#include <casadi/mem.h>

/* Add prefix to internal symbols */
#define casadi_axpy CASADI_PREFIX(axpy)
#define casadi_bilin CASADI_PREFIX(bilin)
#define casadi_c0 CASADI_PREFIX(c0)
#define casadi_c1 CASADI_PREFIX(c1)
#define casadi_casadi_qrqp_du_direction CASADI_PREFIX(casadi_qrqp_du_direction)
#define casadi_casadi_qrqp_pr_direction CASADI_PREFIX(casadi_qrqp_pr_direction)
#define casadi_clear CASADI_PREFIX(clear)
#define casadi_copy CASADI_PREFIX(copy)
#define casadi_densify CASADI_PREFIX(densify)
#define casadi_dot CASADI_PREFIX(dot)
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_f1 CASADI_PREFIX(f1)
#define casadi_f10 CASADI_PREFIX(f10)
#define casadi_f11 CASADI_PREFIX(f11)
#define casadi_f12 CASADI_PREFIX(f12)
#define casadi_f13 CASADI_PREFIX(f13)
#define casadi_f14 CASADI_PREFIX(f14)
#define casadi_f15 CASADI_PREFIX(f15)
#define casadi_f16 CASADI_PREFIX(f16)
#define casadi_f17 CASADI_PREFIX(f17)
#define casadi_f18 CASADI_PREFIX(f18)
#define casadi_f19 CASADI_PREFIX(f19)
#define casadi_f2 CASADI_PREFIX(f2)
#define casadi_f20 CASADI_PREFIX(f20)
#define casadi_f21 CASADI_PREFIX(f21)
#define casadi_f22 CASADI_PREFIX(f22)
#define casadi_f23 CASADI_PREFIX(f23)
#define casadi_f24 CASADI_PREFIX(f24)
#define casadi_f25 CASADI_PREFIX(f25)
#define casadi_f26 CASADI_PREFIX(f26)
#define casadi_f27 CASADI_PREFIX(f27)
#define casadi_f28 CASADI_PREFIX(f28)
#define casadi_f29 CASADI_PREFIX(f29)
#define casadi_f3 CASADI_PREFIX(f3)
#define casadi_f4 CASADI_PREFIX(f4)
#define casadi_f5 CASADI_PREFIX(f5)
#define casadi_f6 CASADI_PREFIX(f6)
#define casadi_f7 CASADI_PREFIX(f7)
#define casadi_f8 CASADI_PREFIX(f8)
#define casadi_f9 CASADI_PREFIX(f9)
#define casadi_fill CASADI_PREFIX(fill)
#define casadi_fmax CASADI_PREFIX(fmax)
#define casadi_fmin CASADI_PREFIX(fmin)
#define casadi_house CASADI_PREFIX(house)
#define casadi_if_else CASADI_PREFIX(if_else)
#define casadi_max_viol CASADI_PREFIX(max_viol)
#define casadi_mtimes CASADI_PREFIX(mtimes)
#define casadi_mv CASADI_PREFIX(mv)
#define casadi_nlpsol_data CASADI_PREFIX(nlpsol_data)
#define casadi_nlpsol_detect_bounds_data CASADI_PREFIX(nlpsol_detect_bounds_data)
#define casadi_nlpsol_detect_bounds_prob CASADI_PREFIX(nlpsol_detect_bounds_prob)
#define casadi_nlpsol_init CASADI_PREFIX(nlpsol_init)
#define casadi_nlpsol_prob CASADI_PREFIX(nlpsol_prob)
#define casadi_nlpsol_work CASADI_PREFIX(nlpsol_work)
#define casadi_norm_inf CASADI_PREFIX(norm_inf)
#define casadi_qp_data CASADI_PREFIX(qp_data)
#define casadi_qp_init CASADI_PREFIX(qp_init)
#define casadi_qp_prob CASADI_PREFIX(qp_prob)
#define casadi_qp_setup CASADI_PREFIX(qp_setup)
#define casadi_qp_work CASADI_PREFIX(qp_work)
#define casadi_qr CASADI_PREFIX(qr)
#define casadi_qr_colcomb CASADI_PREFIX(qr_colcomb)
#define casadi_qr_mv CASADI_PREFIX(qr_mv)
#define casadi_qr_singular CASADI_PREFIX(qr_singular)
#define casadi_qr_solve CASADI_PREFIX(qr_solve)
#define casadi_qr_trs CASADI_PREFIX(qr_trs)
#define casadi_qrqp_calc_dependent CASADI_PREFIX(qrqp_calc_dependent)
#define casadi_qrqp_calc_sens CASADI_PREFIX(qrqp_calc_sens)
#define casadi_qrqp_calc_step CASADI_PREFIX(qrqp_calc_step)
#define casadi_qrqp_data CASADI_PREFIX(qrqp_data)
#define casadi_qrqp_du CASADI_PREFIX(qrqp_du)
#define casadi_qrqp_du_check CASADI_PREFIX(qrqp_du_check)
#define casadi_qrqp_du_index CASADI_PREFIX(qrqp_du_index)
#define casadi_qrqp_dual_blocking CASADI_PREFIX(qrqp_dual_blocking)
#define casadi_qrqp_dual_breakpoints CASADI_PREFIX(qrqp_dual_breakpoints)
#define casadi_qrqp_enforceable CASADI_PREFIX(qrqp_enforceable)
#define casadi_qrqp_expand_step CASADI_PREFIX(qrqp_expand_step)
#define casadi_qrqp_factorize CASADI_PREFIX(qrqp_factorize)
#define casadi_qrqp_flag_t CASADI_PREFIX(qrqp_flag_t)
#define casadi_qrqp_flip CASADI_PREFIX(qrqp_flip)
#define casadi_qrqp_flip_check CASADI_PREFIX(qrqp_flip_check)
#define casadi_qrqp_init CASADI_PREFIX(qrqp_init)
#define casadi_qrqp_iterate CASADI_PREFIX(qrqp_iterate)
#define casadi_qrqp_kkt CASADI_PREFIX(qrqp_kkt)
#define casadi_qrqp_kkt_dot CASADI_PREFIX(qrqp_kkt_dot)
#define casadi_qrqp_kkt_residual CASADI_PREFIX(qrqp_kkt_residual)
#define casadi_qrqp_kkt_vector CASADI_PREFIX(qrqp_kkt_vector)
#define casadi_qrqp_linesearch CASADI_PREFIX(qrqp_linesearch)
#define casadi_qrqp_pr CASADI_PREFIX(qrqp_pr)
#define casadi_qrqp_pr_index CASADI_PREFIX(qrqp_pr_index)
#define casadi_qrqp_prepare CASADI_PREFIX(qrqp_prepare)
#define casadi_qrqp_primal_blocking CASADI_PREFIX(qrqp_primal_blocking)
#define casadi_qrqp_print_colcomb CASADI_PREFIX(qrqp_print_colcomb)
#define casadi_qrqp_print_header CASADI_PREFIX(qrqp_print_header)
#define casadi_qrqp_print_iteration CASADI_PREFIX(qrqp_print_iteration)
#define casadi_qrqp_prob CASADI_PREFIX(qrqp_prob)
#define casadi_qrqp_reset CASADI_PREFIX(qrqp_reset)
#define casadi_qrqp_setup CASADI_PREFIX(qrqp_setup)
#define casadi_qrqp_singular_step CASADI_PREFIX(qrqp_singular_step)
#define casadi_qrqp_take_step CASADI_PREFIX(qrqp_take_step)
#define casadi_qrqp_work CASADI_PREFIX(qrqp_work)
#define casadi_qrqp_zero_blocking CASADI_PREFIX(qrqp_zero_blocking)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s10 CASADI_PREFIX(s10)
#define casadi_s11 CASADI_PREFIX(s11)
#define casadi_s12 CASADI_PREFIX(s12)
#define casadi_s13 CASADI_PREFIX(s13)
#define casadi_s14 CASADI_PREFIX(s14)
#define casadi_s15 CASADI_PREFIX(s15)
#define casadi_s16 CASADI_PREFIX(s16)
#define casadi_s17 CASADI_PREFIX(s17)
#define casadi_s18 CASADI_PREFIX(s18)
#define casadi_s19 CASADI_PREFIX(s19)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_s20 CASADI_PREFIX(s20)
#define casadi_s21 CASADI_PREFIX(s21)
#define casadi_s22 CASADI_PREFIX(s22)
#define casadi_s23 CASADI_PREFIX(s23)
#define casadi_s24 CASADI_PREFIX(s24)
#define casadi_s25 CASADI_PREFIX(s25)
#define casadi_s26 CASADI_PREFIX(s26)
#define casadi_s27 CASADI_PREFIX(s27)
#define casadi_s28 CASADI_PREFIX(s28)
#define casadi_s29 CASADI_PREFIX(s29)
#define casadi_s3 CASADI_PREFIX(s3)
#define casadi_s30 CASADI_PREFIX(s30)
#define casadi_s31 CASADI_PREFIX(s31)
#define casadi_s32 CASADI_PREFIX(s32)
#define casadi_s33 CASADI_PREFIX(s33)
#define casadi_s34 CASADI_PREFIX(s34)
#define casadi_s35 CASADI_PREFIX(s35)
#define casadi_s36 CASADI_PREFIX(s36)
#define casadi_s37 CASADI_PREFIX(s37)
#define casadi_s38 CASADI_PREFIX(s38)
#define casadi_s39 CASADI_PREFIX(s39)
#define casadi_s4 CASADI_PREFIX(s4)
#define casadi_s40 CASADI_PREFIX(s40)
#define casadi_s41 CASADI_PREFIX(s41)
#define casadi_s42 CASADI_PREFIX(s42)
#define casadi_s43 CASADI_PREFIX(s43)
#define casadi_s44 CASADI_PREFIX(s44)
#define casadi_s45 CASADI_PREFIX(s45)
#define casadi_s46 CASADI_PREFIX(s46)
#define casadi_s47 CASADI_PREFIX(s47)
#define casadi_s48 CASADI_PREFIX(s48)
#define casadi_s49 CASADI_PREFIX(s49)
#define casadi_s5 CASADI_PREFIX(s5)
#define casadi_s50 CASADI_PREFIX(s50)
#define casadi_s51 CASADI_PREFIX(s51)
#define casadi_s52 CASADI_PREFIX(s52)
#define casadi_s53 CASADI_PREFIX(s53)
#define casadi_s54 CASADI_PREFIX(s54)
#define casadi_s55 CASADI_PREFIX(s55)
#define casadi_s56 CASADI_PREFIX(s56)
#define casadi_s57 CASADI_PREFIX(s57)
#define casadi_s58 CASADI_PREFIX(s58)
#define casadi_s59 CASADI_PREFIX(s59)
#define casadi_s6 CASADI_PREFIX(s6)
#define casadi_s60 CASADI_PREFIX(s60)
#define casadi_s61 CASADI_PREFIX(s61)
#define casadi_s62 CASADI_PREFIX(s62)
#define casadi_s63 CASADI_PREFIX(s63)
#define casadi_s64 CASADI_PREFIX(s64)
#define casadi_s65 CASADI_PREFIX(s65)
#define casadi_s66 CASADI_PREFIX(s66)
#define casadi_s67 CASADI_PREFIX(s67)
#define casadi_s68 CASADI_PREFIX(s68)
#define casadi_s69 CASADI_PREFIX(s69)
#define casadi_s7 CASADI_PREFIX(s7)
#define casadi_s70 CASADI_PREFIX(s70)
#define casadi_s71 CASADI_PREFIX(s71)
#define casadi_s72 CASADI_PREFIX(s72)
#define casadi_s73 CASADI_PREFIX(s73)
#define casadi_s74 CASADI_PREFIX(s74)
#define casadi_s75 CASADI_PREFIX(s75)
#define casadi_s76 CASADI_PREFIX(s76)
#define casadi_s77 CASADI_PREFIX(s77)
#define casadi_s78 CASADI_PREFIX(s78)
#define casadi_s79 CASADI_PREFIX(s79)
#define casadi_s8 CASADI_PREFIX(s8)
#define casadi_s80 CASADI_PREFIX(s80)
#define casadi_s81 CASADI_PREFIX(s81)
#define casadi_s82 CASADI_PREFIX(s82)
#define casadi_s83 CASADI_PREFIX(s83)
#define casadi_s84 CASADI_PREFIX(s84)
#define casadi_s85 CASADI_PREFIX(s85)
#define casadi_s86 CASADI_PREFIX(s86)
#define casadi_s87 CASADI_PREFIX(s87)
#define casadi_s88 CASADI_PREFIX(s88)
#define casadi_s89 CASADI_PREFIX(s89)
#define casadi_s9 CASADI_PREFIX(s9)
#define casadi_s90 CASADI_PREFIX(s90)
#define casadi_s91 CASADI_PREFIX(s91)
#define casadi_s92 CASADI_PREFIX(s92)
#define casadi_s93 CASADI_PREFIX(s93)
#define casadi_s94 CASADI_PREFIX(s94)
#define casadi_s95 CASADI_PREFIX(s95)
#define casadi_s96 CASADI_PREFIX(s96)
#define casadi_s97 CASADI_PREFIX(s97)
#define casadi_s98 CASADI_PREFIX(s98)
#define casadi_s99 CASADI_PREFIX(s99)
#define casadi_scal CASADI_PREFIX(scal)
#define casadi_sqpmethod_data CASADI_PREFIX(sqpmethod_data)
#define casadi_sqpmethod_init CASADI_PREFIX(sqpmethod_init)
#define casadi_sqpmethod_prob CASADI_PREFIX(sqpmethod_prob)
#define casadi_sqpmethod_work CASADI_PREFIX(sqpmethod_work)
#define casadi_sum_viol CASADI_PREFIX(sum_viol)
#define casadi_trans CASADI_PREFIX(trans)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

void casadi_copy(const casadi_real* x, casadi_int n, casadi_real* y) {
  casadi_int i;
  if (y) {
    if (x) {
      for (i=0; i<n; ++i) *y++ = *x++;
    } else {
      for (i=0; i<n; ++i) *y++ = 0.;
    }
  }
}

void casadi_clear(casadi_real* x, casadi_int n) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = 0;
  }
}

#define CASADI_CAST(x,y) (static_cast<x>(y))

void casadi_densify(const casadi_real* x, const casadi_int* sp_x, casadi_real* y, casadi_int tr) {
  casadi_int nrow_x, ncol_x, i, el;
  const casadi_int *colind_x, *row_x;
  if (!y) return;
  nrow_x = sp_x[0]; ncol_x = sp_x[1];
  colind_x = sp_x+2; row_x = sp_x+ncol_x+3;
  casadi_clear(y, nrow_x*ncol_x);
  if (!x) return;
  if (tr) {
    for (i=0; i<ncol_x; ++i) {
      for (el=colind_x[i]; el!=colind_x[i+1]; ++el) {
        y[i + row_x[el]*ncol_x] = CASADI_CAST(casadi_real, *x++);
      }
    }
  } else {
    for (i=0; i<ncol_x; ++i) {
      for (el=colind_x[i]; el!=colind_x[i+1]; ++el) {
        y[row_x[el]] = CASADI_CAST(casadi_real, *x++);
      }
      y += nrow_x;
    }
  }
}

void casadi_fill(casadi_real* x, casadi_int n, casadi_real alpha) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = alpha;
  }
}

void casadi_mtimes(const casadi_real* x, const casadi_int* sp_x, const casadi_real* y, const casadi_int* sp_y, casadi_real* z, const casadi_int* sp_z, casadi_real* w, casadi_int tr) {
  casadi_int ncol_x, ncol_y, ncol_z, cc;
  const casadi_int *colind_x, *row_x, *colind_y, *row_y, *colind_z, *row_z;
  ncol_x = sp_x[1];
  colind_x = sp_x+2; row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2; row_y = sp_y + 2 + ncol_y+1;
  ncol_z = sp_z[1];
  colind_z = sp_z+2; row_z = sp_z + 2 + ncol_z+1;
  if (tr) {
    for (cc=0; cc<ncol_z; ++cc) {
      casadi_int kk;
      for (kk=colind_y[cc]; kk<colind_y[cc+1]; ++kk) {
        w[row_y[kk]] = y[kk];
      }
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        casadi_int kk1;
        casadi_int rr = row_z[kk];
        for (kk1=colind_x[rr]; kk1<colind_x[rr+1]; ++kk1) {
          z[kk] += x[kk1] * w[row_x[kk1]];
        }
      }
    }
  } else {
    for (cc=0; cc<ncol_y; ++cc) {
      casadi_int kk;
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        w[row_z[kk]] = z[kk];
      }
      for (kk=colind_y[cc]; kk<colind_y[cc+1]; ++kk) {
        casadi_int kk1;
        casadi_int rr = row_y[kk];
        for (kk1=colind_x[rr]; kk1<colind_x[rr+1]; ++kk1) {
          w[row_x[kk1]] += x[kk1]*y[kk];
        }
      }
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        z[kk] = w[row_z[kk]];
      }
    }
  }
}

void casadi_trans(const casadi_real* x, const casadi_int* sp_x, casadi_real* y,
    const casadi_int* sp_y, casadi_int* tmp) {
  casadi_int ncol_x, nnz_x, ncol_y, k;
  const casadi_int* row_x, *colind_y;
  ncol_x = sp_x[1];
  nnz_x = sp_x[2 + ncol_x];
  row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2;
  for (k=0; k<ncol_y; ++k) tmp[k] = colind_y[k];
  for (k=0; k<nnz_x; ++k) {
    y[tmp[row_x[k]]++] = x[k];
  }
}

casadi_real casadi_dot(casadi_int n, const casadi_real* x, const casadi_real* y) {
  casadi_int i;
  casadi_real r = 0;
  for (i=0; i<n; ++i) r += *x++ * *y++;
  return r;
}

struct casadi_qp_prob {
  const casadi_int *sp_a, *sp_h;
  casadi_int nx, na, nz;
  casadi_int nnz_a, nnz_h;
};
void casadi_qp_setup(struct casadi_qp_prob* p) {
  p->na = p->sp_a[0];
  p->nx = p->sp_a[1];
  p->nz = p->na+p->nx;
  p->nnz_a = p->sp_a[2+p->sp_a[1]];
  p->nnz_h = p->sp_h[2+p->sp_h[1]];
}
struct casadi_qp_data {
  const struct casadi_qp_prob* prob;
  int unified_return_status;
  int success;
  casadi_int iter_count;
  const casadi_real *a, *h, *g, *lbx, *ubx, *lba, *uba, *x0, *lam_x0, *lam_a0;
  casadi_real *f, *x, *lam_x, *lam_a;
};
void casadi_qp_init(struct casadi_qp_data* d, casadi_int** iw, casadi_real** w) {
}
void casadi_qp_work(const struct casadi_qp_prob* p, casadi_int* sz_arg, casadi_int* sz_res,
    casadi_int* sz_iw, casadi_int* sz_w) {
  *sz_arg = *sz_res = 0;
  *sz_w = *sz_iw = 0;
}

casadi_real casadi_if_else(casadi_real c, casadi_real x, casadi_real y) { return c!=0 ? x : y;}

void casadi_scal(casadi_int n, casadi_real alpha, casadi_real* x) {
  casadi_int i;
  if (!x) return;
  for (i=0; i<n; ++i) *x++ *= alpha;
}

casadi_real casadi_house(casadi_real* v, casadi_real* beta, casadi_int nv) {
  casadi_int i;
  casadi_real v0, sigma, s, sigma_is_zero, v0_nonpos;
  v0 = v[0];
  sigma=0;
  for (i=1; i<nv; ++i) sigma += v[i]*v[i];
  s = sqrt(v0*v0 + sigma);
  sigma_is_zero = sigma==0;
  v0_nonpos = v0<=0;
  v[0] = casadi_if_else(sigma_is_zero, 1,
                 casadi_if_else(v0_nonpos, v0-s, -sigma/(v0+s)));
  *beta = casadi_if_else(sigma_is_zero, 2*v0_nonpos, -1/(s*v[0]));
  return s;
}
void casadi_qr(const casadi_int* sp_a, const casadi_real* nz_a, casadi_real* x,
               const casadi_int* sp_v, casadi_real* nz_v, const casadi_int* sp_r, casadi_real* nz_r, casadi_real* beta,
               const casadi_int* prinv, const casadi_int* pc) {
   casadi_int ncol, nrow, r, c, k, k1;
   casadi_real alpha;
   const casadi_int *a_colind, *a_row, *v_colind, *v_row, *r_colind, *r_row;
   ncol = sp_a[1];
   a_colind=sp_a+2; a_row=sp_a+2+ncol+1;
   nrow = sp_v[0];
   v_colind=sp_v+2; v_row=sp_v+2+ncol+1;
   r_colind=sp_r+2; r_row=sp_r+2+ncol+1;
   for (r=0; r<nrow; ++r) x[r] = 0;
   for (c=0; c<ncol; ++c) {
     for (k=a_colind[pc[c]]; k<a_colind[pc[c]+1]; ++k) x[prinv[a_row[k]]] = nz_a[k];
     for (k=r_colind[c]; k<r_colind[c+1] && (r=r_row[k])<c; ++k) {
       alpha = 0;
       for (k1=v_colind[r]; k1<v_colind[r+1]; ++k1) alpha += nz_v[k1]*x[v_row[k1]];
       alpha *= beta[r];
       for (k1=v_colind[r]; k1<v_colind[r+1]; ++k1) x[v_row[k1]] -= alpha*nz_v[k1];
       *nz_r++ = x[r];
       x[r] = 0;
     }
     for (k=v_colind[c]; k<v_colind[c+1]; ++k) {
       nz_v[k] = x[v_row[k]];
       x[v_row[k]] = 0;
     }
     *nz_r++ = casadi_house(nz_v + v_colind[c], beta + c, v_colind[c+1] - v_colind[c]);
   }
 }
void casadi_qr_mv(const casadi_int* sp_v, const casadi_real* v, const casadi_real* beta, casadi_real* x,
                  casadi_int tr) {
  casadi_int ncol, c, c1, k;
  casadi_real alpha;
  const casadi_int *colind, *row;
  ncol=sp_v[1];
  colind=sp_v+2; row=sp_v+2+ncol+1;
  for (c1=0; c1<ncol; ++c1) {
    c = tr ? c1 : ncol-1-c1;
    alpha=0;
    for (k=colind[c]; k<colind[c+1]; ++k) alpha += v[k]*x[row[k]];
    alpha *= beta[c];
    for (k=colind[c]; k<colind[c+1]; ++k) x[row[k]] -= alpha*v[k];
  }
}
void casadi_qr_trs(const casadi_int* sp_r, const casadi_real* nz_r, casadi_real* x, casadi_int tr) {
  casadi_int ncol, r, c, k;
  const casadi_int *colind, *row;
  ncol=sp_r[1];
  colind=sp_r+2; row=sp_r+2+ncol+1;
  if (tr) {
    for (c=0; c<ncol; ++c) {
      for (k=colind[c]; k<colind[c+1]; ++k) {
        r = row[k];
        if (r==c) {
          x[c] /= nz_r[k];
        } else {
          x[c] -= nz_r[k]*x[r];
        }
      }
    }
  } else {
    for (c=ncol-1; c>=0; --c) {
      for (k=colind[c+1]-1; k>=colind[c]; --k) {
        r=row[k];
        if (r==c) {
          x[r] /= nz_r[k];
        } else {
          x[r] -= nz_r[k]*x[c];
        }
      }
    }
  }
}
void casadi_qr_solve(casadi_real* x, casadi_int nrhs, casadi_int tr,
                     const casadi_int* sp_v, const casadi_real* v, const casadi_int* sp_r, const casadi_real* r,
                     const casadi_real* beta, const casadi_int* prinv, const casadi_int* pc, casadi_real* w) {
  casadi_int k, c, nrow_ext, ncol;
  nrow_ext = sp_v[0]; ncol = sp_v[1];
  for (k=0; k<nrhs; ++k) {
    if (tr) {
      for (c=0; c<ncol; ++c) w[c] = x[pc[c]];
      casadi_qr_trs(sp_r, r, w, 1);
      casadi_qr_mv(sp_v, v, beta, w, 0);
      for (c=0; c<ncol; ++c) x[c] = w[prinv[c]];
    } else {
      for (c=0; c<nrow_ext; ++c) w[c] = 0;
      for (c=0; c<ncol; ++c) w[prinv[c]] = x[c];
      casadi_qr_mv(sp_v, v, beta, w, 1);
      casadi_qr_trs(sp_r, r, w, 0);
      for (c=0; c<ncol; ++c) x[pc[c]] = w[c];
    }
    x += ncol;
  }
}
casadi_int casadi_qr_singular(casadi_real* rmin, casadi_int* irmin, const casadi_real* nz_r,
                             const casadi_int* sp_r, const casadi_int* pc, casadi_real eps) {
  casadi_real rd, rd_min;
  casadi_int ncol, c, nullity;
  const casadi_int* r_colind;
  nullity = 0;
  ncol = sp_r[1];
  r_colind = sp_r + 2;
  for (c=0; c<ncol; ++c) {
    rd = fabs(nz_r[r_colind[c+1]-1]);
    if (rd<eps) nullity++;
    if (c==0 || rd < rd_min) {
      rd_min = rd;
      if (rmin) *rmin = rd;
      if (irmin) *irmin = pc[c];
    }
  }
  return nullity;
}
void casadi_qr_colcomb(casadi_real* v, const casadi_real* nz_r, const casadi_int* sp_r,
                       const casadi_int* pc, casadi_real eps, casadi_int ind) {
  casadi_int ncol, r, c, k;
  const casadi_int *r_colind, *r_row;
  ncol = sp_r[1];
  r_colind = sp_r + 2;
  r_row = r_colind + ncol + 1;
  for (c=0; c<ncol; ++c) {
    if (fabs(nz_r[r_colind[c+1]-1])<eps && 0==ind--) {
      ind = c;
      break;
    }
  }
  casadi_clear(v, ncol);
  v[pc[ind]] = 1.;
  for (k=r_colind[ind]; k<r_colind[ind+1]-1; ++k) {
    v[pc[r_row[k]]] = -nz_r[k];
  }
  for (c=ind-1; c>=0; --c) {
    for (k=r_colind[c+1]-1; k>=r_colind[c]; --k) {
      r=r_row[k];
      if (r==c) {
        if (fabs(nz_r[k])<eps) {
          v[pc[r]] = 0;
        } else {
          v[pc[r]] /= nz_r[k];
        }
      } else {
        v[pc[r]] -= nz_r[k]*v[pc[c]];
      }
    }
  }
  casadi_scal(ncol, 1./sqrt(casadi_dot(ncol, v, v)), v);
}

casadi_int casadi_max(casadi_int x, casadi_int y) {
  return x>y ? x : y;
}

casadi_real casadi_fmin(casadi_real x, casadi_real y) {
/* Pre-c99 compatibility */
#if __STDC_VERSION__ < 199901L
  return x<y ? x : y;
#else
  return fmin(x, y);
#endif
}

casadi_real casadi_fmax(casadi_real x, casadi_real y) {
/* Pre-c99 compatibility */
#if __STDC_VERSION__ < 199901L
  return x>y ? x : y;
#else
  return fmax(x, y);
#endif
}

void casadi_axpy(casadi_int n, casadi_real alpha, const casadi_real* x, casadi_real* y) {
  casadi_int i;
  if (!x || !y) return;
  for (i=0; i<n; ++i) *y++ += alpha**x++;
}

void casadi_mv(const casadi_real* x, const casadi_int* sp_x, const casadi_real* y, casadi_real* z, casadi_int tr) {
  casadi_int ncol_x, i, el;
  const casadi_int *colind_x, *row_x;
  if (!x || !y || !z) return;
  ncol_x = sp_x[1];
  colind_x = sp_x+2; row_x = sp_x + 2 + ncol_x+1;
  if (tr) {
    for (i=0; i<ncol_x; ++i) {
      for (el=colind_x[i]; el<colind_x[i+1]; ++el) {
        z[i] += x[el] * y[row_x[el]];
      }
    }
  } else {
    for (i=0; i<ncol_x; ++i) {
      for (el=colind_x[i]; el<colind_x[i+1]; ++el) {
        z[row_x[el]] += x[el] * y[i];
      }
    }
  }
}

casadi_real casadi_bilin(const casadi_real* A, const casadi_int* sp_A, const casadi_real* x, const casadi_real* y) {
  casadi_int ncol_A, cc, rr, el;
  const casadi_int *colind_A, *row_A;
  casadi_real ret;
  ncol_A = sp_A[1];
  colind_A = sp_A+2; row_A = sp_A + 2 + ncol_A+1;
  ret=0;
  for (cc=0; cc<ncol_A; ++cc) {
    for (el=colind_A[cc]; el<colind_A[cc+1]; ++el) {
      rr=row_A[el];
      ret += x[rr]*A[el]*y[cc];
    }
  }
  return ret;
}

#ifndef casadi_inf
  #define casadi_inf INFINITY
#endif

#ifndef casadi_real_min
  #define casadi_real_min 2.2250738585072014e-308
#endif

struct casadi_qrqp_prob {
  const struct casadi_qp_prob* qp;
  const casadi_int *sp_at, *sp_kkt;
  const casadi_int *prinv, *pc, *sp_v, *sp_r;
  casadi_real dmin;
  casadi_real inf;
  casadi_real min_lam;
  casadi_int max_iter;
  casadi_real constr_viol_tol, dual_inf_tol;
};
void casadi_qrqp_setup(struct casadi_qrqp_prob* p) {
  p->dmin = casadi_real_min;
  p->inf = casadi_inf;
  p->min_lam = 0;
  p->max_iter = 1000;
  p->constr_viol_tol = 1e-8;
  p->dual_inf_tol = 1e-8;
}
typedef enum {
  QP_SUCCESS,
  QP_MAX_ITER,
  QP_NO_SEARCH_DIR,
  QP_PRINTING_ERROR
} casadi_qrqp_flag_t;
struct casadi_qrqp_data {
  const struct casadi_qrqp_prob* prob;
  struct casadi_qp_data* qp;
  casadi_real f;
  casadi_qrqp_flag_t status;
  casadi_real *lbz, *ubz, *z, *infeas, *tinfeas, *sens, *lam, *w, *dz, *dlam;
  casadi_int *iw, *neverzero, *neverlower, *neverupper, *lincomb;
  casadi_real *nz_at, *nz_kkt, *beta, *nz_v, *nz_r;
  const char *msg;
  casadi_int msg_ind;
  casadi_real tau;
  casadi_int sing;
  int has_search_dir;
  casadi_real mina;
  casadi_int imina;
  casadi_real pr, du, epr, edu;
  casadi_int ipr, idu;
  casadi_int index, sign;
  casadi_int r_index, r_sign;
  casadi_int iter;
};
void casadi_qrqp_work(const struct casadi_qrqp_prob* p, casadi_int* sz_arg, casadi_int* sz_res,
    casadi_int* sz_iw, casadi_int* sz_w) {
  casadi_int nnz_a, nnz_kkt, nnz_v, nnz_r;
  casadi_qp_work(p->qp, sz_arg, sz_res, sz_iw, sz_w);
  nnz_a = p->qp->sp_a[2+p->qp->sp_a[1]];
  nnz_kkt = p->sp_kkt[2+p->sp_kkt[1]];
  nnz_v = p->sp_v[2+p->sp_v[1]];
  nnz_r = p->sp_r[2+p->sp_r[1]];
  *sz_w = casadi_max(*sz_w, p->qp->nz);
  *sz_iw = casadi_max(*sz_iw, p->qp->nz);
  *sz_w = casadi_max(*sz_w, 2*p->qp->nz);
  *sz_w += nnz_kkt;
  *sz_w += p->qp->nz;
  *sz_w += p->qp->nz;
  *sz_w += p->qp->nz;
  *sz_w += p->qp->nz;
  *sz_w += p->qp->nz;
  *sz_w += p->qp->nz;
  *sz_w += casadi_max(nnz_v+nnz_r, nnz_kkt);
  *sz_w += p->qp->nz;
  *sz_w += nnz_a;
  *sz_w += p->qp->nx;
  *sz_w += p->qp->nx;
  *sz_w += p->qp->nz;
  *sz_iw += p->qp->nz;
  *sz_iw += p->qp->nz;
  *sz_iw += p->qp->nz;
  *sz_iw += p->qp->nz;
}
void casadi_qrqp_init(struct casadi_qrqp_data* d, casadi_int** iw, casadi_real** w) {
  casadi_int nnz_a, nnz_kkt, nnz_v, nnz_r;
  const struct casadi_qrqp_prob* p = d->prob;
  nnz_a = p->qp->sp_a[2+p->qp->sp_a[1]];
  nnz_kkt = p->sp_kkt[2+p->sp_kkt[1]];
  nnz_v = p->sp_v[2+p->sp_v[1]];
  nnz_r = p->sp_r[2+p->sp_r[1]];
  d->nz_kkt = *w; *w += nnz_kkt;
  d->z = *w; *w += p->qp->nz;
  d->lbz = *w; *w += p->qp->nz;
  d->ubz = *w; *w += p->qp->nz;
  d->lam = *w; *w += p->qp->nz;
  d->dz = *w; *w += p->qp->nz;
  d->dlam = *w; *w += p->qp->nz;
  d->nz_v = *w; *w += casadi_max(nnz_v+nnz_r, nnz_kkt);
  d->beta = *w; *w += p->qp->nz;
  d->nz_at = *w; *w += nnz_a;
  d->infeas = *w; *w += p->qp->nx;
  d->tinfeas = *w; *w += p->qp->nx;
  d->sens = *w; *w += p->qp->nz;
  d->neverzero = *iw; *iw += p->qp->nz;
  d->neverupper = *iw; *iw += p->qp->nz;
  d->neverlower = *iw; *iw += p->qp->nz;
  d->lincomb = *iw; *iw += p->qp->nz;
  d->w = *w;
  d->iw = *iw;
  d->nz_r = d->nz_v + nnz_v;
}
int casadi_qrqp_reset(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  d->msg = 0;
  d->tau = 0.;
  d->sing = 0;
  for (i=0; i<p->qp->nz; ++i) {
    d->neverzero[i] = d->lbz[i] == d->ubz[i];
    d->neverupper[i] = d->ubz[i] == p->inf;
    d->neverlower[i] = d->lbz[i] == -p->inf;
    if (d->neverzero[i] && d->neverupper[i] && d->neverlower[i]) return 1;
    if (!d->neverzero[i] && fabs(d->lam[i]) < p->min_lam) d->lam[i] = 0.;
    if (d->neverzero[i] && d->lam[i] == 0.) {
      d->lam[i] = d->neverupper[i]
                || d->z[i]-d->lbz[i] <= d->ubz[i]-d->z[i] ? -p->dmin : p->dmin;
    } else if (d->neverupper[i] && d->lam[i]>0.) {
      d->lam[i] = d->neverzero[i] ? -p->dmin : 0.;
    } else if (d->neverlower[i] && d->lam[i]<0.) {
      d->lam[i] = d->neverzero[i] ? p->dmin : 0.;
    }
  }
  casadi_trans(d->qp->a, p->qp->sp_a, d->nz_at, p->sp_at, d->iw);
  d->index = -2;
  d->sign = 0;
  d->r_index = -2;
  d->r_sign = 0;
  d->iter = 0;
  return 0;
}
void casadi_qrqp_pr(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  d->pr = 0;
  d->ipr = -1;
  for (i=0; i<p->qp->nz; ++i) {
    if (d->z[i] > d->ubz[i]+d->pr) {
      d->pr = d->z[i]-d->ubz[i];
      d->ipr = i;
    } else if (d->z[i] < d->lbz[i]-d->pr) {
      d->pr = d->lbz[i]-d->z[i];
      d->ipr = i;
    }
  }
}
void casadi_qrqp_du(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  d->du = 0;
  d->idu = -1;
  for (i=0; i<p->qp->nx; ++i) {
    if (d->infeas[i] > d->du) {
      d->du = d->infeas[i];
      d->idu = i;
    } else if (d->infeas[i] < -d->du) {
      d->du = -d->infeas[i];
      d->idu = i;
    }
  }
}
int casadi_qrqp_du_check(struct casadi_qrqp_data* d, casadi_int i) {
  casadi_int k;
  casadi_real new_du;
  const casadi_int *at_colind, *at_row;
  const struct casadi_qrqp_prob* p = d->prob;
  at_colind = p->sp_at + 2;
  at_row = at_colind + p->qp->na + 1;
  if (i<p->qp->nx) {
    new_du = fabs(d->infeas[i]-d->lam[i]);
  } else {
    new_du = 0.;
    for (k=at_colind[i-p->qp->nx]; k<at_colind[i-p->qp->nx+1]; ++k) {
      new_du = casadi_fmax(new_du, fabs(d->infeas[at_row[k]]-d->nz_at[k]*d->lam[i]));
    }
  }
  return new_du <= d->du;
}
void casadi_qrqp_du_index(struct casadi_qrqp_data* d) {
  casadi_int i, s;
  casadi_real best_sens;
  const struct casadi_qrqp_prob* p = d->prob;
  d->index = -1;
  best_sens = -1;
  for (i = 0; i < p->qp->nz; ++i) {
    if (d->sens[i] == 0.) continue;
    if (d->lam[i] == 0) {
      s = d->sens[i] > 0 ? 1 : -1;
      if (s > 0 ? d->neverupper[i] : d->neverlower[i]) continue;
    } else {
      s = 0;
      if (d->neverzero[i]) continue;
      if (d->lam[i] > 0. ? d->sens[i] > 0. : d->sens[i] < 0.) continue;
      if (!casadi_qrqp_du_check(d, i)) continue;
    }
    if (fabs(d->sens[i]) > best_sens) {
      best_sens = fabs(d->sens[i]);
      d->index = i;
      d->sign = s;
    }
  }
  if (d->index >= 0) {
    if (d->sign > 0) {
      d->msg = "Enforced ubz to reduce |du|";
    } else if (d->sign < 0) {
      d->msg = "Enforced lbz to reduce |du|";
    } else if (d->lam[d->index] > 0) {
      d->msg = "Dropped ubz to reduce |du|";
    } else {
      d->msg = "Dropped lbz to reduce |du|";
    }
    d->msg_ind = d->index;
  }
}
void casadi_qrqp_pr_index(struct casadi_qrqp_data* d) {
  if (d->lam[d->ipr] == 0.) {
    if (d->z[d->ipr] < d->lbz[d->ipr]) {
      d->sign = -1;
      d->msg = "Added lbz to reduce |pr|";
    } else {
      d->sign = 1;
      d->msg = "Added ubz to reduce |pr|";
    }
    d->msg_ind = d->ipr;
    d->index = d->ipr;
  } else {
    d->index = -1;
  }
}
void casadi_qrqp_kkt(struct casadi_qrqp_data* d) {
  casadi_int i, k;
  const casadi_int *h_colind, *h_row, *a_colind, *a_row, *at_colind, *at_row,
                   *kkt_colind, *kkt_row;
  const struct casadi_qrqp_prob* p = d->prob;
  a_row = (a_colind = p->qp->sp_a+2) + p->qp->nx + 1;
  at_row = (at_colind = p->sp_at+2) + p->qp->na + 1;
  h_row = (h_colind = p->qp->sp_h+2) + p->qp->nx + 1;
  kkt_row = (kkt_colind = p->sp_kkt+2) + p->qp->nz + 1;
  casadi_clear(d->w, p->qp->nz);
  for (i=0; i<p->qp->nz; ++i) {
    if (i<p->qp->nx) {
      if (d->lam[i]==0) {
        for (k=h_colind[i]; k<h_colind[i+1]; ++k) d->w[h_row[k]] = d->qp->h[k];
        for (k=a_colind[i]; k<a_colind[i+1]; ++k) d->w[p->qp->nx+a_row[k]] = d->qp->a[k];
      } else {
        d->w[i] = 1.;
      }
    } else {
      if (d->lam[i]==0) {
        d->w[i] = -1.;
      } else {
        for (k=at_colind[i-p->qp->nx]; k<at_colind[i-p->qp->nx+1]; ++k) {
          d->w[at_row[k]] = d->nz_at[k];
        }
      }
    }
    for (k=kkt_colind[i]; k<kkt_colind[i+1]; ++k) {
      d->nz_kkt[k] = d->w[kkt_row[k]];
      d->w[kkt_row[k]] = 0;
    }
  }
}
void casadi_qrqp_kkt_vector(struct casadi_qrqp_data* d, casadi_real* kkt_i, casadi_int i) {
  casadi_int k;
  const casadi_int *h_colind, *h_row, *a_colind, *a_row, *at_colind, *at_row;
  const struct casadi_qrqp_prob* p = d->prob;
  a_row = (a_colind = p->qp->sp_a+2) + p->qp->nx + 1;
  at_row = (at_colind = p->sp_at+2) + p->qp->na + 1;
  h_row = (h_colind = p->qp->sp_h+2) + p->qp->nx + 1;
  casadi_clear(kkt_i, p->qp->nz);
  if (i<p->qp->nx) {
    for (k=h_colind[i]; k<h_colind[i+1]; ++k) kkt_i[h_row[k]] = d->qp->h[k];
    for (k=a_colind[i]; k<a_colind[i+1]; ++k) kkt_i[p->qp->nx+a_row[k]] = d->qp->a[k];
  } else {
    for (k=at_colind[i-p->qp->nx]; k<at_colind[i-p->qp->nx+1]; ++k) {
      kkt_i[at_row[k]] = -d->nz_at[k];
    }
  }
  kkt_i[i] -= 1.;
}
casadi_real casadi_qrqp_kkt_dot(struct casadi_qrqp_data* d, const casadi_real* v, casadi_int i) {
  casadi_int k;
  const casadi_int *h_colind, *h_row, *a_colind, *a_row, *at_colind, *at_row;
  casadi_real r;
  const struct casadi_qrqp_prob* p = d->prob;
  a_row = (a_colind = p->qp->sp_a + 2) + p->qp->nx + 1;
  at_row = (at_colind = p->sp_at + 2) + p->qp->na + 1;
  h_row = (h_colind = p->qp->sp_h + 2) + p->qp->nx + 1;
  r = v[i];
  if (i < p->qp->nx) {
    for (k=h_colind[i]; k<h_colind[i+1]; ++k) r -= v[h_row[k]] * d->qp->h[k];
    for (k=a_colind[i]; k<a_colind[i+1]; ++k) r -= v[p->qp->nx+a_row[k]] * d->qp->a[k];
  } else {
    for (k=at_colind[i-p->qp->nx]; k<at_colind[i-p->qp->nx+1]; ++k) {
      r += v[at_row[k]] * d->nz_at[k];
    }
  }
  return r;
}
void casadi_qrqp_kkt_residual(struct casadi_qrqp_data* d, casadi_real* r) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  for (i=0; i<p->qp->nz; ++i) {
    if (d->lam[i]>0.) {
      r[i] = d->ubz[i]-d->z[i];
    } else if (d->lam[i]<0.) {
      r[i] = d->lbz[i]-d->z[i];
    } else if (i<p->qp->nx) {
      r[i] = d->lam[i]-d->infeas[i];
    } else {
      r[i] = d->lam[i];
    }
  }
}
int casadi_qrqp_zero_blocking(struct casadi_qrqp_data* d) {
  casadi_int i;
  casadi_real dz_max = 0;
  const struct casadi_qrqp_prob* p = d->prob;
  for (i = 0; i < p->qp->nz; ++i) {
    if (d->dz[i] < -dz_max && d->lbz[i] - d->z[i] >= d->epr) {
      dz_max = -d->dz[i];
      d->index = i;
      d->sign = -1;
      d->msg = "lbz violated with zero step";
      d->msg_ind = d->index;
    } else if (d->dz[i] > dz_max && d->z[i] - d->ubz[i] >= d->epr) {
      dz_max = d->dz[i];
      d->index = i;
      d->sign = 1;
      d->msg = "ubz violated with zero step";
      d->msg_ind = d->index;
    }
  }
  return dz_max > 0;
}
void casadi_qrqp_primal_blocking(struct casadi_qrqp_data* d) {
  casadi_int i;
  casadi_real trial_z;
  const struct casadi_qrqp_prob* p = d->prob;
  if (casadi_qrqp_zero_blocking(d)) {
    d->tau = 0.;
    return;
  }
  for (i = 0; i < p->qp->nz; ++i) {
    if (d->dz[i] == 0.) continue;
    trial_z = d->z[i] + d->tau * d->dz[i];
    if (d->dz[i] < 0 && trial_z < d->lbz[i] - d->epr) {
      d->tau = (d->lbz[i] - d->epr - d->z[i]) / d->dz[i];
      d->index = d->lam[i] < 0. ? -1 : i;
      d->sign = -1;
      d->msg = "Enforcing lbz";
      d->msg_ind = i;
    } else if (d->dz[i] > 0 && trial_z > d->ubz[i] + d->epr) {
      d->tau = (d->ubz[i] + d->epr - d->z[i]) / d->dz[i];
      d->index = d->lam[i] > 0. ? -1 : i;
      d->sign = 1;
      d->msg = "Enforcing ubz";
      d->msg_ind = i;
    }
    if (d->tau <= 0) return;
  }
}
casadi_int casadi_qrqp_dual_breakpoints(struct casadi_qrqp_data* d, casadi_real* tau_list,
                                      casadi_int* ind_list, casadi_real tau) {
  casadi_int i, n_tau, loc, next_ind, tmp_ind, j;
  casadi_real trial_lam, new_tau, next_tau, tmp_tau;
  const struct casadi_qrqp_prob* p = d->prob;
  tau_list[0] = tau;
  ind_list[0] = -1;
  n_tau = 1;
  for (i=0; i<p->qp->nz; ++i) {
    if (d->dlam[i]==0.) continue;
    if (d->lam[i]==0.) continue;
    trial_lam = d->lam[i] + tau*d->dlam[i];
    if (d->lam[i]>0 ? trial_lam>=0 : trial_lam<=0) continue;
    new_tau = -d->lam[i]/d->dlam[i];
    for (loc=0; loc<n_tau-1; ++loc) {
      if (new_tau<tau_list[loc]) break;
    }
    n_tau++;
    next_tau=new_tau;
    next_ind=i;
    for (j=loc; j<n_tau; ++j) {
      tmp_tau = tau_list[j];
      tau_list[j] = next_tau;
      next_tau = tmp_tau;
      tmp_ind = ind_list[j];
      ind_list[j] = next_ind;
      next_ind = tmp_ind;
    }
  }
  return n_tau;
}
casadi_int casadi_qrqp_dual_blocking(struct casadi_qrqp_data* d) {
  casadi_int i, n_tau, j, k, du_index;
  casadi_real tau_k, dtau, new_infeas, tau1, infeas, tinfeas;
  const casadi_int *at_colind, *at_row;
  const struct casadi_qrqp_prob* p = d->prob;
  at_row = (at_colind = p->sp_at+2) + p->qp->na + 1;
  n_tau = casadi_qrqp_dual_breakpoints(d, d->w, d->iw, d->tau);
  du_index = -1;
  tau_k = 0.;
  for (j=0; j<n_tau; ++j) {
    dtau = d->w[j] - tau_k;
    for (k=0; k<p->qp->nx; ++k) {
      infeas  = d->infeas[k];
      tinfeas  = d->tinfeas[k];
      if (fabs(tinfeas)<1e-14) {
        continue;
      } else if (tinfeas<0) {
        infeas *= -1;
        tinfeas *= -1;
      }
      new_infeas = infeas + dtau*tinfeas;
      if (new_infeas > d->edu) {
        tau1 = casadi_fmax(tau_k, tau_k + (d->edu - infeas)/tinfeas);
        if (tau1 < d->tau) {
          d->tau = tau1;
          du_index = k;
        }
      }
    }
    casadi_axpy(p->qp->nx, casadi_fmin(d->tau - tau_k, dtau), d->tinfeas, d->infeas);
    if (du_index>=0) return du_index;
    tau_k = d->w[j];
    i = d->iw[j];
    if (i<0) break;
    if (!d->neverzero[i]) {
      if (i<p->qp->nx) {
        d->tinfeas[i] -= d->dlam[i];
      } else {
        for (k=at_colind[i-p->qp->nx]; k<at_colind[i-p->qp->nx+1]; ++k) {
          d->tinfeas[at_row[k]] -= d->nz_at[k]*d->dlam[i];
        }
      }
    }
  }
  return du_index;
}
void casadi_qrqp_take_step(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  for (i=0; i<p->qp->nz; ++i) d->iw[i] = d->lam[i]>0. ? 1 : d->lam[i]<0 ? -1 : 0;
  casadi_axpy(p->qp->nz, d->tau, d->dz, d->z);
  casadi_axpy(p->qp->nz, d->tau, d->dlam, d->lam);
  for (i=0; i<p->qp->nz; ++i) {
    if (d->neverzero[i] && (d->iw[i]<0 ? d->lam[i]>0 : d->lam[i]<0)) {
      d->iw[i]=-d->iw[i];
    }
    switch (d->iw[i]) {
      case -1: d->lam[i] = casadi_fmin(d->lam[i], -p->dmin); break;
      case  1: d->lam[i] = casadi_fmax(d->lam[i],  p->dmin); break;
      case  0: d->lam[i] = 0.; break;
    }
  }
}
int casadi_qrqp_flip_check(struct casadi_qrqp_data* d) {
  const struct casadi_qrqp_prob* p = d->prob;
  casadi_qrqp_kkt_vector(d, d->dlam, d->index);
  if (d->sign == 0) casadi_scal(p->qp->nz, -1., d->dlam);
  casadi_qr_solve(d->dlam, 1, 0, p->sp_v, d->nz_v, p->sp_r, d->nz_r, d->beta,
    p->prinv, p->pc, d->w);
  if (fabs(d->dlam[d->index]-1.) >= 1e-12) return 0;
  casadi_clear(d->dz, p->qp->nz);
  d->dz[d->index] = 1;
  casadi_qr_solve(d->dz, 1, 1, p->sp_v, d->nz_v, p->sp_r, d->nz_r, d->beta,
    p->prinv, p->pc, d->w);
  casadi_scal(p->qp->nz, 1./sqrt(casadi_dot(p->qp->nz, d->dlam, d->dlam)), d->dlam);
  casadi_scal(p->qp->nz, 1./sqrt(casadi_dot(p->qp->nz, d->dz, d->dz)), d->dz);
  return 1;
}
void casadi_qrqp_factorize(struct casadi_qrqp_data* d) {
  const struct casadi_qrqp_prob* p = d->prob;
  if (d->has_search_dir) {
    d->sing = 1;
    return;
  }
  casadi_qrqp_kkt(d);
  casadi_qr(p->sp_kkt, d->nz_kkt, d->w, p->sp_v, d->nz_v, p->sp_r,
            d->nz_r, d->beta, p->prinv, p->pc);
  d->sing = casadi_qr_singular(&d->mina, &d->imina, d->nz_r, p->sp_r, p->pc, 1e-12);
}
void casadi_qrqp_expand_step(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  casadi_clear(d->dlam, p->qp->nx);
  casadi_mv(d->qp->h, p->qp->sp_h, d->dz, d->dlam, 0);
  casadi_mv(d->qp->a, p->qp->sp_a, d->dz + p->qp->nx, d->dlam, 1);
  casadi_scal(p->qp->nx, -1., d->dlam);
  for (i = 0; i < p->qp->nx; ++i) if (d->lam[i] == 0.) d->dlam[i] = 0.;
  casadi_copy(d->dz+p->qp->nx, p->qp->na, d->dlam + p->qp->nx);
  casadi_clear(d->dz + p->qp->nx, p->qp->na);
  casadi_mv(d->qp->a, p->qp->sp_a, d->dz, d->dz + p->qp->nx, 0);
  for (i = 0; i < p->qp->nz; ++i) if (fabs(d->dz[i]) < 1e-14) d->dz[i] = 0.;
  casadi_clear(d->tinfeas, p->qp->nx);
  casadi_mv(d->qp->h, p->qp->sp_h, d->dz, d->tinfeas, 0);
  casadi_mv(d->qp->a, p->qp->sp_a, d->dlam + p->qp->nx, d->tinfeas, 1);
  casadi_axpy(p->qp->nx, 1., d->dlam, d->tinfeas);
}
int casadi_qrqp_pr_direction(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  for (i=0; i<p->qp->nz; ++i) {
    if (d->lbz[i] - d->z[i] >= d->epr) {
      if (d->dz[i] < 0 || d->dlam[i] > 0) return 1;
    } else if (d->z[i] - d->ubz[i] >= d->epr) {
      if (d->dz[i] > 0 || d->dlam[i] < 0) return 1;
    }
  }
  return 0;
}
int casadi_qrqp_du_direction(struct casadi_qrqp_data* d) {
  casadi_int i;
  const struct casadi_qrqp_prob* p = d->prob;
  for (i=0; i<p->qp->nx; ++i) {
    if (d->infeas[i] <= -d->edu && d->tinfeas[i] < -1e-12) {
      return 1;
    } else if (d->infeas[i] >= d->edu && d->tinfeas[i] > 1e-12) {
      return 1;
    }
  }
  return 0;
}
int casadi_qrqp_enforceable(struct casadi_qrqp_data* d, casadi_int i, casadi_int s) {
  casadi_int k;
  const casadi_int *at_colind, *at_row;
  const struct casadi_qrqp_prob* p = d->prob;
  if (fabs(d->infeas[i]) < d->edu) return 1;
  at_colind = p->sp_at + 2;
  at_row = at_colind + p->qp->na + 1;
  if (i<p->qp->nx) {
    return (s < 0) == (d->infeas[i] > 0);
  } else {
    for (k=at_colind[i-p->qp->nx]; k<at_colind[i-p->qp->nx+1]; ++k) {
      if (d->nz_at[k] > 0) {
        if ((s > 0) == (d->infeas[at_row[k]] > 0)) return 0;
      } else if (d->nz_at[k] < 0) {
        if ((s < 0) == (d->infeas[at_row[k]] > 0)) return 0;
      }
    }
    return 1;
  }
}
int casadi_qrqp_singular_step(struct casadi_qrqp_data* d) {
  casadi_real tau_test, tau;
  casadi_int nnz_kkt, nk, k, i, best_k, best_neg, neg;
  const struct casadi_qrqp_prob* p = d->prob;
  for (i = 0; i < p->qp->nz; ++i) d->lincomb[i] = 0;
  for (k = 0; k < d->sing; ++k) {
    if (!d->has_search_dir) {
      casadi_qr_colcomb(d->dlam, d->nz_r, p->sp_r, p->pc, 1e-12, k);
    }
    for (i = 0; i < p->qp->nz; ++i) if (fabs(d->dlam[i]) >= 1e-12) d->lincomb[i]++;
  }
  if (d->has_search_dir) {
    nk = 1;
  } else {
    casadi_trans(d->nz_kkt, p->sp_kkt, d->nz_v, p->sp_kkt, d->iw);
    nnz_kkt = p->sp_kkt[2+p->qp->nz];
    casadi_copy(d->nz_v, nnz_kkt, d->nz_kkt);
    casadi_qr(p->sp_kkt, d->nz_kkt, d->w, p->sp_v, d->nz_v, p->sp_r, d->nz_r,
              d->beta, p->prinv, p->pc);
    nk = casadi_qr_singular(0, 0, d->nz_r, p->sp_r, p->pc, 1e-12);
  }
  best_k = best_neg = -1;
  tau = p->inf;
  for (k=0; k<nk; ++k) {
    if (!d->has_search_dir) {
      casadi_qr_colcomb(d->dz, d->nz_r, p->sp_r, p->pc, 1e-12, k);
    }
    for (i=0; i<p->qp->nz; ++i) {
      d->iw[i] = d->lincomb[i] && fabs(casadi_qrqp_kkt_dot(d, d->dz, i)) > 1e-12;
    }
    casadi_qrqp_expand_step(d);
    for (neg = 0; neg < 2; ++neg) {
      if (neg) {
        casadi_scal(p->qp->nz, -1., d->dz);
        casadi_scal(p->qp->nz, -1., d->dlam);
        casadi_scal(p->qp->nx, -1., d->tinfeas);
      }
      if (casadi_qrqp_pr_direction(d)) continue;
      if (casadi_qrqp_du_direction(d)) continue;
      for (i=0; i<p->qp->nz; ++i) {
        if (!d->iw[i]) continue;
        if (d->lam[i]==0.) {
          if (d->z[i] <= d->ubz[i] && (d->z[i] >= d->lbz[i] ?
              d->dz[i] < -1e-12 : d->dz[i] > 1e-12)) {
            if (!d->neverlower[i]
                && (tau_test = (d->lbz[i] - d->z[i]) / d->dz[i]) < tau
                && casadi_qrqp_enforceable(d, i, -1)) {
              tau = tau_test;
              d->r_index = i;
              d->r_sign = -1;
              best_k = k;
              best_neg = neg;
            }
          } else if (d->z[i] >= d->lbz[i] && (d->z[i] <= d->ubz[i] ?
              d->dz[i] > 1e-12 : d->dz[i] < -1e-12)) {
            if (!d->neverupper[i]
                && (tau_test = (d->ubz[i] - d->z[i]) / d->dz[i]) < tau
                && casadi_qrqp_enforceable(d, i, 1)) {
              tau = tau_test;
              d->r_index = i;
              d->r_sign = 1;
              best_k = k;
              best_neg = neg;
            }
          }
        } else if (!d->neverzero[i]) {
          if (d->lam[i] > 0 ? d->dlam[i] < -1e-12 : d->dlam[i] > 1e-12) {
            if ((tau_test = -d->lam[i] / d->dlam[i]) < tau) {
              tau = tau_test;
              d->r_index = i;
              d->r_sign = 0;
              best_k = k;
              best_neg = neg;
            }
          }
        }
      }
    }
  }
  if (d->r_index < 0) return 1;
  if (--k != best_k) {
    casadi_qr_colcomb(d->dz, d->nz_r, p->sp_r, p->pc, 1e-12, best_k);
    casadi_qrqp_expand_step(d);
    if (best_neg) tau *= -1;
  } else if (--neg != best_neg) {
    tau *= -1;
  }
  casadi_scal(p->qp->nz, tau, d->dz);
  casadi_scal(p->qp->nz, tau, d->dlam);
  casadi_scal(p->qp->nx, tau, d->tinfeas);
  return 0;
}
int casadi_qrqp_calc_step(struct casadi_qrqp_data* d) {
  const struct casadi_qrqp_prob* p = d->prob;
  d->r_index = -1;
  d->r_sign = 0;
  if (d->sing) return casadi_qrqp_singular_step(d);
  casadi_qrqp_kkt_residual(d, d->dz);
  casadi_qr_solve(d->dz, 1, 1, p->sp_v, d->nz_v, p->sp_r, d->nz_r, d->beta,
                  p->prinv, p->pc, d->w);
  casadi_qrqp_expand_step(d);
  return 0;
}
void casadi_qrqp_calc_sens(struct casadi_qrqp_data* d, casadi_int i) {
  const struct casadi_qrqp_prob* p = d->prob;
  casadi_clear(d->sens, p->qp->nz);
  if (i >= 0) {
    d->sens[i] = d->infeas[i] > 0 ? -1. : 1.;
    casadi_mv(d->qp->a, p->qp->sp_a, d->sens, d->sens + p->qp->nx, 0);
  }
}
void casadi_qrqp_calc_dependent(struct casadi_qrqp_data* d) {
  casadi_int i;
  casadi_real r;
  const struct casadi_qrqp_prob* p = d->prob;
  d->f = casadi_bilin(d->qp->h, p->qp->sp_h, d->z, d->z)/2.
       + casadi_dot(p->qp->nx, d->z, d->qp->g);
  casadi_clear(d->z+p->qp->nx, p->qp->na);
  casadi_mv(d->qp->a, p->qp->sp_a, d->z, d->z+p->qp->nx, 0);
  casadi_copy(d->qp->g, p->qp->nx, d->infeas);
  casadi_mv(d->qp->h, p->qp->sp_h, d->z, d->infeas, 0);
  casadi_mv(d->qp->a, p->qp->sp_a, d->lam+p->qp->nx, d->infeas, 1);
  for (i=0; i<p->qp->nx; ++i) {
    if (d->lam[i]==0) continue;
    r = -d->infeas[i];
    if (d->lam[i]>0) {
      if (d->neverzero[i] && !d->neverlower[i]) {
        d->lam[i] = r==0 ? p->dmin : r;
      } else {
        d->lam[i] = casadi_fmax(r, p->dmin);
      }
    } else {
      if (d->neverzero[i] && !d->neverupper[i]) {
        d->lam[i] = r==0 ? -p->dmin : r;
      } else {
        d->lam[i] = casadi_fmin(r, -p->dmin);
      }
    }
    d->infeas[i] += d->lam[i];
  }
  casadi_qrqp_pr(d);
  casadi_qrqp_du(d);
  d->epr = casadi_fmax(d->pr, (0.5 * p->constr_viol_tol / p->dual_inf_tol) * d->du);
  d->edu = casadi_fmax(d->du, (0.5 * p->dual_inf_tol / p->constr_viol_tol) * d->pr);
  casadi_qrqp_calc_sens(d, d->idu);
}
void casadi_qrqp_linesearch(struct casadi_qrqp_data* d) {
  casadi_int du_index;
  d->sign = 0;
  d->index = -1;
  d->tau = 1.;
  casadi_qrqp_primal_blocking(d);
  du_index = casadi_qrqp_dual_blocking(d);
  casadi_qrqp_take_step(d);
  if (du_index >= 0) {
    casadi_qrqp_calc_sens(d, du_index);
    casadi_qrqp_du_index(d);
  }
}
void casadi_qrqp_flip(struct casadi_qrqp_data* d) {
  const struct casadi_qrqp_prob* p = d->prob;
  if (d->index == -1 && d->r_index >= 0) {
    if (d->r_sign != 0 || casadi_qrqp_du_check(d, d->r_index)) {
      d->index = d->r_index;
      d->sign = d->r_sign;
      if (d->sign > 0) {
        d->msg = "Enforced ubz for regularity";
      } else if (d->sign < 0) {
        d->msg = "Enforced lbz for regularity";
      } else if (d->lam[d->index] > 0) {
        d->msg = "Dropped ubz for regularity";
      } else {
        d->msg = "Dropped lbz for regularity";
      }
      d->msg_ind = d->index;
    }
  }
  if (!d->sing && d->index == -1) {
    if (d->pr * p->dual_inf_tol >= p->constr_viol_tol * d->du) {
      if (d->pr >= p->constr_viol_tol) casadi_qrqp_pr_index(d);
    } else {
      if (d->du >= p->dual_inf_tol) casadi_qrqp_du_index(d);
    }
  }
  d->has_search_dir = 0;
  if (d->index >= 0) {
    if (!d->sing) d->has_search_dir = casadi_qrqp_flip_check(d);
    d->lam[d->index] = d->sign==0 ? 0 : d->sign > 0 ? p->dmin : -p->dmin;
    casadi_qrqp_calc_dependent(d);
  }
}
int casadi_qrqp_prepare(struct casadi_qrqp_data* d) {
  const struct casadi_qrqp_prob* p = d->prob;
  casadi_qrqp_calc_dependent(d);
  casadi_qrqp_flip(d);
  casadi_qrqp_factorize(d);
  if (!d->sing && d->index == -1) {
    d->status = QP_SUCCESS;
    d->msg = "Converged";
    d->msg_ind = -2;
    return 1;
  } else if (d->iter >= p->max_iter) {
    d->status = QP_MAX_ITER;
    d->msg = "Max iter";
    d->msg_ind = -2;
    return 1;
  } else if (!d->sing && d->ipr < 0 && d->idu < 0) {
    d->status = QP_SUCCESS;
    d->msg = "No primal or dual error";
    d->msg_ind = -2;
    return 1;
  } else {
    return 0;
  }
}
int casadi_qrqp_iterate(struct casadi_qrqp_data* d) {
  d->msg = 0;
  d->iter++;
  if (casadi_qrqp_calc_step(d)) {
    d->status = QP_NO_SEARCH_DIR;
    return 1;
  }
  casadi_qrqp_linesearch(d);
  return 0;
}
int casadi_qrqp_print_header(struct casadi_qrqp_data* d, char* buf, size_t buf_sz) {
#ifdef CASADI_SNPRINTF
  int flag;
  flag = CASADI_SNPRINTF(buf, buf_sz, "%5s %5s %9s %9s %5s %9s %5s %9s %5s %9s  %4s",
          "Iter", "Sing", "fk", "|pr|", "con", "|du|", "var",
          "min_R", "con", "last_tau", "Note");
  if (flag < 0) {
    d->status = QP_PRINTING_ERROR;
    return 1;
  }
#else
  if (buf_sz) buf[0] = '\0';
#endif
  return 0;
}
int casadi_qrqp_print_colcomb(struct casadi_qrqp_data* d, char* buf, size_t buf_sz, casadi_int j) {
#ifdef CASADI_SNPRINTF
  casadi_int num_size, n_print, i, k, buf_offset, val;
  size_t b;
  const struct casadi_qrqp_prob* p = d->prob;
  casadi_qr_colcomb(d->dlam, d->nz_r, p->sp_r, p->pc, 1e-12, j);
  num_size = 1;
  val = p->qp->nz-1;
  while (val) {
    val/=10;
    num_size++;
  }
  if (buf_sz<=4) return 1;
  n_print = (buf_sz-4)/num_size;
  for (b=0;b<buf_sz;++b) buf[b]=' ';
  buf_offset = 0;
  for (i=0;i<p->qp->nz;++i) {
    if (fabs(d->dlam[i]) >= 1e-12) {
      if (n_print==0) {
        buf[buf_sz-4] = '.';
        buf[buf_sz-3] = '.';
        buf[buf_sz-2] = '.';
        buf[buf_sz-1] = '\0';
        return 1;
      }
      n_print--;
      CASADI_SNPRINTF(buf+buf_offset, num_size, "%d", (int) (i));
      for (k=0;k<num_size;++k) {
        if (buf[buf_offset+k]=='\0') buf[buf_offset+k] = ' ';
      }
      buf_offset += num_size;
    }
  }
  buf[buf_sz-1] = '\0';
#else
  if (buf_sz) buf[0] = '\0';
#endif
  return 0;
}
int casadi_qrqp_print_iteration(struct casadi_qrqp_data* d, char* buf, int buf_sz) {
#ifdef CASADI_SNPRINTF
  int flag;
  flag = CASADI_SNPRINTF(buf, buf_sz,
    "%5d %5d %9.2g %9.2g %5d %9.2g %5d %9.2g %5d %9.2g  ",
    (int) (d->iter), (int) (d->sing), d->f, d->pr,
    (int) (d->ipr), d->du, (int) (d->idu),
    d->mina, (int) (d->imina), d->tau);
  if (flag < 0) {
    d->status = QP_PRINTING_ERROR;
    return 1;
  }
  buf += flag;
  buf_sz -= flag;
  if (d->msg) {
    if (d->msg_ind > -2) {
      flag = CASADI_SNPRINTF(buf, buf_sz, "%s, i=%d", d->msg, (int) (d->msg_ind));
    } else {
      flag = CASADI_SNPRINTF(buf, buf_sz, "%s", d->msg);
    }
    if (flag < 0) {
      d->status = QP_PRINTING_ERROR;
      return 1;
    }
  }
#else
  if (buf_sz) buf[0] = '\0';
#endif
  return 0;
}

#ifndef casadi_nan
  #define casadi_nan NAN
#endif

struct casadi_nlpsol_detect_bounds_prob {
  casadi_int sz_arg;
  casadi_int sz_res;
  casadi_int sz_iw;
  casadi_int sz_w;
  casadi_int ng;
  casadi_int nb;
  casadi_int *target_x;
  casadi_int *target_g;
  char *is_simple;
};
struct casadi_nlpsol_prob {
  casadi_int nx, ng, np;
  struct casadi_nlpsol_detect_bounds_prob detect_bounds;
};
struct casadi_nlpsol_detect_bounds_data {
  const double** arg;
  double** res;
  casadi_int* iw;
  double* w;
  casadi_real* a;
  casadi_real* b;
  casadi_int* target_l;
  casadi_int* target_u;
  casadi_real* lam_xl;
  casadi_real* lam_xu;
};
struct casadi_nlpsol_data {
  const struct casadi_nlpsol_prob* prob;
  casadi_real *lbz, *ubz;
  casadi_real *z;
  casadi_real *lam;
  casadi_real objective;
  const casadi_real *p, *lbx, *ubx, *lbg, *ubg, *x0, *lam_x0, *lam_g0;
  casadi_real *f, *x, *g, *lam_x, *lam_g, *lam_p;
  struct casadi_nlpsol_detect_bounds_data detect_bounds;
};
void casadi_nlpsol_work(const struct casadi_nlpsol_prob* p, casadi_int* sz_arg, casadi_int* sz_res,
    casadi_int* sz_iw, casadi_int* sz_w) {
  *sz_arg = *sz_res = 0;
  *sz_w = *sz_iw = 0;
  *sz_w += p->nx + p->ng;
  *sz_w += p->nx + p->ng;
  *sz_w += p->nx + p->ng;
  *sz_w += p->nx + p->ng;
  if (p->detect_bounds.ng) {
    *sz_arg += p->detect_bounds.sz_arg;
    *sz_res += p->detect_bounds.sz_res;
    *sz_iw += p->detect_bounds.sz_iw;
    *sz_w += p->detect_bounds.sz_w;
    *sz_w += p->detect_bounds.nb;
    *sz_w += p->detect_bounds.nb;
    *sz_iw += p->nx;
    *sz_iw += p->nx;
    *sz_w += p->nx;
    *sz_w += p->nx;
  }
}
void casadi_nlpsol_init(struct casadi_nlpsol_data* d, const casadi_real*** arg, casadi_real*** res,
    casadi_int** iw, casadi_real** w) {
  casadi_int nx, ng;
  const struct casadi_nlpsol_prob* p = d->prob;
  nx = p->nx;
  ng = p->ng;
  d->z = *w; *w += nx + ng;
  d->lbz = *w; *w += nx + ng;
  d->ubz = *w; *w += nx + ng;
  d->lam = *w; *w += nx + ng;
  if (p->detect_bounds.ng) {
    d->detect_bounds.arg = *arg; *arg += p->detect_bounds.sz_arg;
    d->detect_bounds.res = *res; *res += p->detect_bounds.sz_res;
    d->detect_bounds.iw = *iw; *iw += p->detect_bounds.sz_iw;
    d->detect_bounds.w = *w; *w += p->detect_bounds.sz_w;
    d->detect_bounds.a = *w; *w += p->detect_bounds.nb;
    d->detect_bounds.b = *w; *w += p->detect_bounds.nb;
    d->detect_bounds.target_l = *iw; *iw += p->nx;
    d->detect_bounds.target_u = *iw; *iw += p->nx;
    d->detect_bounds.lam_xl = *w; *w += nx;
    d->detect_bounds.lam_xu = *w; *w += nx;
  }
}

struct casadi_sqpmethod_prob {
  const struct casadi_nlpsol_prob* nlp;
  const casadi_int *sp_h, *sp_a, *sp_hr;
  casadi_int merit_memsize;
  casadi_int max_iter_ls;
};
struct casadi_sqpmethod_data {
  const struct casadi_sqpmethod_prob* prob;
  casadi_real* z_cand;
  casadi_real *gLag, *gLag_old;
  casadi_real *gf;
  casadi_real *lbdz, *ubdz;
  casadi_real *dx, *dlam;
  casadi_real *Bk;
  casadi_real* Jk;
  casadi_real* merit_mem;
  casadi_real* temp_mem;
  casadi_real* temp_sol;
};
void casadi_sqpmethod_work(const struct casadi_sqpmethod_prob* p,
    casadi_int* sz_iw, casadi_int* sz_w, int elastic_mode, int so_corr) {
  casadi_int nnz_h, nnz_a, nx, ng;
  nnz_h = p->sp_h[2+p->sp_h[1]];
  nnz_a = p->sp_a[2+p->sp_a[1]];
  nx = p->nlp->nx;
  ng = p->nlp->ng;
  *sz_w = *sz_iw = 0;
  if (p->max_iter_ls>0 || so_corr) *sz_w += nx + ng;
  *sz_w += nx;
  *sz_w += nx;
  *sz_w += nx;
  *sz_w += nx + ng;
  *sz_w += nx + ng;
  *sz_w += nx;
  *sz_w += nx + ng;
  *sz_w += nnz_h;
  *sz_w += nnz_a;
  if (p->max_iter_ls>0 || so_corr) *sz_w += p->merit_memsize;
  if (elastic_mode) {
    *sz_w += 2*ng;
    *sz_w += 2*ng;
    *sz_w += 2*ng;
    *sz_w += 2*ng;
    *sz_w += 2*ng;
    *sz_w += 2*ng;
    *sz_w += ng;
  }
  if (so_corr) *sz_w += nx+nx+ng;
}
void casadi_sqpmethod_init(struct casadi_sqpmethod_data* d, casadi_int** iw, casadi_real** w,
    int elastic_mode, int so_corr) {
  casadi_int nnz_h, nnz_a, nx, ng;
  const struct casadi_sqpmethod_prob* p = d->prob;
  nnz_h = p->sp_h[2+p->sp_h[1]];
  nnz_a = p->sp_a[2+p->sp_a[1]];
  nx = p->nlp->nx;
  ng = p->nlp->ng;
  if (p->max_iter_ls>0 || so_corr) {
    d->z_cand = *w; *w += nx + ng;
  }
  d->gLag = *w; *w += nx;
  d->gLag_old = *w; *w += nx;
  d->Bk = *w; *w += nnz_h;
  if (p->max_iter_ls>0 || so_corr) {
    d->merit_mem = *w; *w += p->merit_memsize;
  }
  if (so_corr) {
    d->temp_sol = *w; *w += nx+nx+ng;
  }
  if (elastic_mode) {
    d->gf = *w; *w += nx + 2*ng;
    d->lbdz = *w; *w += nx + 3*ng;
    d->ubdz = *w; *w += nx + 3*ng;
    d->dx = *w; *w += nx + 2*ng;
    d->dlam = *w; *w += nx + 3*ng;
    d->Jk = *w; *w += nnz_a + 2*ng;
    d->temp_mem = *w; *w += ng;
  } else {
    d->gf = *w; *w += nx;
    d->lbdz = *w; *w += nx + ng;
    d->ubdz = *w; *w += nx + ng;
    d->dx = *w; *w += nx;
    d->dlam = *w; *w += nx + ng;
    d->Jk = *w; *w += nnz_a;
  }
}

casadi_real casadi_max_viol(casadi_int n, const casadi_real* x, const casadi_real* lb, const casadi_real* ub) {
  casadi_real r;
  casadi_int i;
  const casadi_real zero = 0;
  r = 0;
  for (i=0; i<n; ++i) {
    casadi_real x_i, lb_i, ub_i;
    x_i = x ? *x++ : zero;
    lb_i = lb ? *lb++ : zero;
    ub_i = ub ? *ub++ : zero;
    r = casadi_fmax(r, casadi_fmax(x_i-ub_i, zero));
    r = casadi_fmax(r, casadi_fmax(lb_i-x_i, zero));
  }
  return r;
}

casadi_real casadi_norm_inf(casadi_int n, const casadi_real* x) {
  casadi_int i;
  casadi_real ret = 0;
  for (i=0; i<n; ++i) ret = casadi_fmax(ret, fabs(*x++));
  return ret;
}

casadi_real casadi_sum_viol(casadi_int n, const casadi_real* x, const casadi_real* lb, const casadi_real* ub) {
  casadi_real r;
  casadi_int i;
  const casadi_real zero = 0;
  r = 0;
  for (i=0; i<n; ++i) {
    casadi_real x_i, lb_i, ub_i;
    x_i = x ? *x++ : zero;
    lb_i = lb ? *lb++ : zero;
    ub_i = ub ? *ub++ : zero;
    r += casadi_fmax(x_i-ub_i, zero);
    r += casadi_fmax(lb_i-x_i, zero);
  }
  return r;
}

#ifndef CASADI_PRINTF
#define CASADI_PRINTF printf
#ifndef CASADI_SNPRINTF
#define CASADI_SNPRINTF snprintf
#endif

#endif

static const casadi_int casadi_s0[80] = {14, 7, 0, 10, 20, 30, 40, 50, 60, 70, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
static const casadi_int casadi_s1[69] = {14, 6, 0, 10, 20, 30, 40, 50, 60, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
static const casadi_int casadi_s2[6] = {14, 1, 0, 2, 3, 13};
static const casadi_int casadi_s3[24] = {14, 7, 0, 7, 9, 10, 11, 12, 13, 14, 0, 1, 2, 6, 7, 8, 9, 3, 13, 4, 5, 10, 11, 12};
static const casadi_int casadi_s4[14] = {4, 7, 0, 0, 0, 1, 2, 4, 4, 4, 3, 0, 1, 2};
static const casadi_int casadi_s5[10] = {14, 1, 0, 6, 1, 2, 6, 7, 8, 9};
static const casadi_int casadi_s6[24] = {14, 7, 0, 2, 8, 10, 11, 12, 13, 14, 3, 13, 1, 2, 6, 7, 8, 9, 0, 5, 4, 11, 10, 12};
static const casadi_int casadi_s7[14] = {4, 7, 0, 0, 0, 2, 3, 4, 4, 4, 1, 3, 0, 2};
static const casadi_int casadi_s8[5] = {1, 1, 0, 1, 0};
static const casadi_int casadi_s9[5] = {3, 1, 0, 1, 0};
static const casadi_int casadi_s10[9] = {1, 3, 0, 1, 2, 3, 0, 0, 0};
static const casadi_int casadi_s11[7] = {14, 1, 0, 3, 0, 4, 13};
static const casadi_int casadi_s12[24] = {14, 7, 0, 6, 9, 10, 11, 12, 13, 14, 1, 2, 6, 7, 8, 9, 0, 4, 13, 3, 5, 10, 11, 12};
static const casadi_int casadi_s13[14] = {4, 7, 0, 0, 0, 1, 3, 4, 4, 4, 3, 0, 1, 2};
static const casadi_int casadi_s14[10] = {14, 1, 0, 6, 2, 3, 6, 7, 8, 9};
static const casadi_int casadi_s15[23] = {14, 6, 0, 3, 9, 11, 12, 13, 14, 0, 4, 13, 2, 3, 6, 7, 8, 9, 1, 5, 10, 11, 12};
static const casadi_int casadi_s16[13] = {4, 6, 0, 0, 0, 1, 4, 4, 4, 3, 0, 1, 2};
static const casadi_int casadi_s17[5] = {3, 1, 0, 1, 1};
static const casadi_int casadi_s18[7] = {14, 1, 0, 3, 1, 5, 13};
static const casadi_int casadi_s19[23] = {14, 6, 0, 6, 9, 11, 12, 13, 14, 2, 3, 6, 7, 8, 9, 1, 5, 13, 0, 4, 11, 10, 12};
static const casadi_int casadi_s20[10] = {14, 1, 0, 6, 0, 4, 6, 7, 8, 9};
static const casadi_int casadi_s21[23] = {14, 6, 0, 3, 9, 11, 12, 13, 14, 1, 5, 13, 0, 4, 6, 7, 8, 9, 2, 3, 10, 11, 12};
static const casadi_int casadi_s22[5] = {3, 1, 0, 1, 2};
static const casadi_int casadi_s23[6] = {14, 1, 0, 2, 2, 3};
static const casadi_int casadi_s24[23] = {14, 6, 0, 6, 8, 11, 12, 13, 14, 0, 4, 6, 7, 8, 9, 2, 3, 1, 5, 13, 11, 10, 12};
static const casadi_int casadi_s25[11] = {14, 1, 0, 7, 1, 5, 6, 7, 8, 9, 13};
static const casadi_int casadi_s26[23] = {14, 6, 0, 2, 9, 11, 12, 13, 14, 2, 3, 1, 5, 6, 7, 8, 9, 13, 0, 4, 10, 11, 12};
static const casadi_int casadi_s27[6] = {14, 1, 0, 2, 0, 4};
static const casadi_int casadi_s28[23] = {14, 6, 0, 7, 9, 11, 12, 13, 14, 1, 5, 6, 7, 8, 9, 13, 0, 4, 2, 3, 11, 10, 12};
static const casadi_int casadi_s29[23] = {14, 6, 0, 2, 8, 11, 12, 13, 14, 0, 4, 2, 3, 6, 7, 8, 9, 1, 5, 13, 10, 11, 12};
static const casadi_int casadi_s30[11] = {14, 1, 0, 7, 2, 3, 5, 10, 11, 12, 13};
static const casadi_int casadi_s31[316] = {0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420};
static const casadi_int casadi_s32[316] = {0, 4, 8, 13, 21, 24, 27, 30, 40, 47, 56, 61, 65, 67, 77, 81, 84, 87, 94, 96, 103, 104, 112, 114, 118, 126, 131, 134, 137, 140, 150, 157, 165, 170, 175, 178, 180, 187, 191, 194, 197, 204, 207, 213, 215, 221, 226, 228, 232, 239, 241, 244, 247, 250, 260, 261, 267, 269, 277, 279, 284, 291, 293, 297, 301, 304, 307, 314, 318, 323, 326, 330, 335, 340, 343, 345, 351, 354, 357, 360, 372, 380, 386, 391, 393, 397, 404, 407, 411, 414, 417, 425, 426, 432, 434, 442, 444, 449, 456, 458, 461, 464, 467, 470, 479, 483, 488, 491, 495, 500, 505, 508, 510, 517, 521, 524, 527, 537, 545, 551, 556, 558, 562, 569, 571, 574, 577, 580, 590, 591, 597, 599, 607, 609, 614, 621, 623, 627, 631, 634, 637, 644, 648, 653, 656, 660, 665, 670, 673, 675, 681, 684, 687, 690, 702, 710, 716, 721, 723, 727, 734, 737, 741, 744, 747, 755, 756, 762, 764, 772, 774, 779, 786, 788, 791, 794, 797, 800, 809, 813, 818, 821, 825, 830, 835, 838, 840, 847, 851, 854, 857, 867, 875, 881, 886, 888, 892, 899, 901, 904, 907, 910, 920, 921, 927, 929, 937, 939, 944, 951, 953, 957, 961, 964, 967, 974, 978, 983, 986, 990, 995, 1000, 1003, 1005, 1011, 1014, 1017, 1020, 1032, 1040, 1046, 1051, 1053, 1057, 1064, 1067, 1071, 1074, 1077, 1085, 1086, 1092, 1094, 1102, 1104, 1109, 1116, 1118, 1121, 1124, 1127, 1130, 1139, 1143, 1148, 1151, 1155, 1160, 1165, 1168, 1170, 1177, 1181, 1184, 1187, 1197, 1205, 1211, 1216, 1218, 1222, 1229, 1231, 1234, 1237, 1240, 1250, 1251, 1257, 1259, 1267, 1269, 1274, 1281, 1283, 1287, 1291, 1294, 1297, 1304, 1308, 1313, 1316, 1320, 1325, 1330, 1333, 1335, 1339, 1341, 1344, 1347, 1350, 1354, 1356, 1358, 1360, 1362, 1370, 1375, 1376, 1377, 1381, 1382, 1383, 1384};
static const casadi_int casadi_s33[10] = {14, 1, 0, 6, 1, 4, 6, 7, 8, 9};
static const casadi_int casadi_s34[308] = {0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 413, 414, 415, 416, 417};
static const casadi_int casadi_s35[308] = {1, 6, 10, 12, 22, 26, 29, 32, 39, 41, 48, 49, 57, 59, 63, 71, 76, 79, 82, 85, 95, 102, 110, 115, 120, 123, 125, 132, 136, 139, 142, 149, 152, 158, 160, 166, 171, 173, 177, 184, 186, 189, 192, 195, 205, 206, 212, 214, 222, 224, 229, 236, 238, 242, 246, 249, 252, 259, 263, 268, 271, 275, 280, 285, 288, 290, 296, 299, 302, 305, 317, 325, 331, 336, 338, 342, 349, 352, 356, 359, 362, 370, 371, 377, 379, 387, 389, 394, 401, 403, 406, 409, 412, 415, 424, 428, 433, 436, 440, 445, 450, 453, 455, 462, 466, 469, 472, 482, 490, 496, 501, 503, 507, 514, 516, 519, 522, 525, 535, 536, 542, 544, 552, 554, 559, 566, 568, 572, 576, 579, 582, 589, 593, 598, 601, 605, 610, 615, 618, 620, 626, 629, 632, 635, 647, 655, 661, 666, 668, 672, 679, 682, 686, 689, 692, 700, 701, 707, 709, 717, 719, 724, 731, 733, 736, 739, 742, 745, 754, 758, 763, 766, 770, 775, 780, 783, 785, 792, 796, 799, 802, 812, 820, 826, 831, 833, 837, 844, 846, 849, 852, 855, 865, 866, 872, 874, 882, 884, 889, 896, 898, 902, 906, 909, 912, 919, 923, 928, 931, 935, 940, 945, 948, 950, 956, 959, 962, 965, 977, 985, 991, 996, 998, 1002, 1009, 1012, 1016, 1019, 1022, 1030, 1031, 1037, 1039, 1047, 1049, 1054, 1061, 1063, 1066, 1069, 1072, 1075, 1084, 1088, 1093, 1096, 1100, 1105, 1110, 1113, 1115, 1122, 1126, 1129, 1132, 1142, 1150, 1156, 1161, 1163, 1167, 1174, 1176, 1179, 1182, 1185, 1195, 1196, 1202, 1204, 1212, 1214, 1219, 1226, 1228, 1232, 1236, 1239, 1242, 1249, 1253, 1258, 1261, 1265, 1270, 1275, 1278, 1280, 1286, 1289, 1292, 1295, 1307, 1315, 1321, 1326, 1328, 1332, 1336, 1342, 1346, 1349, 1352, 1361, 1367, 1369, 1378, 1388};
static const casadi_int casadi_s36[6] = {14, 1, 0, 2, 0, 5};
static const casadi_int casadi_s37[5] = {14, 1, 0, 1, 3};
static const casadi_int casadi_s38[6] = {14, 1, 0, 2, 1, 5};
static const casadi_int casadi_s39[5] = {14, 1, 0, 1, 0};
static const casadi_int casadi_s40[228] = {0, 1, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 31, 32, 33, 34, 36, 38, 39, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 81, 82, 83, 84, 86, 87, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 129, 130, 131, 132, 133, 134, 136, 137, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 179, 180, 181, 182, 183, 184, 186, 187, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 229, 230, 231, 232, 233, 234, 236, 237, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 280, 281, 282, 283, 284, 286, 287, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 329, 330, 331, 332, 333, 334, 336, 337, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 379, 380, 381, 382, 383, 384, 386, 387, 394, 395, 396, 397, 398, 399, 400, 403, 404, 411, 412, 413, 414, 415};
static const casadi_int casadi_s41[228] = {2, 5, 15, 19, 23, 42, 50, 55, 62, 64, 68, 72, 73, 78, 98, 106, 108, 111, 116, 122, 129, 133, 151, 159, 167, 169, 174, 181, 183, 188, 208, 216, 220, 225, 230, 233, 235, 243, 262, 270, 276, 281, 283, 287, 294, 298, 315, 316, 322, 324, 332, 334, 339, 346, 348, 353, 369, 373, 378, 381, 385, 390, 395, 398, 400, 408, 427, 435, 441, 446, 448, 452, 459, 463, 480, 481, 487, 489, 497, 499, 504, 511, 513, 518, 534, 538, 543, 546, 550, 555, 560, 563, 565, 573, 592, 600, 606, 611, 613, 617, 624, 628, 645, 646, 652, 654, 662, 664, 669, 676, 678, 683, 699, 703, 708, 711, 715, 720, 725, 728, 730, 738, 757, 765, 771, 776, 778, 782, 789, 793, 810, 811, 817, 819, 827, 829, 834, 841, 843, 848, 864, 868, 873, 876, 880, 885, 890, 893, 895, 903, 922, 930, 936, 941, 943, 947, 954, 958, 975, 976, 982, 984, 992, 994, 999, 1006, 1008, 1013, 1029, 1033, 1038, 1041, 1045, 1050, 1055, 1058, 1060, 1068, 1087, 1095, 1101, 1106, 1108, 1112, 1119, 1123, 1140, 1141, 1147, 1149, 1157, 1159, 1164, 1171, 1173, 1178, 1194, 1198, 1203, 1206, 1210, 1215, 1220, 1223, 1225, 1233, 1252, 1260, 1266, 1271, 1273, 1277, 1284, 1288, 1305, 1306, 1312, 1314, 1322, 1324, 1329, 1338, 1343, 1359, 1363, 1368, 1371, 1379};
static const casadi_int casadi_s42[5] = {14, 1, 0, 1, 4};
static const casadi_int casadi_s43[5] = {14, 1, 0, 1, 5};
static const casadi_int casadi_s44[5] = {14, 1, 0, 1, 10};
static const casadi_int casadi_s45[5] = {14, 1, 0, 1, 11};
static const casadi_int casadi_s46[7] = {3, 1, 0, 3, 0, 1, 2};
static const casadi_int casadi_s47[7] = {1, 3, 0, 1, 1, 1, 0};
static const casadi_int casadi_s48[7] = {1, 3, 0, 0, 1, 1, 0};
static const casadi_int casadi_s49[313] = {0, 2, 3, 4, 5, 14, 15, 16, 17, 18, 20, 21, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 441, 444, 445, 446, 447, 448};
static const casadi_int casadi_s50[313] = {3, 9, 14, 16, 18, 43, 51, 52, 58, 60, 69, 70, 74, 97, 105, 107, 113, 117, 119, 124, 127, 128, 144, 153, 161, 162, 163, 168, 172, 176, 179, 182, 185, 190, 198, 201, 209, 217, 218, 219, 223, 227, 231, 234, 237, 240, 248, 254, 255, 265, 272, 273, 274, 278, 282, 286, 289, 292, 295, 300, 308, 311, 319, 327, 328, 329, 333, 337, 341, 344, 347, 350, 358, 364, 365, 375, 382, 383, 384, 388, 392, 396, 399, 402, 405, 410, 418, 421, 429, 437, 438, 439, 443, 447, 451, 454, 457, 460, 468, 474, 475, 485, 492, 493, 494, 498, 502, 506, 509, 512, 515, 520, 528, 531, 539, 547, 548, 549, 553, 557, 561, 564, 567, 570, 578, 584, 585, 595, 602, 603, 604, 608, 612, 616, 619, 622, 625, 630, 638, 641, 649, 657, 658, 659, 663, 667, 671, 674, 677, 680, 688, 694, 695, 705, 712, 713, 714, 718, 722, 726, 729, 732, 735, 740, 748, 751, 759, 767, 768, 769, 773, 777, 781, 784, 787, 790, 798, 804, 805, 815, 822, 823, 824, 828, 832, 836, 839, 842, 845, 850, 858, 861, 869, 877, 878, 879, 883, 887, 891, 894, 897, 900, 908, 914, 915, 925, 932, 933, 934, 938, 942, 946, 949, 952, 955, 960, 968, 971, 979, 987, 988, 989, 993, 997, 1001, 1004, 1007, 1010, 1018, 1024, 1025, 1035, 1042, 1043, 1044, 1048, 1052, 1056, 1059, 1062, 1065, 1070, 1078, 1081, 1089, 1097, 1098, 1099, 1103, 1107, 1111, 1114, 1117, 1120, 1128, 1134, 1135, 1145, 1152, 1153, 1154, 1158, 1162, 1166, 1169, 1172, 1175, 1180, 1188, 1191, 1199, 1207, 1208, 1209, 1213, 1217, 1221, 1224, 1227, 1230, 1238, 1244, 1245, 1255, 1262, 1263, 1264, 1268, 1272, 1276, 1279, 1282, 1285, 1290, 1298, 1301, 1309, 1317, 1318, 1319, 1323, 1327, 1331, 1334, 1337, 1340, 1348, 1355, 1365, 1372, 1373, 1374, 1380};
static const casadi_int casadi_s51[112] = {1, 2, 4, 5, 7, 10, 11, 14, 15, 16, 19, 22, 25, 27, 28, 31, 32, 35, 38, 40, 43, 44, 47, 48, 57, 59, 60, 63, 71, 74, 75, 78, 87, 89, 90, 93, 101, 104, 105, 108, 117, 119, 120, 123, 131, 134, 135, 138, 147, 149, 150, 153, 161, 164, 165, 168, 177, 179, 180, 183, 191, 194, 195, 198, 207, 209, 210, 213, 221, 224, 225, 228, 237, 239, 240, 243, 251, 254, 255, 258, 267, 269, 270, 273, 281, 284, 285, 288, 297, 299, 300, 303, 311, 314, 315, 318, 327, 329, 330, 333, 341, 344, 345, 348, 357, 359, 360, 363, 371, 374, 378, 379};
static const casadi_int casadi_s52[112] = {7, 11, 17, 20, 25, 33, 36, 44, 53, 54, 66, 75, 83, 89, 90, 100, 109, 121, 130, 135, 143, 146, 154, 164, 193, 199, 200, 210, 245, 253, 256, 264, 303, 309, 310, 320, 355, 363, 366, 374, 413, 419, 420, 430, 465, 473, 476, 484, 523, 529, 530, 540, 575, 583, 586, 594, 633, 639, 640, 650, 685, 693, 696, 704, 743, 749, 750, 760, 795, 803, 806, 814, 853, 859, 860, 870, 905, 913, 916, 924, 963, 969, 970, 980, 1015, 1023, 1026, 1034, 1073, 1079, 1080, 1090, 1125, 1133, 1136, 1144, 1183, 1189, 1190, 1200, 1235, 1243, 1246, 1254, 1293, 1299, 1300, 1310, 1345, 1353, 1364, 1385};
static const casadi_int casadi_s53[5] = {14, 1, 0, 1, 12};
static const casadi_int casadi_s54[7] = {1, 3, 0, 0, 0, 1, 0};
static const casadi_int casadi_s55[56] = {8, 10, 11, 14, 22, 25, 26, 29, 38, 41, 42, 44, 54, 57, 59, 60, 70, 73, 75, 76, 86, 89, 91, 92, 102, 105, 107, 108, 118, 121, 123, 124, 134, 137, 139, 140, 150, 153, 155, 156, 166, 169, 171, 172, 182, 185, 187, 188, 198, 201, 203, 204, 214, 217, 219, 220};
static const casadi_int casadi_s56[56] = {28, 34, 35, 45, 80, 88, 91, 99, 138, 145, 148, 155, 196, 202, 211, 258, 306, 312, 321, 368, 416, 422, 431, 478, 526, 532, 541, 588, 636, 642, 651, 698, 746, 752, 761, 808, 856, 862, 871, 918, 966, 972, 981, 1028, 1076, 1082, 1091, 1138, 1186, 1192, 1201, 1248, 1296, 1302, 1311, 1386};
static const casadi_int casadi_s57[52] = {9, 12, 14, 15, 25, 28, 30, 31, 41, 44, 46, 47, 57, 60, 62, 63, 73, 76, 78, 79, 89, 92, 94, 95, 105, 108, 110, 111, 121, 124, 126, 127, 137, 140, 142, 143, 153, 156, 158, 159, 169, 172, 174, 175, 185, 188, 190, 191, 201, 204, 206, 207};
static const casadi_int casadi_s58[52] = {31, 37, 46, 93, 141, 147, 156, 203, 251, 257, 266, 313, 361, 367, 376, 423, 471, 477, 486, 533, 581, 587, 596, 643, 691, 697, 706, 753, 801, 807, 816, 863, 911, 917, 926, 973, 1021, 1027, 1036, 1083, 1131, 1137, 1146, 1193, 1241, 1247, 1256, 1303, 1351, 1357, 1366, 1387};
static const casadi_int casadi_s59[4] = {0, 10, 13, 15};
static const casadi_int casadi_s60[4] = {38, 86, 92, 101};
static const casadi_int casadi_s61[1856] = {564, 464, 0, 2, 4, 7, 12, 17, 22, 24, 26, 28, 30, 34, 38, 42, 45, 47, 49, 52, 57, 62, 67, 69, 71, 73, 75, 79, 83, 87, 90, 92, 94, 97, 102, 107, 112, 114, 116, 118, 120, 124, 128, 132, 135, 137, 139, 142, 147, 152, 157, 159, 161, 163, 165, 169, 173, 177, 180, 182, 184, 187, 192, 197, 202, 204, 206, 208, 210, 214, 218, 222, 225, 227, 229, 232, 237, 242, 247, 249, 251, 253, 255, 259, 263, 267, 270, 272, 274, 277, 282, 287, 292, 294, 296, 298, 300, 304, 308, 312, 315, 317, 319, 322, 327, 332, 337, 339, 341, 343, 345, 349, 353, 357, 360, 362, 364, 367, 372, 377, 382, 384, 386, 388, 390, 394, 398, 402, 405, 407, 409, 412, 417, 422, 427, 429, 431, 433, 435, 439, 443, 447, 450, 452, 454, 457, 462, 467, 472, 474, 476, 478, 480, 484, 488, 492, 495, 497, 499, 502, 507, 512, 517, 519, 521, 523, 525, 529, 533, 537, 540, 542, 544, 547, 552, 557, 562, 564, 566, 568, 570, 574, 578, 582, 585, 587, 589, 592, 597, 602, 607, 609, 611, 613, 615, 619, 623, 627, 630, 632, 634, 637, 642, 647, 652, 654, 656, 658, 660, 664, 668, 672, 675, 677, 679, 682, 687, 692, 697, 699, 701, 703, 705, 709, 713, 717, 720, 722, 724, 727, 732, 737, 742, 744, 746, 748, 750, 754, 758, 762, 765, 767, 769, 772, 777, 782, 787, 789, 791, 793, 795, 799, 803, 807, 810, 812, 814, 817, 822, 827, 832, 834, 836, 838, 840, 844, 848, 852, 855, 857, 859, 862, 867, 872, 877, 879, 881, 883, 885, 889, 893, 897, 900, 902, 904, 907, 912, 917, 922, 924, 926, 928, 930, 934, 938, 942, 945, 947, 949, 952, 957, 962, 967, 969, 971, 973, 975, 979, 983, 987, 990, 992, 994, 997, 1002, 1007, 1012, 1014, 1016, 1018, 1020, 1024, 1028, 1032, 1035, 1037, 1039, 1042, 1047, 1052, 1057, 1059, 1061, 1063, 1065, 1069, 1073, 1077, 1080, 1082, 1084, 1087, 1092, 1097, 1102, 1104, 1106, 1108, 1110, 1114, 1118, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1145, 1148, 1149, 1152, 1155, 1158, 1159, 1162, 1165, 1168, 1169, 1172, 1175, 1178, 1179, 1182, 1185, 1188, 1189, 1192, 1195, 1198, 1199, 1202, 1205, 1208, 1209, 1212, 1215, 1218, 1219, 1222, 1225, 1228, 1229, 1232, 1235, 1238, 1239, 1242, 1245, 1248, 1249, 1252, 1255, 1258, 1259, 1262, 1265, 1268, 1269, 1272, 1275, 1278, 1279, 1282, 1285, 1288, 1289, 1292, 1295, 1298, 1299, 1302, 1305, 1308, 1309, 1312, 1315, 1318, 1319, 1322, 1325, 1328, 1329, 1332, 1335, 1338, 1339, 1342, 1345, 1348, 1349, 1352, 1355, 1358, 1359, 1362, 1365, 1368, 1369, 1372, 1375, 1378, 1379, 1382, 1385, 1388, 1389, 0, 550, 1, 551, 2, 15, 552, 0, 3, 14, 16, 553, 1, 4, 14, 17, 554, 2, 5, 14, 18, 555, 6, 556, 7, 557, 8, 558, 9, 559, 7, 10, 14, 560, 8, 11, 14, 561, 9, 12, 14, 562, 13, 15, 563, 0, 22, 1, 23, 2, 24, 37, 3, 22, 25, 36, 38, 4, 23, 26, 36, 39, 5, 24, 27, 36, 40, 6, 28, 7, 29, 8, 30, 9, 31, 10, 29, 32, 36, 11, 30, 33, 36, 12, 31, 34, 36, 13, 35, 37, 22, 44, 23, 45, 24, 46, 59, 25, 44, 47, 58, 60, 26, 45, 48, 58, 61, 27, 46, 49, 58, 62, 28, 50, 29, 51, 30, 52, 31, 53, 32, 51, 54, 58, 33, 52, 55, 58, 34, 53, 56, 58, 35, 57, 59, 44, 66, 45, 67, 46, 68, 81, 47, 66, 69, 80, 82, 48, 67, 70, 80, 83, 49, 68, 71, 80, 84, 50, 72, 51, 73, 52, 74, 53, 75, 54, 73, 76, 80, 55, 74, 77, 80, 56, 75, 78, 80, 57, 79, 81, 66, 88, 67, 89, 68, 90, 103, 69, 88, 91, 102, 104, 70, 89, 92, 102, 105, 71, 90, 93, 102, 106, 72, 94, 73, 95, 74, 96, 75, 97, 76, 95, 98, 102, 77, 96, 99, 102, 78, 97, 100, 102, 79, 101, 103, 88, 110, 89, 111, 90, 112, 125, 91, 110, 113, 124, 126, 92, 111, 114, 124, 127, 93, 112, 115, 124, 128, 94, 116, 95, 117, 96, 118, 97, 119, 98, 117, 120, 124, 99, 118, 121, 124, 100, 119, 122, 124, 101, 123, 125, 110, 132, 111, 133, 112, 134, 147, 113, 132, 135, 146, 148, 114, 133, 136, 146, 149, 115, 134, 137, 146, 150, 116, 138, 117, 139, 118, 140, 119, 141, 120, 139, 142, 146, 121, 140, 143, 146, 122, 141, 144, 146, 123, 145, 147, 132, 154, 133, 155, 134, 156, 169, 135, 154, 157, 168, 170, 136, 155, 158, 168, 171, 137, 156, 159, 168, 172, 138, 160, 139, 161, 140, 162, 141, 163, 142, 161, 164, 168, 143, 162, 165, 168, 144, 163, 166, 168, 145, 167, 169, 154, 176, 155, 177, 156, 178, 191, 157, 176, 179, 190, 192, 158, 177, 180, 190, 193, 159, 178, 181, 190, 194, 160, 182, 161, 183, 162, 184, 163, 185, 164, 183, 186, 190, 165, 184, 187, 190, 166, 185, 188, 190, 167, 189, 191, 176, 198, 177, 199, 178, 200, 213, 179, 198, 201, 212, 214, 180, 199, 202, 212, 215, 181, 200, 203, 212, 216, 182, 204, 183, 205, 184, 206, 185, 207, 186, 205, 208, 212, 187, 206, 209, 212, 188, 207, 210, 212, 189, 211, 213, 198, 220, 199, 221, 200, 222, 235, 201, 220, 223, 234, 236, 202, 221, 224, 234, 237, 203, 222, 225, 234, 238, 204, 226, 205, 227, 206, 228, 207, 229, 208, 227, 230, 234, 209, 228, 231, 234, 210, 229, 232, 234, 211, 233, 235, 220, 242, 221, 243, 222, 244, 257, 223, 242, 245, 256, 258, 224, 243, 246, 256, 259, 225, 244, 247, 256, 260, 226, 248, 227, 249, 228, 250, 229, 251, 230, 249, 252, 256, 231, 250, 253, 256, 232, 251, 254, 256, 233, 255, 257, 242, 264, 243, 265, 244, 266, 279, 245, 264, 267, 278, 280, 246, 265, 268, 278, 281, 247, 266, 269, 278, 282, 248, 270, 249, 271, 250, 272, 251, 273, 252, 271, 274, 278, 253, 272, 275, 278, 254, 273, 276, 278, 255, 277, 279, 264, 286, 265, 287, 266, 288, 301, 267, 286, 289, 300, 302, 268, 287, 290, 300, 303, 269, 288, 291, 300, 304, 270, 292, 271, 293, 272, 294, 273, 295, 274, 293, 296, 300, 275, 294, 297, 300, 276, 295, 298, 300, 277, 299, 301, 286, 308, 287, 309, 288, 310, 323, 289, 308, 311, 322, 324, 290, 309, 312, 322, 325, 291, 310, 313, 322, 326, 292, 314, 293, 315, 294, 316, 295, 317, 296, 315, 318, 322, 297, 316, 319, 322, 298, 317, 320, 322, 299, 321, 323, 308, 330, 309, 331, 310, 332, 345, 311, 330, 333, 344, 346, 312, 331, 334, 344, 347, 313, 332, 335, 344, 348, 314, 336, 315, 337, 316, 338, 317, 339, 318, 337, 340, 344, 319, 338, 341, 344, 320, 339, 342, 344, 321, 343, 345, 330, 352, 331, 353, 332, 354, 367, 333, 352, 355, 366, 368, 334, 353, 356, 366, 369, 335, 354, 357, 366, 370, 336, 358, 337, 359, 338, 360, 339, 361, 340, 359, 362, 366, 341, 360, 363, 366, 342, 361, 364, 366, 343, 365, 367, 352, 374, 353, 375, 354, 376, 389, 355, 374, 377, 388, 390, 356, 375, 378, 388, 391, 357, 376, 379, 388, 392, 358, 380, 359, 381, 360, 382, 361, 383, 362, 381, 384, 388, 363, 382, 385, 388, 364, 383, 386, 388, 365, 387, 389, 374, 396, 375, 397, 376, 398, 411, 377, 396, 399, 410, 412, 378, 397, 400, 410, 413, 379, 398, 401, 410, 414, 380, 402, 381, 403, 382, 404, 383, 405, 384, 403, 406, 410, 385, 404, 407, 410, 386, 405, 408, 410, 387, 409, 411, 396, 418, 397, 419, 398, 420, 433, 399, 418, 421, 432, 434, 400, 419, 422, 432, 435, 401, 420, 423, 432, 436, 402, 424, 403, 425, 404, 426, 405, 427, 406, 425, 428, 432, 407, 426, 429, 432, 408, 427, 430, 432, 409, 431, 433, 418, 440, 419, 441, 420, 442, 455, 421, 440, 443, 454, 456, 422, 441, 444, 454, 457, 423, 442, 445, 454, 458, 424, 446, 425, 447, 426, 448, 427, 449, 428, 447, 450, 454, 429, 448, 451, 454, 430, 449, 452, 454, 431, 453, 455, 440, 462, 441, 463, 442, 464, 477, 443, 462, 465, 476, 478, 444, 463, 466, 476, 479, 445, 464, 467, 476, 480, 446, 468, 447, 469, 448, 470, 449, 471, 450, 469, 472, 476, 451, 470, 473, 476, 452, 471, 474, 476, 453, 475, 477, 462, 484, 463, 485, 464, 486, 499, 465, 484, 487, 498, 500, 466, 485, 488, 498, 501, 467, 486, 489, 498, 502, 468, 490, 469, 491, 470, 492, 471, 493, 472, 491, 494, 498, 473, 492, 495, 498, 474, 493, 496, 498, 475, 497, 499, 484, 506, 485, 507, 486, 508, 521, 487, 506, 509, 520, 522, 488, 507, 510, 520, 523, 489, 508, 511, 520, 524, 490, 512, 491, 513, 492, 514, 493, 515, 494, 513, 516, 520, 495, 514, 517, 520, 496, 515, 518, 520, 497, 519, 521, 506, 528, 507, 529, 508, 530, 543, 509, 528, 531, 542, 544, 510, 529, 532, 542, 545, 511, 530, 533, 542, 546, 512, 534, 513, 535, 514, 536, 515, 537, 516, 535, 538, 542, 517, 536, 539, 542, 518, 537, 540, 542, 519, 541, 543, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 0, 3, 19, 1, 4, 20, 2, 5, 21, 6, 22, 25, 41, 23, 26, 42, 24, 27, 43, 28, 44, 47, 63, 45, 48, 64, 46, 49, 65, 50, 66, 69, 85, 67, 70, 86, 68, 71, 87, 72, 88, 91, 107, 89, 92, 108, 90, 93, 109, 94, 110, 113, 129, 111, 114, 130, 112, 115, 131, 116, 132, 135, 151, 133, 136, 152, 134, 137, 153, 138, 154, 157, 173, 155, 158, 174, 156, 159, 175, 160, 176, 179, 195, 177, 180, 196, 178, 181, 197, 182, 198, 201, 217, 199, 202, 218, 200, 203, 219, 204, 220, 223, 239, 221, 224, 240, 222, 225, 241, 226, 242, 245, 261, 243, 246, 262, 244, 247, 263, 248, 264, 267, 283, 265, 268, 284, 266, 269, 285, 270, 286, 289, 305, 287, 290, 306, 288, 291, 307, 292, 308, 311, 327, 309, 312, 328, 310, 313, 329, 314, 330, 333, 349, 331, 334, 350, 332, 335, 351, 336, 352, 355, 371, 353, 356, 372, 354, 357, 373, 358, 374, 377, 393, 375, 378, 394, 376, 379, 395, 380, 396, 399, 415, 397, 400, 416, 398, 401, 417, 402, 418, 421, 437, 419, 422, 438, 420, 423, 439, 424, 440, 443, 459, 441, 444, 460, 442, 445, 461, 446, 462, 465, 481, 463, 466, 482, 464, 467, 483, 468, 484, 487, 503, 485, 488, 504, 486, 489, 505, 490, 506, 509, 525, 507, 510, 526, 508, 511, 527, 512, 528, 531, 547, 529, 532, 548, 530, 533, 549, 534};
static const casadi_int casadi_s62[1956] = {};
static const casadi_int casadi_s63[10] = {14, 1, 0, 6, 3, 4, 5, 10, 11, 12};
static const casadi_int casadi_s64[157] = {14, 14, 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
static const casadi_int casadi_s65[101] = {14, 14, 0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12, 3, 4, 5, 10, 11, 12};
static const casadi_int casadi_s66[31] = {14, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
static const casadi_int casadi_s67[21] = {4, 14, 0, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 1, 2, 3};
static const casadi_int casadi_s68[17] = {1, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0};
static const casadi_int casadi_s69[59] = {7, 7, 0, 7, 14, 21, 28, 35, 42, 49, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6};
static const casadi_int casadi_s70[11] = {1, 7, 0, 1, 1, 1, 1, 1, 1, 1, 0};
static const casadi_int casadi_s71[11] = {1, 4, 0, 1, 2, 3, 4, 0, 0, 0, 0};
static const casadi_int casadi_s72[23] = {4, 4, 0, 4, 8, 12, 16, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3};
static const casadi_int casadi_s73[8] = {1, 4, 0, 1, 1, 1, 1, 0};
static const casadi_int casadi_s74[464] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 5096, 5097, 5098, 5099, 5112, 5113, 5114, 5115, 5128, 5129, 5130, 5131, 5144, 5145, 5146, 5147, 5160, 5161, 5162, 5163, 5176, 5177, 5178, 5179, 5192, 5193, 5194, 5195, 5208, 5209, 5210, 5211, 5224, 5225, 5226, 5227, 5240, 5241, 5242, 5243, 5256, 5257, 5258, 5259, 5272, 5273, 5274, 5275, 5288, 5289, 5290, 5291, 5304, 5305, 5306, 5307, 5320, 5321, 5322, 5323, 5336, 5337, 5338, 5339, 5352, 5353, 5354, 5355, 5368, 5369, 5370, 5371, 5384, 5385, 5386, 5387, 5400, 5401, 5402, 5403, 5416, 5417, 5418, 5419, 5432, 5433, 5434, 5435, 5448, 5449, 5450, 5451, 5464, 5465, 5466, 5467, 5480, 5481, 5482, 5483};
static const casadi_int casadi_s75[464] = {0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 378, 392, 406, 420, 434, 448, 462, 476, 490, 504, 518, 532, 546, 560, 574, 588, 602, 616, 630, 644, 658, 672, 686, 700, 714, 728, 742, 756, 770, 784, 798, 812, 826, 840, 854, 868, 882, 896, 910, 924, 938, 952, 966, 980, 994, 1008, 1022, 1036, 1050, 1064, 1078, 1092, 1106, 1120, 1134, 1148, 1162, 1176, 1190, 1204, 1218, 1232, 1246, 1260, 1274, 1288, 1302, 1316, 1330, 1344, 1358, 1372, 1386, 1400, 1414, 1428, 1442, 1456, 1470, 1484, 1498, 1512, 1526, 1540, 1554, 1568, 1582, 1596, 1610, 1624, 1638, 1652, 1666, 1680, 1694, 1708, 1722, 1736, 1750, 1764, 1778, 1792, 1806, 1820, 1834, 1848, 1862, 1876, 1890, 1904, 1918, 1932, 1946, 1960, 1974, 1988, 2002, 2016, 2030, 2044, 2058, 2072, 2086, 2100, 2114, 2128, 2142, 2156, 2170, 2184, 2198, 2212, 2226, 2240, 2254, 2268, 2282, 2296, 2310, 2324, 2338, 2352, 2366, 2380, 2394, 2408, 2422, 2436, 2450, 2464, 2478, 2492, 2506, 2520, 2534, 2548, 2562, 2576, 2590, 2604, 2618, 2632, 2646, 2660, 2674, 2688, 2702, 2716, 2730, 2744, 2758, 2772, 2786, 2800, 2814, 2828, 2842, 2856, 2870, 2884, 2898, 2912, 2926, 2940, 2954, 2968, 2982, 2996, 3010, 3024, 3038, 3052, 3066, 3080, 3094, 3108, 3122, 3136, 3150, 3164, 3178, 3192, 3206, 3220, 3234, 3248, 3262, 3276, 3290, 3304, 3318, 3332, 3346, 3360, 3374, 3388, 3402, 3416, 3430, 3444, 3458, 3472, 3486, 3500, 3514, 3528, 3542, 3556, 3570, 3584, 3598, 3612, 3626, 3640, 3654, 3668, 3682, 3696, 3710, 3724, 3738, 3752, 3766, 3780, 3794, 3808, 3822, 3836, 3850, 3864, 3878, 3892, 3906, 3920, 3934, 3948, 3962, 3976, 3990, 4004, 4018, 4032, 4046, 4060, 4074, 4088, 4102, 4116, 4130, 4144, 4158, 4172, 4186, 4200, 4214, 4228, 4242, 4256, 4270, 4284, 4298, 4312, 4326, 4340, 4354, 4368, 4382, 4396, 4410, 4424, 4438, 4452, 4466, 4480, 4494, 4508, 4522, 4536, 4550, 4564, 4578, 4592, 4606, 4620, 4634, 4648, 4662, 4676, 4690, 4704, 4718, 4732, 4746, 4760, 4774, 4788, 4802, 4816, 4830, 4844, 4858, 4872, 4886, 4900, 4914, 4928, 4942, 4956, 4970, 4984, 4998, 5012, 5026, 5040, 5054, 5068, 5082, 5096, 5100, 5104, 5108, 5112, 5116, 5120, 5124, 5128, 5132, 5136, 5140, 5144, 5148, 5152, 5156, 5160, 5164, 5168, 5172, 5176, 5180, 5184, 5188, 5192, 5196, 5200, 5204, 5208, 5212, 5216, 5220, 5224, 5228, 5232, 5236, 5240, 5244, 5248, 5252, 5256, 5260, 5264, 5268, 5272, 5276, 5280, 5284, 5288, 5292, 5296, 5300, 5304, 5308, 5312, 5316, 5320, 5324, 5328, 5332, 5336, 5340, 5344, 5348, 5352, 5356, 5360, 5364, 5368, 5372, 5376, 5380, 5384, 5388, 5392, 5396, 5400, 5404, 5408, 5412, 5416, 5420, 5424, 5428, 5432, 5436, 5440, 5444, 5448, 5452, 5456, 5460, 5464, 5468, 5472, 5476, 5480, 5484, 5488, 5492};
static const casadi_int casadi_s76[11] = {1, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0};
static const casadi_int casadi_s77[8] = {1, 4, 0, 0, 1, 1, 1, 0};
static const casadi_int casadi_s78[464] = {14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 5100, 5101, 5102, 5103, 5116, 5117, 5118, 5119, 5132, 5133, 5134, 5135, 5148, 5149, 5150, 5151, 5164, 5165, 5166, 5167, 5180, 5181, 5182, 5183, 5196, 5197, 5198, 5199, 5212, 5213, 5214, 5215, 5228, 5229, 5230, 5231, 5244, 5245, 5246, 5247, 5260, 5261, 5262, 5263, 5276, 5277, 5278, 5279, 5292, 5293, 5294, 5295, 5308, 5309, 5310, 5311, 5324, 5325, 5326, 5327, 5340, 5341, 5342, 5343, 5356, 5357, 5358, 5359, 5372, 5373, 5374, 5375, 5388, 5389, 5390, 5391, 5404, 5405, 5406, 5407, 5420, 5421, 5422, 5423, 5436, 5437, 5438, 5439, 5452, 5453, 5454, 5455, 5468, 5469, 5470, 5471, 5484, 5485, 5486, 5487};
static const casadi_int casadi_s79[464] = {1, 15, 29, 43, 57, 71, 85, 99, 113, 127, 141, 155, 169, 183, 197, 211, 225, 239, 253, 267, 281, 295, 309, 323, 337, 351, 365, 379, 393, 407, 421, 435, 449, 463, 477, 491, 505, 519, 533, 547, 561, 575, 589, 603, 617, 631, 645, 659, 673, 687, 701, 715, 729, 743, 757, 771, 785, 799, 813, 827, 841, 855, 869, 883, 897, 911, 925, 939, 953, 967, 981, 995, 1009, 1023, 1037, 1051, 1065, 1079, 1093, 1107, 1121, 1135, 1149, 1163, 1177, 1191, 1205, 1219, 1233, 1247, 1261, 1275, 1289, 1303, 1317, 1331, 1345, 1359, 1373, 1387, 1401, 1415, 1429, 1443, 1457, 1471, 1485, 1499, 1513, 1527, 1541, 1555, 1569, 1583, 1597, 1611, 1625, 1639, 1653, 1667, 1681, 1695, 1709, 1723, 1737, 1751, 1765, 1779, 1793, 1807, 1821, 1835, 1849, 1863, 1877, 1891, 1905, 1919, 1933, 1947, 1961, 1975, 1989, 2003, 2017, 2031, 2045, 2059, 2073, 2087, 2101, 2115, 2129, 2143, 2157, 2171, 2185, 2199, 2213, 2227, 2241, 2255, 2269, 2283, 2297, 2311, 2325, 2339, 2353, 2367, 2381, 2395, 2409, 2423, 2437, 2451, 2465, 2479, 2493, 2507, 2521, 2535, 2549, 2563, 2577, 2591, 2605, 2619, 2633, 2647, 2661, 2675, 2689, 2703, 2717, 2731, 2745, 2759, 2773, 2787, 2801, 2815, 2829, 2843, 2857, 2871, 2885, 2899, 2913, 2927, 2941, 2955, 2969, 2983, 2997, 3011, 3025, 3039, 3053, 3067, 3081, 3095, 3109, 3123, 3137, 3151, 3165, 3179, 3193, 3207, 3221, 3235, 3249, 3263, 3277, 3291, 3305, 3319, 3333, 3347, 3361, 3375, 3389, 3403, 3417, 3431, 3445, 3459, 3473, 3487, 3501, 3515, 3529, 3543, 3557, 3571, 3585, 3599, 3613, 3627, 3641, 3655, 3669, 3683, 3697, 3711, 3725, 3739, 3753, 3767, 3781, 3795, 3809, 3823, 3837, 3851, 3865, 3879, 3893, 3907, 3921, 3935, 3949, 3963, 3977, 3991, 4005, 4019, 4033, 4047, 4061, 4075, 4089, 4103, 4117, 4131, 4145, 4159, 4173, 4187, 4201, 4215, 4229, 4243, 4257, 4271, 4285, 4299, 4313, 4327, 4341, 4355, 4369, 4383, 4397, 4411, 4425, 4439, 4453, 4467, 4481, 4495, 4509, 4523, 4537, 4551, 4565, 4579, 4593, 4607, 4621, 4635, 4649, 4663, 4677, 4691, 4705, 4719, 4733, 4747, 4761, 4775, 4789, 4803, 4817, 4831, 4845, 4859, 4873, 4887, 4901, 4915, 4929, 4943, 4957, 4971, 4985, 4999, 5013, 5027, 5041, 5055, 5069, 5083, 5097, 5101, 5105, 5109, 5113, 5117, 5121, 5125, 5129, 5133, 5137, 5141, 5145, 5149, 5153, 5157, 5161, 5165, 5169, 5173, 5177, 5181, 5185, 5189, 5193, 5197, 5201, 5205, 5209, 5213, 5217, 5221, 5225, 5229, 5233, 5237, 5241, 5245, 5249, 5253, 5257, 5261, 5265, 5269, 5273, 5277, 5281, 5285, 5289, 5293, 5297, 5301, 5305, 5309, 5313, 5317, 5321, 5325, 5329, 5333, 5337, 5341, 5345, 5349, 5353, 5357, 5361, 5365, 5369, 5373, 5377, 5381, 5385, 5389, 5393, 5397, 5401, 5405, 5409, 5413, 5417, 5421, 5425, 5429, 5433, 5437, 5441, 5445, 5449, 5453, 5457, 5461, 5465, 5469, 5473, 5477, 5481, 5485, 5489, 5493};
static const casadi_int casadi_s80[11] = {1, 7, 0, 0, 0, 1, 1, 1, 1, 1, 0};
static const casadi_int casadi_s81[8] = {1, 4, 0, 0, 0, 1, 1, 0};
static const casadi_int casadi_s82[464] = {28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4745, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 5104, 5105, 5106, 5107, 5120, 5121, 5122, 5123, 5136, 5137, 5138, 5139, 5152, 5153, 5154, 5155, 5168, 5169, 5170, 5171, 5184, 5185, 5186, 5187, 5200, 5201, 5202, 5203, 5216, 5217, 5218, 5219, 5232, 5233, 5234, 5235, 5248, 5249, 5250, 5251, 5264, 5265, 5266, 5267, 5280, 5281, 5282, 5283, 5296, 5297, 5298, 5299, 5312, 5313, 5314, 5315, 5328, 5329, 5330, 5331, 5344, 5345, 5346, 5347, 5360, 5361, 5362, 5363, 5376, 5377, 5378, 5379, 5392, 5393, 5394, 5395, 5408, 5409, 5410, 5411, 5424, 5425, 5426, 5427, 5440, 5441, 5442, 5443, 5456, 5457, 5458, 5459, 5472, 5473, 5474, 5475, 5488, 5489, 5490, 5491};
static const casadi_int casadi_s83[464] = {2, 16, 30, 44, 58, 72, 86, 100, 114, 128, 142, 156, 170, 184, 198, 212, 226, 240, 254, 268, 282, 296, 310, 324, 338, 352, 366, 380, 394, 408, 422, 436, 450, 464, 478, 492, 506, 520, 534, 548, 562, 576, 590, 604, 618, 632, 646, 660, 674, 688, 702, 716, 730, 744, 758, 772, 786, 800, 814, 828, 842, 856, 870, 884, 898, 912, 926, 940, 954, 968, 982, 996, 1010, 1024, 1038, 1052, 1066, 1080, 1094, 1108, 1122, 1136, 1150, 1164, 1178, 1192, 1206, 1220, 1234, 1248, 1262, 1276, 1290, 1304, 1318, 1332, 1346, 1360, 1374, 1388, 1402, 1416, 1430, 1444, 1458, 1472, 1486, 1500, 1514, 1528, 1542, 1556, 1570, 1584, 1598, 1612, 1626, 1640, 1654, 1668, 1682, 1696, 1710, 1724, 1738, 1752, 1766, 1780, 1794, 1808, 1822, 1836, 1850, 1864, 1878, 1892, 1906, 1920, 1934, 1948, 1962, 1976, 1990, 2004, 2018, 2032, 2046, 2060, 2074, 2088, 2102, 2116, 2130, 2144, 2158, 2172, 2186, 2200, 2214, 2228, 2242, 2256, 2270, 2284, 2298, 2312, 2326, 2340, 2354, 2368, 2382, 2396, 2410, 2424, 2438, 2452, 2466, 2480, 2494, 2508, 2522, 2536, 2550, 2564, 2578, 2592, 2606, 2620, 2634, 2648, 2662, 2676, 2690, 2704, 2718, 2732, 2746, 2760, 2774, 2788, 2802, 2816, 2830, 2844, 2858, 2872, 2886, 2900, 2914, 2928, 2942, 2956, 2970, 2984, 2998, 3012, 3026, 3040, 3054, 3068, 3082, 3096, 3110, 3124, 3138, 3152, 3166, 3180, 3194, 3208, 3222, 3236, 3250, 3264, 3278, 3292, 3306, 3320, 3334, 3348, 3362, 3376, 3390, 3404, 3418, 3432, 3446, 3460, 3474, 3488, 3502, 3516, 3530, 3544, 3558, 3572, 3586, 3600, 3614, 3628, 3642, 3656, 3670, 3684, 3698, 3712, 3726, 3740, 3754, 3768, 3782, 3796, 3810, 3824, 3838, 3852, 3866, 3880, 3894, 3908, 3922, 3936, 3950, 3964, 3978, 3992, 4006, 4020, 4034, 4048, 4062, 4076, 4090, 4104, 4118, 4132, 4146, 4160, 4174, 4188, 4202, 4216, 4230, 4244, 4258, 4272, 4286, 4300, 4314, 4328, 4342, 4356, 4370, 4384, 4398, 4412, 4426, 4440, 4454, 4468, 4482, 4496, 4510, 4524, 4538, 4552, 4566, 4580, 4594, 4608, 4622, 4636, 4650, 4664, 4678, 4692, 4706, 4720, 4734, 4748, 4762, 4776, 4790, 4804, 4818, 4832, 4846, 4860, 4874, 4888, 4902, 4916, 4930, 4944, 4958, 4972, 4986, 5000, 5014, 5028, 5042, 5056, 5070, 5084, 5098, 5102, 5106, 5110, 5114, 5118, 5122, 5126, 5130, 5134, 5138, 5142, 5146, 5150, 5154, 5158, 5162, 5166, 5170, 5174, 5178, 5182, 5186, 5190, 5194, 5198, 5202, 5206, 5210, 5214, 5218, 5222, 5226, 5230, 5234, 5238, 5242, 5246, 5250, 5254, 5258, 5262, 5266, 5270, 5274, 5278, 5282, 5286, 5290, 5294, 5298, 5302, 5306, 5310, 5314, 5318, 5322, 5326, 5330, 5334, 5338, 5342, 5346, 5350, 5354, 5358, 5362, 5366, 5370, 5374, 5378, 5382, 5386, 5390, 5394, 5398, 5402, 5406, 5410, 5414, 5418, 5422, 5426, 5430, 5434, 5438, 5442, 5446, 5450, 5454, 5458, 5462, 5466, 5470, 5474, 5478, 5482, 5486, 5490, 5494};
static const casadi_int casadi_s84[11] = {1, 7, 0, 0, 0, 0, 1, 1, 1, 1, 0};
static const casadi_int casadi_s85[8] = {1, 4, 0, 0, 0, 0, 1, 0};
static const casadi_int casadi_s86[464] = {42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4746, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 5108, 5109, 5110, 5111, 5124, 5125, 5126, 5127, 5140, 5141, 5142, 5143, 5156, 5157, 5158, 5159, 5172, 5173, 5174, 5175, 5188, 5189, 5190, 5191, 5204, 5205, 5206, 5207, 5220, 5221, 5222, 5223, 5236, 5237, 5238, 5239, 5252, 5253, 5254, 5255, 5268, 5269, 5270, 5271, 5284, 5285, 5286, 5287, 5300, 5301, 5302, 5303, 5316, 5317, 5318, 5319, 5332, 5333, 5334, 5335, 5348, 5349, 5350, 5351, 5364, 5365, 5366, 5367, 5380, 5381, 5382, 5383, 5396, 5397, 5398, 5399, 5412, 5413, 5414, 5415, 5428, 5429, 5430, 5431, 5444, 5445, 5446, 5447, 5460, 5461, 5462, 5463, 5476, 5477, 5478, 5479, 5492, 5493, 5494, 5495};
static const casadi_int casadi_s87[464] = {3, 17, 31, 45, 59, 73, 87, 101, 115, 129, 143, 157, 171, 185, 199, 213, 227, 241, 255, 269, 283, 297, 311, 325, 339, 353, 367, 381, 395, 409, 423, 437, 451, 465, 479, 493, 507, 521, 535, 549, 563, 577, 591, 605, 619, 633, 647, 661, 675, 689, 703, 717, 731, 745, 759, 773, 787, 801, 815, 829, 843, 857, 871, 885, 899, 913, 927, 941, 955, 969, 983, 997, 1011, 1025, 1039, 1053, 1067, 1081, 1095, 1109, 1123, 1137, 1151, 1165, 1179, 1193, 1207, 1221, 1235, 1249, 1263, 1277, 1291, 1305, 1319, 1333, 1347, 1361, 1375, 1389, 1403, 1417, 1431, 1445, 1459, 1473, 1487, 1501, 1515, 1529, 1543, 1557, 1571, 1585, 1599, 1613, 1627, 1641, 1655, 1669, 1683, 1697, 1711, 1725, 1739, 1753, 1767, 1781, 1795, 1809, 1823, 1837, 1851, 1865, 1879, 1893, 1907, 1921, 1935, 1949, 1963, 1977, 1991, 2005, 2019, 2033, 2047, 2061, 2075, 2089, 2103, 2117, 2131, 2145, 2159, 2173, 2187, 2201, 2215, 2229, 2243, 2257, 2271, 2285, 2299, 2313, 2327, 2341, 2355, 2369, 2383, 2397, 2411, 2425, 2439, 2453, 2467, 2481, 2495, 2509, 2523, 2537, 2551, 2565, 2579, 2593, 2607, 2621, 2635, 2649, 2663, 2677, 2691, 2705, 2719, 2733, 2747, 2761, 2775, 2789, 2803, 2817, 2831, 2845, 2859, 2873, 2887, 2901, 2915, 2929, 2943, 2957, 2971, 2985, 2999, 3013, 3027, 3041, 3055, 3069, 3083, 3097, 3111, 3125, 3139, 3153, 3167, 3181, 3195, 3209, 3223, 3237, 3251, 3265, 3279, 3293, 3307, 3321, 3335, 3349, 3363, 3377, 3391, 3405, 3419, 3433, 3447, 3461, 3475, 3489, 3503, 3517, 3531, 3545, 3559, 3573, 3587, 3601, 3615, 3629, 3643, 3657, 3671, 3685, 3699, 3713, 3727, 3741, 3755, 3769, 3783, 3797, 3811, 3825, 3839, 3853, 3867, 3881, 3895, 3909, 3923, 3937, 3951, 3965, 3979, 3993, 4007, 4021, 4035, 4049, 4063, 4077, 4091, 4105, 4119, 4133, 4147, 4161, 4175, 4189, 4203, 4217, 4231, 4245, 4259, 4273, 4287, 4301, 4315, 4329, 4343, 4357, 4371, 4385, 4399, 4413, 4427, 4441, 4455, 4469, 4483, 4497, 4511, 4525, 4539, 4553, 4567, 4581, 4595, 4609, 4623, 4637, 4651, 4665, 4679, 4693, 4707, 4721, 4735, 4749, 4763, 4777, 4791, 4805, 4819, 4833, 4847, 4861, 4875, 4889, 4903, 4917, 4931, 4945, 4959, 4973, 4987, 5001, 5015, 5029, 5043, 5057, 5071, 5085, 5099, 5103, 5107, 5111, 5115, 5119, 5123, 5127, 5131, 5135, 5139, 5143, 5147, 5151, 5155, 5159, 5163, 5167, 5171, 5175, 5179, 5183, 5187, 5191, 5195, 5199, 5203, 5207, 5211, 5215, 5219, 5223, 5227, 5231, 5235, 5239, 5243, 5247, 5251, 5255, 5259, 5263, 5267, 5271, 5275, 5279, 5283, 5287, 5291, 5295, 5299, 5303, 5307, 5311, 5315, 5319, 5323, 5327, 5331, 5335, 5339, 5343, 5347, 5351, 5355, 5359, 5363, 5367, 5371, 5375, 5379, 5383, 5387, 5391, 5395, 5399, 5403, 5407, 5411, 5415, 5419, 5423, 5427, 5431, 5435, 5439, 5443, 5447, 5451, 5455, 5459, 5463, 5467, 5471, 5475, 5479, 5483, 5487, 5491, 5495};
static const casadi_int casadi_s88[11] = {1, 7, 0, 0, 0, 0, 0, 1, 1, 1, 0};
static const casadi_int casadi_s89[11] = {1, 7, 0, 0, 0, 0, 0, 0, 1, 1, 0};
static const casadi_int casadi_s90[11] = {1, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0};
static const casadi_int casadi_s91[5963] = {464, 464, 0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 378, 392, 406, 420, 434, 448, 462, 476, 490, 504, 518, 532, 546, 560, 574, 588, 602, 616, 630, 644, 658, 672, 686, 700, 714, 728, 742, 756, 770, 784, 798, 812, 826, 840, 854, 868, 882, 896, 910, 924, 938, 952, 966, 980, 994, 1008, 1022, 1036, 1050, 1064, 1078, 1092, 1106, 1120, 1134, 1148, 1162, 1176, 1190, 1204, 1218, 1232, 1246, 1260, 1274, 1288, 1302, 1316, 1330, 1344, 1358, 1372, 1386, 1400, 1414, 1428, 1442, 1456, 1470, 1484, 1498, 1512, 1526, 1540, 1554, 1568, 1582, 1596, 1610, 1624, 1638, 1652, 1666, 1680, 1694, 1708, 1722, 1736, 1750, 1764, 1778, 1792, 1806, 1820, 1834, 1848, 1862, 1876, 1890, 1904, 1918, 1932, 1946, 1960, 1974, 1988, 2002, 2016, 2030, 2044, 2058, 2072, 2086, 2100, 2114, 2128, 2142, 2156, 2170, 2184, 2198, 2212, 2226, 2240, 2254, 2268, 2282, 2296, 2310, 2324, 2338, 2352, 2366, 2380, 2394, 2408, 2422, 2436, 2450, 2464, 2478, 2492, 2506, 2520, 2534, 2548, 2562, 2576, 2590, 2604, 2618, 2632, 2646, 2660, 2674, 2688, 2702, 2716, 2730, 2744, 2758, 2772, 2786, 2800, 2814, 2828, 2842, 2856, 2870, 2884, 2898, 2912, 2926, 2940, 2954, 2968, 2982, 2996, 3010, 3024, 3038, 3052, 3066, 3080, 3094, 3108, 3122, 3136, 3150, 3164, 3178, 3192, 3206, 3220, 3234, 3248, 3262, 3276, 3290, 3304, 3318, 3332, 3346, 3360, 3374, 3388, 3402, 3416, 3430, 3444, 3458, 3472, 3486, 3500, 3514, 3528, 3542, 3556, 3570, 3584, 3598, 3612, 3626, 3640, 3654, 3668, 3682, 3696, 3710, 3724, 3738, 3752, 3766, 3780, 3794, 3808, 3822, 3836, 3850, 3864, 3878, 3892, 3906, 3920, 3934, 3948, 3962, 3976, 3990, 4004, 4018, 4032, 4046, 4060, 4074, 4088, 4102, 4116, 4130, 4144, 4158, 4172, 4186, 4200, 4214, 4228, 4242, 4256, 4270, 4284, 4298, 4312, 4326, 4340, 4354, 4368, 4382, 4396, 4410, 4424, 4438, 4452, 4466, 4480, 4494, 4508, 4522, 4536, 4550, 4564, 4578, 4592, 4606, 4620, 4634, 4648, 4662, 4676, 4690, 4704, 4718, 4732, 4746, 4760, 4774, 4788, 4802, 4816, 4830, 4844, 4858, 4872, 4886, 4900, 4914, 4928, 4942, 4956, 4970, 4984, 4998, 5012, 5026, 5040, 5054, 5068, 5082, 5096, 5100, 5104, 5108, 5112, 5116, 5120, 5124, 5128, 5132, 5136, 5140, 5144, 5148, 5152, 5156, 5160, 5164, 5168, 5172, 5176, 5180, 5184, 5188, 5192, 5196, 5200, 5204, 5208, 5212, 5216, 5220, 5224, 5228, 5232, 5236, 5240, 5244, 5248, 5252, 5256, 5260, 5264, 5268, 5272, 5276, 5280, 5284, 5288, 5292, 5296, 5300, 5304, 5308, 5312, 5316, 5320, 5324, 5328, 5332, 5336, 5340, 5344, 5348, 5352, 5356, 5360, 5364, 5368, 5372, 5376, 5380, 5384, 5388, 5392, 5396, 5400, 5404, 5408, 5412, 5416, 5420, 5424, 5428, 5432, 5436, 5440, 5444, 5448, 5452, 5456, 5460, 5464, 5468, 5472, 5476, 5480, 5484, 5488, 5492, 5496, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 364, 365, 366, 367, 364, 365, 366, 367, 364, 365, 366, 367, 368, 369, 370, 371, 368, 369, 370, 371, 368, 369, 370, 371, 368, 369, 370, 371, 372, 373, 374, 375, 372, 373, 374, 375, 372, 373, 374, 375, 372, 373, 374, 375, 376, 377, 378, 379, 376, 377, 378, 379, 376, 377, 378, 379, 376, 377, 378, 379, 380, 381, 382, 383, 380, 381, 382, 383, 380, 381, 382, 383, 380, 381, 382, 383, 384, 385, 386, 387, 384, 385, 386, 387, 384, 385, 386, 387, 384, 385, 386, 387, 388, 389, 390, 391, 388, 389, 390, 391, 388, 389, 390, 391, 388, 389, 390, 391, 392, 393, 394, 395, 392, 393, 394, 395, 392, 393, 394, 395, 392, 393, 394, 395, 396, 397, 398, 399, 396, 397, 398, 399, 396, 397, 398, 399, 396, 397, 398, 399, 400, 401, 402, 403, 400, 401, 402, 403, 400, 401, 402, 403, 400, 401, 402, 403, 404, 405, 406, 407, 404, 405, 406, 407, 404, 405, 406, 407, 404, 405, 406, 407, 408, 409, 410, 411, 408, 409, 410, 411, 408, 409, 410, 411, 408, 409, 410, 411, 412, 413, 414, 415, 412, 413, 414, 415, 412, 413, 414, 415, 412, 413, 414, 415, 416, 417, 418, 419, 416, 417, 418, 419, 416, 417, 418, 419, 416, 417, 418, 419, 420, 421, 422, 423, 420, 421, 422, 423, 420, 421, 422, 423, 420, 421, 422, 423, 424, 425, 426, 427, 424, 425, 426, 427, 424, 425, 426, 427, 424, 425, 426, 427, 428, 429, 430, 431, 428, 429, 430, 431, 428, 429, 430, 431, 428, 429, 430, 431, 432, 433, 434, 435, 432, 433, 434, 435, 432, 433, 434, 435, 432, 433, 434, 435, 436, 437, 438, 439, 436, 437, 438, 439, 436, 437, 438, 439, 436, 437, 438, 439, 440, 441, 442, 443, 440, 441, 442, 443, 440, 441, 442, 443, 440, 441, 442, 443, 444, 445, 446, 447, 444, 445, 446, 447, 444, 445, 446, 447, 444, 445, 446, 447, 448, 449, 450, 451, 448, 449, 450, 451, 448, 449, 450, 451, 448, 449, 450, 451, 452, 453, 454, 455, 452, 453, 454, 455, 452, 453, 454, 455, 452, 453, 454, 455, 456, 457, 458, 459, 456, 457, 458, 459, 456, 457, 458, 459, 456, 457, 458, 459, 460, 461, 462, 463, 460, 461, 462, 463, 460, 461, 462, 463, 460, 461, 462, 463};
static const casadi_int casadi_s92[9869] = {};
static const casadi_int casadi_s93[13826] = {};
static const casadi_int casadi_s94[27277] = {};
static const casadi_int casadi_s95[1028] = {941, 944, 956, 942, 945, 947, 959, 949, 951, 953, 950, 952, 954, 957, 1009, 1005, 982, 990, 991, 992, 1004, 1006, 1007, 1008, 1024, 1025, 1026, 983, 1016, 1015, 902, 915, 913, 904, 924, 1013, 1011, 926, 1012, 1010, 925, 903, 892, 893, 884, 869, 872, 880, 891, 895, 897, 900, 894, 896, 898, 885, 878, 877, 829, 842, 840, 831, 851, 875, 871, 853, 874, 868, 852, 830, 819, 820, 811, 796, 799, 807, 818, 822, 824, 827, 821, 823, 825, 812, 805, 804, 756, 769, 767, 758, 778, 802, 798, 780, 801, 795, 779, 757, 746, 747, 738, 723, 726, 734, 745, 749, 751, 754, 748, 750, 752, 739, 732, 731, 683, 696, 694, 685, 705, 729, 725, 707, 728, 722, 706, 684, 673, 674, 665, 650, 653, 661, 672, 676, 678, 681, 675, 677, 679, 666, 659, 658, 610, 623, 621, 612, 632, 656, 652, 634, 655, 649, 633, 611, 600, 601, 592, 577, 580, 588, 599, 603, 605, 608, 602, 604, 606, 593, 586, 585, 537, 550, 548, 539, 559, 583, 579, 561, 582, 576, 560, 538, 527, 528, 519, 504, 507, 515, 526, 530, 532, 535, 529, 531, 533, 520, 513, 512, 464, 477, 475, 466, 486, 510, 506, 488, 509, 503, 487, 465, 454, 455, 446, 431, 434, 442, 453, 457, 459, 462, 456, 458, 460, 447, 440, 439, 391, 404, 402, 393, 413, 437, 433, 415, 436, 430, 414, 392, 381, 382, 373, 358, 361, 369, 380, 384, 386, 389, 383, 385, 387, 374, 367, 366, 318, 331, 329, 320, 340, 364, 360, 342, 363, 357, 341, 319, 308, 309, 300, 285, 288, 296, 307, 311, 313, 316, 310, 312, 314, 301, 294, 293, 245, 258, 256, 247, 267, 291, 287, 269, 290, 284, 268, 246, 235, 236, 227, 212, 215, 223, 234, 238, 240, 243, 237, 239, 241, 228, 221, 220, 172, 185, 183, 174, 194, 218, 214, 196, 217, 211, 195, 173, 162, 163, 154, 139, 142, 150, 161, 165, 167, 170, 164, 166, 168, 155, 148, 147, 99, 112, 110, 101, 121, 145, 144, 141, 138, 123, 122, 100, 91, 92, 93, 94, 95, 96, 97, 98, 104, 105, 106, 107, 108, 109, 967, 968, 969, 973, 927, 928, 929, 933, 0, 1, 2, 6, 854, 855, 856, 860, 7, 8, 9, 13, 781, 782, 783, 787, 14, 15, 16, 20, 708, 709, 710, 714, 21, 22, 23, 27, 635, 636, 637, 641, 28, 29, 30, 34, 562, 563, 564, 568, 35, 36, 37, 41, 489, 490, 491, 495, 42, 43, 44, 48, 416, 417, 418, 422, 49, 50, 51, 55, 343, 344, 345, 349, 56, 57, 58, 62, 270, 271, 272, 276, 63, 64, 65, 69, 197, 198, 199, 203, 70, 71, 72, 76, 124, 125, 126, 130, 77, 78, 79, 83, 979, 977, 975, 980, 978, 976, 974, 1002, 1000, 998, 1003, 1001, 999, 997, 985, 962, 943, 946, 948, 972, 971, 970, 939, 937, 935, 940, 938, 936, 934, 1018, 1020, 1022, 1017, 1019, 1021, 1023, 1027, 984, 995, 994, 993, 932, 931, 930, 911, 909, 907, 912, 910, 908, 901, 923, 921, 919, 922, 920, 918, 917, 1014, 906, 916, 914, 905, 5, 4, 3, 866, 864, 862, 867, 865, 863, 861, 882, 887, 889, 879, 883, 888, 890, 899, 886, 870, 873, 881, 859, 858, 857, 838, 836, 834, 839, 837, 835, 828, 850, 848, 846, 849, 847, 845, 844, 876, 833, 843, 841, 832, 12, 11, 10, 793, 791, 789, 794, 792, 790, 788, 809, 814, 816, 806, 810, 815, 817, 826, 813, 797, 800, 808, 786, 785, 784, 765, 763, 761, 766, 764, 762, 755, 777, 775, 773, 776, 774, 772, 771, 803, 760, 770, 768, 759, 19, 18, 17, 720, 718, 716, 721, 719, 717, 715, 736, 741, 743, 733, 737, 742, 744, 753, 740, 724, 727, 735, 713, 712, 711, 692, 690, 688, 693, 691, 689, 682, 704, 702, 700, 703, 701, 699, 698, 730, 687, 697, 695, 686, 26, 25, 24, 647, 645, 643, 648, 646, 644, 642, 663, 668, 670, 660, 664, 669, 671, 680, 667, 651, 654, 662, 640, 639, 638, 619, 617, 615, 620, 618, 616, 609, 631, 629, 627, 630, 628, 626, 625, 657, 614, 624, 622, 613, 33, 32, 31, 574, 572, 570, 575, 573, 571, 569, 590, 595, 597, 587, 591, 596, 598, 607, 594, 578, 581, 589, 567, 566, 565, 546, 544, 542, 547, 545, 543, 536, 558, 556, 554, 557, 555, 553, 552, 584, 541, 551, 549, 540, 40, 39, 38, 501, 499, 497, 502, 500, 498, 496, 517, 522, 524, 514, 518, 523, 525, 534, 521, 505, 508, 516, 494, 493, 492, 473, 471, 469, 474, 472, 470, 463, 485, 483, 481, 484, 482, 480, 479, 511, 468, 478, 476, 467, 47, 46, 45, 428, 426, 424, 429, 427, 425, 423, 444, 449, 451, 441, 445, 450, 452, 461, 448, 432, 435, 443, 421, 420, 419, 400, 398, 396, 401, 399, 397, 390, 412, 410, 408, 411, 409, 407, 406, 438, 395, 405, 403, 394, 54, 53, 52, 355, 353, 351, 356, 354, 352, 350, 371, 376, 378, 368, 372, 377, 379, 388, 375, 359, 362, 370, 348, 347, 346, 327, 325, 323, 328, 326, 324, 317, 339, 337, 335, 338, 336, 334, 333, 365, 322, 332, 330, 321, 61, 60, 59, 282, 280, 278, 283, 281, 279, 277, 298, 303, 305, 295, 299, 304, 306, 315, 302, 286, 289, 297, 275, 274, 273, 254, 252, 250, 255, 253, 251, 244, 266, 264, 262, 265, 263, 261, 260, 292, 249, 259, 257, 248, 68, 67, 66, 209, 207, 205, 210, 208, 206, 204, 225, 230, 232, 222, 226, 231, 233, 242, 229, 213, 216, 224, 202, 201, 200, 181, 179, 177, 182, 180, 178, 171, 193, 191, 189, 192, 190, 188, 187, 219, 176, 186, 184, 175, 75, 74, 73, 136, 134, 132, 137, 135, 133, 131, 152, 157, 159, 149, 153, 158, 160, 169, 156, 140, 143, 151, 129, 128, 127, 89, 87, 85, 90, 88, 86, 84, 118, 120, 119, 117, 116, 115, 114, 146, 103, 113, 111, 102, 82, 81, 80, 996, 989, 961, 981, 966, 965, 960, 988, 987, 986, 964, 963, 955, 958};
static const casadi_int casadi_s96[1028] = {527, 528, 529, 375, 374, 373, 372, 571, 572, 573, 383, 382, 381, 380, 615, 616, 617, 391, 390, 389, 388, 659, 660, 661, 399, 398, 397, 396, 703, 704, 705, 407, 406, 405, 404, 747, 748, 749, 415, 414, 413, 412, 791, 792, 793, 423, 422, 421, 420, 835, 836, 837, 431, 430, 429, 428, 879, 880, 881, 439, 438, 437, 436, 923, 924, 925, 447, 446, 445, 444, 967, 968, 969, 455, 454, 453, 452, 1011, 1012, 1013, 463, 462, 461, 460, 350, 351, 352, 356, 355, 354, 353, 363, 362, 361, 360, 357, 359, 358, 998, 1007, 1005, 1010, 994, 997, 1004, 1003, 1002, 1001, 1000, 999, 1009, 996, 1008, 995, 1006, 993, 992, 346, 343, 347, 344, 348, 345, 349, 989, 990, 991, 459, 458, 457, 456, 336, 340, 338, 342, 341, 337, 339, 976, 986, 973, 970, 987, 974, 971, 980, 977, 981, 978, 982, 988, 975, 984, 979, 985, 972, 983, 322, 326, 324, 328, 327, 323, 325, 335, 334, 331, 333, 330, 332, 329, 954, 963, 961, 966, 953, 950, 960, 957, 959, 956, 958, 955, 965, 952, 964, 951, 962, 949, 948, 318, 315, 319, 316, 320, 317, 321, 945, 946, 947, 451, 450, 449, 448, 308, 312, 310, 314, 313, 309, 311, 932, 942, 929, 926, 943, 930, 927, 936, 933, 937, 934, 938, 944, 931, 940, 935, 941, 928, 939, 294, 298, 296, 300, 299, 295, 297, 307, 306, 303, 305, 302, 304, 301, 910, 919, 917, 922, 909, 906, 916, 913, 915, 912, 914, 911, 921, 908, 920, 907, 918, 905, 904, 290, 287, 291, 288, 292, 289, 293, 901, 902, 903, 443, 442, 441, 440, 280, 284, 282, 286, 285, 281, 283, 888, 898, 885, 882, 899, 886, 883, 892, 889, 893, 890, 894, 900, 887, 896, 891, 897, 884, 895, 266, 270, 268, 272, 271, 267, 269, 279, 278, 275, 277, 274, 276, 273, 866, 875, 873, 878, 865, 862, 872, 869, 871, 868, 870, 867, 877, 864, 876, 863, 874, 861, 860, 262, 259, 263, 260, 264, 261, 265, 857, 858, 859, 435, 434, 433, 432, 252, 256, 254, 258, 257, 253, 255, 844, 854, 841, 838, 855, 842, 839, 848, 845, 849, 846, 850, 856, 843, 852, 847, 853, 840, 851, 238, 242, 240, 244, 243, 239, 241, 251, 250, 247, 249, 246, 248, 245, 822, 831, 829, 834, 821, 818, 828, 825, 827, 824, 826, 823, 833, 820, 832, 819, 830, 817, 816, 234, 231, 235, 232, 236, 233, 237, 813, 814, 815, 427, 426, 425, 424, 224, 228, 226, 230, 229, 225, 227, 800, 810, 797, 794, 811, 798, 795, 804, 801, 805, 802, 806, 812, 799, 808, 803, 809, 796, 807, 210, 214, 212, 216, 215, 211, 213, 223, 222, 219, 221, 218, 220, 217, 778, 787, 785, 790, 777, 774, 784, 781, 783, 780, 782, 779, 789, 776, 788, 775, 786, 773, 772, 206, 203, 207, 204, 208, 205, 209, 769, 770, 771, 419, 418, 417, 416, 196, 200, 198, 202, 201, 197, 199, 756, 766, 753, 750, 767, 754, 751, 760, 757, 761, 758, 762, 768, 755, 764, 759, 765, 752, 763, 182, 186, 184, 188, 187, 183, 185, 195, 194, 191, 193, 190, 192, 189, 734, 743, 741, 746, 733, 730, 740, 737, 739, 736, 738, 735, 745, 732, 744, 731, 742, 729, 728, 178, 175, 179, 176, 180, 177, 181, 725, 726, 727, 411, 410, 409, 408, 168, 172, 170, 174, 173, 169, 171, 712, 722, 709, 706, 723, 710, 707, 716, 713, 717, 714, 718, 724, 711, 720, 715, 721, 708, 719, 154, 158, 156, 160, 159, 155, 157, 167, 166, 163, 165, 162, 164, 161, 690, 699, 697, 702, 689, 686, 696, 693, 695, 692, 694, 691, 701, 688, 700, 687, 698, 685, 684, 150, 147, 151, 148, 152, 149, 153, 681, 682, 683, 403, 402, 401, 400, 140, 144, 142, 146, 145, 141, 143, 668, 678, 665, 662, 679, 666, 663, 672, 669, 673, 670, 674, 680, 667, 676, 671, 677, 664, 675, 126, 130, 128, 132, 131, 127, 129, 139, 138, 135, 137, 134, 136, 133, 646, 655, 653, 658, 645, 642, 652, 649, 651, 648, 650, 647, 657, 644, 656, 643, 654, 641, 640, 122, 119, 123, 120, 124, 121, 125, 637, 638, 639, 395, 394, 393, 392, 112, 116, 114, 118, 117, 113, 115, 624, 634, 621, 618, 635, 622, 619, 628, 625, 629, 626, 630, 636, 623, 632, 627, 633, 620, 631, 98, 102, 100, 104, 103, 99, 101, 111, 110, 107, 109, 106, 108, 105, 602, 611, 609, 614, 601, 598, 608, 605, 607, 604, 606, 603, 613, 600, 612, 599, 610, 597, 596, 94, 91, 95, 92, 96, 93, 97, 593, 594, 595, 387, 386, 385, 384, 84, 88, 86, 90, 89, 85, 87, 580, 590, 577, 574, 591, 578, 575, 584, 581, 585, 582, 586, 592, 579, 588, 583, 589, 576, 587, 70, 74, 72, 76, 75, 71, 73, 83, 82, 79, 81, 78, 80, 77, 558, 567, 565, 570, 557, 554, 564, 561, 563, 560, 562, 559, 569, 556, 568, 555, 566, 553, 552, 66, 63, 67, 64, 68, 65, 69, 549, 550, 551, 379, 378, 377, 376, 56, 60, 58, 62, 61, 57, 59, 536, 546, 533, 530, 547, 534, 531, 540, 537, 541, 538, 542, 548, 535, 544, 539, 545, 532, 543, 42, 46, 44, 48, 47, 43, 45, 55, 54, 51, 53, 50, 52, 49, 514, 523, 521, 526, 513, 510, 520, 517, 519, 516, 518, 515, 525, 512, 524, 511, 522, 509, 508, 38, 35, 39, 36, 40, 37, 41, 505, 506, 507, 371, 370, 369, 368, 28, 32, 30, 34, 33, 29, 31, 1014, 480, 1017, 1015, 481, 1018, 482, 1019, 1021, 1024, 1022, 1025, 1023, 1026, 478, 1016, 1027, 479, 1020, 13, 9, 12, 8, 11, 7, 10, 483, 484, 485, 367, 366, 365, 364, 0, 4, 2, 6, 5, 1, 3, 470, 501, 466, 477, 465, 471, 472, 473, 464, 502, 503, 504, 14, 18, 16, 20, 19, 15, 24, 21, 25, 22, 26, 23, 27, 467, 468, 469, 474, 475, 476, 486, 487, 488, 489, 490, 491, 495, 494, 493, 496, 497, 498, 492, 499, 500, 17};
static const casadi_int casadi_s97[18] = {14, 1, 0, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
static const casadi_int casadi_s98[128] = {4, 25, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3};
static const casadi_int casadi_s99[393] = {14, 26, 0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};

static const casadi_real casadi_c0[49] = {20., 0., 0., 0., 0., 0., 0., 0., 20., 0., 0., 0., 0., 0., 0., 0., 20., 0., 0., 0., 0., 0., 0., 0., 20., 0., 0., 0., 0., 0., 0., 0., 20., 0., 0., 0., 0., 0., 0., 0., 20., 0., 0., 0., 0., 0., 0., 0., 10.};
static const casadi_real casadi_c1[16] = {10., 0., 0., 0., 0., 10., 0., 0., 0., 0., 10., 0., 0., 0., 0., 10.};

/* dae:(t[0],x[14],z[0],p[4],u[0])->(ode[14],alg[0],quad[0]) */
static int casadi_f6(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real *w0=w+0, w1;
  /* #0: @0 = input[1][1] */
  casadi_copy(arg[1] ? arg[1]+3 : 0, 3, w0);
  /* #1: output[0][0] = @0 */
  casadi_copy(w0, 3, res[0]);
  /* #2: @0 = input[3][0] */
  casadi_copy(arg[3], 3, w0);
  /* #3: output[0][1] = @0 */
  if (res[0]) casadi_copy(w0, 3, res[0]+3);
  /* #4: @1 = input[3][1] */
  w1 = arg[3] ? arg[3][3] : 0;
  /* #5: output[0][2] = @1 */
  if (res[0]) res[0][6] = w1;
  /* #6: @0 = input[1][4] */
  casadi_copy(arg[1] ? arg[1]+10 : 0, 3, w0);
  /* #7: output[0][3] = @0 */
  if (res[0]) casadi_copy(w0, 3, res[0]+7);
  /* #8: @0 = zeros(3x1) */
  casadi_clear(w0, 3);
  /* #9: output[0][4] = @0 */
  if (res[0]) casadi_copy(w0, 3, res[0]+10);
  /* #10: @1 = 0 */
  w1 = 0.;
  /* #11: output[0][5] = @1 */
  if (res[0]) res[0][13] = w1;
  return 0;
}

/* step:(t[0],h,x0[14],v0[0],p[4],u[0])->(xf[14],vf[0],qf[0]) */
static int casadi_f5(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+3, *rr;
  const casadi_real **arg1=arg+6, *cr, *cs;
  casadi_real *w0=w+4, w1, w2, *w5=w+20, *w7=w+24, w8, *w9=w+39, *w10=w+53;
  /* #0: @0 = input[2][0] */
  casadi_copy(arg[2], 14, w0);
  /* #1: @1 = input[1][0] */
  w1 = arg[1] ? arg[1][0] : 0;
  /* #2: @2 = 6 */
  w2 = 6.;
  /* #3: @2 = (@1/@2) */
  w2  = (w1/w2);
  /* #4: @3 = 0x1 */
  /* #5: @4 = 0x1 */
  /* #6: @5 = input[4][0] */
  casadi_copy(arg[4], 4, w5);
  /* #7: @6 = 0x1 */
  /* #8: {@7, NULL, NULL} = dae(@3, @0, @4, @5, @6) */
  arg1[0]=0;
  arg1[1]=w0;
  arg1[2]=0;
  arg1[3]=w5;
  arg1[4]=0;
  res1[0]=w7;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #9: @3 = 0x1 */
  /* #10: @8 = 2 */
  w8 = 2.;
  /* #11: @8 = (@1/@8) */
  w8  = (w1/w8);
  /* #12: @9 = (@8*@7) */
  for (i=0, rr=w9, cs=w7; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #13: @9 = (@0+@9) */
  for (i=0, rr=w9, cr=w0, cs=w9; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #14: @4 = 0x1 */
  /* #15: {@10, NULL, NULL} = dae(@3, @9, @4, @5, @6) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w5;
  arg1[4]=0;
  res1[0]=w10;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #16: @9 = (2.*@10) */
  for (i=0, rr=w9, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #17: @7 = (@7+@9) */
  for (i=0, rr=w7, cs=w9; i<14; ++i) (*rr++) += (*cs++);
  /* #18: @10 = (@8*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #19: @10 = (@0+@10) */
  for (i=0, rr=w10, cr=w0, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #20: @4 = 0x1 */
  /* #21: {@9, NULL, NULL} = dae(@3, @10, @4, @5, @6) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w5;
  arg1[4]=0;
  res1[0]=w9;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #22: @10 = (2.*@9) */
  for (i=0, rr=w10, cs=w9; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #23: @7 = (@7+@10) */
  for (i=0, rr=w7, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #24: @3 = 0x1 */
  /* #25: @9 = (@1*@9) */
  for (i=0, rr=w9, cs=w9; i<14; ++i) (*rr++)  = (w1*(*cs++));
  /* #26: @9 = (@0+@9) */
  for (i=0, rr=w9, cr=w0, cs=w9; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #27: @4 = 0x1 */
  /* #28: {@10, NULL, NULL} = dae(@3, @9, @4, @5, @6) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w5;
  arg1[4]=0;
  res1[0]=w10;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #29: @7 = (@7+@10) */
  for (i=0, rr=w7, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #30: @7 = (@2*@7) */
  for (i=0, rr=w7, cs=w7; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #31: @0 = (@0+@7) */
  for (i=0, rr=w0, cs=w7; i<14; ++i) (*rr++) += (*cs++);
  /* #32: output[0][0] = @0 */
  casadi_copy(w0, 14, res[0]);
  return 0;
}

/* intg:(x0[14],z0[0],p[4],u[0],adj_xf[],adj_zf[],adj_qf[])->(xf[14],zf[],qf[0],adj_x0[],adj_z0[],adj_p[],adj_u[]) */
static int casadi_f4(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real **res1=res+7;
  const casadi_real **arg1=arg+7;
  casadi_real w1, *w5=w+68, *w7=w+82, *w9=w+86;
  /* #0: @0 = 0x1 */
  /* #1: @1 = 0.05 */
  w1 = 5.0000000000000003e-02;
  /* #2: @2 = 0x1 */
  /* #3: @3 = 0x1 */
  /* #4: @4 = 0x1 */
  /* #5: @5 = input[0][0] */
  casadi_copy(arg[0], 14, w5);
  /* #6: @6 = 0x1 */
  /* #7: @7 = input[2][0] */
  casadi_copy(arg[2], 4, w7);
  /* #8: @8 = 0x1 */
  /* #9: {@9, NULL, NULL} = step(@4, @1, @5, @6, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w5;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w9;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #10: @4 = 0x1 */
  /* #11: {@5, NULL, NULL} = step(@3, @1, @9, @4, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w9;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w5;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #12: @3 = 0x1 */
  /* #13: {@9, NULL, NULL} = step(@2, @1, @5, @3, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w5;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w9;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #14: @2 = 0x1 */
  /* #15: {@5, NULL, NULL} = step(@0, @1, @9, @2, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w9;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w5;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #16: output[0][0] = @5 */
  casadi_copy(w5, 14, res[0]);
  return 0;
}

/* f_disc:(x[14],u[4])->(x_next[14]) */
static int casadi_f3(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+1, *rr;
  const casadi_real **arg1=arg+2, *cs;
  casadi_real *w0=w+100, *w1=w+103, w2, *w3=w+107, *w4=w+110, w5, *w6=w+114, *w8=w+128, *w11=w+132;
  /* #0: @0 = input[0][0] */
  casadi_copy(arg[0], 3, w0);
  /* #1: @1 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+3 : 0, 3, w1);
  /* #2: @2 = input[0][2] */
  w2 = arg[0] ? arg[0][6] : 0;
  /* #3: @3 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+7 : 0, 3, w3);
  /* #4: @4 = input[0][4] */
  casadi_copy(arg[0] ? arg[0]+10 : 0, 3, w4);
  /* #5: @5 = input[0][5] */
  w5 = arg[0] ? arg[0][13] : 0;
  /* #6: @6 = vertcat(@0, @1, @2, @3, @4, @5) */
  rr=w6;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  for (i=0, cs=w3; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  /* #7: @7 = 0x1 */
  /* #8: @0 = input[1][0] */
  casadi_copy(arg[1], 3, w0);
  /* #9: @2 = input[1][1] */
  w2 = arg[1] ? arg[1][3] : 0;
  /* #10: @8 = vertcat(@0, @2) */
  rr=w8;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  /* #11: @9 = 0x1 */
  /* #12: @10 = 0x0 */
  /* #13: {@11, NULL, NULL, NULL, NULL, NULL, NULL} = intg(@6, @7, @8, @9, @10, @10, @10) */
  arg1[0]=w6;
  arg1[1]=0;
  arg1[2]=w8;
  arg1[3]=0;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  res1[0]=w11;
  res1[1]=0;
  res1[2]=0;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  res1[6]=0;
  if (casadi_f4(arg1, res1, iw, w, 0)) return 1;
  /* #14: output[0][0] = @11 */
  casadi_copy(w11, 14, res[0]);
  return 0;
}

/* nlp_fg:(x[464],p[14])->(f,g[564]) */
static int casadi_f2(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j, k;
  casadi_real **res1=res+2, *rr, *ss, *tt;
  const casadi_real **arg1=arg+2, *cs;
  casadi_real w0, *w1=w+147, *w2=w+154, *w3=w+518, *w4=w+525, *w5=w+532, w6, *w7=w+582, *w8=w+586, *w9=w+686, *w10=w+690, *w11=w+706, *w12=w+720, *w13=w+734, *w14=w+748, *w15=w+751;
  /* #0: @0 = 0 */
  w0 = 0.;
  /* #1: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 364, w2);
  /* #3: @3 = @2[:7] */
  for (rr=w3, ss=w2+0; ss!=w2+7; ss+=1) *rr++ = *ss;
  /* #4: @4 = @2[7:14] */
  for (rr=w4, ss=w2+7; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #5: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #6: @3 = @3' */
  /* #7: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #8: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #9: @3 = @2[:7] */
  for (rr=w3, ss=w2+0; ss!=w2+7; ss+=1) *rr++ = *ss;
  /* #10: @4 = @2[7:14] */
  for (rr=w4, ss=w2+7; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #11: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #12: @0 = mac(@1,@3,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #13: @6 = 0 */
  w6 = 0.;
  /* #14: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #15: @8 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+364 : 0, 100, w8);
  /* #16: @9 = @8[:4] */
  for (rr=w9, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #17: @9 = @9' */
  /* #18: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #19: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #20: @9 = @8[:4] */
  for (rr=w9, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #21: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #22: @0 = (@0+@6) */
  w0 += w6;
  /* #23: @6 = 0 */
  w6 = 0.;
  /* #24: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #25: @3 = @2[14:21] */
  for (rr=w3, ss=w2+14; ss!=w2+21; ss+=1) *rr++ = *ss;
  /* #26: @4 = @2[21:28] */
  for (rr=w4, ss=w2+21; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #27: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #28: @3 = @3' */
  /* #29: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #30: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #31: @3 = @2[14:21] */
  for (rr=w3, ss=w2+14; ss!=w2+21; ss+=1) *rr++ = *ss;
  /* #32: @4 = @2[21:28] */
  for (rr=w4, ss=w2+21; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #33: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #34: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #35: @0 = (@0+@6) */
  w0 += w6;
  /* #36: @6 = 0 */
  w6 = 0.;
  /* #37: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #38: @9 = @8[4:8] */
  for (rr=w9, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #39: @9 = @9' */
  /* #40: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #41: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #42: @9 = @8[4:8] */
  for (rr=w9, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #43: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #44: @0 = (@0+@6) */
  w0 += w6;
  /* #45: @6 = 0 */
  w6 = 0.;
  /* #46: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #47: @3 = @2[28:35] */
  for (rr=w3, ss=w2+28; ss!=w2+35; ss+=1) *rr++ = *ss;
  /* #48: @4 = @2[35:42] */
  for (rr=w4, ss=w2+35; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #49: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #50: @3 = @3' */
  /* #51: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #52: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #53: @3 = @2[28:35] */
  for (rr=w3, ss=w2+28; ss!=w2+35; ss+=1) *rr++ = *ss;
  /* #54: @4 = @2[35:42] */
  for (rr=w4, ss=w2+35; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #55: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #56: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #57: @0 = (@0+@6) */
  w0 += w6;
  /* #58: @6 = 0 */
  w6 = 0.;
  /* #59: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #60: @9 = @8[8:12] */
  for (rr=w9, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #61: @9 = @9' */
  /* #62: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #63: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #64: @9 = @8[8:12] */
  for (rr=w9, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #65: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #66: @0 = (@0+@6) */
  w0 += w6;
  /* #67: @6 = 0 */
  w6 = 0.;
  /* #68: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #69: @3 = @2[42:49] */
  for (rr=w3, ss=w2+42; ss!=w2+49; ss+=1) *rr++ = *ss;
  /* #70: @4 = @2[49:56] */
  for (rr=w4, ss=w2+49; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #71: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #72: @3 = @3' */
  /* #73: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #74: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #75: @3 = @2[42:49] */
  for (rr=w3, ss=w2+42; ss!=w2+49; ss+=1) *rr++ = *ss;
  /* #76: @4 = @2[49:56] */
  for (rr=w4, ss=w2+49; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #77: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #78: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #79: @0 = (@0+@6) */
  w0 += w6;
  /* #80: @6 = 0 */
  w6 = 0.;
  /* #81: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #82: @9 = @8[12:16] */
  for (rr=w9, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #83: @9 = @9' */
  /* #84: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #85: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #86: @9 = @8[12:16] */
  for (rr=w9, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #87: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #88: @0 = (@0+@6) */
  w0 += w6;
  /* #89: @6 = 0 */
  w6 = 0.;
  /* #90: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #91: @3 = @2[56:63] */
  for (rr=w3, ss=w2+56; ss!=w2+63; ss+=1) *rr++ = *ss;
  /* #92: @4 = @2[63:70] */
  for (rr=w4, ss=w2+63; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #93: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #94: @3 = @3' */
  /* #95: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #96: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #97: @3 = @2[56:63] */
  for (rr=w3, ss=w2+56; ss!=w2+63; ss+=1) *rr++ = *ss;
  /* #98: @4 = @2[63:70] */
  for (rr=w4, ss=w2+63; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #99: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #100: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #101: @0 = (@0+@6) */
  w0 += w6;
  /* #102: @6 = 0 */
  w6 = 0.;
  /* #103: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #104: @9 = @8[16:20] */
  for (rr=w9, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #105: @9 = @9' */
  /* #106: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #107: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #108: @9 = @8[16:20] */
  for (rr=w9, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #109: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #110: @0 = (@0+@6) */
  w0 += w6;
  /* #111: @6 = 0 */
  w6 = 0.;
  /* #112: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #113: @3 = @2[70:77] */
  for (rr=w3, ss=w2+70; ss!=w2+77; ss+=1) *rr++ = *ss;
  /* #114: @4 = @2[77:84] */
  for (rr=w4, ss=w2+77; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #115: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #116: @3 = @3' */
  /* #117: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #118: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #119: @3 = @2[70:77] */
  for (rr=w3, ss=w2+70; ss!=w2+77; ss+=1) *rr++ = *ss;
  /* #120: @4 = @2[77:84] */
  for (rr=w4, ss=w2+77; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #121: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #122: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #123: @0 = (@0+@6) */
  w0 += w6;
  /* #124: @6 = 0 */
  w6 = 0.;
  /* #125: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #126: @9 = @8[20:24] */
  for (rr=w9, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #127: @9 = @9' */
  /* #128: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #129: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #130: @9 = @8[20:24] */
  for (rr=w9, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #131: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #132: @0 = (@0+@6) */
  w0 += w6;
  /* #133: @6 = 0 */
  w6 = 0.;
  /* #134: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #135: @3 = @2[84:91] */
  for (rr=w3, ss=w2+84; ss!=w2+91; ss+=1) *rr++ = *ss;
  /* #136: @4 = @2[91:98] */
  for (rr=w4, ss=w2+91; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #137: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #138: @3 = @3' */
  /* #139: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #140: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #141: @3 = @2[84:91] */
  for (rr=w3, ss=w2+84; ss!=w2+91; ss+=1) *rr++ = *ss;
  /* #142: @4 = @2[91:98] */
  for (rr=w4, ss=w2+91; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #143: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #144: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #145: @0 = (@0+@6) */
  w0 += w6;
  /* #146: @6 = 0 */
  w6 = 0.;
  /* #147: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #148: @9 = @8[24:28] */
  for (rr=w9, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #149: @9 = @9' */
  /* #150: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #151: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #152: @9 = @8[24:28] */
  for (rr=w9, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #153: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #154: @0 = (@0+@6) */
  w0 += w6;
  /* #155: @6 = 0 */
  w6 = 0.;
  /* #156: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #157: @3 = @2[98:105] */
  for (rr=w3, ss=w2+98; ss!=w2+105; ss+=1) *rr++ = *ss;
  /* #158: @4 = @2[105:112] */
  for (rr=w4, ss=w2+105; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #159: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #160: @3 = @3' */
  /* #161: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #162: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #163: @3 = @2[98:105] */
  for (rr=w3, ss=w2+98; ss!=w2+105; ss+=1) *rr++ = *ss;
  /* #164: @4 = @2[105:112] */
  for (rr=w4, ss=w2+105; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #165: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #166: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #167: @0 = (@0+@6) */
  w0 += w6;
  /* #168: @6 = 0 */
  w6 = 0.;
  /* #169: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #170: @9 = @8[28:32] */
  for (rr=w9, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #171: @9 = @9' */
  /* #172: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #173: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #174: @9 = @8[28:32] */
  for (rr=w9, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #175: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #176: @0 = (@0+@6) */
  w0 += w6;
  /* #177: @6 = 0 */
  w6 = 0.;
  /* #178: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #179: @3 = @2[112:119] */
  for (rr=w3, ss=w2+112; ss!=w2+119; ss+=1) *rr++ = *ss;
  /* #180: @4 = @2[119:126] */
  for (rr=w4, ss=w2+119; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #181: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #182: @3 = @3' */
  /* #183: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #184: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #185: @3 = @2[112:119] */
  for (rr=w3, ss=w2+112; ss!=w2+119; ss+=1) *rr++ = *ss;
  /* #186: @4 = @2[119:126] */
  for (rr=w4, ss=w2+119; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #187: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #188: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #189: @0 = (@0+@6) */
  w0 += w6;
  /* #190: @6 = 0 */
  w6 = 0.;
  /* #191: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #192: @9 = @8[32:36] */
  for (rr=w9, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #193: @9 = @9' */
  /* #194: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #195: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #196: @9 = @8[32:36] */
  for (rr=w9, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #197: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #198: @0 = (@0+@6) */
  w0 += w6;
  /* #199: @6 = 0 */
  w6 = 0.;
  /* #200: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #201: @3 = @2[126:133] */
  for (rr=w3, ss=w2+126; ss!=w2+133; ss+=1) *rr++ = *ss;
  /* #202: @4 = @2[133:140] */
  for (rr=w4, ss=w2+133; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #203: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #204: @3 = @3' */
  /* #205: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #206: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #207: @3 = @2[126:133] */
  for (rr=w3, ss=w2+126; ss!=w2+133; ss+=1) *rr++ = *ss;
  /* #208: @4 = @2[133:140] */
  for (rr=w4, ss=w2+133; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #209: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #210: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #211: @0 = (@0+@6) */
  w0 += w6;
  /* #212: @6 = 0 */
  w6 = 0.;
  /* #213: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #214: @9 = @8[36:40] */
  for (rr=w9, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #215: @9 = @9' */
  /* #216: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #217: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #218: @9 = @8[36:40] */
  for (rr=w9, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #219: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #220: @0 = (@0+@6) */
  w0 += w6;
  /* #221: @6 = 0 */
  w6 = 0.;
  /* #222: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #223: @3 = @2[140:147] */
  for (rr=w3, ss=w2+140; ss!=w2+147; ss+=1) *rr++ = *ss;
  /* #224: @4 = @2[147:154] */
  for (rr=w4, ss=w2+147; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #225: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #226: @3 = @3' */
  /* #227: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #228: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #229: @3 = @2[140:147] */
  for (rr=w3, ss=w2+140; ss!=w2+147; ss+=1) *rr++ = *ss;
  /* #230: @4 = @2[147:154] */
  for (rr=w4, ss=w2+147; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #231: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #232: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #233: @0 = (@0+@6) */
  w0 += w6;
  /* #234: @6 = 0 */
  w6 = 0.;
  /* #235: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #236: @9 = @8[40:44] */
  for (rr=w9, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #237: @9 = @9' */
  /* #238: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #239: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #240: @9 = @8[40:44] */
  for (rr=w9, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #241: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #242: @0 = (@0+@6) */
  w0 += w6;
  /* #243: @6 = 0 */
  w6 = 0.;
  /* #244: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #245: @3 = @2[154:161] */
  for (rr=w3, ss=w2+154; ss!=w2+161; ss+=1) *rr++ = *ss;
  /* #246: @4 = @2[161:168] */
  for (rr=w4, ss=w2+161; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #247: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #248: @3 = @3' */
  /* #249: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #250: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #251: @3 = @2[154:161] */
  for (rr=w3, ss=w2+154; ss!=w2+161; ss+=1) *rr++ = *ss;
  /* #252: @4 = @2[161:168] */
  for (rr=w4, ss=w2+161; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #253: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #254: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #255: @0 = (@0+@6) */
  w0 += w6;
  /* #256: @6 = 0 */
  w6 = 0.;
  /* #257: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #258: @9 = @8[44:48] */
  for (rr=w9, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #259: @9 = @9' */
  /* #260: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #261: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #262: @9 = @8[44:48] */
  for (rr=w9, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #263: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #264: @0 = (@0+@6) */
  w0 += w6;
  /* #265: @6 = 0 */
  w6 = 0.;
  /* #266: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #267: @3 = @2[168:175] */
  for (rr=w3, ss=w2+168; ss!=w2+175; ss+=1) *rr++ = *ss;
  /* #268: @4 = @2[175:182] */
  for (rr=w4, ss=w2+175; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #269: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #270: @3 = @3' */
  /* #271: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #272: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #273: @3 = @2[168:175] */
  for (rr=w3, ss=w2+168; ss!=w2+175; ss+=1) *rr++ = *ss;
  /* #274: @4 = @2[175:182] */
  for (rr=w4, ss=w2+175; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #275: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #276: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #277: @0 = (@0+@6) */
  w0 += w6;
  /* #278: @6 = 0 */
  w6 = 0.;
  /* #279: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #280: @9 = @8[48:52] */
  for (rr=w9, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #281: @9 = @9' */
  /* #282: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #283: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #284: @9 = @8[48:52] */
  for (rr=w9, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #285: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #286: @0 = (@0+@6) */
  w0 += w6;
  /* #287: @6 = 0 */
  w6 = 0.;
  /* #288: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #289: @3 = @2[182:189] */
  for (rr=w3, ss=w2+182; ss!=w2+189; ss+=1) *rr++ = *ss;
  /* #290: @4 = @2[189:196] */
  for (rr=w4, ss=w2+189; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #291: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #292: @3 = @3' */
  /* #293: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #294: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #295: @3 = @2[182:189] */
  for (rr=w3, ss=w2+182; ss!=w2+189; ss+=1) *rr++ = *ss;
  /* #296: @4 = @2[189:196] */
  for (rr=w4, ss=w2+189; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #297: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #298: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #299: @0 = (@0+@6) */
  w0 += w6;
  /* #300: @6 = 0 */
  w6 = 0.;
  /* #301: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #302: @9 = @8[52:56] */
  for (rr=w9, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #303: @9 = @9' */
  /* #304: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #305: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #306: @9 = @8[52:56] */
  for (rr=w9, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #307: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #308: @0 = (@0+@6) */
  w0 += w6;
  /* #309: @6 = 0 */
  w6 = 0.;
  /* #310: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #311: @3 = @2[196:203] */
  for (rr=w3, ss=w2+196; ss!=w2+203; ss+=1) *rr++ = *ss;
  /* #312: @4 = @2[203:210] */
  for (rr=w4, ss=w2+203; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #313: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #314: @3 = @3' */
  /* #315: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #316: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #317: @3 = @2[196:203] */
  for (rr=w3, ss=w2+196; ss!=w2+203; ss+=1) *rr++ = *ss;
  /* #318: @4 = @2[203:210] */
  for (rr=w4, ss=w2+203; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #319: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #320: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #321: @0 = (@0+@6) */
  w0 += w6;
  /* #322: @6 = 0 */
  w6 = 0.;
  /* #323: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #324: @9 = @8[56:60] */
  for (rr=w9, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #325: @9 = @9' */
  /* #326: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #327: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #328: @9 = @8[56:60] */
  for (rr=w9, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #329: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #330: @0 = (@0+@6) */
  w0 += w6;
  /* #331: @6 = 0 */
  w6 = 0.;
  /* #332: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #333: @3 = @2[210:217] */
  for (rr=w3, ss=w2+210; ss!=w2+217; ss+=1) *rr++ = *ss;
  /* #334: @4 = @2[217:224] */
  for (rr=w4, ss=w2+217; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #335: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #336: @3 = @3' */
  /* #337: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #338: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #339: @3 = @2[210:217] */
  for (rr=w3, ss=w2+210; ss!=w2+217; ss+=1) *rr++ = *ss;
  /* #340: @4 = @2[217:224] */
  for (rr=w4, ss=w2+217; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #341: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #342: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #343: @0 = (@0+@6) */
  w0 += w6;
  /* #344: @6 = 0 */
  w6 = 0.;
  /* #345: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #346: @9 = @8[60:64] */
  for (rr=w9, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #347: @9 = @9' */
  /* #348: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #349: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #350: @9 = @8[60:64] */
  for (rr=w9, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #351: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #352: @0 = (@0+@6) */
  w0 += w6;
  /* #353: @6 = 0 */
  w6 = 0.;
  /* #354: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #355: @3 = @2[224:231] */
  for (rr=w3, ss=w2+224; ss!=w2+231; ss+=1) *rr++ = *ss;
  /* #356: @4 = @2[231:238] */
  for (rr=w4, ss=w2+231; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #357: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #358: @3 = @3' */
  /* #359: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #360: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #361: @3 = @2[224:231] */
  for (rr=w3, ss=w2+224; ss!=w2+231; ss+=1) *rr++ = *ss;
  /* #362: @4 = @2[231:238] */
  for (rr=w4, ss=w2+231; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #363: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #364: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #365: @0 = (@0+@6) */
  w0 += w6;
  /* #366: @6 = 0 */
  w6 = 0.;
  /* #367: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #368: @9 = @8[64:68] */
  for (rr=w9, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #369: @9 = @9' */
  /* #370: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #371: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #372: @9 = @8[64:68] */
  for (rr=w9, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #373: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #374: @0 = (@0+@6) */
  w0 += w6;
  /* #375: @6 = 0 */
  w6 = 0.;
  /* #376: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #377: @3 = @2[238:245] */
  for (rr=w3, ss=w2+238; ss!=w2+245; ss+=1) *rr++ = *ss;
  /* #378: @4 = @2[245:252] */
  for (rr=w4, ss=w2+245; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #379: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #380: @3 = @3' */
  /* #381: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #382: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #383: @3 = @2[238:245] */
  for (rr=w3, ss=w2+238; ss!=w2+245; ss+=1) *rr++ = *ss;
  /* #384: @4 = @2[245:252] */
  for (rr=w4, ss=w2+245; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #385: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #386: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #387: @0 = (@0+@6) */
  w0 += w6;
  /* #388: @6 = 0 */
  w6 = 0.;
  /* #389: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #390: @9 = @8[68:72] */
  for (rr=w9, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #391: @9 = @9' */
  /* #392: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #393: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #394: @9 = @8[68:72] */
  for (rr=w9, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #395: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #396: @0 = (@0+@6) */
  w0 += w6;
  /* #397: @6 = 0 */
  w6 = 0.;
  /* #398: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #399: @3 = @2[252:259] */
  for (rr=w3, ss=w2+252; ss!=w2+259; ss+=1) *rr++ = *ss;
  /* #400: @4 = @2[259:266] */
  for (rr=w4, ss=w2+259; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #401: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #402: @3 = @3' */
  /* #403: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #404: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #405: @3 = @2[252:259] */
  for (rr=w3, ss=w2+252; ss!=w2+259; ss+=1) *rr++ = *ss;
  /* #406: @4 = @2[259:266] */
  for (rr=w4, ss=w2+259; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #407: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #408: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #409: @0 = (@0+@6) */
  w0 += w6;
  /* #410: @6 = 0 */
  w6 = 0.;
  /* #411: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #412: @9 = @8[72:76] */
  for (rr=w9, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #413: @9 = @9' */
  /* #414: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #415: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #416: @9 = @8[72:76] */
  for (rr=w9, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #417: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #418: @0 = (@0+@6) */
  w0 += w6;
  /* #419: @6 = 0 */
  w6 = 0.;
  /* #420: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #421: @3 = @2[266:273] */
  for (rr=w3, ss=w2+266; ss!=w2+273; ss+=1) *rr++ = *ss;
  /* #422: @4 = @2[273:280] */
  for (rr=w4, ss=w2+273; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #423: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #424: @3 = @3' */
  /* #425: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #426: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #427: @3 = @2[266:273] */
  for (rr=w3, ss=w2+266; ss!=w2+273; ss+=1) *rr++ = *ss;
  /* #428: @4 = @2[273:280] */
  for (rr=w4, ss=w2+273; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #429: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #430: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #431: @0 = (@0+@6) */
  w0 += w6;
  /* #432: @6 = 0 */
  w6 = 0.;
  /* #433: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #434: @9 = @8[76:80] */
  for (rr=w9, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #435: @9 = @9' */
  /* #436: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #437: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #438: @9 = @8[76:80] */
  for (rr=w9, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #439: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #440: @0 = (@0+@6) */
  w0 += w6;
  /* #441: @6 = 0 */
  w6 = 0.;
  /* #442: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #443: @3 = @2[280:287] */
  for (rr=w3, ss=w2+280; ss!=w2+287; ss+=1) *rr++ = *ss;
  /* #444: @4 = @2[287:294] */
  for (rr=w4, ss=w2+287; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #445: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #446: @3 = @3' */
  /* #447: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #448: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #449: @3 = @2[280:287] */
  for (rr=w3, ss=w2+280; ss!=w2+287; ss+=1) *rr++ = *ss;
  /* #450: @4 = @2[287:294] */
  for (rr=w4, ss=w2+287; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #451: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #452: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #453: @0 = (@0+@6) */
  w0 += w6;
  /* #454: @6 = 0 */
  w6 = 0.;
  /* #455: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #456: @9 = @8[80:84] */
  for (rr=w9, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #457: @9 = @9' */
  /* #458: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #459: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #460: @9 = @8[80:84] */
  for (rr=w9, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #461: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #462: @0 = (@0+@6) */
  w0 += w6;
  /* #463: @6 = 0 */
  w6 = 0.;
  /* #464: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #465: @3 = @2[294:301] */
  for (rr=w3, ss=w2+294; ss!=w2+301; ss+=1) *rr++ = *ss;
  /* #466: @4 = @2[301:308] */
  for (rr=w4, ss=w2+301; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #467: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #468: @3 = @3' */
  /* #469: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #470: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #471: @3 = @2[294:301] */
  for (rr=w3, ss=w2+294; ss!=w2+301; ss+=1) *rr++ = *ss;
  /* #472: @4 = @2[301:308] */
  for (rr=w4, ss=w2+301; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #473: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #474: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #475: @0 = (@0+@6) */
  w0 += w6;
  /* #476: @6 = 0 */
  w6 = 0.;
  /* #477: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #478: @9 = @8[84:88] */
  for (rr=w9, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #479: @9 = @9' */
  /* #480: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #481: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #482: @9 = @8[84:88] */
  for (rr=w9, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #483: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #484: @0 = (@0+@6) */
  w0 += w6;
  /* #485: @6 = 0 */
  w6 = 0.;
  /* #486: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #487: @3 = @2[308:315] */
  for (rr=w3, ss=w2+308; ss!=w2+315; ss+=1) *rr++ = *ss;
  /* #488: @4 = @2[315:322] */
  for (rr=w4, ss=w2+315; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #489: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #490: @3 = @3' */
  /* #491: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #492: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #493: @3 = @2[308:315] */
  for (rr=w3, ss=w2+308; ss!=w2+315; ss+=1) *rr++ = *ss;
  /* #494: @4 = @2[315:322] */
  for (rr=w4, ss=w2+315; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #495: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #496: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #497: @0 = (@0+@6) */
  w0 += w6;
  /* #498: @6 = 0 */
  w6 = 0.;
  /* #499: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #500: @9 = @8[88:92] */
  for (rr=w9, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #501: @9 = @9' */
  /* #502: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #503: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #504: @9 = @8[88:92] */
  for (rr=w9, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #505: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #506: @0 = (@0+@6) */
  w0 += w6;
  /* #507: @6 = 0 */
  w6 = 0.;
  /* #508: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #509: @3 = @2[322:329] */
  for (rr=w3, ss=w2+322; ss!=w2+329; ss+=1) *rr++ = *ss;
  /* #510: @4 = @2[329:336] */
  for (rr=w4, ss=w2+329; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #511: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #512: @3 = @3' */
  /* #513: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #514: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #515: @3 = @2[322:329] */
  for (rr=w3, ss=w2+322; ss!=w2+329; ss+=1) *rr++ = *ss;
  /* #516: @4 = @2[329:336] */
  for (rr=w4, ss=w2+329; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #517: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #518: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #519: @0 = (@0+@6) */
  w0 += w6;
  /* #520: @6 = 0 */
  w6 = 0.;
  /* #521: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #522: @9 = @8[92:96] */
  for (rr=w9, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #523: @9 = @9' */
  /* #524: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #525: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #526: @9 = @8[92:96] */
  for (rr=w9, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #527: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #528: @0 = (@0+@6) */
  w0 += w6;
  /* #529: @6 = 0 */
  w6 = 0.;
  /* #530: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #531: @3 = @2[336:343] */
  for (rr=w3, ss=w2+336; ss!=w2+343; ss+=1) *rr++ = *ss;
  /* #532: @4 = @2[343:350] */
  for (rr=w4, ss=w2+343; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #533: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #534: @3 = @3' */
  /* #535: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #536: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #537: @3 = @2[336:343] */
  for (rr=w3, ss=w2+336; ss!=w2+343; ss+=1) *rr++ = *ss;
  /* #538: @4 = @2[343:350] */
  for (rr=w4, ss=w2+343; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #539: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #540: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #541: @0 = (@0+@6) */
  w0 += w6;
  /* #542: @6 = 0 */
  w6 = 0.;
  /* #543: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #544: @9 = @8[96:100] */
  for (rr=w9, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #545: @9 = @9' */
  /* #546: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #547: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #548: @9 = @8[96:100] */
  for (rr=w9, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #549: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #550: @0 = (@0+@6) */
  w0 += w6;
  /* #551: @6 = 0 */
  w6 = 0.;
  /* #552: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #553: @3 = @2[350:357] */
  for (rr=w3, ss=w2+350; ss!=w2+357; ss+=1) *rr++ = *ss;
  /* #554: @4 = @2[357:364] */
  for (rr=w4, ss=w2+357; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #555: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #556: @3 = @3' */
  /* #557: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #558: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #559: @3 = @2[350:357] */
  for (rr=w3, ss=w2+350; ss!=w2+357; ss+=1) *rr++ = *ss;
  /* #560: @4 = @2[357:364] */
  for (rr=w4, ss=w2+357; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #561: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #562: @6 = mac(@1,@3,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #563: @0 = (@0+@6) */
  w0 += w6;
  /* #564: output[0][0] = @0 */
  if (res[0]) res[0][0] = w0;
  /* #565: @11 = @2[14:28] */
  for (rr=w11, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #566: @12 = @2[:14] */
  for (rr=w12, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #567: @7 = @8[:4] */
  for (rr=w7, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #568: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #569: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #570: output[1][0] = @11 */
  casadi_copy(w11, 14, res[1]);
  /* #571: @0 = 0 */
  w0 = 0.;
  /* #572: @14 = @2[10:13] */
  for (rr=w14, ss=w2+10; ss!=w2+13; ss+=1) *rr++ = *ss;
  /* #573: @14 = @14' */
  /* #574: @15 = @2[3:6] */
  for (rr=w15, ss=w2+3; ss!=w2+6; ss+=1) *rr++ = *ss;
  /* #575: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #576: output[1][1] = @0 */
  if (res[1]) res[1][14] = w0;
  /* #577: @0 = @2[2] */
  for (rr=(&w0), ss=w2+2; ss!=w2+3; ss+=1) *rr++ = *ss;
  /* #578: @6 = @2[13] */
  for (rr=(&w6), ss=w2+13; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #579: @0 = (@0-@6) */
  w0 -= w6;
  /* #580: output[1][2] = @0 */
  if (res[1]) res[1][15] = w0;
  /* #581: @14 = @2[3:6] */
  for (rr=w14, ss=w2+3; ss!=w2+6; ss+=1) *rr++ = *ss;
  /* #582: output[1][3] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+16);
  /* #583: @14 = @8[:3] */
  for (rr=w14, ss=w8+0; ss!=w8+3; ss+=1) *rr++ = *ss;
  /* #584: output[1][4] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+19);
  /* #585: @11 = @2[28:42] */
  for (rr=w11, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #586: @13 = @2[14:28] */
  for (rr=w13, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #587: @7 = @8[4:8] */
  for (rr=w7, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #588: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #589: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #590: output[1][5] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+22);
  /* #591: @0 = 0 */
  w0 = 0.;
  /* #592: @14 = @2[24:27] */
  for (rr=w14, ss=w2+24; ss!=w2+27; ss+=1) *rr++ = *ss;
  /* #593: @14 = @14' */
  /* #594: @15 = @2[17:20] */
  for (rr=w15, ss=w2+17; ss!=w2+20; ss+=1) *rr++ = *ss;
  /* #595: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #596: output[1][6] = @0 */
  if (res[1]) res[1][36] = w0;
  /* #597: @0 = @2[16] */
  for (rr=(&w0), ss=w2+16; ss!=w2+17; ss+=1) *rr++ = *ss;
  /* #598: @6 = @2[27] */
  for (rr=(&w6), ss=w2+27; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #599: @0 = (@0-@6) */
  w0 -= w6;
  /* #600: output[1][7] = @0 */
  if (res[1]) res[1][37] = w0;
  /* #601: @14 = @2[17:20] */
  for (rr=w14, ss=w2+17; ss!=w2+20; ss+=1) *rr++ = *ss;
  /* #602: output[1][8] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+38);
  /* #603: @14 = @8[4:7] */
  for (rr=w14, ss=w8+4; ss!=w8+7; ss+=1) *rr++ = *ss;
  /* #604: output[1][9] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+41);
  /* #605: @11 = @2[42:56] */
  for (rr=w11, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #606: @12 = @2[28:42] */
  for (rr=w12, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #607: @7 = @8[8:12] */
  for (rr=w7, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #608: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #609: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #610: output[1][10] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+44);
  /* #611: @0 = 0 */
  w0 = 0.;
  /* #612: @14 = @2[38:41] */
  for (rr=w14, ss=w2+38; ss!=w2+41; ss+=1) *rr++ = *ss;
  /* #613: @14 = @14' */
  /* #614: @15 = @2[31:34] */
  for (rr=w15, ss=w2+31; ss!=w2+34; ss+=1) *rr++ = *ss;
  /* #615: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #616: output[1][11] = @0 */
  if (res[1]) res[1][58] = w0;
  /* #617: @0 = @2[30] */
  for (rr=(&w0), ss=w2+30; ss!=w2+31; ss+=1) *rr++ = *ss;
  /* #618: @6 = @2[41] */
  for (rr=(&w6), ss=w2+41; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #619: @0 = (@0-@6) */
  w0 -= w6;
  /* #620: output[1][12] = @0 */
  if (res[1]) res[1][59] = w0;
  /* #621: @14 = @2[31:34] */
  for (rr=w14, ss=w2+31; ss!=w2+34; ss+=1) *rr++ = *ss;
  /* #622: output[1][13] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+60);
  /* #623: @14 = @8[8:11] */
  for (rr=w14, ss=w8+8; ss!=w8+11; ss+=1) *rr++ = *ss;
  /* #624: output[1][14] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+63);
  /* #625: @11 = @2[56:70] */
  for (rr=w11, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #626: @13 = @2[42:56] */
  for (rr=w13, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #627: @7 = @8[12:16] */
  for (rr=w7, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #628: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #629: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #630: output[1][15] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+66);
  /* #631: @0 = 0 */
  w0 = 0.;
  /* #632: @14 = @2[52:55] */
  for (rr=w14, ss=w2+52; ss!=w2+55; ss+=1) *rr++ = *ss;
  /* #633: @14 = @14' */
  /* #634: @15 = @2[45:48] */
  for (rr=w15, ss=w2+45; ss!=w2+48; ss+=1) *rr++ = *ss;
  /* #635: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #636: output[1][16] = @0 */
  if (res[1]) res[1][80] = w0;
  /* #637: @0 = @2[44] */
  for (rr=(&w0), ss=w2+44; ss!=w2+45; ss+=1) *rr++ = *ss;
  /* #638: @6 = @2[55] */
  for (rr=(&w6), ss=w2+55; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #639: @0 = (@0-@6) */
  w0 -= w6;
  /* #640: output[1][17] = @0 */
  if (res[1]) res[1][81] = w0;
  /* #641: @14 = @2[45:48] */
  for (rr=w14, ss=w2+45; ss!=w2+48; ss+=1) *rr++ = *ss;
  /* #642: output[1][18] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+82);
  /* #643: @14 = @8[12:15] */
  for (rr=w14, ss=w8+12; ss!=w8+15; ss+=1) *rr++ = *ss;
  /* #644: output[1][19] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+85);
  /* #645: @11 = @2[70:84] */
  for (rr=w11, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #646: @12 = @2[56:70] */
  for (rr=w12, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #647: @7 = @8[16:20] */
  for (rr=w7, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #648: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #649: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #650: output[1][20] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+88);
  /* #651: @0 = 0 */
  w0 = 0.;
  /* #652: @14 = @2[66:69] */
  for (rr=w14, ss=w2+66; ss!=w2+69; ss+=1) *rr++ = *ss;
  /* #653: @14 = @14' */
  /* #654: @15 = @2[59:62] */
  for (rr=w15, ss=w2+59; ss!=w2+62; ss+=1) *rr++ = *ss;
  /* #655: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #656: output[1][21] = @0 */
  if (res[1]) res[1][102] = w0;
  /* #657: @0 = @2[58] */
  for (rr=(&w0), ss=w2+58; ss!=w2+59; ss+=1) *rr++ = *ss;
  /* #658: @6 = @2[69] */
  for (rr=(&w6), ss=w2+69; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #659: @0 = (@0-@6) */
  w0 -= w6;
  /* #660: output[1][22] = @0 */
  if (res[1]) res[1][103] = w0;
  /* #661: @14 = @2[59:62] */
  for (rr=w14, ss=w2+59; ss!=w2+62; ss+=1) *rr++ = *ss;
  /* #662: output[1][23] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+104);
  /* #663: @14 = @8[16:19] */
  for (rr=w14, ss=w8+16; ss!=w8+19; ss+=1) *rr++ = *ss;
  /* #664: output[1][24] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+107);
  /* #665: @11 = @2[84:98] */
  for (rr=w11, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #666: @13 = @2[70:84] */
  for (rr=w13, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #667: @7 = @8[20:24] */
  for (rr=w7, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #668: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #669: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #670: output[1][25] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+110);
  /* #671: @0 = 0 */
  w0 = 0.;
  /* #672: @14 = @2[80:83] */
  for (rr=w14, ss=w2+80; ss!=w2+83; ss+=1) *rr++ = *ss;
  /* #673: @14 = @14' */
  /* #674: @15 = @2[73:76] */
  for (rr=w15, ss=w2+73; ss!=w2+76; ss+=1) *rr++ = *ss;
  /* #675: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #676: output[1][26] = @0 */
  if (res[1]) res[1][124] = w0;
  /* #677: @0 = @2[72] */
  for (rr=(&w0), ss=w2+72; ss!=w2+73; ss+=1) *rr++ = *ss;
  /* #678: @6 = @2[83] */
  for (rr=(&w6), ss=w2+83; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #679: @0 = (@0-@6) */
  w0 -= w6;
  /* #680: output[1][27] = @0 */
  if (res[1]) res[1][125] = w0;
  /* #681: @14 = @2[73:76] */
  for (rr=w14, ss=w2+73; ss!=w2+76; ss+=1) *rr++ = *ss;
  /* #682: output[1][28] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+126);
  /* #683: @14 = @8[20:23] */
  for (rr=w14, ss=w8+20; ss!=w8+23; ss+=1) *rr++ = *ss;
  /* #684: output[1][29] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+129);
  /* #685: @11 = @2[98:112] */
  for (rr=w11, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #686: @12 = @2[84:98] */
  for (rr=w12, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #687: @7 = @8[24:28] */
  for (rr=w7, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #688: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #689: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #690: output[1][30] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+132);
  /* #691: @0 = 0 */
  w0 = 0.;
  /* #692: @14 = @2[94:97] */
  for (rr=w14, ss=w2+94; ss!=w2+97; ss+=1) *rr++ = *ss;
  /* #693: @14 = @14' */
  /* #694: @15 = @2[87:90] */
  for (rr=w15, ss=w2+87; ss!=w2+90; ss+=1) *rr++ = *ss;
  /* #695: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #696: output[1][31] = @0 */
  if (res[1]) res[1][146] = w0;
  /* #697: @0 = @2[86] */
  for (rr=(&w0), ss=w2+86; ss!=w2+87; ss+=1) *rr++ = *ss;
  /* #698: @6 = @2[97] */
  for (rr=(&w6), ss=w2+97; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #699: @0 = (@0-@6) */
  w0 -= w6;
  /* #700: output[1][32] = @0 */
  if (res[1]) res[1][147] = w0;
  /* #701: @14 = @2[87:90] */
  for (rr=w14, ss=w2+87; ss!=w2+90; ss+=1) *rr++ = *ss;
  /* #702: output[1][33] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+148);
  /* #703: @14 = @8[24:27] */
  for (rr=w14, ss=w8+24; ss!=w8+27; ss+=1) *rr++ = *ss;
  /* #704: output[1][34] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+151);
  /* #705: @11 = @2[112:126] */
  for (rr=w11, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #706: @13 = @2[98:112] */
  for (rr=w13, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #707: @7 = @8[28:32] */
  for (rr=w7, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #708: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #709: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #710: output[1][35] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+154);
  /* #711: @0 = 0 */
  w0 = 0.;
  /* #712: @14 = @2[108:111] */
  for (rr=w14, ss=w2+108; ss!=w2+111; ss+=1) *rr++ = *ss;
  /* #713: @14 = @14' */
  /* #714: @15 = @2[101:104] */
  for (rr=w15, ss=w2+101; ss!=w2+104; ss+=1) *rr++ = *ss;
  /* #715: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #716: output[1][36] = @0 */
  if (res[1]) res[1][168] = w0;
  /* #717: @0 = @2[100] */
  for (rr=(&w0), ss=w2+100; ss!=w2+101; ss+=1) *rr++ = *ss;
  /* #718: @6 = @2[111] */
  for (rr=(&w6), ss=w2+111; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #719: @0 = (@0-@6) */
  w0 -= w6;
  /* #720: output[1][37] = @0 */
  if (res[1]) res[1][169] = w0;
  /* #721: @14 = @2[101:104] */
  for (rr=w14, ss=w2+101; ss!=w2+104; ss+=1) *rr++ = *ss;
  /* #722: output[1][38] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+170);
  /* #723: @14 = @8[28:31] */
  for (rr=w14, ss=w8+28; ss!=w8+31; ss+=1) *rr++ = *ss;
  /* #724: output[1][39] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+173);
  /* #725: @11 = @2[126:140] */
  for (rr=w11, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #726: @12 = @2[112:126] */
  for (rr=w12, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #727: @7 = @8[32:36] */
  for (rr=w7, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #728: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #729: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #730: output[1][40] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+176);
  /* #731: @0 = 0 */
  w0 = 0.;
  /* #732: @14 = @2[122:125] */
  for (rr=w14, ss=w2+122; ss!=w2+125; ss+=1) *rr++ = *ss;
  /* #733: @14 = @14' */
  /* #734: @15 = @2[115:118] */
  for (rr=w15, ss=w2+115; ss!=w2+118; ss+=1) *rr++ = *ss;
  /* #735: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #736: output[1][41] = @0 */
  if (res[1]) res[1][190] = w0;
  /* #737: @0 = @2[114] */
  for (rr=(&w0), ss=w2+114; ss!=w2+115; ss+=1) *rr++ = *ss;
  /* #738: @6 = @2[125] */
  for (rr=(&w6), ss=w2+125; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #739: @0 = (@0-@6) */
  w0 -= w6;
  /* #740: output[1][42] = @0 */
  if (res[1]) res[1][191] = w0;
  /* #741: @14 = @2[115:118] */
  for (rr=w14, ss=w2+115; ss!=w2+118; ss+=1) *rr++ = *ss;
  /* #742: output[1][43] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+192);
  /* #743: @14 = @8[32:35] */
  for (rr=w14, ss=w8+32; ss!=w8+35; ss+=1) *rr++ = *ss;
  /* #744: output[1][44] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+195);
  /* #745: @11 = @2[140:154] */
  for (rr=w11, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #746: @13 = @2[126:140] */
  for (rr=w13, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #747: @7 = @8[36:40] */
  for (rr=w7, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #748: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #749: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #750: output[1][45] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+198);
  /* #751: @0 = 0 */
  w0 = 0.;
  /* #752: @14 = @2[136:139] */
  for (rr=w14, ss=w2+136; ss!=w2+139; ss+=1) *rr++ = *ss;
  /* #753: @14 = @14' */
  /* #754: @15 = @2[129:132] */
  for (rr=w15, ss=w2+129; ss!=w2+132; ss+=1) *rr++ = *ss;
  /* #755: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #756: output[1][46] = @0 */
  if (res[1]) res[1][212] = w0;
  /* #757: @0 = @2[128] */
  for (rr=(&w0), ss=w2+128; ss!=w2+129; ss+=1) *rr++ = *ss;
  /* #758: @6 = @2[139] */
  for (rr=(&w6), ss=w2+139; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #759: @0 = (@0-@6) */
  w0 -= w6;
  /* #760: output[1][47] = @0 */
  if (res[1]) res[1][213] = w0;
  /* #761: @14 = @2[129:132] */
  for (rr=w14, ss=w2+129; ss!=w2+132; ss+=1) *rr++ = *ss;
  /* #762: output[1][48] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+214);
  /* #763: @14 = @8[36:39] */
  for (rr=w14, ss=w8+36; ss!=w8+39; ss+=1) *rr++ = *ss;
  /* #764: output[1][49] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+217);
  /* #765: @11 = @2[154:168] */
  for (rr=w11, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #766: @12 = @2[140:154] */
  for (rr=w12, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #767: @7 = @8[40:44] */
  for (rr=w7, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #768: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #769: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #770: output[1][50] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+220);
  /* #771: @0 = 0 */
  w0 = 0.;
  /* #772: @14 = @2[150:153] */
  for (rr=w14, ss=w2+150; ss!=w2+153; ss+=1) *rr++ = *ss;
  /* #773: @14 = @14' */
  /* #774: @15 = @2[143:146] */
  for (rr=w15, ss=w2+143; ss!=w2+146; ss+=1) *rr++ = *ss;
  /* #775: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #776: output[1][51] = @0 */
  if (res[1]) res[1][234] = w0;
  /* #777: @0 = @2[142] */
  for (rr=(&w0), ss=w2+142; ss!=w2+143; ss+=1) *rr++ = *ss;
  /* #778: @6 = @2[153] */
  for (rr=(&w6), ss=w2+153; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #779: @0 = (@0-@6) */
  w0 -= w6;
  /* #780: output[1][52] = @0 */
  if (res[1]) res[1][235] = w0;
  /* #781: @14 = @2[143:146] */
  for (rr=w14, ss=w2+143; ss!=w2+146; ss+=1) *rr++ = *ss;
  /* #782: output[1][53] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+236);
  /* #783: @14 = @8[40:43] */
  for (rr=w14, ss=w8+40; ss!=w8+43; ss+=1) *rr++ = *ss;
  /* #784: output[1][54] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+239);
  /* #785: @11 = @2[168:182] */
  for (rr=w11, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #786: @13 = @2[154:168] */
  for (rr=w13, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #787: @7 = @8[44:48] */
  for (rr=w7, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #788: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #789: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #790: output[1][55] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+242);
  /* #791: @0 = 0 */
  w0 = 0.;
  /* #792: @14 = @2[164:167] */
  for (rr=w14, ss=w2+164; ss!=w2+167; ss+=1) *rr++ = *ss;
  /* #793: @14 = @14' */
  /* #794: @15 = @2[157:160] */
  for (rr=w15, ss=w2+157; ss!=w2+160; ss+=1) *rr++ = *ss;
  /* #795: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #796: output[1][56] = @0 */
  if (res[1]) res[1][256] = w0;
  /* #797: @0 = @2[156] */
  for (rr=(&w0), ss=w2+156; ss!=w2+157; ss+=1) *rr++ = *ss;
  /* #798: @6 = @2[167] */
  for (rr=(&w6), ss=w2+167; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #799: @0 = (@0-@6) */
  w0 -= w6;
  /* #800: output[1][57] = @0 */
  if (res[1]) res[1][257] = w0;
  /* #801: @14 = @2[157:160] */
  for (rr=w14, ss=w2+157; ss!=w2+160; ss+=1) *rr++ = *ss;
  /* #802: output[1][58] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+258);
  /* #803: @14 = @8[44:47] */
  for (rr=w14, ss=w8+44; ss!=w8+47; ss+=1) *rr++ = *ss;
  /* #804: output[1][59] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+261);
  /* #805: @11 = @2[182:196] */
  for (rr=w11, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #806: @12 = @2[168:182] */
  for (rr=w12, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #807: @7 = @8[48:52] */
  for (rr=w7, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #808: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #809: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #810: output[1][60] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+264);
  /* #811: @0 = 0 */
  w0 = 0.;
  /* #812: @14 = @2[178:181] */
  for (rr=w14, ss=w2+178; ss!=w2+181; ss+=1) *rr++ = *ss;
  /* #813: @14 = @14' */
  /* #814: @15 = @2[171:174] */
  for (rr=w15, ss=w2+171; ss!=w2+174; ss+=1) *rr++ = *ss;
  /* #815: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #816: output[1][61] = @0 */
  if (res[1]) res[1][278] = w0;
  /* #817: @0 = @2[170] */
  for (rr=(&w0), ss=w2+170; ss!=w2+171; ss+=1) *rr++ = *ss;
  /* #818: @6 = @2[181] */
  for (rr=(&w6), ss=w2+181; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #819: @0 = (@0-@6) */
  w0 -= w6;
  /* #820: output[1][62] = @0 */
  if (res[1]) res[1][279] = w0;
  /* #821: @14 = @2[171:174] */
  for (rr=w14, ss=w2+171; ss!=w2+174; ss+=1) *rr++ = *ss;
  /* #822: output[1][63] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+280);
  /* #823: @14 = @8[48:51] */
  for (rr=w14, ss=w8+48; ss!=w8+51; ss+=1) *rr++ = *ss;
  /* #824: output[1][64] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+283);
  /* #825: @11 = @2[196:210] */
  for (rr=w11, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #826: @13 = @2[182:196] */
  for (rr=w13, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #827: @7 = @8[52:56] */
  for (rr=w7, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #828: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #829: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #830: output[1][65] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+286);
  /* #831: @0 = 0 */
  w0 = 0.;
  /* #832: @14 = @2[192:195] */
  for (rr=w14, ss=w2+192; ss!=w2+195; ss+=1) *rr++ = *ss;
  /* #833: @14 = @14' */
  /* #834: @15 = @2[185:188] */
  for (rr=w15, ss=w2+185; ss!=w2+188; ss+=1) *rr++ = *ss;
  /* #835: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #836: output[1][66] = @0 */
  if (res[1]) res[1][300] = w0;
  /* #837: @0 = @2[184] */
  for (rr=(&w0), ss=w2+184; ss!=w2+185; ss+=1) *rr++ = *ss;
  /* #838: @6 = @2[195] */
  for (rr=(&w6), ss=w2+195; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #839: @0 = (@0-@6) */
  w0 -= w6;
  /* #840: output[1][67] = @0 */
  if (res[1]) res[1][301] = w0;
  /* #841: @14 = @2[185:188] */
  for (rr=w14, ss=w2+185; ss!=w2+188; ss+=1) *rr++ = *ss;
  /* #842: output[1][68] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+302);
  /* #843: @14 = @8[52:55] */
  for (rr=w14, ss=w8+52; ss!=w8+55; ss+=1) *rr++ = *ss;
  /* #844: output[1][69] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+305);
  /* #845: @11 = @2[210:224] */
  for (rr=w11, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #846: @12 = @2[196:210] */
  for (rr=w12, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #847: @7 = @8[56:60] */
  for (rr=w7, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #848: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #849: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #850: output[1][70] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+308);
  /* #851: @0 = 0 */
  w0 = 0.;
  /* #852: @14 = @2[206:209] */
  for (rr=w14, ss=w2+206; ss!=w2+209; ss+=1) *rr++ = *ss;
  /* #853: @14 = @14' */
  /* #854: @15 = @2[199:202] */
  for (rr=w15, ss=w2+199; ss!=w2+202; ss+=1) *rr++ = *ss;
  /* #855: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #856: output[1][71] = @0 */
  if (res[1]) res[1][322] = w0;
  /* #857: @0 = @2[198] */
  for (rr=(&w0), ss=w2+198; ss!=w2+199; ss+=1) *rr++ = *ss;
  /* #858: @6 = @2[209] */
  for (rr=(&w6), ss=w2+209; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #859: @0 = (@0-@6) */
  w0 -= w6;
  /* #860: output[1][72] = @0 */
  if (res[1]) res[1][323] = w0;
  /* #861: @14 = @2[199:202] */
  for (rr=w14, ss=w2+199; ss!=w2+202; ss+=1) *rr++ = *ss;
  /* #862: output[1][73] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+324);
  /* #863: @14 = @8[56:59] */
  for (rr=w14, ss=w8+56; ss!=w8+59; ss+=1) *rr++ = *ss;
  /* #864: output[1][74] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+327);
  /* #865: @11 = @2[224:238] */
  for (rr=w11, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #866: @13 = @2[210:224] */
  for (rr=w13, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #867: @7 = @8[60:64] */
  for (rr=w7, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #868: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #869: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #870: output[1][75] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+330);
  /* #871: @0 = 0 */
  w0 = 0.;
  /* #872: @14 = @2[220:223] */
  for (rr=w14, ss=w2+220; ss!=w2+223; ss+=1) *rr++ = *ss;
  /* #873: @14 = @14' */
  /* #874: @15 = @2[213:216] */
  for (rr=w15, ss=w2+213; ss!=w2+216; ss+=1) *rr++ = *ss;
  /* #875: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #876: output[1][76] = @0 */
  if (res[1]) res[1][344] = w0;
  /* #877: @0 = @2[212] */
  for (rr=(&w0), ss=w2+212; ss!=w2+213; ss+=1) *rr++ = *ss;
  /* #878: @6 = @2[223] */
  for (rr=(&w6), ss=w2+223; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #879: @0 = (@0-@6) */
  w0 -= w6;
  /* #880: output[1][77] = @0 */
  if (res[1]) res[1][345] = w0;
  /* #881: @14 = @2[213:216] */
  for (rr=w14, ss=w2+213; ss!=w2+216; ss+=1) *rr++ = *ss;
  /* #882: output[1][78] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+346);
  /* #883: @14 = @8[60:63] */
  for (rr=w14, ss=w8+60; ss!=w8+63; ss+=1) *rr++ = *ss;
  /* #884: output[1][79] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+349);
  /* #885: @11 = @2[238:252] */
  for (rr=w11, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #886: @12 = @2[224:238] */
  for (rr=w12, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #887: @7 = @8[64:68] */
  for (rr=w7, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #888: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #889: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #890: output[1][80] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+352);
  /* #891: @0 = 0 */
  w0 = 0.;
  /* #892: @14 = @2[234:237] */
  for (rr=w14, ss=w2+234; ss!=w2+237; ss+=1) *rr++ = *ss;
  /* #893: @14 = @14' */
  /* #894: @15 = @2[227:230] */
  for (rr=w15, ss=w2+227; ss!=w2+230; ss+=1) *rr++ = *ss;
  /* #895: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #896: output[1][81] = @0 */
  if (res[1]) res[1][366] = w0;
  /* #897: @0 = @2[226] */
  for (rr=(&w0), ss=w2+226; ss!=w2+227; ss+=1) *rr++ = *ss;
  /* #898: @6 = @2[237] */
  for (rr=(&w6), ss=w2+237; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #899: @0 = (@0-@6) */
  w0 -= w6;
  /* #900: output[1][82] = @0 */
  if (res[1]) res[1][367] = w0;
  /* #901: @14 = @2[227:230] */
  for (rr=w14, ss=w2+227; ss!=w2+230; ss+=1) *rr++ = *ss;
  /* #902: output[1][83] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+368);
  /* #903: @14 = @8[64:67] */
  for (rr=w14, ss=w8+64; ss!=w8+67; ss+=1) *rr++ = *ss;
  /* #904: output[1][84] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+371);
  /* #905: @11 = @2[252:266] */
  for (rr=w11, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #906: @13 = @2[238:252] */
  for (rr=w13, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #907: @7 = @8[68:72] */
  for (rr=w7, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #908: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #909: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #910: output[1][85] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+374);
  /* #911: @0 = 0 */
  w0 = 0.;
  /* #912: @14 = @2[248:251] */
  for (rr=w14, ss=w2+248; ss!=w2+251; ss+=1) *rr++ = *ss;
  /* #913: @14 = @14' */
  /* #914: @15 = @2[241:244] */
  for (rr=w15, ss=w2+241; ss!=w2+244; ss+=1) *rr++ = *ss;
  /* #915: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #916: output[1][86] = @0 */
  if (res[1]) res[1][388] = w0;
  /* #917: @0 = @2[240] */
  for (rr=(&w0), ss=w2+240; ss!=w2+241; ss+=1) *rr++ = *ss;
  /* #918: @6 = @2[251] */
  for (rr=(&w6), ss=w2+251; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #919: @0 = (@0-@6) */
  w0 -= w6;
  /* #920: output[1][87] = @0 */
  if (res[1]) res[1][389] = w0;
  /* #921: @14 = @2[241:244] */
  for (rr=w14, ss=w2+241; ss!=w2+244; ss+=1) *rr++ = *ss;
  /* #922: output[1][88] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+390);
  /* #923: @14 = @8[68:71] */
  for (rr=w14, ss=w8+68; ss!=w8+71; ss+=1) *rr++ = *ss;
  /* #924: output[1][89] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+393);
  /* #925: @11 = @2[266:280] */
  for (rr=w11, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #926: @12 = @2[252:266] */
  for (rr=w12, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #927: @7 = @8[72:76] */
  for (rr=w7, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #928: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #929: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #930: output[1][90] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+396);
  /* #931: @0 = 0 */
  w0 = 0.;
  /* #932: @14 = @2[262:265] */
  for (rr=w14, ss=w2+262; ss!=w2+265; ss+=1) *rr++ = *ss;
  /* #933: @14 = @14' */
  /* #934: @15 = @2[255:258] */
  for (rr=w15, ss=w2+255; ss!=w2+258; ss+=1) *rr++ = *ss;
  /* #935: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #936: output[1][91] = @0 */
  if (res[1]) res[1][410] = w0;
  /* #937: @0 = @2[254] */
  for (rr=(&w0), ss=w2+254; ss!=w2+255; ss+=1) *rr++ = *ss;
  /* #938: @6 = @2[265] */
  for (rr=(&w6), ss=w2+265; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #939: @0 = (@0-@6) */
  w0 -= w6;
  /* #940: output[1][92] = @0 */
  if (res[1]) res[1][411] = w0;
  /* #941: @14 = @2[255:258] */
  for (rr=w14, ss=w2+255; ss!=w2+258; ss+=1) *rr++ = *ss;
  /* #942: output[1][93] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+412);
  /* #943: @14 = @8[72:75] */
  for (rr=w14, ss=w8+72; ss!=w8+75; ss+=1) *rr++ = *ss;
  /* #944: output[1][94] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+415);
  /* #945: @11 = @2[280:294] */
  for (rr=w11, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #946: @13 = @2[266:280] */
  for (rr=w13, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #947: @7 = @8[76:80] */
  for (rr=w7, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #948: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #949: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #950: output[1][95] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+418);
  /* #951: @0 = 0 */
  w0 = 0.;
  /* #952: @14 = @2[276:279] */
  for (rr=w14, ss=w2+276; ss!=w2+279; ss+=1) *rr++ = *ss;
  /* #953: @14 = @14' */
  /* #954: @15 = @2[269:272] */
  for (rr=w15, ss=w2+269; ss!=w2+272; ss+=1) *rr++ = *ss;
  /* #955: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #956: output[1][96] = @0 */
  if (res[1]) res[1][432] = w0;
  /* #957: @0 = @2[268] */
  for (rr=(&w0), ss=w2+268; ss!=w2+269; ss+=1) *rr++ = *ss;
  /* #958: @6 = @2[279] */
  for (rr=(&w6), ss=w2+279; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #959: @0 = (@0-@6) */
  w0 -= w6;
  /* #960: output[1][97] = @0 */
  if (res[1]) res[1][433] = w0;
  /* #961: @14 = @2[269:272] */
  for (rr=w14, ss=w2+269; ss!=w2+272; ss+=1) *rr++ = *ss;
  /* #962: output[1][98] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+434);
  /* #963: @14 = @8[76:79] */
  for (rr=w14, ss=w8+76; ss!=w8+79; ss+=1) *rr++ = *ss;
  /* #964: output[1][99] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+437);
  /* #965: @11 = @2[294:308] */
  for (rr=w11, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #966: @12 = @2[280:294] */
  for (rr=w12, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #967: @7 = @8[80:84] */
  for (rr=w7, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #968: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #969: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #970: output[1][100] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+440);
  /* #971: @0 = 0 */
  w0 = 0.;
  /* #972: @14 = @2[290:293] */
  for (rr=w14, ss=w2+290; ss!=w2+293; ss+=1) *rr++ = *ss;
  /* #973: @14 = @14' */
  /* #974: @15 = @2[283:286] */
  for (rr=w15, ss=w2+283; ss!=w2+286; ss+=1) *rr++ = *ss;
  /* #975: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #976: output[1][101] = @0 */
  if (res[1]) res[1][454] = w0;
  /* #977: @0 = @2[282] */
  for (rr=(&w0), ss=w2+282; ss!=w2+283; ss+=1) *rr++ = *ss;
  /* #978: @6 = @2[293] */
  for (rr=(&w6), ss=w2+293; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #979: @0 = (@0-@6) */
  w0 -= w6;
  /* #980: output[1][102] = @0 */
  if (res[1]) res[1][455] = w0;
  /* #981: @14 = @2[283:286] */
  for (rr=w14, ss=w2+283; ss!=w2+286; ss+=1) *rr++ = *ss;
  /* #982: output[1][103] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+456);
  /* #983: @14 = @8[80:83] */
  for (rr=w14, ss=w8+80; ss!=w8+83; ss+=1) *rr++ = *ss;
  /* #984: output[1][104] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+459);
  /* #985: @11 = @2[308:322] */
  for (rr=w11, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #986: @13 = @2[294:308] */
  for (rr=w13, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #987: @7 = @8[84:88] */
  for (rr=w7, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #988: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #989: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #990: output[1][105] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+462);
  /* #991: @0 = 0 */
  w0 = 0.;
  /* #992: @14 = @2[304:307] */
  for (rr=w14, ss=w2+304; ss!=w2+307; ss+=1) *rr++ = *ss;
  /* #993: @14 = @14' */
  /* #994: @15 = @2[297:300] */
  for (rr=w15, ss=w2+297; ss!=w2+300; ss+=1) *rr++ = *ss;
  /* #995: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #996: output[1][106] = @0 */
  if (res[1]) res[1][476] = w0;
  /* #997: @0 = @2[296] */
  for (rr=(&w0), ss=w2+296; ss!=w2+297; ss+=1) *rr++ = *ss;
  /* #998: @6 = @2[307] */
  for (rr=(&w6), ss=w2+307; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #999: @0 = (@0-@6) */
  w0 -= w6;
  /* #1000: output[1][107] = @0 */
  if (res[1]) res[1][477] = w0;
  /* #1001: @14 = @2[297:300] */
  for (rr=w14, ss=w2+297; ss!=w2+300; ss+=1) *rr++ = *ss;
  /* #1002: output[1][108] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+478);
  /* #1003: @14 = @8[84:87] */
  for (rr=w14, ss=w8+84; ss!=w8+87; ss+=1) *rr++ = *ss;
  /* #1004: output[1][109] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+481);
  /* #1005: @11 = @2[322:336] */
  for (rr=w11, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1006: @12 = @2[308:322] */
  for (rr=w12, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1007: @7 = @8[88:92] */
  for (rr=w7, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #1008: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1009: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #1010: output[1][110] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+484);
  /* #1011: @0 = 0 */
  w0 = 0.;
  /* #1012: @14 = @2[318:321] */
  for (rr=w14, ss=w2+318; ss!=w2+321; ss+=1) *rr++ = *ss;
  /* #1013: @14 = @14' */
  /* #1014: @15 = @2[311:314] */
  for (rr=w15, ss=w2+311; ss!=w2+314; ss+=1) *rr++ = *ss;
  /* #1015: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1016: output[1][111] = @0 */
  if (res[1]) res[1][498] = w0;
  /* #1017: @0 = @2[310] */
  for (rr=(&w0), ss=w2+310; ss!=w2+311; ss+=1) *rr++ = *ss;
  /* #1018: @6 = @2[321] */
  for (rr=(&w6), ss=w2+321; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1019: @0 = (@0-@6) */
  w0 -= w6;
  /* #1020: output[1][112] = @0 */
  if (res[1]) res[1][499] = w0;
  /* #1021: @14 = @2[311:314] */
  for (rr=w14, ss=w2+311; ss!=w2+314; ss+=1) *rr++ = *ss;
  /* #1022: output[1][113] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+500);
  /* #1023: @14 = @8[88:91] */
  for (rr=w14, ss=w8+88; ss!=w8+91; ss+=1) *rr++ = *ss;
  /* #1024: output[1][114] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+503);
  /* #1025: @11 = @2[336:350] */
  for (rr=w11, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1026: @13 = @2[322:336] */
  for (rr=w13, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1027: @7 = @8[92:96] */
  for (rr=w7, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #1028: @12 = f_disc(@13, @7) */
  arg1[0]=w13;
  arg1[1]=w7;
  res1[0]=w12;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1029: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<14; ++i) (*rr++) -= (*cs++);
  /* #1030: output[1][115] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+506);
  /* #1031: @0 = 0 */
  w0 = 0.;
  /* #1032: @14 = @2[332:335] */
  for (rr=w14, ss=w2+332; ss!=w2+335; ss+=1) *rr++ = *ss;
  /* #1033: @14 = @14' */
  /* #1034: @15 = @2[325:328] */
  for (rr=w15, ss=w2+325; ss!=w2+328; ss+=1) *rr++ = *ss;
  /* #1035: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1036: output[1][116] = @0 */
  if (res[1]) res[1][520] = w0;
  /* #1037: @0 = @2[324] */
  for (rr=(&w0), ss=w2+324; ss!=w2+325; ss+=1) *rr++ = *ss;
  /* #1038: @6 = @2[335] */
  for (rr=(&w6), ss=w2+335; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1039: @0 = (@0-@6) */
  w0 -= w6;
  /* #1040: output[1][117] = @0 */
  if (res[1]) res[1][521] = w0;
  /* #1041: @14 = @2[325:328] */
  for (rr=w14, ss=w2+325; ss!=w2+328; ss+=1) *rr++ = *ss;
  /* #1042: output[1][118] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+522);
  /* #1043: @14 = @8[92:95] */
  for (rr=w14, ss=w8+92; ss!=w8+95; ss+=1) *rr++ = *ss;
  /* #1044: output[1][119] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+525);
  /* #1045: @11 = @2[350:364] */
  for (rr=w11, ss=w2+350; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #1046: @12 = @2[336:350] */
  for (rr=w12, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1047: @7 = @8[96:100] */
  for (rr=w7, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #1048: @13 = f_disc(@12, @7) */
  arg1[0]=w12;
  arg1[1]=w7;
  res1[0]=w13;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1049: @11 = (@11-@13) */
  for (i=0, rr=w11, cs=w13; i<14; ++i) (*rr++) -= (*cs++);
  /* #1050: output[1][120] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+528);
  /* #1051: @0 = 0 */
  w0 = 0.;
  /* #1052: @14 = @2[346:349] */
  for (rr=w14, ss=w2+346; ss!=w2+349; ss+=1) *rr++ = *ss;
  /* #1053: @14 = @14' */
  /* #1054: @15 = @2[339:342] */
  for (rr=w15, ss=w2+339; ss!=w2+342; ss+=1) *rr++ = *ss;
  /* #1055: @0 = mac(@14,@15,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1056: output[1][121] = @0 */
  if (res[1]) res[1][542] = w0;
  /* #1057: @0 = @2[338] */
  for (rr=(&w0), ss=w2+338; ss!=w2+339; ss+=1) *rr++ = *ss;
  /* #1058: @6 = @2[349] */
  for (rr=(&w6), ss=w2+349; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1059: @0 = (@0-@6) */
  w0 -= w6;
  /* #1060: output[1][122] = @0 */
  if (res[1]) res[1][543] = w0;
  /* #1061: @14 = @2[339:342] */
  for (rr=w14, ss=w2+339; ss!=w2+342; ss+=1) *rr++ = *ss;
  /* #1062: output[1][123] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+544);
  /* #1063: @14 = @8[96:99] */
  for (rr=w14, ss=w8+96; ss!=w8+99; ss+=1) *rr++ = *ss;
  /* #1064: output[1][124] = @14 */
  if (res[1]) casadi_copy(w14, 3, res[1]+547);
  /* #1065: @11 = @2[:14] */
  for (rr=w11, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #1066: output[1][125] = @11 */
  if (res[1]) casadi_copy(w11, 14, res[1]+550);
  return 0;
}

/* fwd7_dae:(t[0],x[14],z[0],p[4],u[0],out_ode[14x1,0nz],out_alg[0],out_quad[0],fwd_t[0x7],fwd_x[14x7],fwd_z[0x7],fwd_p[4x7],fwd_u[0x7])->(fwd_ode[14x7],fwd_alg[0x7],fwd_quad[0x7]) */
static int casadi_f11(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real *rr;
  const casadi_real *cs;
  casadi_real *w0=w+0, *w1=w+14, *w2=w+17, *w3=w+20, *w4=w+24, w5, *w8=w+28, *w9=w+38, *w10=w+48, *w11=w+58, *w12=w+68, *w13=w+78, *w14=w+88, *w15=w+98, *w16=w+168;
  /* #0: @0 = input[9][0] */
  casadi_copy(arg[9], 14, w0);
  /* #1: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #2: @3 = input[11][0] */
  casadi_copy(arg[11], 4, w3);
  /* #3: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #4: @6 = zeros(3x1,0nz) */
  /* #5: @7 = 00 */
  /* #6: @8 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w8;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #7: @0 = input[9][1] */
  casadi_copy(arg[9] ? arg[9]+14 : 0, 14, w0);
  /* #8: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #9: @3 = input[11][1] */
  casadi_copy(arg[11] ? arg[11]+4 : 0, 4, w3);
  /* #10: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #11: @6 = zeros(3x1,0nz) */
  /* #12: @7 = 00 */
  /* #13: @9 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w9;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #14: @0 = input[9][2] */
  casadi_copy(arg[9] ? arg[9]+28 : 0, 14, w0);
  /* #15: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #16: @3 = input[11][2] */
  casadi_copy(arg[11] ? arg[11]+8 : 0, 4, w3);
  /* #17: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #18: @6 = zeros(3x1,0nz) */
  /* #19: @7 = 00 */
  /* #20: @10 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w10;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #21: @0 = input[9][3] */
  casadi_copy(arg[9] ? arg[9]+42 : 0, 14, w0);
  /* #22: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #23: @3 = input[11][3] */
  casadi_copy(arg[11] ? arg[11]+12 : 0, 4, w3);
  /* #24: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #25: @6 = zeros(3x1,0nz) */
  /* #26: @7 = 00 */
  /* #27: @11 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w11;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #28: @0 = input[9][4] */
  casadi_copy(arg[9] ? arg[9]+56 : 0, 14, w0);
  /* #29: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #30: @3 = input[11][4] */
  casadi_copy(arg[11] ? arg[11]+16 : 0, 4, w3);
  /* #31: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #32: @6 = zeros(3x1,0nz) */
  /* #33: @7 = 00 */
  /* #34: @12 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w12;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #35: @0 = input[9][5] */
  casadi_copy(arg[9] ? arg[9]+70 : 0, 14, w0);
  /* #36: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #37: @3 = input[11][5] */
  casadi_copy(arg[11] ? arg[11]+20 : 0, 4, w3);
  /* #38: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #39: @6 = zeros(3x1,0nz) */
  /* #40: @7 = 00 */
  /* #41: @13 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w13;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #42: @0 = input[9][6] */
  casadi_copy(arg[9] ? arg[9]+84 : 0, 14, w0);
  /* #43: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #44: @3 = input[11][6] */
  casadi_copy(arg[11] ? arg[11]+24 : 0, 4, w3);
  /* #45: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #46: @6 = zeros(3x1,0nz) */
  /* #47: @7 = 00 */
  /* #48: @14 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w14;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #49: @15 = horzcat(@8, @9, @10, @11, @12, @13, @14) */
  rr=w15;
  for (i=0, cs=w8; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w9; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w13; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<10; ++i) *rr++ = *cs++;
  /* #50: @16 = dense(@15) */
  casadi_densify(w15, casadi_s0, w16, 0);
  /* #51: output[0][0] = @16 */
  casadi_copy(w16, 98, res[0]);
  return 0;
}

/* fwd7_step:(t[0],h,x0[14],v0[0],p[4],u[0],out_xf[14x1,0nz],out_vf[0],out_qf[0],fwd_t[0x7],fwd_h[1x7],fwd_x0[14x7],fwd_v0[0x7],fwd_p[4x7],fwd_u[0x7])->(fwd_xf[14x7],fwd_vf[0x7],fwd_qf[0x7]) */
static int casadi_f10(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+3, *rr;
  const casadi_real **arg1=arg+15, *cr, *cs;
  casadi_real *w0=w+266, *w2=w+280, *w4=w+294, *w6=w+298, w8, w9, *w10=w+314, *w12=w+328, *w13=w+342, *w14=w+356, *w16=w+370, *w17=w+384, *w20=w+398, w21, w22, w23, *w28=w+415, *w29=w+429, *w30=w+443, *w31=w+457, *w32=w+471, *w33=w+485, *w34=w+499, *w36=w+597, *w37=w+601, *w38=w+605, *w39=w+609, *w40=w+613, *w41=w+617, *w42=w+621, *w43=w+625, *w45=w+653, *w46=w+751, *w47=w+765, *w48=w+779, *w49=w+793, *w50=w+807, *w51=w+821, w52, w53, *w54=w+837, *w55=w+851, w56, w57, *w58=w+867, w59, w60, *w61=w+883, w62, w63, *w64=w+899, w65, w66, *w67=w+915, w68, w69, *w70=w+931, w71, *w72=w+946, *w73=w+960, *w74=w+974, *w75=w+988, *w76=w+1002, *w77=w+1016, *w78=w+1030, *w79=w+1044;
  /* #0: @0 = input[11][0] */
  casadi_copy(arg[11], 14, w0);
  /* #1: @1 = 0x1 */
  /* #2: @2 = input[2][0] */
  casadi_copy(arg[2], 14, w2);
  /* #3: @3 = 0x1 */
  /* #4: @4 = input[4][0] */
  casadi_copy(arg[4], 4, w4);
  /* #5: @5 = 0x1 */
  /* #6: {@6, NULL, NULL} = dae(@1, @2, @3, @4, @5) */
  arg1[0]=0;
  arg1[1]=w2;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w6;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #7: @7 = 0x1 */
  /* #8: @8 = input[1][0] */
  w8 = arg[1] ? arg[1][0] : 0;
  /* #9: @9 = 2 */
  w9 = 2.;
  /* #10: @9 = (@8/@9) */
  w9  = (w8/w9);
  /* #11: @10 = (@9*@6) */
  for (i=0, rr=w10, cs=w6; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #12: @10 = (@2+@10) */
  for (i=0, rr=w10, cr=w2, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #13: @11 = 0x1 */
  /* #14: {@12, NULL, NULL} = dae(@7, @10, @11, @4, @5) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w12;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #15: @13 = (2.*@12) */
  for (i=0, rr=w13, cs=w12; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #16: @13 = (@6+@13) */
  for (i=0, rr=w13, cr=w6, cs=w13; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #17: @14 = (@9*@12) */
  for (i=0, rr=w14, cs=w12; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #18: @14 = (@2+@14) */
  for (i=0, rr=w14, cr=w2, cs=w14; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #19: @15 = 0x1 */
  /* #20: {@16, NULL, NULL} = dae(@7, @14, @15, @4, @5) */
  arg1[0]=0;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w16;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #21: @17 = (2.*@16) */
  for (i=0, rr=w17, cs=w16; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #22: @13 = (@13+@17) */
  for (i=0, rr=w13, cs=w17; i<14; ++i) (*rr++) += (*cs++);
  /* #23: @18 = 0x1 */
  /* #24: @17 = (@8*@16) */
  for (i=0, rr=w17, cs=w16; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #25: @17 = (@2+@17) */
  for (i=0, rr=w17, cr=w2, cs=w17; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #26: @19 = 0x1 */
  /* #27: {@20, NULL, NULL} = dae(@18, @17, @19, @4, @5) */
  arg1[0]=0;
  arg1[1]=w17;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w20;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #28: @13 = (@13+@20) */
  for (i=0, rr=w13, cs=w20; i<14; ++i) (*rr++) += (*cs++);
  /* #29: @21 = 0.166667 */
  w21 = 1.6666666666666666e-01;
  /* #30: @22 = input[10][0] */
  w22 = arg[10] ? arg[10][0] : 0;
  /* #31: @23 = (@21*@22) */
  w23  = (w21*w22);
  /* #32: @20 = (@13*@23) */
  for (i=0, rr=w20, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w23);
  /* #33: @23 = 6 */
  w23 = 6.;
  /* #34: @23 = (@8/@23) */
  w23  = (w8/w23);
  /* #35: @24 = zeros(14x1,0nz) */
  /* #36: @25 = 0x1 */
  /* #37: @26 = 0x1 */
  /* #38: @27 = 0x7 */
  /* #39: @28 = input[11][1] */
  casadi_copy(arg[11] ? arg[11]+14 : 0, 14, w28);
  /* #40: @29 = input[11][2] */
  casadi_copy(arg[11] ? arg[11]+28 : 0, 14, w29);
  /* #41: @30 = input[11][3] */
  casadi_copy(arg[11] ? arg[11]+42 : 0, 14, w30);
  /* #42: @31 = input[11][4] */
  casadi_copy(arg[11] ? arg[11]+56 : 0, 14, w31);
  /* #43: @32 = input[11][5] */
  casadi_copy(arg[11] ? arg[11]+70 : 0, 14, w32);
  /* #44: @33 = input[11][6] */
  casadi_copy(arg[11] ? arg[11]+84 : 0, 14, w33);
  /* #45: @34 = horzcat(@0, @28, @29, @30, @31, @32, @33) */
  rr=w34;
  for (i=0, cs=w0; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w28; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w29; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w33; i<14; ++i) *rr++ = *cs++;
  /* #46: @35 = 0x7 */
  /* #47: @36 = input[13][0] */
  casadi_copy(arg[13], 4, w36);
  /* #48: @37 = input[13][1] */
  casadi_copy(arg[13] ? arg[13]+4 : 0, 4, w37);
  /* #49: @38 = input[13][2] */
  casadi_copy(arg[13] ? arg[13]+8 : 0, 4, w38);
  /* #50: @39 = input[13][3] */
  casadi_copy(arg[13] ? arg[13]+12 : 0, 4, w39);
  /* #51: @40 = input[13][4] */
  casadi_copy(arg[13] ? arg[13]+16 : 0, 4, w40);
  /* #52: @41 = input[13][5] */
  casadi_copy(arg[13] ? arg[13]+20 : 0, 4, w41);
  /* #53: @42 = input[13][6] */
  casadi_copy(arg[13] ? arg[13]+24 : 0, 4, w42);
  /* #54: @43 = horzcat(@36, @37, @38, @39, @40, @41, @42) */
  rr=w43;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w42; i<4; ++i) *rr++ = *cs++;
  /* #55: @44 = 0x7 */
  /* #56: {@45, NULL, NULL} = fwd7_dae(@1, @2, @3, @4, @5, @24, @25, @26, @27, @34, @35, @43, @44) */
  arg1[0]=0;
  arg1[1]=w2;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w34;
  arg1[10]=0;
  arg1[11]=w43;
  arg1[12]=0;
  res1[0]=w45;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f11(arg1, res1, iw, w, 0)) return 1;
  /* #57: {@2, @46, @47, @48, @49, @50, @51} = horzsplit(@45) */
  casadi_copy(w45, 14, w2);
  casadi_copy(w45+14, 14, w46);
  casadi_copy(w45+28, 14, w47);
  casadi_copy(w45+42, 14, w48);
  casadi_copy(w45+56, 14, w49);
  casadi_copy(w45+70, 14, w50);
  casadi_copy(w45+84, 14, w51);
  /* #58: @1 = zeros(14x1,0nz) */
  /* #59: @3 = 0x1 */
  /* #60: @24 = 0x1 */
  /* #61: @25 = 0x7 */
  /* #62: @52 = 0.5 */
  w52 = 5.0000000000000000e-01;
  /* #63: @53 = (@52*@22) */
  w53  = (w52*w22);
  /* #64: @54 = (@6*@53) */
  for (i=0, rr=w54, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w53);
  /* #65: @55 = (@9*@2) */
  for (i=0, rr=w55, cs=w2; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #66: @54 = (@54+@55) */
  for (i=0, rr=w54, cs=w55; i<14; ++i) (*rr++) += (*cs++);
  /* #67: @54 = (@0+@54) */
  for (i=0, rr=w54, cr=w0, cs=w54; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #68: @56 = input[10][1] */
  w56 = arg[10] ? arg[10][1] : 0;
  /* #69: @57 = (@52*@56) */
  w57  = (w52*w56);
  /* #70: @55 = (@6*@57) */
  for (i=0, rr=w55, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w57);
  /* #71: @58 = (@9*@46) */
  for (i=0, rr=w58, cs=w46; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #72: @55 = (@55+@58) */
  for (i=0, rr=w55, cs=w58; i<14; ++i) (*rr++) += (*cs++);
  /* #73: @55 = (@28+@55) */
  for (i=0, rr=w55, cr=w28, cs=w55; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #74: @59 = input[10][2] */
  w59 = arg[10] ? arg[10][2] : 0;
  /* #75: @60 = (@52*@59) */
  w60  = (w52*w59);
  /* #76: @58 = (@6*@60) */
  for (i=0, rr=w58, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w60);
  /* #77: @61 = (@9*@47) */
  for (i=0, rr=w61, cs=w47; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #78: @58 = (@58+@61) */
  for (i=0, rr=w58, cs=w61; i<14; ++i) (*rr++) += (*cs++);
  /* #79: @58 = (@29+@58) */
  for (i=0, rr=w58, cr=w29, cs=w58; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #80: @62 = input[10][3] */
  w62 = arg[10] ? arg[10][3] : 0;
  /* #81: @63 = (@52*@62) */
  w63  = (w52*w62);
  /* #82: @61 = (@6*@63) */
  for (i=0, rr=w61, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w63);
  /* #83: @64 = (@9*@48) */
  for (i=0, rr=w64, cs=w48; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #84: @61 = (@61+@64) */
  for (i=0, rr=w61, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #85: @61 = (@30+@61) */
  for (i=0, rr=w61, cr=w30, cs=w61; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #86: @65 = input[10][4] */
  w65 = arg[10] ? arg[10][4] : 0;
  /* #87: @66 = (@52*@65) */
  w66  = (w52*w65);
  /* #88: @64 = (@6*@66) */
  for (i=0, rr=w64, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w66);
  /* #89: @67 = (@9*@49) */
  for (i=0, rr=w67, cs=w49; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #90: @64 = (@64+@67) */
  for (i=0, rr=w64, cs=w67; i<14; ++i) (*rr++) += (*cs++);
  /* #91: @64 = (@31+@64) */
  for (i=0, rr=w64, cr=w31, cs=w64; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #92: @68 = input[10][5] */
  w68 = arg[10] ? arg[10][5] : 0;
  /* #93: @69 = (@52*@68) */
  w69  = (w52*w68);
  /* #94: @67 = (@6*@69) */
  for (i=0, rr=w67, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w69);
  /* #95: @70 = (@9*@50) */
  for (i=0, rr=w70, cs=w50; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #96: @67 = (@67+@70) */
  for (i=0, rr=w67, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #97: @67 = (@32+@67) */
  for (i=0, rr=w67, cr=w32, cs=w67; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #98: @71 = input[10][6] */
  w71 = arg[10] ? arg[10][6] : 0;
  /* #99: @52 = (@52*@71) */
  w52 *= w71;
  /* #100: @6 = (@6*@52) */
  for (i=0, rr=w6; i<14; ++i) (*rr++) *= w52;
  /* #101: @70 = (@9*@51) */
  for (i=0, rr=w70, cs=w51; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #102: @6 = (@6+@70) */
  for (i=0, rr=w6, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #103: @6 = (@33+@6) */
  for (i=0, rr=w6, cr=w33, cs=w6; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #104: @45 = horzcat(@54, @55, @58, @61, @64, @67, @6) */
  rr=w45;
  for (i=0, cs=w54; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w61; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  /* #105: @26 = 0x7 */
  /* #106: @43 = horzcat(@36, @37, @38, @39, @40, @41, @42) */
  rr=w43;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w42; i<4; ++i) *rr++ = *cs++;
  /* #107: @27 = 0x7 */
  /* #108: {@34, NULL, NULL} = fwd7_dae(@7, @10, @11, @4, @5, @1, @3, @24, @25, @45, @26, @43, @27) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w45;
  arg1[10]=0;
  arg1[11]=w43;
  arg1[12]=0;
  res1[0]=w34;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f11(arg1, res1, iw, w, 0)) return 1;
  /* #109: {@10, @54, @55, @58, @61, @64, @67} = horzsplit(@34) */
  casadi_copy(w34, 14, w10);
  casadi_copy(w34+14, 14, w54);
  casadi_copy(w34+28, 14, w55);
  casadi_copy(w34+42, 14, w58);
  casadi_copy(w34+56, 14, w61);
  casadi_copy(w34+70, 14, w64);
  casadi_copy(w34+84, 14, w67);
  /* #110: @6 = (2.*@10) */
  for (i=0, rr=w6, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #111: @2 = (@2+@6) */
  for (i=0, rr=w2, cs=w6; i<14; ++i) (*rr++) += (*cs++);
  /* #112: @11 = zeros(14x1,0nz) */
  /* #113: @1 = 0x1 */
  /* #114: @3 = 0x1 */
  /* #115: @24 = 0x7 */
  /* #116: @6 = (@12*@53) */
  for (i=0, rr=w6, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w53);
  /* #117: @10 = (@9*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #118: @6 = (@6+@10) */
  for (i=0, rr=w6, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #119: @6 = (@0+@6) */
  for (i=0, rr=w6, cr=w0, cs=w6; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #120: @10 = (@12*@57) */
  for (i=0, rr=w10, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w57);
  /* #121: @70 = (@9*@54) */
  for (i=0, rr=w70, cs=w54; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #122: @10 = (@10+@70) */
  for (i=0, rr=w10, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #123: @10 = (@28+@10) */
  for (i=0, rr=w10, cr=w28, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #124: @70 = (@12*@60) */
  for (i=0, rr=w70, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w60);
  /* #125: @72 = (@9*@55) */
  for (i=0, rr=w72, cs=w55; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #126: @70 = (@70+@72) */
  for (i=0, rr=w70, cs=w72; i<14; ++i) (*rr++) += (*cs++);
  /* #127: @70 = (@29+@70) */
  for (i=0, rr=w70, cr=w29, cs=w70; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #128: @72 = (@12*@63) */
  for (i=0, rr=w72, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w63);
  /* #129: @73 = (@9*@58) */
  for (i=0, rr=w73, cs=w58; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #130: @72 = (@72+@73) */
  for (i=0, rr=w72, cs=w73; i<14; ++i) (*rr++) += (*cs++);
  /* #131: @72 = (@30+@72) */
  for (i=0, rr=w72, cr=w30, cs=w72; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #132: @73 = (@12*@66) */
  for (i=0, rr=w73, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w66);
  /* #133: @74 = (@9*@61) */
  for (i=0, rr=w74, cs=w61; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #134: @73 = (@73+@74) */
  for (i=0, rr=w73, cs=w74; i<14; ++i) (*rr++) += (*cs++);
  /* #135: @73 = (@31+@73) */
  for (i=0, rr=w73, cr=w31, cs=w73; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #136: @74 = (@12*@69) */
  for (i=0, rr=w74, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w69);
  /* #137: @75 = (@9*@64) */
  for (i=0, rr=w75, cs=w64; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #138: @74 = (@74+@75) */
  for (i=0, rr=w74, cs=w75; i<14; ++i) (*rr++) += (*cs++);
  /* #139: @74 = (@32+@74) */
  for (i=0, rr=w74, cr=w32, cs=w74; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #140: @12 = (@12*@52) */
  for (i=0, rr=w12; i<14; ++i) (*rr++) *= w52;
  /* #141: @75 = (@9*@67) */
  for (i=0, rr=w75, cs=w67; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #142: @12 = (@12+@75) */
  for (i=0, rr=w12, cs=w75; i<14; ++i) (*rr++) += (*cs++);
  /* #143: @12 = (@33+@12) */
  for (i=0, rr=w12, cr=w33, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #144: @34 = horzcat(@6, @10, @70, @72, @73, @74, @12) */
  rr=w34;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<14; ++i) *rr++ = *cs++;
  /* #145: @25 = 0x7 */
  /* #146: @43 = horzcat(@36, @37, @38, @39, @40, @41, @42) */
  rr=w43;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w42; i<4; ++i) *rr++ = *cs++;
  /* #147: @26 = 0x7 */
  /* #148: {@45, NULL, NULL} = fwd7_dae(@7, @14, @15, @4, @5, @11, @1, @3, @24, @34, @25, @43, @26) */
  arg1[0]=0;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w34;
  arg1[10]=0;
  arg1[11]=w43;
  arg1[12]=0;
  res1[0]=w45;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f11(arg1, res1, iw, w, 0)) return 1;
  /* #149: {@14, @6, @10, @70, @72, @73, @74} = horzsplit(@45) */
  casadi_copy(w45, 14, w14);
  casadi_copy(w45+14, 14, w6);
  casadi_copy(w45+28, 14, w10);
  casadi_copy(w45+42, 14, w70);
  casadi_copy(w45+56, 14, w72);
  casadi_copy(w45+70, 14, w73);
  casadi_copy(w45+84, 14, w74);
  /* #150: @12 = (2.*@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #151: @2 = (@2+@12) */
  for (i=0, rr=w2, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #152: @7 = zeros(14x1,0nz) */
  /* #153: @15 = 0x1 */
  /* #154: @11 = 0x1 */
  /* #155: @1 = 0x7 */
  /* #156: @12 = (@16*@22) */
  for (i=0, rr=w12, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w22);
  /* #157: @14 = (@8*@14) */
  for (i=0, rr=w14, cs=w14; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #158: @12 = (@12+@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #159: @12 = (@0+@12) */
  for (i=0, rr=w12, cr=w0, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #160: @14 = (@16*@56) */
  for (i=0, rr=w14, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w56);
  /* #161: @75 = (@8*@6) */
  for (i=0, rr=w75, cs=w6; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #162: @14 = (@14+@75) */
  for (i=0, rr=w14, cs=w75; i<14; ++i) (*rr++) += (*cs++);
  /* #163: @14 = (@28+@14) */
  for (i=0, rr=w14, cr=w28, cs=w14; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #164: @75 = (@16*@59) */
  for (i=0, rr=w75, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w59);
  /* #165: @76 = (@8*@10) */
  for (i=0, rr=w76, cs=w10; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #166: @75 = (@75+@76) */
  for (i=0, rr=w75, cs=w76; i<14; ++i) (*rr++) += (*cs++);
  /* #167: @75 = (@29+@75) */
  for (i=0, rr=w75, cr=w29, cs=w75; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #168: @76 = (@16*@62) */
  for (i=0, rr=w76, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w62);
  /* #169: @77 = (@8*@70) */
  for (i=0, rr=w77, cs=w70; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #170: @76 = (@76+@77) */
  for (i=0, rr=w76, cs=w77; i<14; ++i) (*rr++) += (*cs++);
  /* #171: @76 = (@30+@76) */
  for (i=0, rr=w76, cr=w30, cs=w76; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #172: @77 = (@16*@65) */
  for (i=0, rr=w77, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w65);
  /* #173: @78 = (@8*@72) */
  for (i=0, rr=w78, cs=w72; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #174: @77 = (@77+@78) */
  for (i=0, rr=w77, cs=w78; i<14; ++i) (*rr++) += (*cs++);
  /* #175: @77 = (@31+@77) */
  for (i=0, rr=w77, cr=w31, cs=w77; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #176: @78 = (@16*@68) */
  for (i=0, rr=w78, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w68);
  /* #177: @79 = (@8*@73) */
  for (i=0, rr=w79, cs=w73; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #178: @78 = (@78+@79) */
  for (i=0, rr=w78, cs=w79; i<14; ++i) (*rr++) += (*cs++);
  /* #179: @78 = (@32+@78) */
  for (i=0, rr=w78, cr=w32, cs=w78; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #180: @16 = (@16*@71) */
  for (i=0, rr=w16; i<14; ++i) (*rr++) *= w71;
  /* #181: @79 = (@8*@74) */
  for (i=0, rr=w79, cs=w74; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #182: @16 = (@16+@79) */
  for (i=0, rr=w16, cs=w79; i<14; ++i) (*rr++) += (*cs++);
  /* #183: @16 = (@33+@16) */
  for (i=0, rr=w16, cr=w33, cs=w16; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #184: @45 = horzcat(@12, @14, @75, @76, @77, @78, @16) */
  rr=w45;
  for (i=0, cs=w12; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  /* #185: @3 = 0x7 */
  /* #186: @43 = horzcat(@36, @37, @38, @39, @40, @41, @42) */
  rr=w43;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w42; i<4; ++i) *rr++ = *cs++;
  /* #187: @24 = 0x7 */
  /* #188: {@34, NULL, NULL} = fwd7_dae(@18, @17, @19, @4, @5, @7, @15, @11, @1, @45, @3, @43, @24) */
  arg1[0]=0;
  arg1[1]=w17;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w45;
  arg1[10]=0;
  arg1[11]=w43;
  arg1[12]=0;
  res1[0]=w34;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f11(arg1, res1, iw, w, 0)) return 1;
  /* #189: {@17, @12, @14, @75, @76, @77, @78} = horzsplit(@34) */
  casadi_copy(w34, 14, w17);
  casadi_copy(w34+14, 14, w12);
  casadi_copy(w34+28, 14, w14);
  casadi_copy(w34+42, 14, w75);
  casadi_copy(w34+56, 14, w76);
  casadi_copy(w34+70, 14, w77);
  casadi_copy(w34+84, 14, w78);
  /* #190: @2 = (@2+@17) */
  for (i=0, rr=w2, cs=w17; i<14; ++i) (*rr++) += (*cs++);
  /* #191: @2 = (@23*@2) */
  for (i=0, rr=w2, cs=w2; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #192: @20 = (@20+@2) */
  for (i=0, rr=w20, cs=w2; i<14; ++i) (*rr++) += (*cs++);
  /* #193: @0 = (@0+@20) */
  for (i=0, rr=w0, cs=w20; i<14; ++i) (*rr++) += (*cs++);
  /* #194: output[0][0] = @0 */
  casadi_copy(w0, 14, res[0]);
  /* #195: @56 = (@21*@56) */
  w56  = (w21*w56);
  /* #196: @0 = (@13*@56) */
  for (i=0, rr=w0, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w56);
  /* #197: @54 = (2.*@54) */
  for (i=0, rr=w54, cs=w54; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #198: @46 = (@46+@54) */
  for (i=0, rr=w46, cs=w54; i<14; ++i) (*rr++) += (*cs++);
  /* #199: @6 = (2.*@6) */
  for (i=0, rr=w6, cs=w6; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #200: @46 = (@46+@6) */
  for (i=0, rr=w46, cs=w6; i<14; ++i) (*rr++) += (*cs++);
  /* #201: @46 = (@46+@12) */
  for (i=0, rr=w46, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #202: @46 = (@23*@46) */
  for (i=0, rr=w46, cs=w46; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #203: @0 = (@0+@46) */
  for (i=0, rr=w0, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #204: @28 = (@28+@0) */
  for (i=0, rr=w28, cs=w0; i<14; ++i) (*rr++) += (*cs++);
  /* #205: output[0][1] = @28 */
  if (res[0]) casadi_copy(w28, 14, res[0]+14);
  /* #206: @59 = (@21*@59) */
  w59  = (w21*w59);
  /* #207: @28 = (@13*@59) */
  for (i=0, rr=w28, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w59);
  /* #208: @55 = (2.*@55) */
  for (i=0, rr=w55, cs=w55; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #209: @47 = (@47+@55) */
  for (i=0, rr=w47, cs=w55; i<14; ++i) (*rr++) += (*cs++);
  /* #210: @10 = (2.*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #211: @47 = (@47+@10) */
  for (i=0, rr=w47, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #212: @47 = (@47+@14) */
  for (i=0, rr=w47, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #213: @47 = (@23*@47) */
  for (i=0, rr=w47, cs=w47; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #214: @28 = (@28+@47) */
  for (i=0, rr=w28, cs=w47; i<14; ++i) (*rr++) += (*cs++);
  /* #215: @29 = (@29+@28) */
  for (i=0, rr=w29, cs=w28; i<14; ++i) (*rr++) += (*cs++);
  /* #216: output[0][2] = @29 */
  if (res[0]) casadi_copy(w29, 14, res[0]+28);
  /* #217: @62 = (@21*@62) */
  w62  = (w21*w62);
  /* #218: @29 = (@13*@62) */
  for (i=0, rr=w29, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w62);
  /* #219: @58 = (2.*@58) */
  for (i=0, rr=w58, cs=w58; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #220: @48 = (@48+@58) */
  for (i=0, rr=w48, cs=w58; i<14; ++i) (*rr++) += (*cs++);
  /* #221: @70 = (2.*@70) */
  for (i=0, rr=w70, cs=w70; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #222: @48 = (@48+@70) */
  for (i=0, rr=w48, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #223: @48 = (@48+@75) */
  for (i=0, rr=w48, cs=w75; i<14; ++i) (*rr++) += (*cs++);
  /* #224: @48 = (@23*@48) */
  for (i=0, rr=w48, cs=w48; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #225: @29 = (@29+@48) */
  for (i=0, rr=w29, cs=w48; i<14; ++i) (*rr++) += (*cs++);
  /* #226: @30 = (@30+@29) */
  for (i=0, rr=w30, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #227: output[0][3] = @30 */
  if (res[0]) casadi_copy(w30, 14, res[0]+42);
  /* #228: @65 = (@21*@65) */
  w65  = (w21*w65);
  /* #229: @30 = (@13*@65) */
  for (i=0, rr=w30, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w65);
  /* #230: @61 = (2.*@61) */
  for (i=0, rr=w61, cs=w61; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #231: @49 = (@49+@61) */
  for (i=0, rr=w49, cs=w61; i<14; ++i) (*rr++) += (*cs++);
  /* #232: @72 = (2.*@72) */
  for (i=0, rr=w72, cs=w72; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #233: @49 = (@49+@72) */
  for (i=0, rr=w49, cs=w72; i<14; ++i) (*rr++) += (*cs++);
  /* #234: @49 = (@49+@76) */
  for (i=0, rr=w49, cs=w76; i<14; ++i) (*rr++) += (*cs++);
  /* #235: @49 = (@23*@49) */
  for (i=0, rr=w49, cs=w49; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #236: @30 = (@30+@49) */
  for (i=0, rr=w30, cs=w49; i<14; ++i) (*rr++) += (*cs++);
  /* #237: @31 = (@31+@30) */
  for (i=0, rr=w31, cs=w30; i<14; ++i) (*rr++) += (*cs++);
  /* #238: output[0][4] = @31 */
  if (res[0]) casadi_copy(w31, 14, res[0]+56);
  /* #239: @68 = (@21*@68) */
  w68  = (w21*w68);
  /* #240: @31 = (@13*@68) */
  for (i=0, rr=w31, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w68);
  /* #241: @64 = (2.*@64) */
  for (i=0, rr=w64, cs=w64; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #242: @50 = (@50+@64) */
  for (i=0, rr=w50, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #243: @73 = (2.*@73) */
  for (i=0, rr=w73, cs=w73; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #244: @50 = (@50+@73) */
  for (i=0, rr=w50, cs=w73; i<14; ++i) (*rr++) += (*cs++);
  /* #245: @50 = (@50+@77) */
  for (i=0, rr=w50, cs=w77; i<14; ++i) (*rr++) += (*cs++);
  /* #246: @50 = (@23*@50) */
  for (i=0, rr=w50, cs=w50; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #247: @31 = (@31+@50) */
  for (i=0, rr=w31, cs=w50; i<14; ++i) (*rr++) += (*cs++);
  /* #248: @32 = (@32+@31) */
  for (i=0, rr=w32, cs=w31; i<14; ++i) (*rr++) += (*cs++);
  /* #249: output[0][5] = @32 */
  if (res[0]) casadi_copy(w32, 14, res[0]+70);
  /* #250: @21 = (@21*@71) */
  w21 *= w71;
  /* #251: @13 = (@13*@21) */
  for (i=0, rr=w13; i<14; ++i) (*rr++) *= w21;
  /* #252: @67 = (2.*@67) */
  for (i=0, rr=w67, cs=w67; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #253: @51 = (@51+@67) */
  for (i=0, rr=w51, cs=w67; i<14; ++i) (*rr++) += (*cs++);
  /* #254: @74 = (2.*@74) */
  for (i=0, rr=w74, cs=w74; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #255: @51 = (@51+@74) */
  for (i=0, rr=w51, cs=w74; i<14; ++i) (*rr++) += (*cs++);
  /* #256: @51 = (@51+@78) */
  for (i=0, rr=w51, cs=w78; i<14; ++i) (*rr++) += (*cs++);
  /* #257: @51 = (@23*@51) */
  for (i=0, rr=w51, cs=w51; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #258: @13 = (@13+@51) */
  for (i=0, rr=w13, cs=w51; i<14; ++i) (*rr++) += (*cs++);
  /* #259: @33 = (@33+@13) */
  for (i=0, rr=w33, cs=w13; i<14; ++i) (*rr++) += (*cs++);
  /* #260: output[0][6] = @33 */
  if (res[0]) casadi_copy(w33, 14, res[0]+84);
  return 0;
}

/* fwd7_intg:(x0[14],z0[0],p[4],u[0],adj_xf[],adj_zf[],adj_qf[],out_xf[14x1,0nz],out_zf[],out_qf[0],out_adj_x0[],out_adj_z0[],out_adj_p[],out_adj_u[],fwd_x0[14x7],fwd_z0[0x7],fwd_p[4x7],fwd_u[0x7],fwd_adj_xf[],fwd_adj_zf[],fwd_adj_qf[])->(fwd_xf[14x7],fwd_zf[],fwd_qf[0x7],fwd_adj_x0[],fwd_adj_z0[],fwd_adj_p[],fwd_adj_u[]) */
static int casadi_f9(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+7, *rr;
  const casadi_real **arg1=arg+21, *cs;
  casadi_real w1, *w5=w+1059, *w7=w+1073, *w9=w+1077, *w11=w+1091, *w13=w+1105, *w19=w+1119, *w24=w+1126, *w29=w+1133, *w34=w+1140, *w35=w+1147, *w36=w+1161, *w37=w+1175, *w38=w+1189, *w39=w+1203, *w40=w+1217, *w41=w+1231, *w42=w+1245, *w44=w+1343, *w45=w+1347, *w46=w+1351, *w47=w+1355, *w48=w+1359, *w49=w+1363, *w50=w+1367, *w51=w+1371, *w53=w+1399;
  /* #0: @0 = 0x1 */
  /* #1: @1 = 0.05 */
  w1 = 5.0000000000000003e-02;
  /* #2: @2 = 0x1 */
  /* #3: @3 = 0x1 */
  /* #4: @4 = 0x1 */
  /* #5: @5 = input[0][0] */
  casadi_copy(arg[0], 14, w5);
  /* #6: @6 = 0x1 */
  /* #7: @7 = input[2][0] */
  casadi_copy(arg[2], 4, w7);
  /* #8: @8 = 0x1 */
  /* #9: {@9, NULL, NULL} = step(@4, @1, @5, @6, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w5;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w9;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #10: @10 = 0x1 */
  /* #11: {@11, NULL, NULL} = step(@3, @1, @9, @10, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w9;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w11;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #12: @12 = 0x1 */
  /* #13: {@13, NULL, NULL} = step(@2, @1, @11, @12, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w11;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w13;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #14: @14 = 0x1 */
  /* #15: @15 = zeros(14x1,0nz) */
  /* #16: @16 = 0x1 */
  /* #17: @17 = 0x1 */
  /* #18: @18 = 0x7 */
  /* #19: @19 = zeros(1x7) */
  casadi_clear(w19, 7);
  /* #20: @20 = zeros(14x1,0nz) */
  /* #21: @21 = 0x1 */
  /* #22: @22 = 0x1 */
  /* #23: @23 = 0x7 */
  /* #24: @24 = zeros(1x7) */
  casadi_clear(w24, 7);
  /* #25: @25 = zeros(14x1,0nz) */
  /* #26: @26 = 0x1 */
  /* #27: @27 = 0x1 */
  /* #28: @28 = 0x7 */
  /* #29: @29 = zeros(1x7) */
  casadi_clear(w29, 7);
  /* #30: @30 = zeros(14x1,0nz) */
  /* #31: @31 = 0x1 */
  /* #32: @32 = 0x1 */
  /* #33: @33 = 0x7 */
  /* #34: @34 = zeros(1x7) */
  casadi_clear(w34, 7);
  /* #35: @35 = input[14][0] */
  casadi_copy(arg[14], 14, w35);
  /* #36: @36 = input[14][1] */
  casadi_copy(arg[14] ? arg[14]+14 : 0, 14, w36);
  /* #37: @37 = input[14][2] */
  casadi_copy(arg[14] ? arg[14]+28 : 0, 14, w37);
  /* #38: @38 = input[14][3] */
  casadi_copy(arg[14] ? arg[14]+42 : 0, 14, w38);
  /* #39: @39 = input[14][4] */
  casadi_copy(arg[14] ? arg[14]+56 : 0, 14, w39);
  /* #40: @40 = input[14][5] */
  casadi_copy(arg[14] ? arg[14]+70 : 0, 14, w40);
  /* #41: @41 = input[14][6] */
  casadi_copy(arg[14] ? arg[14]+84 : 0, 14, w41);
  /* #42: @42 = horzcat(@35, @36, @37, @38, @39, @40, @41) */
  rr=w42;
  for (i=0, cs=w35; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<14; ++i) *rr++ = *cs++;
  /* #43: @43 = 0x7 */
  /* #44: @44 = input[16][0] */
  casadi_copy(arg[16], 4, w44);
  /* #45: @45 = input[16][1] */
  casadi_copy(arg[16] ? arg[16]+4 : 0, 4, w45);
  /* #46: @46 = input[16][2] */
  casadi_copy(arg[16] ? arg[16]+8 : 0, 4, w46);
  /* #47: @47 = input[16][3] */
  casadi_copy(arg[16] ? arg[16]+12 : 0, 4, w47);
  /* #48: @48 = input[16][4] */
  casadi_copy(arg[16] ? arg[16]+16 : 0, 4, w48);
  /* #49: @49 = input[16][5] */
  casadi_copy(arg[16] ? arg[16]+20 : 0, 4, w49);
  /* #50: @50 = input[16][6] */
  casadi_copy(arg[16] ? arg[16]+24 : 0, 4, w50);
  /* #51: @51 = horzcat(@44, @45, @46, @47, @48, @49, @50) */
  rr=w51;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  /* #52: @52 = 0x7 */
  /* #53: {@53, NULL, NULL} = fwd7_step(@4, @1, @5, @6, @7, @8, @30, @31, @32, @33, @34, @42, @43, @51, @52) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w5;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w34;
  arg1[11]=w42;
  arg1[12]=0;
  arg1[13]=w51;
  arg1[14]=0;
  res1[0]=w53;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f10(arg1, res1, iw, w, 0)) return 1;
  /* #54: @4 = 0x7 */
  /* #55: @51 = horzcat(@44, @45, @46, @47, @48, @49, @50) */
  rr=w51;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  /* #56: @6 = 0x7 */
  /* #57: {@42, NULL, NULL} = fwd7_step(@3, @1, @9, @10, @7, @8, @25, @26, @27, @28, @29, @53, @4, @51, @6) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w9;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w29;
  arg1[11]=w53;
  arg1[12]=0;
  arg1[13]=w51;
  arg1[14]=0;
  res1[0]=w42;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f10(arg1, res1, iw, w, 0)) return 1;
  /* #58: @3 = 0x7 */
  /* #59: @51 = horzcat(@44, @45, @46, @47, @48, @49, @50) */
  rr=w51;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  /* #60: @10 = 0x7 */
  /* #61: {@53, NULL, NULL} = fwd7_step(@2, @1, @11, @12, @7, @8, @20, @21, @22, @23, @24, @42, @3, @51, @10) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w11;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w24;
  arg1[11]=w42;
  arg1[12]=0;
  arg1[13]=w51;
  arg1[14]=0;
  res1[0]=w53;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f10(arg1, res1, iw, w, 0)) return 1;
  /* #62: @2 = 0x7 */
  /* #63: @51 = horzcat(@44, @45, @46, @47, @48, @49, @50) */
  rr=w51;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  /* #64: @12 = 0x7 */
  /* #65: {@42, NULL, NULL} = fwd7_step(@0, @1, @13, @14, @7, @8, @15, @16, @17, @18, @19, @53, @2, @51, @12) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w13;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w19;
  arg1[11]=w53;
  arg1[12]=0;
  arg1[13]=w51;
  arg1[14]=0;
  res1[0]=w42;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f10(arg1, res1, iw, w, 0)) return 1;
  /* #66: output[0][0] = @42 */
  casadi_copy(w42, 98, res[0]);
  return 0;
}

/* fwd7_f_disc:(x[14],u[4],out_x_next[14x1,0nz],fwd_x[14x7],fwd_u[4x7])->(fwd_x_next[14x7]) */
static int casadi_f8(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+1, *rr;
  const casadi_real **arg1=arg+5, *cs;
  casadi_real *w0=w+1497, *w1=w+1500, w2, *w3=w+1504, *w4=w+1507, w5, *w6=w+1511, *w8=w+1525, *w13=w+1529, *w14=w+1543, *w15=w+1557, *w16=w+1571, *w17=w+1585, *w18=w+1599, *w19=w+1613, *w20=w+1627, *w22=w+1725, *w23=w+1729, *w24=w+1733, *w25=w+1737, *w26=w+1741, *w27=w+1745, *w28=w+1749, *w29=w+1753, *w31=w+1781;
  /* #0: @0 = input[0][0] */
  casadi_copy(arg[0], 3, w0);
  /* #1: @1 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+3 : 0, 3, w1);
  /* #2: @2 = input[0][2] */
  w2 = arg[0] ? arg[0][6] : 0;
  /* #3: @3 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+7 : 0, 3, w3);
  /* #4: @4 = input[0][4] */
  casadi_copy(arg[0] ? arg[0]+10 : 0, 3, w4);
  /* #5: @5 = input[0][5] */
  w5 = arg[0] ? arg[0][13] : 0;
  /* #6: @6 = vertcat(@0, @1, @2, @3, @4, @5) */
  rr=w6;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  for (i=0, cs=w3; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  /* #7: @7 = 0x1 */
  /* #8: @0 = input[1][0] */
  casadi_copy(arg[1], 3, w0);
  /* #9: @2 = input[1][1] */
  w2 = arg[1] ? arg[1][3] : 0;
  /* #10: @8 = vertcat(@0, @2) */
  rr=w8;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  /* #11: @9 = 0x1 */
  /* #12: @10 = 0x0 */
  /* #13: @11 = zeros(14x1,0nz) */
  /* #14: @12 = 0x1 */
  /* #15: @13 = input[3][0] */
  casadi_copy(arg[3], 14, w13);
  /* #16: @14 = input[3][1] */
  casadi_copy(arg[3] ? arg[3]+14 : 0, 14, w14);
  /* #17: @15 = input[3][2] */
  casadi_copy(arg[3] ? arg[3]+28 : 0, 14, w15);
  /* #18: @16 = input[3][3] */
  casadi_copy(arg[3] ? arg[3]+42 : 0, 14, w16);
  /* #19: @17 = input[3][4] */
  casadi_copy(arg[3] ? arg[3]+56 : 0, 14, w17);
  /* #20: @18 = input[3][5] */
  casadi_copy(arg[3] ? arg[3]+70 : 0, 14, w18);
  /* #21: @19 = input[3][6] */
  casadi_copy(arg[3] ? arg[3]+84 : 0, 14, w19);
  /* #22: @20 = horzcat(@13, @14, @15, @16, @17, @18, @19) */
  rr=w20;
  for (i=0, cs=w13; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w17; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w18; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w19; i<14; ++i) *rr++ = *cs++;
  /* #23: @21 = 0x7 */
  /* #24: @22 = input[4][0] */
  casadi_copy(arg[4], 4, w22);
  /* #25: @23 = input[4][1] */
  casadi_copy(arg[4] ? arg[4]+4 : 0, 4, w23);
  /* #26: @24 = input[4][2] */
  casadi_copy(arg[4] ? arg[4]+8 : 0, 4, w24);
  /* #27: @25 = input[4][3] */
  casadi_copy(arg[4] ? arg[4]+12 : 0, 4, w25);
  /* #28: @26 = input[4][4] */
  casadi_copy(arg[4] ? arg[4]+16 : 0, 4, w26);
  /* #29: @27 = input[4][5] */
  casadi_copy(arg[4] ? arg[4]+20 : 0, 4, w27);
  /* #30: @28 = input[4][6] */
  casadi_copy(arg[4] ? arg[4]+24 : 0, 4, w28);
  /* #31: @29 = horzcat(@22, @23, @24, @25, @26, @27, @28) */
  rr=w29;
  for (i=0, cs=w22; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w23; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w24; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w25; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w27; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w28; i<4; ++i) *rr++ = *cs++;
  /* #32: @30 = 0x7 */
  /* #33: {@31, NULL, NULL, NULL, NULL, NULL, NULL} = fwd7_intg(@6, @7, @8, @9, @10, @10, @10, @11, @10, @12, @10, @10, @10, @10, @20, @21, @29, @30, @10, @10, @10) */
  arg1[0]=w6;
  arg1[1]=0;
  arg1[2]=w8;
  arg1[3]=0;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=w20;
  arg1[15]=0;
  arg1[16]=w29;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=0;
  arg1[20]=0;
  res1[0]=w31;
  res1[1]=0;
  res1[2]=0;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  res1[6]=0;
  if (casadi_f9(arg1, res1, iw, w, 0)) return 1;
  /* #34: output[0][0] = @31 */
  casadi_copy(w31, 98, res[0]);
  return 0;
}

/* fwd6_dae:(t[0],x[14],z[0],p[4],u[0],out_ode[14x1,0nz],out_alg[0],out_quad[0],fwd_t[0x6],fwd_x[14x6],fwd_z[0x6],fwd_p[4x6],fwd_u[0x6])->(fwd_ode[14x6],fwd_alg[0x6],fwd_quad[0x6]) */
static int casadi_f15(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real *rr;
  const casadi_real *cs;
  casadi_real *w0=w+0, *w1=w+14, *w2=w+17, *w3=w+20, *w4=w+24, w5, *w8=w+28, *w9=w+38, *w10=w+48, *w11=w+58, *w12=w+68, *w13=w+78, *w14=w+88, *w15=w+148;
  /* #0: @0 = input[9][0] */
  casadi_copy(arg[9], 14, w0);
  /* #1: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #2: @3 = input[11][0] */
  casadi_copy(arg[11], 4, w3);
  /* #3: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #4: @6 = zeros(3x1,0nz) */
  /* #5: @7 = 00 */
  /* #6: @8 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w8;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #7: @0 = input[9][1] */
  casadi_copy(arg[9] ? arg[9]+14 : 0, 14, w0);
  /* #8: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #9: @3 = input[11][1] */
  casadi_copy(arg[11] ? arg[11]+4 : 0, 4, w3);
  /* #10: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #11: @6 = zeros(3x1,0nz) */
  /* #12: @7 = 00 */
  /* #13: @9 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w9;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #14: @0 = input[9][2] */
  casadi_copy(arg[9] ? arg[9]+28 : 0, 14, w0);
  /* #15: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #16: @3 = input[11][2] */
  casadi_copy(arg[11] ? arg[11]+8 : 0, 4, w3);
  /* #17: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #18: @6 = zeros(3x1,0nz) */
  /* #19: @7 = 00 */
  /* #20: @10 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w10;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #21: @0 = input[9][3] */
  casadi_copy(arg[9] ? arg[9]+42 : 0, 14, w0);
  /* #22: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #23: @3 = input[11][3] */
  casadi_copy(arg[11] ? arg[11]+12 : 0, 4, w3);
  /* #24: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #25: @6 = zeros(3x1,0nz) */
  /* #26: @7 = 00 */
  /* #27: @11 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w11;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #28: @0 = input[9][4] */
  casadi_copy(arg[9] ? arg[9]+56 : 0, 14, w0);
  /* #29: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #30: @3 = input[11][4] */
  casadi_copy(arg[11] ? arg[11]+16 : 0, 4, w3);
  /* #31: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #32: @6 = zeros(3x1,0nz) */
  /* #33: @7 = 00 */
  /* #34: @12 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w12;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #35: @0 = input[9][5] */
  casadi_copy(arg[9] ? arg[9]+70 : 0, 14, w0);
  /* #36: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #37: @3 = input[11][5] */
  casadi_copy(arg[11] ? arg[11]+20 : 0, 4, w3);
  /* #38: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #39: @6 = zeros(3x1,0nz) */
  /* #40: @7 = 00 */
  /* #41: @13 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w13;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #42: @14 = horzcat(@8, @9, @10, @11, @12, @13) */
  rr=w14;
  for (i=0, cs=w8; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w9; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w13; i<10; ++i) *rr++ = *cs++;
  /* #43: @15 = dense(@14) */
  casadi_densify(w14, casadi_s1, w15, 0);
  /* #44: output[0][0] = @15 */
  casadi_copy(w15, 84, res[0]);
  return 0;
}

/* fwd6_step:(t[0],h,x0[14],v0[0],p[4],u[0],out_xf[14x1,0nz],out_vf[0],out_qf[0],fwd_t[0x6],fwd_h[1x6],fwd_x0[14x6],fwd_v0[0x6],fwd_p[4x6],fwd_u[0x6])->(fwd_xf[14x6],fwd_vf[0x6],fwd_qf[0x6]) */
static int casadi_f14(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+3, *rr;
  const casadi_real **arg1=arg+15, *cr, *cs;
  casadi_real *w0=w+232, *w2=w+246, *w4=w+260, *w6=w+264, w8, w9, *w10=w+280, *w12=w+294, *w13=w+308, *w14=w+322, *w16=w+336, *w17=w+350, *w20=w+364, w21, w22, w23, *w28=w+381, *w29=w+395, *w30=w+409, *w31=w+423, *w32=w+437, *w33=w+451, *w35=w+535, *w36=w+539, *w37=w+543, *w38=w+547, *w39=w+551, *w40=w+555, *w41=w+559, *w43=w+583, *w44=w+667, *w45=w+681, *w46=w+695, *w47=w+709, *w48=w+723, w49, w50, *w51=w+739, *w52=w+753, w53, w54, *w55=w+769, w56, w57, *w58=w+785, w59, w60, *w61=w+801, w62, w63, *w64=w+817, w65, *w66=w+832, *w67=w+846, *w68=w+860, *w69=w+874, *w70=w+888, *w71=w+902;
  /* #0: @0 = input[11][0] */
  casadi_copy(arg[11], 14, w0);
  /* #1: @1 = 0x1 */
  /* #2: @2 = input[2][0] */
  casadi_copy(arg[2], 14, w2);
  /* #3: @3 = 0x1 */
  /* #4: @4 = input[4][0] */
  casadi_copy(arg[4], 4, w4);
  /* #5: @5 = 0x1 */
  /* #6: {@6, NULL, NULL} = dae(@1, @2, @3, @4, @5) */
  arg1[0]=0;
  arg1[1]=w2;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w6;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #7: @7 = 0x1 */
  /* #8: @8 = input[1][0] */
  w8 = arg[1] ? arg[1][0] : 0;
  /* #9: @9 = 2 */
  w9 = 2.;
  /* #10: @9 = (@8/@9) */
  w9  = (w8/w9);
  /* #11: @10 = (@9*@6) */
  for (i=0, rr=w10, cs=w6; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #12: @10 = (@2+@10) */
  for (i=0, rr=w10, cr=w2, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #13: @11 = 0x1 */
  /* #14: {@12, NULL, NULL} = dae(@7, @10, @11, @4, @5) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w12;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #15: @13 = (2.*@12) */
  for (i=0, rr=w13, cs=w12; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #16: @13 = (@6+@13) */
  for (i=0, rr=w13, cr=w6, cs=w13; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #17: @14 = (@9*@12) */
  for (i=0, rr=w14, cs=w12; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #18: @14 = (@2+@14) */
  for (i=0, rr=w14, cr=w2, cs=w14; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #19: @15 = 0x1 */
  /* #20: {@16, NULL, NULL} = dae(@7, @14, @15, @4, @5) */
  arg1[0]=0;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w16;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #21: @17 = (2.*@16) */
  for (i=0, rr=w17, cs=w16; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #22: @13 = (@13+@17) */
  for (i=0, rr=w13, cs=w17; i<14; ++i) (*rr++) += (*cs++);
  /* #23: @18 = 0x1 */
  /* #24: @17 = (@8*@16) */
  for (i=0, rr=w17, cs=w16; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #25: @17 = (@2+@17) */
  for (i=0, rr=w17, cr=w2, cs=w17; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #26: @19 = 0x1 */
  /* #27: {@20, NULL, NULL} = dae(@18, @17, @19, @4, @5) */
  arg1[0]=0;
  arg1[1]=w17;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w20;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #28: @13 = (@13+@20) */
  for (i=0, rr=w13, cs=w20; i<14; ++i) (*rr++) += (*cs++);
  /* #29: @21 = 0.166667 */
  w21 = 1.6666666666666666e-01;
  /* #30: @22 = input[10][0] */
  w22 = arg[10] ? arg[10][0] : 0;
  /* #31: @23 = (@21*@22) */
  w23  = (w21*w22);
  /* #32: @20 = (@13*@23) */
  for (i=0, rr=w20, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w23);
  /* #33: @23 = 6 */
  w23 = 6.;
  /* #34: @23 = (@8/@23) */
  w23  = (w8/w23);
  /* #35: @24 = zeros(14x1,0nz) */
  /* #36: @25 = 0x1 */
  /* #37: @26 = 0x1 */
  /* #38: @27 = 0x6 */
  /* #39: @28 = input[11][1] */
  casadi_copy(arg[11] ? arg[11]+14 : 0, 14, w28);
  /* #40: @29 = input[11][2] */
  casadi_copy(arg[11] ? arg[11]+28 : 0, 14, w29);
  /* #41: @30 = input[11][3] */
  casadi_copy(arg[11] ? arg[11]+42 : 0, 14, w30);
  /* #42: @31 = input[11][4] */
  casadi_copy(arg[11] ? arg[11]+56 : 0, 14, w31);
  /* #43: @32 = input[11][5] */
  casadi_copy(arg[11] ? arg[11]+70 : 0, 14, w32);
  /* #44: @33 = horzcat(@0, @28, @29, @30, @31, @32) */
  rr=w33;
  for (i=0, cs=w0; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w28; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w29; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  /* #45: @34 = 0x6 */
  /* #46: @35 = input[13][0] */
  casadi_copy(arg[13], 4, w35);
  /* #47: @36 = input[13][1] */
  casadi_copy(arg[13] ? arg[13]+4 : 0, 4, w36);
  /* #48: @37 = input[13][2] */
  casadi_copy(arg[13] ? arg[13]+8 : 0, 4, w37);
  /* #49: @38 = input[13][3] */
  casadi_copy(arg[13] ? arg[13]+12 : 0, 4, w38);
  /* #50: @39 = input[13][4] */
  casadi_copy(arg[13] ? arg[13]+16 : 0, 4, w39);
  /* #51: @40 = input[13][5] */
  casadi_copy(arg[13] ? arg[13]+20 : 0, 4, w40);
  /* #52: @41 = horzcat(@35, @36, @37, @38, @39, @40) */
  rr=w41;
  for (i=0, cs=w35; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  /* #53: @42 = 0x6 */
  /* #54: {@43, NULL, NULL} = fwd6_dae(@1, @2, @3, @4, @5, @24, @25, @26, @27, @33, @34, @41, @42) */
  arg1[0]=0;
  arg1[1]=w2;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w33;
  arg1[10]=0;
  arg1[11]=w41;
  arg1[12]=0;
  res1[0]=w43;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f15(arg1, res1, iw, w, 0)) return 1;
  /* #55: {@2, @44, @45, @46, @47, @48} = horzsplit(@43) */
  casadi_copy(w43, 14, w2);
  casadi_copy(w43+14, 14, w44);
  casadi_copy(w43+28, 14, w45);
  casadi_copy(w43+42, 14, w46);
  casadi_copy(w43+56, 14, w47);
  casadi_copy(w43+70, 14, w48);
  /* #56: @1 = zeros(14x1,0nz) */
  /* #57: @3 = 0x1 */
  /* #58: @24 = 0x1 */
  /* #59: @25 = 0x6 */
  /* #60: @49 = 0.5 */
  w49 = 5.0000000000000000e-01;
  /* #61: @50 = (@49*@22) */
  w50  = (w49*w22);
  /* #62: @51 = (@6*@50) */
  for (i=0, rr=w51, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w50);
  /* #63: @52 = (@9*@2) */
  for (i=0, rr=w52, cs=w2; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #64: @51 = (@51+@52) */
  for (i=0, rr=w51, cs=w52; i<14; ++i) (*rr++) += (*cs++);
  /* #65: @51 = (@0+@51) */
  for (i=0, rr=w51, cr=w0, cs=w51; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #66: @53 = input[10][1] */
  w53 = arg[10] ? arg[10][1] : 0;
  /* #67: @54 = (@49*@53) */
  w54  = (w49*w53);
  /* #68: @52 = (@6*@54) */
  for (i=0, rr=w52, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w54);
  /* #69: @55 = (@9*@44) */
  for (i=0, rr=w55, cs=w44; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #70: @52 = (@52+@55) */
  for (i=0, rr=w52, cs=w55; i<14; ++i) (*rr++) += (*cs++);
  /* #71: @52 = (@28+@52) */
  for (i=0, rr=w52, cr=w28, cs=w52; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #72: @56 = input[10][2] */
  w56 = arg[10] ? arg[10][2] : 0;
  /* #73: @57 = (@49*@56) */
  w57  = (w49*w56);
  /* #74: @55 = (@6*@57) */
  for (i=0, rr=w55, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w57);
  /* #75: @58 = (@9*@45) */
  for (i=0, rr=w58, cs=w45; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #76: @55 = (@55+@58) */
  for (i=0, rr=w55, cs=w58; i<14; ++i) (*rr++) += (*cs++);
  /* #77: @55 = (@29+@55) */
  for (i=0, rr=w55, cr=w29, cs=w55; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #78: @59 = input[10][3] */
  w59 = arg[10] ? arg[10][3] : 0;
  /* #79: @60 = (@49*@59) */
  w60  = (w49*w59);
  /* #80: @58 = (@6*@60) */
  for (i=0, rr=w58, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w60);
  /* #81: @61 = (@9*@46) */
  for (i=0, rr=w61, cs=w46; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #82: @58 = (@58+@61) */
  for (i=0, rr=w58, cs=w61; i<14; ++i) (*rr++) += (*cs++);
  /* #83: @58 = (@30+@58) */
  for (i=0, rr=w58, cr=w30, cs=w58; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #84: @62 = input[10][4] */
  w62 = arg[10] ? arg[10][4] : 0;
  /* #85: @63 = (@49*@62) */
  w63  = (w49*w62);
  /* #86: @61 = (@6*@63) */
  for (i=0, rr=w61, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w63);
  /* #87: @64 = (@9*@47) */
  for (i=0, rr=w64, cs=w47; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #88: @61 = (@61+@64) */
  for (i=0, rr=w61, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #89: @61 = (@31+@61) */
  for (i=0, rr=w61, cr=w31, cs=w61; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #90: @65 = input[10][5] */
  w65 = arg[10] ? arg[10][5] : 0;
  /* #91: @49 = (@49*@65) */
  w49 *= w65;
  /* #92: @6 = (@6*@49) */
  for (i=0, rr=w6; i<14; ++i) (*rr++) *= w49;
  /* #93: @64 = (@9*@48) */
  for (i=0, rr=w64, cs=w48; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #94: @6 = (@6+@64) */
  for (i=0, rr=w6, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #95: @6 = (@32+@6) */
  for (i=0, rr=w6, cr=w32, cs=w6; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #96: @43 = horzcat(@51, @52, @55, @58, @61, @6) */
  rr=w43;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w61; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  /* #97: @26 = 0x6 */
  /* #98: @41 = horzcat(@35, @36, @37, @38, @39, @40) */
  rr=w41;
  for (i=0, cs=w35; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  /* #99: @27 = 0x6 */
  /* #100: {@33, NULL, NULL} = fwd6_dae(@7, @10, @11, @4, @5, @1, @3, @24, @25, @43, @26, @41, @27) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w43;
  arg1[10]=0;
  arg1[11]=w41;
  arg1[12]=0;
  res1[0]=w33;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f15(arg1, res1, iw, w, 0)) return 1;
  /* #101: {@10, @51, @52, @55, @58, @61} = horzsplit(@33) */
  casadi_copy(w33, 14, w10);
  casadi_copy(w33+14, 14, w51);
  casadi_copy(w33+28, 14, w52);
  casadi_copy(w33+42, 14, w55);
  casadi_copy(w33+56, 14, w58);
  casadi_copy(w33+70, 14, w61);
  /* #102: @6 = (2.*@10) */
  for (i=0, rr=w6, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #103: @2 = (@2+@6) */
  for (i=0, rr=w2, cs=w6; i<14; ++i) (*rr++) += (*cs++);
  /* #104: @11 = zeros(14x1,0nz) */
  /* #105: @1 = 0x1 */
  /* #106: @3 = 0x1 */
  /* #107: @24 = 0x6 */
  /* #108: @6 = (@12*@50) */
  for (i=0, rr=w6, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w50);
  /* #109: @10 = (@9*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #110: @6 = (@6+@10) */
  for (i=0, rr=w6, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #111: @6 = (@0+@6) */
  for (i=0, rr=w6, cr=w0, cs=w6; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #112: @10 = (@12*@54) */
  for (i=0, rr=w10, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w54);
  /* #113: @64 = (@9*@51) */
  for (i=0, rr=w64, cs=w51; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #114: @10 = (@10+@64) */
  for (i=0, rr=w10, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #115: @10 = (@28+@10) */
  for (i=0, rr=w10, cr=w28, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #116: @64 = (@12*@57) */
  for (i=0, rr=w64, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w57);
  /* #117: @66 = (@9*@52) */
  for (i=0, rr=w66, cs=w52; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #118: @64 = (@64+@66) */
  for (i=0, rr=w64, cs=w66; i<14; ++i) (*rr++) += (*cs++);
  /* #119: @64 = (@29+@64) */
  for (i=0, rr=w64, cr=w29, cs=w64; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #120: @66 = (@12*@60) */
  for (i=0, rr=w66, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w60);
  /* #121: @67 = (@9*@55) */
  for (i=0, rr=w67, cs=w55; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #122: @66 = (@66+@67) */
  for (i=0, rr=w66, cs=w67; i<14; ++i) (*rr++) += (*cs++);
  /* #123: @66 = (@30+@66) */
  for (i=0, rr=w66, cr=w30, cs=w66; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #124: @67 = (@12*@63) */
  for (i=0, rr=w67, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w63);
  /* #125: @68 = (@9*@58) */
  for (i=0, rr=w68, cs=w58; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #126: @67 = (@67+@68) */
  for (i=0, rr=w67, cs=w68; i<14; ++i) (*rr++) += (*cs++);
  /* #127: @67 = (@31+@67) */
  for (i=0, rr=w67, cr=w31, cs=w67; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #128: @12 = (@12*@49) */
  for (i=0, rr=w12; i<14; ++i) (*rr++) *= w49;
  /* #129: @68 = (@9*@61) */
  for (i=0, rr=w68, cs=w61; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #130: @12 = (@12+@68) */
  for (i=0, rr=w12, cs=w68; i<14; ++i) (*rr++) += (*cs++);
  /* #131: @12 = (@32+@12) */
  for (i=0, rr=w12, cr=w32, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #132: @33 = horzcat(@6, @10, @64, @66, @67, @12) */
  rr=w33;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<14; ++i) *rr++ = *cs++;
  /* #133: @25 = 0x6 */
  /* #134: @41 = horzcat(@35, @36, @37, @38, @39, @40) */
  rr=w41;
  for (i=0, cs=w35; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  /* #135: @26 = 0x6 */
  /* #136: {@43, NULL, NULL} = fwd6_dae(@7, @14, @15, @4, @5, @11, @1, @3, @24, @33, @25, @41, @26) */
  arg1[0]=0;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w33;
  arg1[10]=0;
  arg1[11]=w41;
  arg1[12]=0;
  res1[0]=w43;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f15(arg1, res1, iw, w, 0)) return 1;
  /* #137: {@14, @6, @10, @64, @66, @67} = horzsplit(@43) */
  casadi_copy(w43, 14, w14);
  casadi_copy(w43+14, 14, w6);
  casadi_copy(w43+28, 14, w10);
  casadi_copy(w43+42, 14, w64);
  casadi_copy(w43+56, 14, w66);
  casadi_copy(w43+70, 14, w67);
  /* #138: @12 = (2.*@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #139: @2 = (@2+@12) */
  for (i=0, rr=w2, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #140: @7 = zeros(14x1,0nz) */
  /* #141: @15 = 0x1 */
  /* #142: @11 = 0x1 */
  /* #143: @1 = 0x6 */
  /* #144: @12 = (@16*@22) */
  for (i=0, rr=w12, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w22);
  /* #145: @14 = (@8*@14) */
  for (i=0, rr=w14, cs=w14; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #146: @12 = (@12+@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #147: @12 = (@0+@12) */
  for (i=0, rr=w12, cr=w0, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #148: @14 = (@16*@53) */
  for (i=0, rr=w14, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w53);
  /* #149: @68 = (@8*@6) */
  for (i=0, rr=w68, cs=w6; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #150: @14 = (@14+@68) */
  for (i=0, rr=w14, cs=w68; i<14; ++i) (*rr++) += (*cs++);
  /* #151: @14 = (@28+@14) */
  for (i=0, rr=w14, cr=w28, cs=w14; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #152: @68 = (@16*@56) */
  for (i=0, rr=w68, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w56);
  /* #153: @69 = (@8*@10) */
  for (i=0, rr=w69, cs=w10; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #154: @68 = (@68+@69) */
  for (i=0, rr=w68, cs=w69; i<14; ++i) (*rr++) += (*cs++);
  /* #155: @68 = (@29+@68) */
  for (i=0, rr=w68, cr=w29, cs=w68; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #156: @69 = (@16*@59) */
  for (i=0, rr=w69, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w59);
  /* #157: @70 = (@8*@64) */
  for (i=0, rr=w70, cs=w64; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #158: @69 = (@69+@70) */
  for (i=0, rr=w69, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #159: @69 = (@30+@69) */
  for (i=0, rr=w69, cr=w30, cs=w69; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #160: @70 = (@16*@62) */
  for (i=0, rr=w70, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w62);
  /* #161: @71 = (@8*@66) */
  for (i=0, rr=w71, cs=w66; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #162: @70 = (@70+@71) */
  for (i=0, rr=w70, cs=w71; i<14; ++i) (*rr++) += (*cs++);
  /* #163: @70 = (@31+@70) */
  for (i=0, rr=w70, cr=w31, cs=w70; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #164: @16 = (@16*@65) */
  for (i=0, rr=w16; i<14; ++i) (*rr++) *= w65;
  /* #165: @71 = (@8*@67) */
  for (i=0, rr=w71, cs=w67; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #166: @16 = (@16+@71) */
  for (i=0, rr=w16, cs=w71; i<14; ++i) (*rr++) += (*cs++);
  /* #167: @16 = (@32+@16) */
  for (i=0, rr=w16, cr=w32, cs=w16; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #168: @43 = horzcat(@12, @14, @68, @69, @70, @16) */
  rr=w43;
  for (i=0, cs=w12; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  /* #169: @3 = 0x6 */
  /* #170: @41 = horzcat(@35, @36, @37, @38, @39, @40) */
  rr=w41;
  for (i=0, cs=w35; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  /* #171: @24 = 0x6 */
  /* #172: {@33, NULL, NULL} = fwd6_dae(@18, @17, @19, @4, @5, @7, @15, @11, @1, @43, @3, @41, @24) */
  arg1[0]=0;
  arg1[1]=w17;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w43;
  arg1[10]=0;
  arg1[11]=w41;
  arg1[12]=0;
  res1[0]=w33;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f15(arg1, res1, iw, w, 0)) return 1;
  /* #173: {@17, @12, @14, @68, @69, @70} = horzsplit(@33) */
  casadi_copy(w33, 14, w17);
  casadi_copy(w33+14, 14, w12);
  casadi_copy(w33+28, 14, w14);
  casadi_copy(w33+42, 14, w68);
  casadi_copy(w33+56, 14, w69);
  casadi_copy(w33+70, 14, w70);
  /* #174: @2 = (@2+@17) */
  for (i=0, rr=w2, cs=w17; i<14; ++i) (*rr++) += (*cs++);
  /* #175: @2 = (@23*@2) */
  for (i=0, rr=w2, cs=w2; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #176: @20 = (@20+@2) */
  for (i=0, rr=w20, cs=w2; i<14; ++i) (*rr++) += (*cs++);
  /* #177: @0 = (@0+@20) */
  for (i=0, rr=w0, cs=w20; i<14; ++i) (*rr++) += (*cs++);
  /* #178: output[0][0] = @0 */
  casadi_copy(w0, 14, res[0]);
  /* #179: @53 = (@21*@53) */
  w53  = (w21*w53);
  /* #180: @0 = (@13*@53) */
  for (i=0, rr=w0, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w53);
  /* #181: @51 = (2.*@51) */
  for (i=0, rr=w51, cs=w51; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #182: @44 = (@44+@51) */
  for (i=0, rr=w44, cs=w51; i<14; ++i) (*rr++) += (*cs++);
  /* #183: @6 = (2.*@6) */
  for (i=0, rr=w6, cs=w6; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #184: @44 = (@44+@6) */
  for (i=0, rr=w44, cs=w6; i<14; ++i) (*rr++) += (*cs++);
  /* #185: @44 = (@44+@12) */
  for (i=0, rr=w44, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #186: @44 = (@23*@44) */
  for (i=0, rr=w44, cs=w44; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #187: @0 = (@0+@44) */
  for (i=0, rr=w0, cs=w44; i<14; ++i) (*rr++) += (*cs++);
  /* #188: @28 = (@28+@0) */
  for (i=0, rr=w28, cs=w0; i<14; ++i) (*rr++) += (*cs++);
  /* #189: output[0][1] = @28 */
  if (res[0]) casadi_copy(w28, 14, res[0]+14);
  /* #190: @56 = (@21*@56) */
  w56  = (w21*w56);
  /* #191: @28 = (@13*@56) */
  for (i=0, rr=w28, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w56);
  /* #192: @52 = (2.*@52) */
  for (i=0, rr=w52, cs=w52; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #193: @45 = (@45+@52) */
  for (i=0, rr=w45, cs=w52; i<14; ++i) (*rr++) += (*cs++);
  /* #194: @10 = (2.*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #195: @45 = (@45+@10) */
  for (i=0, rr=w45, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #196: @45 = (@45+@14) */
  for (i=0, rr=w45, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #197: @45 = (@23*@45) */
  for (i=0, rr=w45, cs=w45; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #198: @28 = (@28+@45) */
  for (i=0, rr=w28, cs=w45; i<14; ++i) (*rr++) += (*cs++);
  /* #199: @29 = (@29+@28) */
  for (i=0, rr=w29, cs=w28; i<14; ++i) (*rr++) += (*cs++);
  /* #200: output[0][2] = @29 */
  if (res[0]) casadi_copy(w29, 14, res[0]+28);
  /* #201: @59 = (@21*@59) */
  w59  = (w21*w59);
  /* #202: @29 = (@13*@59) */
  for (i=0, rr=w29, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w59);
  /* #203: @55 = (2.*@55) */
  for (i=0, rr=w55, cs=w55; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #204: @46 = (@46+@55) */
  for (i=0, rr=w46, cs=w55; i<14; ++i) (*rr++) += (*cs++);
  /* #205: @64 = (2.*@64) */
  for (i=0, rr=w64, cs=w64; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #206: @46 = (@46+@64) */
  for (i=0, rr=w46, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #207: @46 = (@46+@68) */
  for (i=0, rr=w46, cs=w68; i<14; ++i) (*rr++) += (*cs++);
  /* #208: @46 = (@23*@46) */
  for (i=0, rr=w46, cs=w46; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #209: @29 = (@29+@46) */
  for (i=0, rr=w29, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #210: @30 = (@30+@29) */
  for (i=0, rr=w30, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #211: output[0][3] = @30 */
  if (res[0]) casadi_copy(w30, 14, res[0]+42);
  /* #212: @62 = (@21*@62) */
  w62  = (w21*w62);
  /* #213: @30 = (@13*@62) */
  for (i=0, rr=w30, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w62);
  /* #214: @58 = (2.*@58) */
  for (i=0, rr=w58, cs=w58; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #215: @47 = (@47+@58) */
  for (i=0, rr=w47, cs=w58; i<14; ++i) (*rr++) += (*cs++);
  /* #216: @66 = (2.*@66) */
  for (i=0, rr=w66, cs=w66; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #217: @47 = (@47+@66) */
  for (i=0, rr=w47, cs=w66; i<14; ++i) (*rr++) += (*cs++);
  /* #218: @47 = (@47+@69) */
  for (i=0, rr=w47, cs=w69; i<14; ++i) (*rr++) += (*cs++);
  /* #219: @47 = (@23*@47) */
  for (i=0, rr=w47, cs=w47; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #220: @30 = (@30+@47) */
  for (i=0, rr=w30, cs=w47; i<14; ++i) (*rr++) += (*cs++);
  /* #221: @31 = (@31+@30) */
  for (i=0, rr=w31, cs=w30; i<14; ++i) (*rr++) += (*cs++);
  /* #222: output[0][4] = @31 */
  if (res[0]) casadi_copy(w31, 14, res[0]+56);
  /* #223: @21 = (@21*@65) */
  w21 *= w65;
  /* #224: @13 = (@13*@21) */
  for (i=0, rr=w13; i<14; ++i) (*rr++) *= w21;
  /* #225: @61 = (2.*@61) */
  for (i=0, rr=w61, cs=w61; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #226: @48 = (@48+@61) */
  for (i=0, rr=w48, cs=w61; i<14; ++i) (*rr++) += (*cs++);
  /* #227: @67 = (2.*@67) */
  for (i=0, rr=w67, cs=w67; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #228: @48 = (@48+@67) */
  for (i=0, rr=w48, cs=w67; i<14; ++i) (*rr++) += (*cs++);
  /* #229: @48 = (@48+@70) */
  for (i=0, rr=w48, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #230: @48 = (@23*@48) */
  for (i=0, rr=w48, cs=w48; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #231: @13 = (@13+@48) */
  for (i=0, rr=w13, cs=w48; i<14; ++i) (*rr++) += (*cs++);
  /* #232: @32 = (@32+@13) */
  for (i=0, rr=w32, cs=w13; i<14; ++i) (*rr++) += (*cs++);
  /* #233: output[0][5] = @32 */
  if (res[0]) casadi_copy(w32, 14, res[0]+70);
  return 0;
}

/* fwd6_intg:(x0[14],z0[0],p[4],u[0],adj_xf[],adj_zf[],adj_qf[],out_xf[14x1,0nz],out_zf[],out_qf[0],out_adj_x0[],out_adj_z0[],out_adj_p[],out_adj_u[],fwd_x0[14x6],fwd_z0[0x6],fwd_p[4x6],fwd_u[0x6],fwd_adj_xf[],fwd_adj_zf[],fwd_adj_qf[])->(fwd_xf[14x6],fwd_zf[],fwd_qf[0x6],fwd_adj_x0[],fwd_adj_z0[],fwd_adj_p[],fwd_adj_u[]) */
static int casadi_f13(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+7, *rr;
  const casadi_real **arg1=arg+21, *cs;
  casadi_real w1, *w5=w+917, *w7=w+931, *w9=w+935, *w11=w+949, *w13=w+963, *w19=w+977, *w24=w+983, *w29=w+989, *w34=w+995, *w35=w+1001, *w36=w+1015, *w37=w+1029, *w38=w+1043, *w39=w+1057, *w40=w+1071, *w41=w+1085, *w43=w+1169, *w44=w+1173, *w45=w+1177, *w46=w+1181, *w47=w+1185, *w48=w+1189, *w49=w+1193, *w51=w+1217;
  /* #0: @0 = 0x1 */
  /* #1: @1 = 0.05 */
  w1 = 5.0000000000000003e-02;
  /* #2: @2 = 0x1 */
  /* #3: @3 = 0x1 */
  /* #4: @4 = 0x1 */
  /* #5: @5 = input[0][0] */
  casadi_copy(arg[0], 14, w5);
  /* #6: @6 = 0x1 */
  /* #7: @7 = input[2][0] */
  casadi_copy(arg[2], 4, w7);
  /* #8: @8 = 0x1 */
  /* #9: {@9, NULL, NULL} = step(@4, @1, @5, @6, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w5;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w9;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #10: @10 = 0x1 */
  /* #11: {@11, NULL, NULL} = step(@3, @1, @9, @10, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w9;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w11;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #12: @12 = 0x1 */
  /* #13: {@13, NULL, NULL} = step(@2, @1, @11, @12, @7, @8) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w11;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  res1[0]=w13;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #14: @14 = 0x1 */
  /* #15: @15 = zeros(14x1,0nz) */
  /* #16: @16 = 0x1 */
  /* #17: @17 = 0x1 */
  /* #18: @18 = 0x6 */
  /* #19: @19 = zeros(1x6) */
  casadi_clear(w19, 6);
  /* #20: @20 = zeros(14x1,0nz) */
  /* #21: @21 = 0x1 */
  /* #22: @22 = 0x1 */
  /* #23: @23 = 0x6 */
  /* #24: @24 = zeros(1x6) */
  casadi_clear(w24, 6);
  /* #25: @25 = zeros(14x1,0nz) */
  /* #26: @26 = 0x1 */
  /* #27: @27 = 0x1 */
  /* #28: @28 = 0x6 */
  /* #29: @29 = zeros(1x6) */
  casadi_clear(w29, 6);
  /* #30: @30 = zeros(14x1,0nz) */
  /* #31: @31 = 0x1 */
  /* #32: @32 = 0x1 */
  /* #33: @33 = 0x6 */
  /* #34: @34 = zeros(1x6) */
  casadi_clear(w34, 6);
  /* #35: @35 = input[14][0] */
  casadi_copy(arg[14], 14, w35);
  /* #36: @36 = input[14][1] */
  casadi_copy(arg[14] ? arg[14]+14 : 0, 14, w36);
  /* #37: @37 = input[14][2] */
  casadi_copy(arg[14] ? arg[14]+28 : 0, 14, w37);
  /* #38: @38 = input[14][3] */
  casadi_copy(arg[14] ? arg[14]+42 : 0, 14, w38);
  /* #39: @39 = input[14][4] */
  casadi_copy(arg[14] ? arg[14]+56 : 0, 14, w39);
  /* #40: @40 = input[14][5] */
  casadi_copy(arg[14] ? arg[14]+70 : 0, 14, w40);
  /* #41: @41 = horzcat(@35, @36, @37, @38, @39, @40) */
  rr=w41;
  for (i=0, cs=w35; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<14; ++i) *rr++ = *cs++;
  /* #42: @42 = 0x6 */
  /* #43: @43 = input[16][0] */
  casadi_copy(arg[16], 4, w43);
  /* #44: @44 = input[16][1] */
  casadi_copy(arg[16] ? arg[16]+4 : 0, 4, w44);
  /* #45: @45 = input[16][2] */
  casadi_copy(arg[16] ? arg[16]+8 : 0, 4, w45);
  /* #46: @46 = input[16][3] */
  casadi_copy(arg[16] ? arg[16]+12 : 0, 4, w46);
  /* #47: @47 = input[16][4] */
  casadi_copy(arg[16] ? arg[16]+16 : 0, 4, w47);
  /* #48: @48 = input[16][5] */
  casadi_copy(arg[16] ? arg[16]+20 : 0, 4, w48);
  /* #49: @49 = horzcat(@43, @44, @45, @46, @47, @48) */
  rr=w49;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  /* #50: @50 = 0x6 */
  /* #51: {@51, NULL, NULL} = fwd6_step(@4, @1, @5, @6, @7, @8, @30, @31, @32, @33, @34, @41, @42, @49, @50) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w5;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w34;
  arg1[11]=w41;
  arg1[12]=0;
  arg1[13]=w49;
  arg1[14]=0;
  res1[0]=w51;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f14(arg1, res1, iw, w, 0)) return 1;
  /* #52: @4 = 0x6 */
  /* #53: @49 = horzcat(@43, @44, @45, @46, @47, @48) */
  rr=w49;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  /* #54: @6 = 0x6 */
  /* #55: {@41, NULL, NULL} = fwd6_step(@3, @1, @9, @10, @7, @8, @25, @26, @27, @28, @29, @51, @4, @49, @6) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w9;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w29;
  arg1[11]=w51;
  arg1[12]=0;
  arg1[13]=w49;
  arg1[14]=0;
  res1[0]=w41;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f14(arg1, res1, iw, w, 0)) return 1;
  /* #56: @3 = 0x6 */
  /* #57: @49 = horzcat(@43, @44, @45, @46, @47, @48) */
  rr=w49;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  /* #58: @10 = 0x6 */
  /* #59: {@51, NULL, NULL} = fwd6_step(@2, @1, @11, @12, @7, @8, @20, @21, @22, @23, @24, @41, @3, @49, @10) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w11;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w24;
  arg1[11]=w41;
  arg1[12]=0;
  arg1[13]=w49;
  arg1[14]=0;
  res1[0]=w51;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f14(arg1, res1, iw, w, 0)) return 1;
  /* #60: @2 = 0x6 */
  /* #61: @49 = horzcat(@43, @44, @45, @46, @47, @48) */
  rr=w49;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  /* #62: @12 = 0x6 */
  /* #63: {@41, NULL, NULL} = fwd6_step(@0, @1, @13, @14, @7, @8, @15, @16, @17, @18, @19, @51, @2, @49, @12) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w13;
  arg1[3]=0;
  arg1[4]=w7;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w19;
  arg1[11]=w51;
  arg1[12]=0;
  arg1[13]=w49;
  arg1[14]=0;
  res1[0]=w41;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f14(arg1, res1, iw, w, 0)) return 1;
  /* #64: output[0][0] = @41 */
  casadi_copy(w41, 84, res[0]);
  return 0;
}

/* fwd6_f_disc:(x[14],u[4],out_x_next[14x1,0nz],fwd_x[14x6],fwd_u[4x6])->(fwd_x_next[14x6]) */
static int casadi_f12(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+1, *rr;
  const casadi_real **arg1=arg+5, *cs;
  casadi_real *w0=w+1301, *w1=w+1304, w2, *w3=w+1308, *w4=w+1311, w5, *w6=w+1315, *w8=w+1329, *w13=w+1333, *w14=w+1347, *w15=w+1361, *w16=w+1375, *w17=w+1389, *w18=w+1403, *w19=w+1417, *w21=w+1501, *w22=w+1505, *w23=w+1509, *w24=w+1513, *w25=w+1517, *w26=w+1521, *w27=w+1525, *w29=w+1549;
  /* #0: @0 = input[0][0] */
  casadi_copy(arg[0], 3, w0);
  /* #1: @1 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+3 : 0, 3, w1);
  /* #2: @2 = input[0][2] */
  w2 = arg[0] ? arg[0][6] : 0;
  /* #3: @3 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+7 : 0, 3, w3);
  /* #4: @4 = input[0][4] */
  casadi_copy(arg[0] ? arg[0]+10 : 0, 3, w4);
  /* #5: @5 = input[0][5] */
  w5 = arg[0] ? arg[0][13] : 0;
  /* #6: @6 = vertcat(@0, @1, @2, @3, @4, @5) */
  rr=w6;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  for (i=0, cs=w3; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  /* #7: @7 = 0x1 */
  /* #8: @0 = input[1][0] */
  casadi_copy(arg[1], 3, w0);
  /* #9: @2 = input[1][1] */
  w2 = arg[1] ? arg[1][3] : 0;
  /* #10: @8 = vertcat(@0, @2) */
  rr=w8;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  /* #11: @9 = 0x1 */
  /* #12: @10 = 0x0 */
  /* #13: @11 = zeros(14x1,0nz) */
  /* #14: @12 = 0x1 */
  /* #15: @13 = input[3][0] */
  casadi_copy(arg[3], 14, w13);
  /* #16: @14 = input[3][1] */
  casadi_copy(arg[3] ? arg[3]+14 : 0, 14, w14);
  /* #17: @15 = input[3][2] */
  casadi_copy(arg[3] ? arg[3]+28 : 0, 14, w15);
  /* #18: @16 = input[3][3] */
  casadi_copy(arg[3] ? arg[3]+42 : 0, 14, w16);
  /* #19: @17 = input[3][4] */
  casadi_copy(arg[3] ? arg[3]+56 : 0, 14, w17);
  /* #20: @18 = input[3][5] */
  casadi_copy(arg[3] ? arg[3]+70 : 0, 14, w18);
  /* #21: @19 = horzcat(@13, @14, @15, @16, @17, @18) */
  rr=w19;
  for (i=0, cs=w13; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w17; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w18; i<14; ++i) *rr++ = *cs++;
  /* #22: @20 = 0x6 */
  /* #23: @21 = input[4][0] */
  casadi_copy(arg[4], 4, w21);
  /* #24: @22 = input[4][1] */
  casadi_copy(arg[4] ? arg[4]+4 : 0, 4, w22);
  /* #25: @23 = input[4][2] */
  casadi_copy(arg[4] ? arg[4]+8 : 0, 4, w23);
  /* #26: @24 = input[4][3] */
  casadi_copy(arg[4] ? arg[4]+12 : 0, 4, w24);
  /* #27: @25 = input[4][4] */
  casadi_copy(arg[4] ? arg[4]+16 : 0, 4, w25);
  /* #28: @26 = input[4][5] */
  casadi_copy(arg[4] ? arg[4]+20 : 0, 4, w26);
  /* #29: @27 = horzcat(@21, @22, @23, @24, @25, @26) */
  rr=w27;
  for (i=0, cs=w21; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w22; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w23; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w24; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w25; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<4; ++i) *rr++ = *cs++;
  /* #30: @28 = 0x6 */
  /* #31: {@29, NULL, NULL, NULL, NULL, NULL, NULL} = fwd6_intg(@6, @7, @8, @9, @10, @10, @10, @11, @10, @12, @10, @10, @10, @10, @19, @20, @27, @28, @10, @10, @10) */
  arg1[0]=w6;
  arg1[1]=0;
  arg1[2]=w8;
  arg1[3]=0;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=w19;
  arg1[15]=0;
  arg1[16]=w27;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=0;
  arg1[20]=0;
  res1[0]=w29;
  res1[1]=0;
  res1[2]=0;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  res1[6]=0;
  if (casadi_f13(arg1, res1, iw, w, 0)) return 1;
  /* #32: output[0][0] = @29 */
  casadi_copy(w29, 84, res[0]);
  return 0;
}

/* nlp_jac_fg:(x[464],p[14])->(f,grad_f_x[464],g[564],jac_g_x[564x464,1389nz]) */
static int casadi_f7(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j, k;
  casadi_real **res1=res+4, *rr, *ss, *tt;
  const casadi_int *cii;
  const casadi_real **arg1=arg+2, *cs;
  casadi_real w0, *w1=w+1880, *w2=w+1887, *w3=w+2251, *w4=w+2258, *w5=w+2265, w6, *w7=w+2315, *w8=w+2319, *w9=w+2419, *w10=w+2423, *w11=w+2439, *w12=w+2446, *w13=w+2453, *w14=w+2502, *w15=w+2506, *w16=w+2510, *w17=w+2526, *w18=w+2533, *w19=w+2540, *w20=w+2589, *w21=w+2593, *w22=w+2597, *w23=w+2613, *w24=w+2620, *w25=w+2627, *w26=w+2676, *w27=w+2680, *w28=w+2684, *w29=w+2700, *w30=w+2707, *w31=w+2714, *w32=w+2763, *w33=w+2767, *w34=w+2771, *w35=w+2787, *w36=w+2794, *w37=w+2801, *w38=w+2850, *w39=w+2854, *w40=w+2858, *w41=w+2874, *w42=w+2881, *w43=w+2888, *w44=w+2937, *w45=w+2941, *w46=w+2945, *w47=w+2961, *w48=w+2968, *w49=w+2975, *w50=w+3024, *w51=w+3028, *w52=w+3032, *w53=w+3048, *w54=w+3055, *w55=w+3062, *w56=w+3111, *w57=w+3115, *w58=w+3119, *w59=w+3135, *w60=w+3142, *w61=w+3149, *w62=w+3198, *w63=w+3202, *w64=w+3206, *w65=w+3222, *w66=w+3229, *w67=w+3236, *w68=w+3285, *w69=w+3289, *w70=w+3293, *w71=w+3309, *w72=w+3316, *w73=w+3323, *w74=w+3372, *w75=w+3376, *w76=w+3380, *w77=w+3396, *w78=w+3403, *w79=w+3410, *w80=w+3459, *w81=w+3463, *w82=w+3467, *w83=w+3483, *w84=w+3490, *w85=w+3497, *w86=w+3546, *w87=w+3550, *w88=w+3554, *w89=w+3570, *w90=w+3577, *w91=w+3584, *w92=w+3633, *w93=w+3637, *w94=w+3641, *w95=w+3657, *w96=w+3664, *w97=w+3671, *w98=w+3720, *w99=w+3724, *w100=w+3728, *w101=w+3744, *w102=w+3751, *w103=w+3758, *w104=w+3807, *w105=w+3811, *w106=w+3815, *w107=w+3831, *w108=w+3838, *w109=w+3845, *w110=w+3894, *w111=w+3898, *w112=w+3902, *w113=w+3918, *w114=w+3925, *w115=w+3932, *w116=w+3981, *w117=w+3985, *w118=w+3989, *w119=w+4005, *w120=w+4012, *w121=w+4019, *w122=w+4068, *w123=w+4072, *w124=w+4076, *w125=w+4092, *w126=w+4099, *w127=w+4106, *w128=w+4155, *w129=w+4159, *w130=w+4163, *w131=w+4179, *w132=w+4186, *w133=w+4193, *w134=w+4242, *w135=w+4246, *w136=w+4250, *w137=w+4266, *w138=w+4273, *w139=w+4280, *w140=w+4329, *w141=w+4333, *w142=w+4337, *w143=w+4353, *w144=w+4360, *w145=w+4367, *w146=w+4416, *w147=w+4420, *w148=w+4424, *w149=w+4440, *w150=w+4447, *w151=w+4454, *w152=w+4503, *w153=w+4507, *w154=w+4511, *w155=w+4527, *w156=w+4534, *w157=w+4541, *w158=w+4590, *w159=w+4954, *w160=w+5003, *w161=w+5103, *w162=w+5119, *w163=w+5133, *w164=w+5147, *w165=w+5161, *w166=w+5164, *w167=w+5167, *w168=w+5170, *w169=w+5184, *w170=w+5187, *w171=w+5190, *w172=w+5204, *w173=w+5207, *w174=w+5210, *w175=w+5224, *w176=w+5227, *w177=w+5230, *w178=w+5244, *w179=w+5247, *w180=w+5250, *w181=w+5264, *w182=w+5267, *w183=w+5270, *w184=w+5284, *w185=w+5287, *w186=w+5290, *w187=w+5304, *w188=w+5307, *w189=w+5310, *w190=w+5324, *w191=w+5327, *w192=w+5330, *w193=w+5344, *w194=w+5347, *w195=w+5350, *w196=w+5364, *w197=w+5367, *w198=w+5370, *w199=w+5384, *w200=w+5387, *w201=w+5390, *w202=w+5404, *w203=w+5407, *w204=w+5410, *w205=w+5424, *w206=w+5427, *w207=w+5430, *w208=w+5444, *w209=w+5447, *w210=w+5450, *w211=w+5464, *w212=w+5467, *w213=w+5470, *w214=w+5484, *w215=w+5487, *w216=w+5490, *w217=w+5504, *w218=w+5507, *w219=w+5510, *w220=w+5524, *w221=w+5527, *w222=w+5530, *w223=w+5544, *w224=w+5547, *w225=w+5550, *w226=w+5564, *w227=w+5567, *w228=w+5570, *w229=w+5584, *w230=w+5587, *w231=w+5590, *w232=w+5604, *w233=w+5607, *w234=w+5610, *w235=w+5624, *w236=w+5627, *w237=w+5630, *w238=w+5644, *w239=w+5647, *w240=w+5650, *w241=w+7039, *w242=w+7157, *w243=w+7275, *w245=w+7277, *w246=w+7389, *w247=w+7501, *w248=w+7583, *w249=w+7639, *w250=w+7665, *w251=w+7760, *w252=w+7785, *w253=w+7855, *w254=w+7884, w255, *w256=w+7910, w257, *w258=w+7925, *w259=w+7938, w260, *w261=w+7952, *w266=w+8050, *w267=w+8078, *w268=w+8176, *w269=w+8190, *w270=w+8204, *w271=w+8218, *w272=w+8232, *w273=w+8246, *w274=w+8252, w275, *w276=w+8255, *w280=w+8269, *w281=w+8283, *w282=w+8297, *w283=w+8311, *w284=w+8325, w285, w286, w287, w288, *w289=w+8343, *w291=w+8357, *w292=w+8371, *w293=w+8385, *w294=w+8399, *w295=w+8413, *w296=w+8427, *w297=w+8441, *w301=w+8525, *w302=w+8549, *w303=w+8633, *w304=w+8647, *w305=w+8661, *w306=w+8675, w307, w308, *w309=w+8691, *w311=w+8705, *w312=w+8719, *w313=w+8733, *w314=w+8747, w315, w316, w317, *w318=w+8764, *w320=w+8778, *w321=w+8792, *w322=w+8806, *w323=w+8820, w324, w325, w326, *w327=w+8837, *w329=w+8851, *w330=w+8865, *w331=w+8879, *w332=w+8893, w333, w334, *w335=w+8909, *w338=w+8923, *w339=w+8937, *w340=w+8951, *w341=w+8965, w342, w343, w344, *w345=w+8982, *w347=w+8996, *w348=w+9010, *w349=w+9024, *w350=w+9038, w351, w352, w353, *w354=w+9055, *w356=w+9069, *w357=w+9083, *w358=w+9097, *w359=w+9111, w360, w361, *w362=w+9127, *w365=w+9141, *w366=w+9155, *w367=w+9169, *w368=w+9183, w369, w370, w371, *w372=w+9200, *w374=w+9214, *w375=w+9228, *w376=w+9242, *w377=w+9256, w378, w379, w380, *w381=w+9273, *w383=w+9287, *w384=w+9301, *w385=w+9315, *w386=w+9329, w387, w388, *w389=w+9345, *w392=w+9359, *w393=w+9373, *w394=w+9387, *w395=w+9401, w396, w397, w398, *w399=w+9418, *w401=w+9432, *w402=w+9446, *w403=w+9460, *w404=w+9474, w405, w406, w407, *w408=w+9491, *w410=w+9505, *w411=w+9519, *w412=w+9533, *w413=w+9547, w414, w415, *w416=w+9563, *w419=w+9577, *w420=w+9591, *w421=w+9605, *w422=w+9619, w423, w424, w425, *w426=w+9636, *w428=w+9650, *w429=w+9664, *w430=w+9678, *w431=w+9692, w432, w433, w434, *w435=w+9709, *w437=w+9723, *w438=w+9737, *w439=w+9751, *w440=w+9765, w441, w442, *w443=w+9781, *w446=w+9795, *w447=w+9809, *w448=w+9823, *w449=w+9837, w450, w451, w452, *w453=w+9854, *w455=w+9868, *w456=w+9882, *w457=w+9896, *w458=w+9910, w459, w460, w461, *w462=w+9927, *w464=w+9941, *w465=w+9955, *w466=w+9969, *w467=w+9983, w468, w469, *w470=w+9999, *w473=w+10013, *w474=w+10027, *w475=w+10041, *w476=w+10055, w477, w478, w479, *w480=w+10072, *w482=w+10086, *w483=w+10100, *w484=w+10114, *w485=w+10128, w486, w487, w488, *w489=w+10145, *w491=w+10159, *w492=w+10173, *w493=w+10187, *w494=w+10201, *w495=w+10215, *w496=w+10636, w497, *w498=w+10953, *w499=w+11371, *w500=w+11679, *w501=w+12095, *w510=w+12323, *w511=w+12772, *w537=w+13085, *w553=w+13465, *w554=w+13686, *w555=w+13894, *w592=w+13946;
  /* #0: @0 = 0 */
  w0 = 0.;
  /* #1: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 364, w2);
  /* #3: @3 = @2[:7] */
  for (rr=w3, ss=w2+0; ss!=w2+7; ss+=1) *rr++ = *ss;
  /* #4: @4 = @2[7:14] */
  for (rr=w4, ss=w2+7; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #5: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #6: @3 = @3' */
  /* #7: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #8: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #9: @3 = @2[:7] */
  for (rr=w3, ss=w2+0; ss!=w2+7; ss+=1) *rr++ = *ss;
  /* #10: @4 = @2[7:14] */
  for (rr=w4, ss=w2+7; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #11: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #12: @0 = mac(@1,@3,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #13: @6 = 0 */
  w6 = 0.;
  /* #14: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #15: @8 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+364 : 0, 100, w8);
  /* #16: @9 = @8[:4] */
  for (rr=w9, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #17: @9 = @9' */
  /* #18: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #19: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #20: @9 = @8[:4] */
  for (rr=w9, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #21: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #22: @0 = (@0+@6) */
  w0 += w6;
  /* #23: @6 = 0 */
  w6 = 0.;
  /* #24: @4 = zeros(1x7) */
  casadi_clear(w4, 7);
  /* #25: @11 = @2[14:21] */
  for (rr=w11, ss=w2+14; ss!=w2+21; ss+=1) *rr++ = *ss;
  /* #26: @12 = @2[21:28] */
  for (rr=w12, ss=w2+21; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #27: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<7; ++i) (*rr++) -= (*cs++);
  /* #28: @11 = @11' */
  /* #29: @13 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w13);
  /* #30: @4 = mac(@11,@13,@4) */
  for (i=0, rr=w4; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w11+j, tt=w13+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #31: @11 = @2[14:21] */
  for (rr=w11, ss=w2+14; ss!=w2+21; ss+=1) *rr++ = *ss;
  /* #32: @12 = @2[21:28] */
  for (rr=w12, ss=w2+21; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #33: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<7; ++i) (*rr++) -= (*cs++);
  /* #34: @6 = mac(@4,@11,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w4+j, tt=w11+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #35: @0 = (@0+@6) */
  w0 += w6;
  /* #36: @6 = 0 */
  w6 = 0.;
  /* #37: @14 = zeros(1x4) */
  casadi_clear(w14, 4);
  /* #38: @15 = @8[4:8] */
  for (rr=w15, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #39: @15 = @15' */
  /* #40: @16 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w16);
  /* #41: @14 = mac(@15,@16,@14) */
  for (i=0, rr=w14; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w15+j, tt=w16+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #42: @15 = @8[4:8] */
  for (rr=w15, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #43: @6 = mac(@14,@15,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #44: @0 = (@0+@6) */
  w0 += w6;
  /* #45: @6 = 0 */
  w6 = 0.;
  /* #46: @12 = zeros(1x7) */
  casadi_clear(w12, 7);
  /* #47: @17 = @2[28:35] */
  for (rr=w17, ss=w2+28; ss!=w2+35; ss+=1) *rr++ = *ss;
  /* #48: @18 = @2[35:42] */
  for (rr=w18, ss=w2+35; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #49: @17 = (@17-@18) */
  for (i=0, rr=w17, cs=w18; i<7; ++i) (*rr++) -= (*cs++);
  /* #50: @17 = @17' */
  /* #51: @19 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w19);
  /* #52: @12 = mac(@17,@19,@12) */
  for (i=0, rr=w12; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w17+j, tt=w19+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #53: @17 = @2[28:35] */
  for (rr=w17, ss=w2+28; ss!=w2+35; ss+=1) *rr++ = *ss;
  /* #54: @18 = @2[35:42] */
  for (rr=w18, ss=w2+35; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #55: @17 = (@17-@18) */
  for (i=0, rr=w17, cs=w18; i<7; ++i) (*rr++) -= (*cs++);
  /* #56: @6 = mac(@12,@17,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w12+j, tt=w17+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #57: @0 = (@0+@6) */
  w0 += w6;
  /* #58: @6 = 0 */
  w6 = 0.;
  /* #59: @20 = zeros(1x4) */
  casadi_clear(w20, 4);
  /* #60: @21 = @8[8:12] */
  for (rr=w21, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #61: @21 = @21' */
  /* #62: @22 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w22);
  /* #63: @20 = mac(@21,@22,@20) */
  for (i=0, rr=w20; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w21+j, tt=w22+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #64: @21 = @8[8:12] */
  for (rr=w21, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #65: @6 = mac(@20,@21,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w20+j, tt=w21+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #66: @0 = (@0+@6) */
  w0 += w6;
  /* #67: @6 = 0 */
  w6 = 0.;
  /* #68: @18 = zeros(1x7) */
  casadi_clear(w18, 7);
  /* #69: @23 = @2[42:49] */
  for (rr=w23, ss=w2+42; ss!=w2+49; ss+=1) *rr++ = *ss;
  /* #70: @24 = @2[49:56] */
  for (rr=w24, ss=w2+49; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #71: @23 = (@23-@24) */
  for (i=0, rr=w23, cs=w24; i<7; ++i) (*rr++) -= (*cs++);
  /* #72: @23 = @23' */
  /* #73: @25 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w25);
  /* #74: @18 = mac(@23,@25,@18) */
  for (i=0, rr=w18; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w23+j, tt=w25+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #75: @23 = @2[42:49] */
  for (rr=w23, ss=w2+42; ss!=w2+49; ss+=1) *rr++ = *ss;
  /* #76: @24 = @2[49:56] */
  for (rr=w24, ss=w2+49; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #77: @23 = (@23-@24) */
  for (i=0, rr=w23, cs=w24; i<7; ++i) (*rr++) -= (*cs++);
  /* #78: @6 = mac(@18,@23,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w18+j, tt=w23+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #79: @0 = (@0+@6) */
  w0 += w6;
  /* #80: @6 = 0 */
  w6 = 0.;
  /* #81: @26 = zeros(1x4) */
  casadi_clear(w26, 4);
  /* #82: @27 = @8[12:16] */
  for (rr=w27, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #83: @27 = @27' */
  /* #84: @28 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w28);
  /* #85: @26 = mac(@27,@28,@26) */
  for (i=0, rr=w26; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w27+j, tt=w28+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #86: @27 = @8[12:16] */
  for (rr=w27, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #87: @6 = mac(@26,@27,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w26+j, tt=w27+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #88: @0 = (@0+@6) */
  w0 += w6;
  /* #89: @6 = 0 */
  w6 = 0.;
  /* #90: @24 = zeros(1x7) */
  casadi_clear(w24, 7);
  /* #91: @29 = @2[56:63] */
  for (rr=w29, ss=w2+56; ss!=w2+63; ss+=1) *rr++ = *ss;
  /* #92: @30 = @2[63:70] */
  for (rr=w30, ss=w2+63; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #93: @29 = (@29-@30) */
  for (i=0, rr=w29, cs=w30; i<7; ++i) (*rr++) -= (*cs++);
  /* #94: @29 = @29' */
  /* #95: @31 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w31);
  /* #96: @24 = mac(@29,@31,@24) */
  for (i=0, rr=w24; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w29+j, tt=w31+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #97: @29 = @2[56:63] */
  for (rr=w29, ss=w2+56; ss!=w2+63; ss+=1) *rr++ = *ss;
  /* #98: @30 = @2[63:70] */
  for (rr=w30, ss=w2+63; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #99: @29 = (@29-@30) */
  for (i=0, rr=w29, cs=w30; i<7; ++i) (*rr++) -= (*cs++);
  /* #100: @6 = mac(@24,@29,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w24+j, tt=w29+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #101: @0 = (@0+@6) */
  w0 += w6;
  /* #102: @6 = 0 */
  w6 = 0.;
  /* #103: @32 = zeros(1x4) */
  casadi_clear(w32, 4);
  /* #104: @33 = @8[16:20] */
  for (rr=w33, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #105: @33 = @33' */
  /* #106: @34 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w34);
  /* #107: @32 = mac(@33,@34,@32) */
  for (i=0, rr=w32; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w33+j, tt=w34+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #108: @33 = @8[16:20] */
  for (rr=w33, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #109: @6 = mac(@32,@33,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w32+j, tt=w33+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #110: @0 = (@0+@6) */
  w0 += w6;
  /* #111: @6 = 0 */
  w6 = 0.;
  /* #112: @30 = zeros(1x7) */
  casadi_clear(w30, 7);
  /* #113: @35 = @2[70:77] */
  for (rr=w35, ss=w2+70; ss!=w2+77; ss+=1) *rr++ = *ss;
  /* #114: @36 = @2[77:84] */
  for (rr=w36, ss=w2+77; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #115: @35 = (@35-@36) */
  for (i=0, rr=w35, cs=w36; i<7; ++i) (*rr++) -= (*cs++);
  /* #116: @35 = @35' */
  /* #117: @37 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w37);
  /* #118: @30 = mac(@35,@37,@30) */
  for (i=0, rr=w30; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w35+j, tt=w37+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #119: @35 = @2[70:77] */
  for (rr=w35, ss=w2+70; ss!=w2+77; ss+=1) *rr++ = *ss;
  /* #120: @36 = @2[77:84] */
  for (rr=w36, ss=w2+77; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #121: @35 = (@35-@36) */
  for (i=0, rr=w35, cs=w36; i<7; ++i) (*rr++) -= (*cs++);
  /* #122: @6 = mac(@30,@35,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w30+j, tt=w35+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #123: @0 = (@0+@6) */
  w0 += w6;
  /* #124: @6 = 0 */
  w6 = 0.;
  /* #125: @38 = zeros(1x4) */
  casadi_clear(w38, 4);
  /* #126: @39 = @8[20:24] */
  for (rr=w39, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #127: @39 = @39' */
  /* #128: @40 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w40);
  /* #129: @38 = mac(@39,@40,@38) */
  for (i=0, rr=w38; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w39+j, tt=w40+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #130: @39 = @8[20:24] */
  for (rr=w39, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #131: @6 = mac(@38,@39,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w38+j, tt=w39+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #132: @0 = (@0+@6) */
  w0 += w6;
  /* #133: @6 = 0 */
  w6 = 0.;
  /* #134: @36 = zeros(1x7) */
  casadi_clear(w36, 7);
  /* #135: @41 = @2[84:91] */
  for (rr=w41, ss=w2+84; ss!=w2+91; ss+=1) *rr++ = *ss;
  /* #136: @42 = @2[91:98] */
  for (rr=w42, ss=w2+91; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #137: @41 = (@41-@42) */
  for (i=0, rr=w41, cs=w42; i<7; ++i) (*rr++) -= (*cs++);
  /* #138: @41 = @41' */
  /* #139: @43 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w43);
  /* #140: @36 = mac(@41,@43,@36) */
  for (i=0, rr=w36; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w41+j, tt=w43+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #141: @41 = @2[84:91] */
  for (rr=w41, ss=w2+84; ss!=w2+91; ss+=1) *rr++ = *ss;
  /* #142: @42 = @2[91:98] */
  for (rr=w42, ss=w2+91; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #143: @41 = (@41-@42) */
  for (i=0, rr=w41, cs=w42; i<7; ++i) (*rr++) -= (*cs++);
  /* #144: @6 = mac(@36,@41,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w36+j, tt=w41+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #145: @0 = (@0+@6) */
  w0 += w6;
  /* #146: @6 = 0 */
  w6 = 0.;
  /* #147: @44 = zeros(1x4) */
  casadi_clear(w44, 4);
  /* #148: @45 = @8[24:28] */
  for (rr=w45, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #149: @45 = @45' */
  /* #150: @46 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w46);
  /* #151: @44 = mac(@45,@46,@44) */
  for (i=0, rr=w44; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w45+j, tt=w46+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #152: @45 = @8[24:28] */
  for (rr=w45, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #153: @6 = mac(@44,@45,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w44+j, tt=w45+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #154: @0 = (@0+@6) */
  w0 += w6;
  /* #155: @6 = 0 */
  w6 = 0.;
  /* #156: @42 = zeros(1x7) */
  casadi_clear(w42, 7);
  /* #157: @47 = @2[98:105] */
  for (rr=w47, ss=w2+98; ss!=w2+105; ss+=1) *rr++ = *ss;
  /* #158: @48 = @2[105:112] */
  for (rr=w48, ss=w2+105; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #159: @47 = (@47-@48) */
  for (i=0, rr=w47, cs=w48; i<7; ++i) (*rr++) -= (*cs++);
  /* #160: @47 = @47' */
  /* #161: @49 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w49);
  /* #162: @42 = mac(@47,@49,@42) */
  for (i=0, rr=w42; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w47+j, tt=w49+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #163: @47 = @2[98:105] */
  for (rr=w47, ss=w2+98; ss!=w2+105; ss+=1) *rr++ = *ss;
  /* #164: @48 = @2[105:112] */
  for (rr=w48, ss=w2+105; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #165: @47 = (@47-@48) */
  for (i=0, rr=w47, cs=w48; i<7; ++i) (*rr++) -= (*cs++);
  /* #166: @6 = mac(@42,@47,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w42+j, tt=w47+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #167: @0 = (@0+@6) */
  w0 += w6;
  /* #168: @6 = 0 */
  w6 = 0.;
  /* #169: @50 = zeros(1x4) */
  casadi_clear(w50, 4);
  /* #170: @51 = @8[28:32] */
  for (rr=w51, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #171: @51 = @51' */
  /* #172: @52 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w52);
  /* #173: @50 = mac(@51,@52,@50) */
  for (i=0, rr=w50; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w51+j, tt=w52+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #174: @51 = @8[28:32] */
  for (rr=w51, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #175: @6 = mac(@50,@51,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w50+j, tt=w51+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #176: @0 = (@0+@6) */
  w0 += w6;
  /* #177: @6 = 0 */
  w6 = 0.;
  /* #178: @48 = zeros(1x7) */
  casadi_clear(w48, 7);
  /* #179: @53 = @2[112:119] */
  for (rr=w53, ss=w2+112; ss!=w2+119; ss+=1) *rr++ = *ss;
  /* #180: @54 = @2[119:126] */
  for (rr=w54, ss=w2+119; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #181: @53 = (@53-@54) */
  for (i=0, rr=w53, cs=w54; i<7; ++i) (*rr++) -= (*cs++);
  /* #182: @53 = @53' */
  /* #183: @55 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w55);
  /* #184: @48 = mac(@53,@55,@48) */
  for (i=0, rr=w48; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w53+j, tt=w55+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #185: @53 = @2[112:119] */
  for (rr=w53, ss=w2+112; ss!=w2+119; ss+=1) *rr++ = *ss;
  /* #186: @54 = @2[119:126] */
  for (rr=w54, ss=w2+119; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #187: @53 = (@53-@54) */
  for (i=0, rr=w53, cs=w54; i<7; ++i) (*rr++) -= (*cs++);
  /* #188: @6 = mac(@48,@53,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w48+j, tt=w53+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #189: @0 = (@0+@6) */
  w0 += w6;
  /* #190: @6 = 0 */
  w6 = 0.;
  /* #191: @56 = zeros(1x4) */
  casadi_clear(w56, 4);
  /* #192: @57 = @8[32:36] */
  for (rr=w57, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #193: @57 = @57' */
  /* #194: @58 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w58);
  /* #195: @56 = mac(@57,@58,@56) */
  for (i=0, rr=w56; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w57+j, tt=w58+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #196: @57 = @8[32:36] */
  for (rr=w57, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #197: @6 = mac(@56,@57,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w56+j, tt=w57+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #198: @0 = (@0+@6) */
  w0 += w6;
  /* #199: @6 = 0 */
  w6 = 0.;
  /* #200: @54 = zeros(1x7) */
  casadi_clear(w54, 7);
  /* #201: @59 = @2[126:133] */
  for (rr=w59, ss=w2+126; ss!=w2+133; ss+=1) *rr++ = *ss;
  /* #202: @60 = @2[133:140] */
  for (rr=w60, ss=w2+133; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #203: @59 = (@59-@60) */
  for (i=0, rr=w59, cs=w60; i<7; ++i) (*rr++) -= (*cs++);
  /* #204: @59 = @59' */
  /* #205: @61 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w61);
  /* #206: @54 = mac(@59,@61,@54) */
  for (i=0, rr=w54; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w59+j, tt=w61+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #207: @59 = @2[126:133] */
  for (rr=w59, ss=w2+126; ss!=w2+133; ss+=1) *rr++ = *ss;
  /* #208: @60 = @2[133:140] */
  for (rr=w60, ss=w2+133; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #209: @59 = (@59-@60) */
  for (i=0, rr=w59, cs=w60; i<7; ++i) (*rr++) -= (*cs++);
  /* #210: @6 = mac(@54,@59,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w54+j, tt=w59+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #211: @0 = (@0+@6) */
  w0 += w6;
  /* #212: @6 = 0 */
  w6 = 0.;
  /* #213: @62 = zeros(1x4) */
  casadi_clear(w62, 4);
  /* #214: @63 = @8[36:40] */
  for (rr=w63, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #215: @63 = @63' */
  /* #216: @64 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w64);
  /* #217: @62 = mac(@63,@64,@62) */
  for (i=0, rr=w62; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w63+j, tt=w64+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #218: @63 = @8[36:40] */
  for (rr=w63, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #219: @6 = mac(@62,@63,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w62+j, tt=w63+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #220: @0 = (@0+@6) */
  w0 += w6;
  /* #221: @6 = 0 */
  w6 = 0.;
  /* #222: @60 = zeros(1x7) */
  casadi_clear(w60, 7);
  /* #223: @65 = @2[140:147] */
  for (rr=w65, ss=w2+140; ss!=w2+147; ss+=1) *rr++ = *ss;
  /* #224: @66 = @2[147:154] */
  for (rr=w66, ss=w2+147; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #225: @65 = (@65-@66) */
  for (i=0, rr=w65, cs=w66; i<7; ++i) (*rr++) -= (*cs++);
  /* #226: @65 = @65' */
  /* #227: @67 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w67);
  /* #228: @60 = mac(@65,@67,@60) */
  for (i=0, rr=w60; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w65+j, tt=w67+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #229: @65 = @2[140:147] */
  for (rr=w65, ss=w2+140; ss!=w2+147; ss+=1) *rr++ = *ss;
  /* #230: @66 = @2[147:154] */
  for (rr=w66, ss=w2+147; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #231: @65 = (@65-@66) */
  for (i=0, rr=w65, cs=w66; i<7; ++i) (*rr++) -= (*cs++);
  /* #232: @6 = mac(@60,@65,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w60+j, tt=w65+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #233: @0 = (@0+@6) */
  w0 += w6;
  /* #234: @6 = 0 */
  w6 = 0.;
  /* #235: @68 = zeros(1x4) */
  casadi_clear(w68, 4);
  /* #236: @69 = @8[40:44] */
  for (rr=w69, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #237: @69 = @69' */
  /* #238: @70 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w70);
  /* #239: @68 = mac(@69,@70,@68) */
  for (i=0, rr=w68; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w69+j, tt=w70+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #240: @69 = @8[40:44] */
  for (rr=w69, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #241: @6 = mac(@68,@69,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w68+j, tt=w69+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #242: @0 = (@0+@6) */
  w0 += w6;
  /* #243: @6 = 0 */
  w6 = 0.;
  /* #244: @66 = zeros(1x7) */
  casadi_clear(w66, 7);
  /* #245: @71 = @2[154:161] */
  for (rr=w71, ss=w2+154; ss!=w2+161; ss+=1) *rr++ = *ss;
  /* #246: @72 = @2[161:168] */
  for (rr=w72, ss=w2+161; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #247: @71 = (@71-@72) */
  for (i=0, rr=w71, cs=w72; i<7; ++i) (*rr++) -= (*cs++);
  /* #248: @71 = @71' */
  /* #249: @73 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w73);
  /* #250: @66 = mac(@71,@73,@66) */
  for (i=0, rr=w66; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w71+j, tt=w73+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #251: @71 = @2[154:161] */
  for (rr=w71, ss=w2+154; ss!=w2+161; ss+=1) *rr++ = *ss;
  /* #252: @72 = @2[161:168] */
  for (rr=w72, ss=w2+161; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #253: @71 = (@71-@72) */
  for (i=0, rr=w71, cs=w72; i<7; ++i) (*rr++) -= (*cs++);
  /* #254: @6 = mac(@66,@71,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w66+j, tt=w71+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #255: @0 = (@0+@6) */
  w0 += w6;
  /* #256: @6 = 0 */
  w6 = 0.;
  /* #257: @74 = zeros(1x4) */
  casadi_clear(w74, 4);
  /* #258: @75 = @8[44:48] */
  for (rr=w75, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #259: @75 = @75' */
  /* #260: @76 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w76);
  /* #261: @74 = mac(@75,@76,@74) */
  for (i=0, rr=w74; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w75+j, tt=w76+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #262: @75 = @8[44:48] */
  for (rr=w75, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #263: @6 = mac(@74,@75,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w74+j, tt=w75+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #264: @0 = (@0+@6) */
  w0 += w6;
  /* #265: @6 = 0 */
  w6 = 0.;
  /* #266: @72 = zeros(1x7) */
  casadi_clear(w72, 7);
  /* #267: @77 = @2[168:175] */
  for (rr=w77, ss=w2+168; ss!=w2+175; ss+=1) *rr++ = *ss;
  /* #268: @78 = @2[175:182] */
  for (rr=w78, ss=w2+175; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #269: @77 = (@77-@78) */
  for (i=0, rr=w77, cs=w78; i<7; ++i) (*rr++) -= (*cs++);
  /* #270: @77 = @77' */
  /* #271: @79 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w79);
  /* #272: @72 = mac(@77,@79,@72) */
  for (i=0, rr=w72; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w77+j, tt=w79+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #273: @77 = @2[168:175] */
  for (rr=w77, ss=w2+168; ss!=w2+175; ss+=1) *rr++ = *ss;
  /* #274: @78 = @2[175:182] */
  for (rr=w78, ss=w2+175; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #275: @77 = (@77-@78) */
  for (i=0, rr=w77, cs=w78; i<7; ++i) (*rr++) -= (*cs++);
  /* #276: @6 = mac(@72,@77,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w72+j, tt=w77+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #277: @0 = (@0+@6) */
  w0 += w6;
  /* #278: @6 = 0 */
  w6 = 0.;
  /* #279: @80 = zeros(1x4) */
  casadi_clear(w80, 4);
  /* #280: @81 = @8[48:52] */
  for (rr=w81, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #281: @81 = @81' */
  /* #282: @82 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w82);
  /* #283: @80 = mac(@81,@82,@80) */
  for (i=0, rr=w80; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w81+j, tt=w82+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #284: @81 = @8[48:52] */
  for (rr=w81, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #285: @6 = mac(@80,@81,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w80+j, tt=w81+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #286: @0 = (@0+@6) */
  w0 += w6;
  /* #287: @6 = 0 */
  w6 = 0.;
  /* #288: @78 = zeros(1x7) */
  casadi_clear(w78, 7);
  /* #289: @83 = @2[182:189] */
  for (rr=w83, ss=w2+182; ss!=w2+189; ss+=1) *rr++ = *ss;
  /* #290: @84 = @2[189:196] */
  for (rr=w84, ss=w2+189; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #291: @83 = (@83-@84) */
  for (i=0, rr=w83, cs=w84; i<7; ++i) (*rr++) -= (*cs++);
  /* #292: @83 = @83' */
  /* #293: @85 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w85);
  /* #294: @78 = mac(@83,@85,@78) */
  for (i=0, rr=w78; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w83+j, tt=w85+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #295: @83 = @2[182:189] */
  for (rr=w83, ss=w2+182; ss!=w2+189; ss+=1) *rr++ = *ss;
  /* #296: @84 = @2[189:196] */
  for (rr=w84, ss=w2+189; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #297: @83 = (@83-@84) */
  for (i=0, rr=w83, cs=w84; i<7; ++i) (*rr++) -= (*cs++);
  /* #298: @6 = mac(@78,@83,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w78+j, tt=w83+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #299: @0 = (@0+@6) */
  w0 += w6;
  /* #300: @6 = 0 */
  w6 = 0.;
  /* #301: @86 = zeros(1x4) */
  casadi_clear(w86, 4);
  /* #302: @87 = @8[52:56] */
  for (rr=w87, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #303: @87 = @87' */
  /* #304: @88 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w88);
  /* #305: @86 = mac(@87,@88,@86) */
  for (i=0, rr=w86; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w87+j, tt=w88+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #306: @87 = @8[52:56] */
  for (rr=w87, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #307: @6 = mac(@86,@87,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w86+j, tt=w87+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #308: @0 = (@0+@6) */
  w0 += w6;
  /* #309: @6 = 0 */
  w6 = 0.;
  /* #310: @84 = zeros(1x7) */
  casadi_clear(w84, 7);
  /* #311: @89 = @2[196:203] */
  for (rr=w89, ss=w2+196; ss!=w2+203; ss+=1) *rr++ = *ss;
  /* #312: @90 = @2[203:210] */
  for (rr=w90, ss=w2+203; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #313: @89 = (@89-@90) */
  for (i=0, rr=w89, cs=w90; i<7; ++i) (*rr++) -= (*cs++);
  /* #314: @89 = @89' */
  /* #315: @91 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w91);
  /* #316: @84 = mac(@89,@91,@84) */
  for (i=0, rr=w84; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w89+j, tt=w91+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #317: @89 = @2[196:203] */
  for (rr=w89, ss=w2+196; ss!=w2+203; ss+=1) *rr++ = *ss;
  /* #318: @90 = @2[203:210] */
  for (rr=w90, ss=w2+203; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #319: @89 = (@89-@90) */
  for (i=0, rr=w89, cs=w90; i<7; ++i) (*rr++) -= (*cs++);
  /* #320: @6 = mac(@84,@89,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w84+j, tt=w89+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #321: @0 = (@0+@6) */
  w0 += w6;
  /* #322: @6 = 0 */
  w6 = 0.;
  /* #323: @92 = zeros(1x4) */
  casadi_clear(w92, 4);
  /* #324: @93 = @8[56:60] */
  for (rr=w93, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #325: @93 = @93' */
  /* #326: @94 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w94);
  /* #327: @92 = mac(@93,@94,@92) */
  for (i=0, rr=w92; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w93+j, tt=w94+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #328: @93 = @8[56:60] */
  for (rr=w93, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #329: @6 = mac(@92,@93,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w92+j, tt=w93+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #330: @0 = (@0+@6) */
  w0 += w6;
  /* #331: @6 = 0 */
  w6 = 0.;
  /* #332: @90 = zeros(1x7) */
  casadi_clear(w90, 7);
  /* #333: @95 = @2[210:217] */
  for (rr=w95, ss=w2+210; ss!=w2+217; ss+=1) *rr++ = *ss;
  /* #334: @96 = @2[217:224] */
  for (rr=w96, ss=w2+217; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #335: @95 = (@95-@96) */
  for (i=0, rr=w95, cs=w96; i<7; ++i) (*rr++) -= (*cs++);
  /* #336: @95 = @95' */
  /* #337: @97 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w97);
  /* #338: @90 = mac(@95,@97,@90) */
  for (i=0, rr=w90; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w95+j, tt=w97+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #339: @95 = @2[210:217] */
  for (rr=w95, ss=w2+210; ss!=w2+217; ss+=1) *rr++ = *ss;
  /* #340: @96 = @2[217:224] */
  for (rr=w96, ss=w2+217; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #341: @95 = (@95-@96) */
  for (i=0, rr=w95, cs=w96; i<7; ++i) (*rr++) -= (*cs++);
  /* #342: @6 = mac(@90,@95,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w90+j, tt=w95+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #343: @0 = (@0+@6) */
  w0 += w6;
  /* #344: @6 = 0 */
  w6 = 0.;
  /* #345: @98 = zeros(1x4) */
  casadi_clear(w98, 4);
  /* #346: @99 = @8[60:64] */
  for (rr=w99, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #347: @99 = @99' */
  /* #348: @100 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w100);
  /* #349: @98 = mac(@99,@100,@98) */
  for (i=0, rr=w98; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w99+j, tt=w100+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #350: @99 = @8[60:64] */
  for (rr=w99, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #351: @6 = mac(@98,@99,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w98+j, tt=w99+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #352: @0 = (@0+@6) */
  w0 += w6;
  /* #353: @6 = 0 */
  w6 = 0.;
  /* #354: @96 = zeros(1x7) */
  casadi_clear(w96, 7);
  /* #355: @101 = @2[224:231] */
  for (rr=w101, ss=w2+224; ss!=w2+231; ss+=1) *rr++ = *ss;
  /* #356: @102 = @2[231:238] */
  for (rr=w102, ss=w2+231; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #357: @101 = (@101-@102) */
  for (i=0, rr=w101, cs=w102; i<7; ++i) (*rr++) -= (*cs++);
  /* #358: @101 = @101' */
  /* #359: @103 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w103);
  /* #360: @96 = mac(@101,@103,@96) */
  for (i=0, rr=w96; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w101+j, tt=w103+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #361: @101 = @2[224:231] */
  for (rr=w101, ss=w2+224; ss!=w2+231; ss+=1) *rr++ = *ss;
  /* #362: @102 = @2[231:238] */
  for (rr=w102, ss=w2+231; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #363: @101 = (@101-@102) */
  for (i=0, rr=w101, cs=w102; i<7; ++i) (*rr++) -= (*cs++);
  /* #364: @6 = mac(@96,@101,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w96+j, tt=w101+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #365: @0 = (@0+@6) */
  w0 += w6;
  /* #366: @6 = 0 */
  w6 = 0.;
  /* #367: @104 = zeros(1x4) */
  casadi_clear(w104, 4);
  /* #368: @105 = @8[64:68] */
  for (rr=w105, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #369: @105 = @105' */
  /* #370: @106 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w106);
  /* #371: @104 = mac(@105,@106,@104) */
  for (i=0, rr=w104; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w105+j, tt=w106+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #372: @105 = @8[64:68] */
  for (rr=w105, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #373: @6 = mac(@104,@105,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w104+j, tt=w105+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #374: @0 = (@0+@6) */
  w0 += w6;
  /* #375: @6 = 0 */
  w6 = 0.;
  /* #376: @102 = zeros(1x7) */
  casadi_clear(w102, 7);
  /* #377: @107 = @2[238:245] */
  for (rr=w107, ss=w2+238; ss!=w2+245; ss+=1) *rr++ = *ss;
  /* #378: @108 = @2[245:252] */
  for (rr=w108, ss=w2+245; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #379: @107 = (@107-@108) */
  for (i=0, rr=w107, cs=w108; i<7; ++i) (*rr++) -= (*cs++);
  /* #380: @107 = @107' */
  /* #381: @109 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w109);
  /* #382: @102 = mac(@107,@109,@102) */
  for (i=0, rr=w102; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w107+j, tt=w109+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #383: @107 = @2[238:245] */
  for (rr=w107, ss=w2+238; ss!=w2+245; ss+=1) *rr++ = *ss;
  /* #384: @108 = @2[245:252] */
  for (rr=w108, ss=w2+245; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #385: @107 = (@107-@108) */
  for (i=0, rr=w107, cs=w108; i<7; ++i) (*rr++) -= (*cs++);
  /* #386: @6 = mac(@102,@107,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w102+j, tt=w107+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #387: @0 = (@0+@6) */
  w0 += w6;
  /* #388: @6 = 0 */
  w6 = 0.;
  /* #389: @110 = zeros(1x4) */
  casadi_clear(w110, 4);
  /* #390: @111 = @8[68:72] */
  for (rr=w111, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #391: @111 = @111' */
  /* #392: @112 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w112);
  /* #393: @110 = mac(@111,@112,@110) */
  for (i=0, rr=w110; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w111+j, tt=w112+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #394: @111 = @8[68:72] */
  for (rr=w111, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #395: @6 = mac(@110,@111,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w110+j, tt=w111+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #396: @0 = (@0+@6) */
  w0 += w6;
  /* #397: @6 = 0 */
  w6 = 0.;
  /* #398: @108 = zeros(1x7) */
  casadi_clear(w108, 7);
  /* #399: @113 = @2[252:259] */
  for (rr=w113, ss=w2+252; ss!=w2+259; ss+=1) *rr++ = *ss;
  /* #400: @114 = @2[259:266] */
  for (rr=w114, ss=w2+259; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #401: @113 = (@113-@114) */
  for (i=0, rr=w113, cs=w114; i<7; ++i) (*rr++) -= (*cs++);
  /* #402: @113 = @113' */
  /* #403: @115 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w115);
  /* #404: @108 = mac(@113,@115,@108) */
  for (i=0, rr=w108; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w113+j, tt=w115+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #405: @113 = @2[252:259] */
  for (rr=w113, ss=w2+252; ss!=w2+259; ss+=1) *rr++ = *ss;
  /* #406: @114 = @2[259:266] */
  for (rr=w114, ss=w2+259; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #407: @113 = (@113-@114) */
  for (i=0, rr=w113, cs=w114; i<7; ++i) (*rr++) -= (*cs++);
  /* #408: @6 = mac(@108,@113,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w108+j, tt=w113+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #409: @0 = (@0+@6) */
  w0 += w6;
  /* #410: @6 = 0 */
  w6 = 0.;
  /* #411: @116 = zeros(1x4) */
  casadi_clear(w116, 4);
  /* #412: @117 = @8[72:76] */
  for (rr=w117, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #413: @117 = @117' */
  /* #414: @118 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w118);
  /* #415: @116 = mac(@117,@118,@116) */
  for (i=0, rr=w116; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w117+j, tt=w118+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #416: @117 = @8[72:76] */
  for (rr=w117, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #417: @6 = mac(@116,@117,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w116+j, tt=w117+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #418: @0 = (@0+@6) */
  w0 += w6;
  /* #419: @6 = 0 */
  w6 = 0.;
  /* #420: @114 = zeros(1x7) */
  casadi_clear(w114, 7);
  /* #421: @119 = @2[266:273] */
  for (rr=w119, ss=w2+266; ss!=w2+273; ss+=1) *rr++ = *ss;
  /* #422: @120 = @2[273:280] */
  for (rr=w120, ss=w2+273; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #423: @119 = (@119-@120) */
  for (i=0, rr=w119, cs=w120; i<7; ++i) (*rr++) -= (*cs++);
  /* #424: @119 = @119' */
  /* #425: @121 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w121);
  /* #426: @114 = mac(@119,@121,@114) */
  for (i=0, rr=w114; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w119+j, tt=w121+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #427: @119 = @2[266:273] */
  for (rr=w119, ss=w2+266; ss!=w2+273; ss+=1) *rr++ = *ss;
  /* #428: @120 = @2[273:280] */
  for (rr=w120, ss=w2+273; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #429: @119 = (@119-@120) */
  for (i=0, rr=w119, cs=w120; i<7; ++i) (*rr++) -= (*cs++);
  /* #430: @6 = mac(@114,@119,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w114+j, tt=w119+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #431: @0 = (@0+@6) */
  w0 += w6;
  /* #432: @6 = 0 */
  w6 = 0.;
  /* #433: @122 = zeros(1x4) */
  casadi_clear(w122, 4);
  /* #434: @123 = @8[76:80] */
  for (rr=w123, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #435: @123 = @123' */
  /* #436: @124 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w124);
  /* #437: @122 = mac(@123,@124,@122) */
  for (i=0, rr=w122; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w123+j, tt=w124+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #438: @123 = @8[76:80] */
  for (rr=w123, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #439: @6 = mac(@122,@123,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w122+j, tt=w123+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #440: @0 = (@0+@6) */
  w0 += w6;
  /* #441: @6 = 0 */
  w6 = 0.;
  /* #442: @120 = zeros(1x7) */
  casadi_clear(w120, 7);
  /* #443: @125 = @2[280:287] */
  for (rr=w125, ss=w2+280; ss!=w2+287; ss+=1) *rr++ = *ss;
  /* #444: @126 = @2[287:294] */
  for (rr=w126, ss=w2+287; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #445: @125 = (@125-@126) */
  for (i=0, rr=w125, cs=w126; i<7; ++i) (*rr++) -= (*cs++);
  /* #446: @125 = @125' */
  /* #447: @127 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w127);
  /* #448: @120 = mac(@125,@127,@120) */
  for (i=0, rr=w120; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w125+j, tt=w127+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #449: @125 = @2[280:287] */
  for (rr=w125, ss=w2+280; ss!=w2+287; ss+=1) *rr++ = *ss;
  /* #450: @126 = @2[287:294] */
  for (rr=w126, ss=w2+287; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #451: @125 = (@125-@126) */
  for (i=0, rr=w125, cs=w126; i<7; ++i) (*rr++) -= (*cs++);
  /* #452: @6 = mac(@120,@125,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w120+j, tt=w125+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #453: @0 = (@0+@6) */
  w0 += w6;
  /* #454: @6 = 0 */
  w6 = 0.;
  /* #455: @128 = zeros(1x4) */
  casadi_clear(w128, 4);
  /* #456: @129 = @8[80:84] */
  for (rr=w129, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #457: @129 = @129' */
  /* #458: @130 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w130);
  /* #459: @128 = mac(@129,@130,@128) */
  for (i=0, rr=w128; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w129+j, tt=w130+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #460: @129 = @8[80:84] */
  for (rr=w129, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #461: @6 = mac(@128,@129,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w128+j, tt=w129+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #462: @0 = (@0+@6) */
  w0 += w6;
  /* #463: @6 = 0 */
  w6 = 0.;
  /* #464: @126 = zeros(1x7) */
  casadi_clear(w126, 7);
  /* #465: @131 = @2[294:301] */
  for (rr=w131, ss=w2+294; ss!=w2+301; ss+=1) *rr++ = *ss;
  /* #466: @132 = @2[301:308] */
  for (rr=w132, ss=w2+301; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #467: @131 = (@131-@132) */
  for (i=0, rr=w131, cs=w132; i<7; ++i) (*rr++) -= (*cs++);
  /* #468: @131 = @131' */
  /* #469: @133 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w133);
  /* #470: @126 = mac(@131,@133,@126) */
  for (i=0, rr=w126; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w131+j, tt=w133+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #471: @131 = @2[294:301] */
  for (rr=w131, ss=w2+294; ss!=w2+301; ss+=1) *rr++ = *ss;
  /* #472: @132 = @2[301:308] */
  for (rr=w132, ss=w2+301; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #473: @131 = (@131-@132) */
  for (i=0, rr=w131, cs=w132; i<7; ++i) (*rr++) -= (*cs++);
  /* #474: @6 = mac(@126,@131,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w126+j, tt=w131+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #475: @0 = (@0+@6) */
  w0 += w6;
  /* #476: @6 = 0 */
  w6 = 0.;
  /* #477: @134 = zeros(1x4) */
  casadi_clear(w134, 4);
  /* #478: @135 = @8[84:88] */
  for (rr=w135, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #479: @135 = @135' */
  /* #480: @136 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w136);
  /* #481: @134 = mac(@135,@136,@134) */
  for (i=0, rr=w134; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w135+j, tt=w136+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #482: @135 = @8[84:88] */
  for (rr=w135, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #483: @6 = mac(@134,@135,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w134+j, tt=w135+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #484: @0 = (@0+@6) */
  w0 += w6;
  /* #485: @6 = 0 */
  w6 = 0.;
  /* #486: @132 = zeros(1x7) */
  casadi_clear(w132, 7);
  /* #487: @137 = @2[308:315] */
  for (rr=w137, ss=w2+308; ss!=w2+315; ss+=1) *rr++ = *ss;
  /* #488: @138 = @2[315:322] */
  for (rr=w138, ss=w2+315; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #489: @137 = (@137-@138) */
  for (i=0, rr=w137, cs=w138; i<7; ++i) (*rr++) -= (*cs++);
  /* #490: @137 = @137' */
  /* #491: @139 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w139);
  /* #492: @132 = mac(@137,@139,@132) */
  for (i=0, rr=w132; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w137+j, tt=w139+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #493: @137 = @2[308:315] */
  for (rr=w137, ss=w2+308; ss!=w2+315; ss+=1) *rr++ = *ss;
  /* #494: @138 = @2[315:322] */
  for (rr=w138, ss=w2+315; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #495: @137 = (@137-@138) */
  for (i=0, rr=w137, cs=w138; i<7; ++i) (*rr++) -= (*cs++);
  /* #496: @6 = mac(@132,@137,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w132+j, tt=w137+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #497: @0 = (@0+@6) */
  w0 += w6;
  /* #498: @6 = 0 */
  w6 = 0.;
  /* #499: @140 = zeros(1x4) */
  casadi_clear(w140, 4);
  /* #500: @141 = @8[88:92] */
  for (rr=w141, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #501: @141 = @141' */
  /* #502: @142 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w142);
  /* #503: @140 = mac(@141,@142,@140) */
  for (i=0, rr=w140; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w141+j, tt=w142+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #504: @141 = @8[88:92] */
  for (rr=w141, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #505: @6 = mac(@140,@141,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w140+j, tt=w141+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #506: @0 = (@0+@6) */
  w0 += w6;
  /* #507: @6 = 0 */
  w6 = 0.;
  /* #508: @138 = zeros(1x7) */
  casadi_clear(w138, 7);
  /* #509: @143 = @2[322:329] */
  for (rr=w143, ss=w2+322; ss!=w2+329; ss+=1) *rr++ = *ss;
  /* #510: @144 = @2[329:336] */
  for (rr=w144, ss=w2+329; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #511: @143 = (@143-@144) */
  for (i=0, rr=w143, cs=w144; i<7; ++i) (*rr++) -= (*cs++);
  /* #512: @143 = @143' */
  /* #513: @145 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w145);
  /* #514: @138 = mac(@143,@145,@138) */
  for (i=0, rr=w138; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w143+j, tt=w145+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #515: @143 = @2[322:329] */
  for (rr=w143, ss=w2+322; ss!=w2+329; ss+=1) *rr++ = *ss;
  /* #516: @144 = @2[329:336] */
  for (rr=w144, ss=w2+329; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #517: @143 = (@143-@144) */
  for (i=0, rr=w143, cs=w144; i<7; ++i) (*rr++) -= (*cs++);
  /* #518: @6 = mac(@138,@143,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w138+j, tt=w143+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #519: @0 = (@0+@6) */
  w0 += w6;
  /* #520: @6 = 0 */
  w6 = 0.;
  /* #521: @146 = zeros(1x4) */
  casadi_clear(w146, 4);
  /* #522: @147 = @8[92:96] */
  for (rr=w147, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #523: @147 = @147' */
  /* #524: @148 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w148);
  /* #525: @146 = mac(@147,@148,@146) */
  for (i=0, rr=w146; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w147+j, tt=w148+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #526: @147 = @8[92:96] */
  for (rr=w147, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #527: @6 = mac(@146,@147,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w146+j, tt=w147+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #528: @0 = (@0+@6) */
  w0 += w6;
  /* #529: @6 = 0 */
  w6 = 0.;
  /* #530: @144 = zeros(1x7) */
  casadi_clear(w144, 7);
  /* #531: @149 = @2[336:343] */
  for (rr=w149, ss=w2+336; ss!=w2+343; ss+=1) *rr++ = *ss;
  /* #532: @150 = @2[343:350] */
  for (rr=w150, ss=w2+343; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #533: @149 = (@149-@150) */
  for (i=0, rr=w149, cs=w150; i<7; ++i) (*rr++) -= (*cs++);
  /* #534: @149 = @149' */
  /* #535: @151 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w151);
  /* #536: @144 = mac(@149,@151,@144) */
  for (i=0, rr=w144; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w149+j, tt=w151+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #537: @149 = @2[336:343] */
  for (rr=w149, ss=w2+336; ss!=w2+343; ss+=1) *rr++ = *ss;
  /* #538: @150 = @2[343:350] */
  for (rr=w150, ss=w2+343; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #539: @149 = (@149-@150) */
  for (i=0, rr=w149, cs=w150; i<7; ++i) (*rr++) -= (*cs++);
  /* #540: @6 = mac(@144,@149,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w144+j, tt=w149+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #541: @0 = (@0+@6) */
  w0 += w6;
  /* #542: @6 = 0 */
  w6 = 0.;
  /* #543: @152 = zeros(1x4) */
  casadi_clear(w152, 4);
  /* #544: @153 = @8[96:100] */
  for (rr=w153, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #545: @153 = @153' */
  /* #546: @154 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w154);
  /* #547: @152 = mac(@153,@154,@152) */
  for (i=0, rr=w152; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w153+j, tt=w154+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #548: @153 = @8[96:100] */
  for (rr=w153, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #549: @6 = mac(@152,@153,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w152+j, tt=w153+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #550: @0 = (@0+@6) */
  w0 += w6;
  /* #551: @6 = 0 */
  w6 = 0.;
  /* #552: @150 = zeros(1x7) */
  casadi_clear(w150, 7);
  /* #553: @155 = @2[350:357] */
  for (rr=w155, ss=w2+350; ss!=w2+357; ss+=1) *rr++ = *ss;
  /* #554: @156 = @2[357:364] */
  for (rr=w156, ss=w2+357; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #555: @155 = (@155-@156) */
  for (i=0, rr=w155, cs=w156; i<7; ++i) (*rr++) -= (*cs++);
  /* #556: @155 = @155' */
  /* #557: @157 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w157);
  /* #558: @150 = mac(@155,@157,@150) */
  for (i=0, rr=w150; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w155+j, tt=w157+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #559: @155 = @2[350:357] */
  for (rr=w155, ss=w2+350; ss!=w2+357; ss+=1) *rr++ = *ss;
  /* #560: @156 = @2[357:364] */
  for (rr=w156, ss=w2+357; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #561: @155 = (@155-@156) */
  for (i=0, rr=w155, cs=w156; i<7; ++i) (*rr++) -= (*cs++);
  /* #562: @6 = mac(@150,@155,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w150+j, tt=w155+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #563: @0 = (@0+@6) */
  w0 += w6;
  /* #564: output[0][0] = @0 */
  if (res[0]) res[0][0] = w0;
  /* #565: @158 = zeros(14x26) */
  casadi_clear(w158, 364);
  /* #566: @150 = @150' */
  /* #567: @156 = (-@150) */
  for (i=0, rr=w156, cs=w150; i<7; ++i) *rr++ = (- *cs++ );
  /* #568: (@158[357:364] += @156) */
  for (rr=w158+357, ss=w156; rr!=w158+364; rr+=1) *rr += *ss++;
  /* #569: (@158[350:357] += @150) */
  for (rr=w158+350, ss=w150; rr!=w158+357; rr+=1) *rr += *ss++;
  /* #570: @150 = zeros(1x7) */
  casadi_clear(w150, 7);
  /* #571: @155 = @155' */
  /* #572: @159 = @157' */
  for (i=0, rr=w159, cs=w157; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #573: @150 = mac(@155,@159,@150) */
  for (i=0, rr=w150; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w155+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #574: @150 = @150' */
  /* #575: @155 = (-@150) */
  for (i=0, rr=w155, cs=w150; i<7; ++i) *rr++ = (- *cs++ );
  /* #576: (@158[357:364] += @155) */
  for (rr=w158+357, ss=w155; rr!=w158+364; rr+=1) *rr += *ss++;
  /* #577: (@158[350:357] += @150) */
  for (rr=w158+350, ss=w150; rr!=w158+357; rr+=1) *rr += *ss++;
  /* #578: @144 = @144' */
  /* #579: @150 = (-@144) */
  for (i=0, rr=w150, cs=w144; i<7; ++i) *rr++ = (- *cs++ );
  /* #580: (@158[343:350] += @150) */
  for (rr=w158+343, ss=w150; rr!=w158+350; rr+=1) *rr += *ss++;
  /* #581: (@158[336:343] += @144) */
  for (rr=w158+336, ss=w144; rr!=w158+343; rr+=1) *rr += *ss++;
  /* #582: @144 = zeros(1x7) */
  casadi_clear(w144, 7);
  /* #583: @149 = @149' */
  /* #584: @159 = @151' */
  for (i=0, rr=w159, cs=w151; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #585: @144 = mac(@149,@159,@144) */
  for (i=0, rr=w144; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w149+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #586: @144 = @144' */
  /* #587: @149 = (-@144) */
  for (i=0, rr=w149, cs=w144; i<7; ++i) *rr++ = (- *cs++ );
  /* #588: (@158[343:350] += @149) */
  for (rr=w158+343, ss=w149; rr!=w158+350; rr+=1) *rr += *ss++;
  /* #589: (@158[336:343] += @144) */
  for (rr=w158+336, ss=w144; rr!=w158+343; rr+=1) *rr += *ss++;
  /* #590: @138 = @138' */
  /* #591: @144 = (-@138) */
  for (i=0, rr=w144, cs=w138; i<7; ++i) *rr++ = (- *cs++ );
  /* #592: (@158[329:336] += @144) */
  for (rr=w158+329, ss=w144; rr!=w158+336; rr+=1) *rr += *ss++;
  /* #593: (@158[322:329] += @138) */
  for (rr=w158+322, ss=w138; rr!=w158+329; rr+=1) *rr += *ss++;
  /* #594: @138 = zeros(1x7) */
  casadi_clear(w138, 7);
  /* #595: @143 = @143' */
  /* #596: @159 = @145' */
  for (i=0, rr=w159, cs=w145; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #597: @138 = mac(@143,@159,@138) */
  for (i=0, rr=w138; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w143+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #598: @138 = @138' */
  /* #599: @143 = (-@138) */
  for (i=0, rr=w143, cs=w138; i<7; ++i) *rr++ = (- *cs++ );
  /* #600: (@158[329:336] += @143) */
  for (rr=w158+329, ss=w143; rr!=w158+336; rr+=1) *rr += *ss++;
  /* #601: (@158[322:329] += @138) */
  for (rr=w158+322, ss=w138; rr!=w158+329; rr+=1) *rr += *ss++;
  /* #602: @132 = @132' */
  /* #603: @138 = (-@132) */
  for (i=0, rr=w138, cs=w132; i<7; ++i) *rr++ = (- *cs++ );
  /* #604: (@158[315:322] += @138) */
  for (rr=w158+315, ss=w138; rr!=w158+322; rr+=1) *rr += *ss++;
  /* #605: (@158[308:315] += @132) */
  for (rr=w158+308, ss=w132; rr!=w158+315; rr+=1) *rr += *ss++;
  /* #606: @132 = zeros(1x7) */
  casadi_clear(w132, 7);
  /* #607: @137 = @137' */
  /* #608: @159 = @139' */
  for (i=0, rr=w159, cs=w139; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #609: @132 = mac(@137,@159,@132) */
  for (i=0, rr=w132; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w137+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #610: @132 = @132' */
  /* #611: @137 = (-@132) */
  for (i=0, rr=w137, cs=w132; i<7; ++i) *rr++ = (- *cs++ );
  /* #612: (@158[315:322] += @137) */
  for (rr=w158+315, ss=w137; rr!=w158+322; rr+=1) *rr += *ss++;
  /* #613: (@158[308:315] += @132) */
  for (rr=w158+308, ss=w132; rr!=w158+315; rr+=1) *rr += *ss++;
  /* #614: @126 = @126' */
  /* #615: @132 = (-@126) */
  for (i=0, rr=w132, cs=w126; i<7; ++i) *rr++ = (- *cs++ );
  /* #616: (@158[301:308] += @132) */
  for (rr=w158+301, ss=w132; rr!=w158+308; rr+=1) *rr += *ss++;
  /* #617: (@158[294:301] += @126) */
  for (rr=w158+294, ss=w126; rr!=w158+301; rr+=1) *rr += *ss++;
  /* #618: @126 = zeros(1x7) */
  casadi_clear(w126, 7);
  /* #619: @131 = @131' */
  /* #620: @159 = @133' */
  for (i=0, rr=w159, cs=w133; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #621: @126 = mac(@131,@159,@126) */
  for (i=0, rr=w126; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w131+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #622: @126 = @126' */
  /* #623: @131 = (-@126) */
  for (i=0, rr=w131, cs=w126; i<7; ++i) *rr++ = (- *cs++ );
  /* #624: (@158[301:308] += @131) */
  for (rr=w158+301, ss=w131; rr!=w158+308; rr+=1) *rr += *ss++;
  /* #625: (@158[294:301] += @126) */
  for (rr=w158+294, ss=w126; rr!=w158+301; rr+=1) *rr += *ss++;
  /* #626: @120 = @120' */
  /* #627: @126 = (-@120) */
  for (i=0, rr=w126, cs=w120; i<7; ++i) *rr++ = (- *cs++ );
  /* #628: (@158[287:294] += @126) */
  for (rr=w158+287, ss=w126; rr!=w158+294; rr+=1) *rr += *ss++;
  /* #629: (@158[280:287] += @120) */
  for (rr=w158+280, ss=w120; rr!=w158+287; rr+=1) *rr += *ss++;
  /* #630: @120 = zeros(1x7) */
  casadi_clear(w120, 7);
  /* #631: @125 = @125' */
  /* #632: @159 = @127' */
  for (i=0, rr=w159, cs=w127; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #633: @120 = mac(@125,@159,@120) */
  for (i=0, rr=w120; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w125+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #634: @120 = @120' */
  /* #635: @125 = (-@120) */
  for (i=0, rr=w125, cs=w120; i<7; ++i) *rr++ = (- *cs++ );
  /* #636: (@158[287:294] += @125) */
  for (rr=w158+287, ss=w125; rr!=w158+294; rr+=1) *rr += *ss++;
  /* #637: (@158[280:287] += @120) */
  for (rr=w158+280, ss=w120; rr!=w158+287; rr+=1) *rr += *ss++;
  /* #638: @114 = @114' */
  /* #639: @120 = (-@114) */
  for (i=0, rr=w120, cs=w114; i<7; ++i) *rr++ = (- *cs++ );
  /* #640: (@158[273:280] += @120) */
  for (rr=w158+273, ss=w120; rr!=w158+280; rr+=1) *rr += *ss++;
  /* #641: (@158[266:273] += @114) */
  for (rr=w158+266, ss=w114; rr!=w158+273; rr+=1) *rr += *ss++;
  /* #642: @114 = zeros(1x7) */
  casadi_clear(w114, 7);
  /* #643: @119 = @119' */
  /* #644: @159 = @121' */
  for (i=0, rr=w159, cs=w121; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #645: @114 = mac(@119,@159,@114) */
  for (i=0, rr=w114; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w119+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #646: @114 = @114' */
  /* #647: @119 = (-@114) */
  for (i=0, rr=w119, cs=w114; i<7; ++i) *rr++ = (- *cs++ );
  /* #648: (@158[273:280] += @119) */
  for (rr=w158+273, ss=w119; rr!=w158+280; rr+=1) *rr += *ss++;
  /* #649: (@158[266:273] += @114) */
  for (rr=w158+266, ss=w114; rr!=w158+273; rr+=1) *rr += *ss++;
  /* #650: @108 = @108' */
  /* #651: @114 = (-@108) */
  for (i=0, rr=w114, cs=w108; i<7; ++i) *rr++ = (- *cs++ );
  /* #652: (@158[259:266] += @114) */
  for (rr=w158+259, ss=w114; rr!=w158+266; rr+=1) *rr += *ss++;
  /* #653: (@158[252:259] += @108) */
  for (rr=w158+252, ss=w108; rr!=w158+259; rr+=1) *rr += *ss++;
  /* #654: @108 = zeros(1x7) */
  casadi_clear(w108, 7);
  /* #655: @113 = @113' */
  /* #656: @159 = @115' */
  for (i=0, rr=w159, cs=w115; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #657: @108 = mac(@113,@159,@108) */
  for (i=0, rr=w108; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w113+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #658: @108 = @108' */
  /* #659: @113 = (-@108) */
  for (i=0, rr=w113, cs=w108; i<7; ++i) *rr++ = (- *cs++ );
  /* #660: (@158[259:266] += @113) */
  for (rr=w158+259, ss=w113; rr!=w158+266; rr+=1) *rr += *ss++;
  /* #661: (@158[252:259] += @108) */
  for (rr=w158+252, ss=w108; rr!=w158+259; rr+=1) *rr += *ss++;
  /* #662: @102 = @102' */
  /* #663: @108 = (-@102) */
  for (i=0, rr=w108, cs=w102; i<7; ++i) *rr++ = (- *cs++ );
  /* #664: (@158[245:252] += @108) */
  for (rr=w158+245, ss=w108; rr!=w158+252; rr+=1) *rr += *ss++;
  /* #665: (@158[238:245] += @102) */
  for (rr=w158+238, ss=w102; rr!=w158+245; rr+=1) *rr += *ss++;
  /* #666: @102 = zeros(1x7) */
  casadi_clear(w102, 7);
  /* #667: @107 = @107' */
  /* #668: @159 = @109' */
  for (i=0, rr=w159, cs=w109; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #669: @102 = mac(@107,@159,@102) */
  for (i=0, rr=w102; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w107+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #670: @102 = @102' */
  /* #671: @107 = (-@102) */
  for (i=0, rr=w107, cs=w102; i<7; ++i) *rr++ = (- *cs++ );
  /* #672: (@158[245:252] += @107) */
  for (rr=w158+245, ss=w107; rr!=w158+252; rr+=1) *rr += *ss++;
  /* #673: (@158[238:245] += @102) */
  for (rr=w158+238, ss=w102; rr!=w158+245; rr+=1) *rr += *ss++;
  /* #674: @96 = @96' */
  /* #675: @102 = (-@96) */
  for (i=0, rr=w102, cs=w96; i<7; ++i) *rr++ = (- *cs++ );
  /* #676: (@158[231:238] += @102) */
  for (rr=w158+231, ss=w102; rr!=w158+238; rr+=1) *rr += *ss++;
  /* #677: (@158[224:231] += @96) */
  for (rr=w158+224, ss=w96; rr!=w158+231; rr+=1) *rr += *ss++;
  /* #678: @96 = zeros(1x7) */
  casadi_clear(w96, 7);
  /* #679: @101 = @101' */
  /* #680: @159 = @103' */
  for (i=0, rr=w159, cs=w103; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #681: @96 = mac(@101,@159,@96) */
  for (i=0, rr=w96; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w101+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #682: @96 = @96' */
  /* #683: @101 = (-@96) */
  for (i=0, rr=w101, cs=w96; i<7; ++i) *rr++ = (- *cs++ );
  /* #684: (@158[231:238] += @101) */
  for (rr=w158+231, ss=w101; rr!=w158+238; rr+=1) *rr += *ss++;
  /* #685: (@158[224:231] += @96) */
  for (rr=w158+224, ss=w96; rr!=w158+231; rr+=1) *rr += *ss++;
  /* #686: @90 = @90' */
  /* #687: @96 = (-@90) */
  for (i=0, rr=w96, cs=w90; i<7; ++i) *rr++ = (- *cs++ );
  /* #688: (@158[217:224] += @96) */
  for (rr=w158+217, ss=w96; rr!=w158+224; rr+=1) *rr += *ss++;
  /* #689: (@158[210:217] += @90) */
  for (rr=w158+210, ss=w90; rr!=w158+217; rr+=1) *rr += *ss++;
  /* #690: @90 = zeros(1x7) */
  casadi_clear(w90, 7);
  /* #691: @95 = @95' */
  /* #692: @159 = @97' */
  for (i=0, rr=w159, cs=w97; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #693: @90 = mac(@95,@159,@90) */
  for (i=0, rr=w90; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w95+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #694: @90 = @90' */
  /* #695: @95 = (-@90) */
  for (i=0, rr=w95, cs=w90; i<7; ++i) *rr++ = (- *cs++ );
  /* #696: (@158[217:224] += @95) */
  for (rr=w158+217, ss=w95; rr!=w158+224; rr+=1) *rr += *ss++;
  /* #697: (@158[210:217] += @90) */
  for (rr=w158+210, ss=w90; rr!=w158+217; rr+=1) *rr += *ss++;
  /* #698: @84 = @84' */
  /* #699: @90 = (-@84) */
  for (i=0, rr=w90, cs=w84; i<7; ++i) *rr++ = (- *cs++ );
  /* #700: (@158[203:210] += @90) */
  for (rr=w158+203, ss=w90; rr!=w158+210; rr+=1) *rr += *ss++;
  /* #701: (@158[196:203] += @84) */
  for (rr=w158+196, ss=w84; rr!=w158+203; rr+=1) *rr += *ss++;
  /* #702: @84 = zeros(1x7) */
  casadi_clear(w84, 7);
  /* #703: @89 = @89' */
  /* #704: @159 = @91' */
  for (i=0, rr=w159, cs=w91; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #705: @84 = mac(@89,@159,@84) */
  for (i=0, rr=w84; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w89+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #706: @84 = @84' */
  /* #707: @89 = (-@84) */
  for (i=0, rr=w89, cs=w84; i<7; ++i) *rr++ = (- *cs++ );
  /* #708: (@158[203:210] += @89) */
  for (rr=w158+203, ss=w89; rr!=w158+210; rr+=1) *rr += *ss++;
  /* #709: (@158[196:203] += @84) */
  for (rr=w158+196, ss=w84; rr!=w158+203; rr+=1) *rr += *ss++;
  /* #710: @78 = @78' */
  /* #711: @84 = (-@78) */
  for (i=0, rr=w84, cs=w78; i<7; ++i) *rr++ = (- *cs++ );
  /* #712: (@158[189:196] += @84) */
  for (rr=w158+189, ss=w84; rr!=w158+196; rr+=1) *rr += *ss++;
  /* #713: (@158[182:189] += @78) */
  for (rr=w158+182, ss=w78; rr!=w158+189; rr+=1) *rr += *ss++;
  /* #714: @78 = zeros(1x7) */
  casadi_clear(w78, 7);
  /* #715: @83 = @83' */
  /* #716: @159 = @85' */
  for (i=0, rr=w159, cs=w85; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #717: @78 = mac(@83,@159,@78) */
  for (i=0, rr=w78; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w83+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #718: @78 = @78' */
  /* #719: @83 = (-@78) */
  for (i=0, rr=w83, cs=w78; i<7; ++i) *rr++ = (- *cs++ );
  /* #720: (@158[189:196] += @83) */
  for (rr=w158+189, ss=w83; rr!=w158+196; rr+=1) *rr += *ss++;
  /* #721: (@158[182:189] += @78) */
  for (rr=w158+182, ss=w78; rr!=w158+189; rr+=1) *rr += *ss++;
  /* #722: @72 = @72' */
  /* #723: @78 = (-@72) */
  for (i=0, rr=w78, cs=w72; i<7; ++i) *rr++ = (- *cs++ );
  /* #724: (@158[175:182] += @78) */
  for (rr=w158+175, ss=w78; rr!=w158+182; rr+=1) *rr += *ss++;
  /* #725: (@158[168:175] += @72) */
  for (rr=w158+168, ss=w72; rr!=w158+175; rr+=1) *rr += *ss++;
  /* #726: @72 = zeros(1x7) */
  casadi_clear(w72, 7);
  /* #727: @77 = @77' */
  /* #728: @159 = @79' */
  for (i=0, rr=w159, cs=w79; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #729: @72 = mac(@77,@159,@72) */
  for (i=0, rr=w72; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w77+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #730: @72 = @72' */
  /* #731: @77 = (-@72) */
  for (i=0, rr=w77, cs=w72; i<7; ++i) *rr++ = (- *cs++ );
  /* #732: (@158[175:182] += @77) */
  for (rr=w158+175, ss=w77; rr!=w158+182; rr+=1) *rr += *ss++;
  /* #733: (@158[168:175] += @72) */
  for (rr=w158+168, ss=w72; rr!=w158+175; rr+=1) *rr += *ss++;
  /* #734: @66 = @66' */
  /* #735: @72 = (-@66) */
  for (i=0, rr=w72, cs=w66; i<7; ++i) *rr++ = (- *cs++ );
  /* #736: (@158[161:168] += @72) */
  for (rr=w158+161, ss=w72; rr!=w158+168; rr+=1) *rr += *ss++;
  /* #737: (@158[154:161] += @66) */
  for (rr=w158+154, ss=w66; rr!=w158+161; rr+=1) *rr += *ss++;
  /* #738: @66 = zeros(1x7) */
  casadi_clear(w66, 7);
  /* #739: @71 = @71' */
  /* #740: @159 = @73' */
  for (i=0, rr=w159, cs=w73; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #741: @66 = mac(@71,@159,@66) */
  for (i=0, rr=w66; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w71+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #742: @66 = @66' */
  /* #743: @71 = (-@66) */
  for (i=0, rr=w71, cs=w66; i<7; ++i) *rr++ = (- *cs++ );
  /* #744: (@158[161:168] += @71) */
  for (rr=w158+161, ss=w71; rr!=w158+168; rr+=1) *rr += *ss++;
  /* #745: (@158[154:161] += @66) */
  for (rr=w158+154, ss=w66; rr!=w158+161; rr+=1) *rr += *ss++;
  /* #746: @60 = @60' */
  /* #747: @66 = (-@60) */
  for (i=0, rr=w66, cs=w60; i<7; ++i) *rr++ = (- *cs++ );
  /* #748: (@158[147:154] += @66) */
  for (rr=w158+147, ss=w66; rr!=w158+154; rr+=1) *rr += *ss++;
  /* #749: (@158[140:147] += @60) */
  for (rr=w158+140, ss=w60; rr!=w158+147; rr+=1) *rr += *ss++;
  /* #750: @60 = zeros(1x7) */
  casadi_clear(w60, 7);
  /* #751: @65 = @65' */
  /* #752: @159 = @67' */
  for (i=0, rr=w159, cs=w67; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #753: @60 = mac(@65,@159,@60) */
  for (i=0, rr=w60; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w65+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #754: @60 = @60' */
  /* #755: @65 = (-@60) */
  for (i=0, rr=w65, cs=w60; i<7; ++i) *rr++ = (- *cs++ );
  /* #756: (@158[147:154] += @65) */
  for (rr=w158+147, ss=w65; rr!=w158+154; rr+=1) *rr += *ss++;
  /* #757: (@158[140:147] += @60) */
  for (rr=w158+140, ss=w60; rr!=w158+147; rr+=1) *rr += *ss++;
  /* #758: @54 = @54' */
  /* #759: @60 = (-@54) */
  for (i=0, rr=w60, cs=w54; i<7; ++i) *rr++ = (- *cs++ );
  /* #760: (@158[133:140] += @60) */
  for (rr=w158+133, ss=w60; rr!=w158+140; rr+=1) *rr += *ss++;
  /* #761: (@158[126:133] += @54) */
  for (rr=w158+126, ss=w54; rr!=w158+133; rr+=1) *rr += *ss++;
  /* #762: @54 = zeros(1x7) */
  casadi_clear(w54, 7);
  /* #763: @59 = @59' */
  /* #764: @159 = @61' */
  for (i=0, rr=w159, cs=w61; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #765: @54 = mac(@59,@159,@54) */
  for (i=0, rr=w54; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w59+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #766: @54 = @54' */
  /* #767: @59 = (-@54) */
  for (i=0, rr=w59, cs=w54; i<7; ++i) *rr++ = (- *cs++ );
  /* #768: (@158[133:140] += @59) */
  for (rr=w158+133, ss=w59; rr!=w158+140; rr+=1) *rr += *ss++;
  /* #769: (@158[126:133] += @54) */
  for (rr=w158+126, ss=w54; rr!=w158+133; rr+=1) *rr += *ss++;
  /* #770: @48 = @48' */
  /* #771: @54 = (-@48) */
  for (i=0, rr=w54, cs=w48; i<7; ++i) *rr++ = (- *cs++ );
  /* #772: (@158[119:126] += @54) */
  for (rr=w158+119, ss=w54; rr!=w158+126; rr+=1) *rr += *ss++;
  /* #773: (@158[112:119] += @48) */
  for (rr=w158+112, ss=w48; rr!=w158+119; rr+=1) *rr += *ss++;
  /* #774: @48 = zeros(1x7) */
  casadi_clear(w48, 7);
  /* #775: @53 = @53' */
  /* #776: @159 = @55' */
  for (i=0, rr=w159, cs=w55; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #777: @48 = mac(@53,@159,@48) */
  for (i=0, rr=w48; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w53+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #778: @48 = @48' */
  /* #779: @53 = (-@48) */
  for (i=0, rr=w53, cs=w48; i<7; ++i) *rr++ = (- *cs++ );
  /* #780: (@158[119:126] += @53) */
  for (rr=w158+119, ss=w53; rr!=w158+126; rr+=1) *rr += *ss++;
  /* #781: (@158[112:119] += @48) */
  for (rr=w158+112, ss=w48; rr!=w158+119; rr+=1) *rr += *ss++;
  /* #782: @42 = @42' */
  /* #783: @48 = (-@42) */
  for (i=0, rr=w48, cs=w42; i<7; ++i) *rr++ = (- *cs++ );
  /* #784: (@158[105:112] += @48) */
  for (rr=w158+105, ss=w48; rr!=w158+112; rr+=1) *rr += *ss++;
  /* #785: (@158[98:105] += @42) */
  for (rr=w158+98, ss=w42; rr!=w158+105; rr+=1) *rr += *ss++;
  /* #786: @42 = zeros(1x7) */
  casadi_clear(w42, 7);
  /* #787: @47 = @47' */
  /* #788: @159 = @49' */
  for (i=0, rr=w159, cs=w49; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #789: @42 = mac(@47,@159,@42) */
  for (i=0, rr=w42; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w47+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #790: @42 = @42' */
  /* #791: @47 = (-@42) */
  for (i=0, rr=w47, cs=w42; i<7; ++i) *rr++ = (- *cs++ );
  /* #792: (@158[105:112] += @47) */
  for (rr=w158+105, ss=w47; rr!=w158+112; rr+=1) *rr += *ss++;
  /* #793: (@158[98:105] += @42) */
  for (rr=w158+98, ss=w42; rr!=w158+105; rr+=1) *rr += *ss++;
  /* #794: @36 = @36' */
  /* #795: @42 = (-@36) */
  for (i=0, rr=w42, cs=w36; i<7; ++i) *rr++ = (- *cs++ );
  /* #796: (@158[91:98] += @42) */
  for (rr=w158+91, ss=w42; rr!=w158+98; rr+=1) *rr += *ss++;
  /* #797: (@158[84:91] += @36) */
  for (rr=w158+84, ss=w36; rr!=w158+91; rr+=1) *rr += *ss++;
  /* #798: @36 = zeros(1x7) */
  casadi_clear(w36, 7);
  /* #799: @41 = @41' */
  /* #800: @159 = @43' */
  for (i=0, rr=w159, cs=w43; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #801: @36 = mac(@41,@159,@36) */
  for (i=0, rr=w36; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w41+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #802: @36 = @36' */
  /* #803: @41 = (-@36) */
  for (i=0, rr=w41, cs=w36; i<7; ++i) *rr++ = (- *cs++ );
  /* #804: (@158[91:98] += @41) */
  for (rr=w158+91, ss=w41; rr!=w158+98; rr+=1) *rr += *ss++;
  /* #805: (@158[84:91] += @36) */
  for (rr=w158+84, ss=w36; rr!=w158+91; rr+=1) *rr += *ss++;
  /* #806: @30 = @30' */
  /* #807: @36 = (-@30) */
  for (i=0, rr=w36, cs=w30; i<7; ++i) *rr++ = (- *cs++ );
  /* #808: (@158[77:84] += @36) */
  for (rr=w158+77, ss=w36; rr!=w158+84; rr+=1) *rr += *ss++;
  /* #809: (@158[70:77] += @30) */
  for (rr=w158+70, ss=w30; rr!=w158+77; rr+=1) *rr += *ss++;
  /* #810: @30 = zeros(1x7) */
  casadi_clear(w30, 7);
  /* #811: @35 = @35' */
  /* #812: @159 = @37' */
  for (i=0, rr=w159, cs=w37; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #813: @30 = mac(@35,@159,@30) */
  for (i=0, rr=w30; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w35+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #814: @30 = @30' */
  /* #815: @35 = (-@30) */
  for (i=0, rr=w35, cs=w30; i<7; ++i) *rr++ = (- *cs++ );
  /* #816: (@158[77:84] += @35) */
  for (rr=w158+77, ss=w35; rr!=w158+84; rr+=1) *rr += *ss++;
  /* #817: (@158[70:77] += @30) */
  for (rr=w158+70, ss=w30; rr!=w158+77; rr+=1) *rr += *ss++;
  /* #818: @24 = @24' */
  /* #819: @30 = (-@24) */
  for (i=0, rr=w30, cs=w24; i<7; ++i) *rr++ = (- *cs++ );
  /* #820: (@158[63:70] += @30) */
  for (rr=w158+63, ss=w30; rr!=w158+70; rr+=1) *rr += *ss++;
  /* #821: (@158[56:63] += @24) */
  for (rr=w158+56, ss=w24; rr!=w158+63; rr+=1) *rr += *ss++;
  /* #822: @24 = zeros(1x7) */
  casadi_clear(w24, 7);
  /* #823: @29 = @29' */
  /* #824: @159 = @31' */
  for (i=0, rr=w159, cs=w31; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #825: @24 = mac(@29,@159,@24) */
  for (i=0, rr=w24; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w29+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #826: @24 = @24' */
  /* #827: @29 = (-@24) */
  for (i=0, rr=w29, cs=w24; i<7; ++i) *rr++ = (- *cs++ );
  /* #828: (@158[63:70] += @29) */
  for (rr=w158+63, ss=w29; rr!=w158+70; rr+=1) *rr += *ss++;
  /* #829: (@158[56:63] += @24) */
  for (rr=w158+56, ss=w24; rr!=w158+63; rr+=1) *rr += *ss++;
  /* #830: @18 = @18' */
  /* #831: @24 = (-@18) */
  for (i=0, rr=w24, cs=w18; i<7; ++i) *rr++ = (- *cs++ );
  /* #832: (@158[49:56] += @24) */
  for (rr=w158+49, ss=w24; rr!=w158+56; rr+=1) *rr += *ss++;
  /* #833: (@158[42:49] += @18) */
  for (rr=w158+42, ss=w18; rr!=w158+49; rr+=1) *rr += *ss++;
  /* #834: @18 = zeros(1x7) */
  casadi_clear(w18, 7);
  /* #835: @23 = @23' */
  /* #836: @159 = @25' */
  for (i=0, rr=w159, cs=w25; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #837: @18 = mac(@23,@159,@18) */
  for (i=0, rr=w18; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w23+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #838: @18 = @18' */
  /* #839: @23 = (-@18) */
  for (i=0, rr=w23, cs=w18; i<7; ++i) *rr++ = (- *cs++ );
  /* #840: (@158[49:56] += @23) */
  for (rr=w158+49, ss=w23; rr!=w158+56; rr+=1) *rr += *ss++;
  /* #841: (@158[42:49] += @18) */
  for (rr=w158+42, ss=w18; rr!=w158+49; rr+=1) *rr += *ss++;
  /* #842: @12 = @12' */
  /* #843: @18 = (-@12) */
  for (i=0, rr=w18, cs=w12; i<7; ++i) *rr++ = (- *cs++ );
  /* #844: (@158[35:42] += @18) */
  for (rr=w158+35, ss=w18; rr!=w158+42; rr+=1) *rr += *ss++;
  /* #845: (@158[28:35] += @12) */
  for (rr=w158+28, ss=w12; rr!=w158+35; rr+=1) *rr += *ss++;
  /* #846: @12 = zeros(1x7) */
  casadi_clear(w12, 7);
  /* #847: @17 = @17' */
  /* #848: @159 = @19' */
  for (i=0, rr=w159, cs=w19; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #849: @12 = mac(@17,@159,@12) */
  for (i=0, rr=w12; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w17+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #850: @12 = @12' */
  /* #851: @17 = (-@12) */
  for (i=0, rr=w17, cs=w12; i<7; ++i) *rr++ = (- *cs++ );
  /* #852: (@158[35:42] += @17) */
  for (rr=w158+35, ss=w17; rr!=w158+42; rr+=1) *rr += *ss++;
  /* #853: (@158[28:35] += @12) */
  for (rr=w158+28, ss=w12; rr!=w158+35; rr+=1) *rr += *ss++;
  /* #854: @4 = @4' */
  /* #855: @12 = (-@4) */
  for (i=0, rr=w12, cs=w4; i<7; ++i) *rr++ = (- *cs++ );
  /* #856: (@158[21:28] += @12) */
  for (rr=w158+21, ss=w12; rr!=w158+28; rr+=1) *rr += *ss++;
  /* #857: (@158[14:21] += @4) */
  for (rr=w158+14, ss=w4; rr!=w158+21; rr+=1) *rr += *ss++;
  /* #858: @4 = zeros(1x7) */
  casadi_clear(w4, 7);
  /* #859: @11 = @11' */
  /* #860: @159 = @13' */
  for (i=0, rr=w159, cs=w13; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #861: @4 = mac(@11,@159,@4) */
  for (i=0, rr=w4; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w11+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #862: @4 = @4' */
  /* #863: @11 = (-@4) */
  for (i=0, rr=w11, cs=w4; i<7; ++i) *rr++ = (- *cs++ );
  /* #864: (@158[21:28] += @11) */
  for (rr=w158+21, ss=w11; rr!=w158+28; rr+=1) *rr += *ss++;
  /* #865: (@158[14:21] += @4) */
  for (rr=w158+14, ss=w4; rr!=w158+21; rr+=1) *rr += *ss++;
  /* #866: @1 = @1' */
  /* #867: @4 = (-@1) */
  for (i=0, rr=w4, cs=w1; i<7; ++i) *rr++ = (- *cs++ );
  /* #868: (@158[7:14] += @4) */
  for (rr=w158+7, ss=w4; rr!=w158+14; rr+=1) *rr += *ss++;
  /* #869: (@158[:7] += @1) */
  for (rr=w158+0, ss=w1; rr!=w158+7; rr+=1) *rr += *ss++;
  /* #870: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #871: @3 = @3' */
  /* #872: @159 = @5' */
  for (i=0, rr=w159, cs=w5; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #873: @1 = mac(@3,@159,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w159+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #874: @1 = @1' */
  /* #875: @3 = (-@1) */
  for (i=0, rr=w3, cs=w1; i<7; ++i) *rr++ = (- *cs++ );
  /* #876: (@158[7:14] += @3) */
  for (rr=w158+7, ss=w3; rr!=w158+14; rr+=1) *rr += *ss++;
  /* #877: (@158[:7] += @1) */
  for (rr=w158+0, ss=w1; rr!=w158+7; rr+=1) *rr += *ss++;
  /* #878: output[1][0] = @158 */
  casadi_copy(w158, 364, res[1]);
  /* #879: @160 = zeros(4x25) */
  casadi_clear(w160, 100);
  /* #880: @152 = @152' */
  /* #881: (@160[96:100] += @152) */
  for (rr=w160+96, ss=w152; rr!=w160+100; rr+=1) *rr += *ss++;
  /* #882: @152 = zeros(1x4) */
  casadi_clear(w152, 4);
  /* #883: @153 = @153' */
  /* #884: @161 = @154' */
  for (i=0, rr=w161, cs=w154; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #885: @152 = mac(@153,@161,@152) */
  for (i=0, rr=w152; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w153+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #886: @152 = @152' */
  /* #887: (@160[96:100] += @152) */
  for (rr=w160+96, ss=w152; rr!=w160+100; rr+=1) *rr += *ss++;
  /* #888: @146 = @146' */
  /* #889: (@160[92:96] += @146) */
  for (rr=w160+92, ss=w146; rr!=w160+96; rr+=1) *rr += *ss++;
  /* #890: @146 = zeros(1x4) */
  casadi_clear(w146, 4);
  /* #891: @147 = @147' */
  /* #892: @161 = @148' */
  for (i=0, rr=w161, cs=w148; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #893: @146 = mac(@147,@161,@146) */
  for (i=0, rr=w146; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w147+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #894: @146 = @146' */
  /* #895: (@160[92:96] += @146) */
  for (rr=w160+92, ss=w146; rr!=w160+96; rr+=1) *rr += *ss++;
  /* #896: @140 = @140' */
  /* #897: (@160[88:92] += @140) */
  for (rr=w160+88, ss=w140; rr!=w160+92; rr+=1) *rr += *ss++;
  /* #898: @140 = zeros(1x4) */
  casadi_clear(w140, 4);
  /* #899: @141 = @141' */
  /* #900: @161 = @142' */
  for (i=0, rr=w161, cs=w142; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #901: @140 = mac(@141,@161,@140) */
  for (i=0, rr=w140; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w141+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #902: @140 = @140' */
  /* #903: (@160[88:92] += @140) */
  for (rr=w160+88, ss=w140; rr!=w160+92; rr+=1) *rr += *ss++;
  /* #904: @134 = @134' */
  /* #905: (@160[84:88] += @134) */
  for (rr=w160+84, ss=w134; rr!=w160+88; rr+=1) *rr += *ss++;
  /* #906: @134 = zeros(1x4) */
  casadi_clear(w134, 4);
  /* #907: @135 = @135' */
  /* #908: @161 = @136' */
  for (i=0, rr=w161, cs=w136; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #909: @134 = mac(@135,@161,@134) */
  for (i=0, rr=w134; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w135+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #910: @134 = @134' */
  /* #911: (@160[84:88] += @134) */
  for (rr=w160+84, ss=w134; rr!=w160+88; rr+=1) *rr += *ss++;
  /* #912: @128 = @128' */
  /* #913: (@160[80:84] += @128) */
  for (rr=w160+80, ss=w128; rr!=w160+84; rr+=1) *rr += *ss++;
  /* #914: @128 = zeros(1x4) */
  casadi_clear(w128, 4);
  /* #915: @129 = @129' */
  /* #916: @161 = @130' */
  for (i=0, rr=w161, cs=w130; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #917: @128 = mac(@129,@161,@128) */
  for (i=0, rr=w128; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w129+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #918: @128 = @128' */
  /* #919: (@160[80:84] += @128) */
  for (rr=w160+80, ss=w128; rr!=w160+84; rr+=1) *rr += *ss++;
  /* #920: @122 = @122' */
  /* #921: (@160[76:80] += @122) */
  for (rr=w160+76, ss=w122; rr!=w160+80; rr+=1) *rr += *ss++;
  /* #922: @122 = zeros(1x4) */
  casadi_clear(w122, 4);
  /* #923: @123 = @123' */
  /* #924: @161 = @124' */
  for (i=0, rr=w161, cs=w124; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #925: @122 = mac(@123,@161,@122) */
  for (i=0, rr=w122; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w123+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #926: @122 = @122' */
  /* #927: (@160[76:80] += @122) */
  for (rr=w160+76, ss=w122; rr!=w160+80; rr+=1) *rr += *ss++;
  /* #928: @116 = @116' */
  /* #929: (@160[72:76] += @116) */
  for (rr=w160+72, ss=w116; rr!=w160+76; rr+=1) *rr += *ss++;
  /* #930: @116 = zeros(1x4) */
  casadi_clear(w116, 4);
  /* #931: @117 = @117' */
  /* #932: @161 = @118' */
  for (i=0, rr=w161, cs=w118; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #933: @116 = mac(@117,@161,@116) */
  for (i=0, rr=w116; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w117+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #934: @116 = @116' */
  /* #935: (@160[72:76] += @116) */
  for (rr=w160+72, ss=w116; rr!=w160+76; rr+=1) *rr += *ss++;
  /* #936: @110 = @110' */
  /* #937: (@160[68:72] += @110) */
  for (rr=w160+68, ss=w110; rr!=w160+72; rr+=1) *rr += *ss++;
  /* #938: @110 = zeros(1x4) */
  casadi_clear(w110, 4);
  /* #939: @111 = @111' */
  /* #940: @161 = @112' */
  for (i=0, rr=w161, cs=w112; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #941: @110 = mac(@111,@161,@110) */
  for (i=0, rr=w110; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w111+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #942: @110 = @110' */
  /* #943: (@160[68:72] += @110) */
  for (rr=w160+68, ss=w110; rr!=w160+72; rr+=1) *rr += *ss++;
  /* #944: @104 = @104' */
  /* #945: (@160[64:68] += @104) */
  for (rr=w160+64, ss=w104; rr!=w160+68; rr+=1) *rr += *ss++;
  /* #946: @104 = zeros(1x4) */
  casadi_clear(w104, 4);
  /* #947: @105 = @105' */
  /* #948: @161 = @106' */
  for (i=0, rr=w161, cs=w106; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #949: @104 = mac(@105,@161,@104) */
  for (i=0, rr=w104; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w105+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #950: @104 = @104' */
  /* #951: (@160[64:68] += @104) */
  for (rr=w160+64, ss=w104; rr!=w160+68; rr+=1) *rr += *ss++;
  /* #952: @98 = @98' */
  /* #953: (@160[60:64] += @98) */
  for (rr=w160+60, ss=w98; rr!=w160+64; rr+=1) *rr += *ss++;
  /* #954: @98 = zeros(1x4) */
  casadi_clear(w98, 4);
  /* #955: @99 = @99' */
  /* #956: @161 = @100' */
  for (i=0, rr=w161, cs=w100; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #957: @98 = mac(@99,@161,@98) */
  for (i=0, rr=w98; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w99+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #958: @98 = @98' */
  /* #959: (@160[60:64] += @98) */
  for (rr=w160+60, ss=w98; rr!=w160+64; rr+=1) *rr += *ss++;
  /* #960: @92 = @92' */
  /* #961: (@160[56:60] += @92) */
  for (rr=w160+56, ss=w92; rr!=w160+60; rr+=1) *rr += *ss++;
  /* #962: @92 = zeros(1x4) */
  casadi_clear(w92, 4);
  /* #963: @93 = @93' */
  /* #964: @161 = @94' */
  for (i=0, rr=w161, cs=w94; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #965: @92 = mac(@93,@161,@92) */
  for (i=0, rr=w92; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w93+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #966: @92 = @92' */
  /* #967: (@160[56:60] += @92) */
  for (rr=w160+56, ss=w92; rr!=w160+60; rr+=1) *rr += *ss++;
  /* #968: @86 = @86' */
  /* #969: (@160[52:56] += @86) */
  for (rr=w160+52, ss=w86; rr!=w160+56; rr+=1) *rr += *ss++;
  /* #970: @86 = zeros(1x4) */
  casadi_clear(w86, 4);
  /* #971: @87 = @87' */
  /* #972: @161 = @88' */
  for (i=0, rr=w161, cs=w88; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #973: @86 = mac(@87,@161,@86) */
  for (i=0, rr=w86; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w87+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #974: @86 = @86' */
  /* #975: (@160[52:56] += @86) */
  for (rr=w160+52, ss=w86; rr!=w160+56; rr+=1) *rr += *ss++;
  /* #976: @80 = @80' */
  /* #977: (@160[48:52] += @80) */
  for (rr=w160+48, ss=w80; rr!=w160+52; rr+=1) *rr += *ss++;
  /* #978: @80 = zeros(1x4) */
  casadi_clear(w80, 4);
  /* #979: @81 = @81' */
  /* #980: @161 = @82' */
  for (i=0, rr=w161, cs=w82; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #981: @80 = mac(@81,@161,@80) */
  for (i=0, rr=w80; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w81+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #982: @80 = @80' */
  /* #983: (@160[48:52] += @80) */
  for (rr=w160+48, ss=w80; rr!=w160+52; rr+=1) *rr += *ss++;
  /* #984: @74 = @74' */
  /* #985: (@160[44:48] += @74) */
  for (rr=w160+44, ss=w74; rr!=w160+48; rr+=1) *rr += *ss++;
  /* #986: @74 = zeros(1x4) */
  casadi_clear(w74, 4);
  /* #987: @75 = @75' */
  /* #988: @161 = @76' */
  for (i=0, rr=w161, cs=w76; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #989: @74 = mac(@75,@161,@74) */
  for (i=0, rr=w74; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w75+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #990: @74 = @74' */
  /* #991: (@160[44:48] += @74) */
  for (rr=w160+44, ss=w74; rr!=w160+48; rr+=1) *rr += *ss++;
  /* #992: @68 = @68' */
  /* #993: (@160[40:44] += @68) */
  for (rr=w160+40, ss=w68; rr!=w160+44; rr+=1) *rr += *ss++;
  /* #994: @68 = zeros(1x4) */
  casadi_clear(w68, 4);
  /* #995: @69 = @69' */
  /* #996: @161 = @70' */
  for (i=0, rr=w161, cs=w70; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #997: @68 = mac(@69,@161,@68) */
  for (i=0, rr=w68; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w69+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #998: @68 = @68' */
  /* #999: (@160[40:44] += @68) */
  for (rr=w160+40, ss=w68; rr!=w160+44; rr+=1) *rr += *ss++;
  /* #1000: @62 = @62' */
  /* #1001: (@160[36:40] += @62) */
  for (rr=w160+36, ss=w62; rr!=w160+40; rr+=1) *rr += *ss++;
  /* #1002: @62 = zeros(1x4) */
  casadi_clear(w62, 4);
  /* #1003: @63 = @63' */
  /* #1004: @161 = @64' */
  for (i=0, rr=w161, cs=w64; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1005: @62 = mac(@63,@161,@62) */
  for (i=0, rr=w62; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w63+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1006: @62 = @62' */
  /* #1007: (@160[36:40] += @62) */
  for (rr=w160+36, ss=w62; rr!=w160+40; rr+=1) *rr += *ss++;
  /* #1008: @56 = @56' */
  /* #1009: (@160[32:36] += @56) */
  for (rr=w160+32, ss=w56; rr!=w160+36; rr+=1) *rr += *ss++;
  /* #1010: @56 = zeros(1x4) */
  casadi_clear(w56, 4);
  /* #1011: @57 = @57' */
  /* #1012: @161 = @58' */
  for (i=0, rr=w161, cs=w58; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1013: @56 = mac(@57,@161,@56) */
  for (i=0, rr=w56; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w57+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1014: @56 = @56' */
  /* #1015: (@160[32:36] += @56) */
  for (rr=w160+32, ss=w56; rr!=w160+36; rr+=1) *rr += *ss++;
  /* #1016: @50 = @50' */
  /* #1017: (@160[28:32] += @50) */
  for (rr=w160+28, ss=w50; rr!=w160+32; rr+=1) *rr += *ss++;
  /* #1018: @50 = zeros(1x4) */
  casadi_clear(w50, 4);
  /* #1019: @51 = @51' */
  /* #1020: @161 = @52' */
  for (i=0, rr=w161, cs=w52; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1021: @50 = mac(@51,@161,@50) */
  for (i=0, rr=w50; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w51+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1022: @50 = @50' */
  /* #1023: (@160[28:32] += @50) */
  for (rr=w160+28, ss=w50; rr!=w160+32; rr+=1) *rr += *ss++;
  /* #1024: @44 = @44' */
  /* #1025: (@160[24:28] += @44) */
  for (rr=w160+24, ss=w44; rr!=w160+28; rr+=1) *rr += *ss++;
  /* #1026: @44 = zeros(1x4) */
  casadi_clear(w44, 4);
  /* #1027: @45 = @45' */
  /* #1028: @161 = @46' */
  for (i=0, rr=w161, cs=w46; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1029: @44 = mac(@45,@161,@44) */
  for (i=0, rr=w44; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w45+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1030: @44 = @44' */
  /* #1031: (@160[24:28] += @44) */
  for (rr=w160+24, ss=w44; rr!=w160+28; rr+=1) *rr += *ss++;
  /* #1032: @38 = @38' */
  /* #1033: (@160[20:24] += @38) */
  for (rr=w160+20, ss=w38; rr!=w160+24; rr+=1) *rr += *ss++;
  /* #1034: @38 = zeros(1x4) */
  casadi_clear(w38, 4);
  /* #1035: @39 = @39' */
  /* #1036: @161 = @40' */
  for (i=0, rr=w161, cs=w40; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1037: @38 = mac(@39,@161,@38) */
  for (i=0, rr=w38; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w39+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1038: @38 = @38' */
  /* #1039: (@160[20:24] += @38) */
  for (rr=w160+20, ss=w38; rr!=w160+24; rr+=1) *rr += *ss++;
  /* #1040: @32 = @32' */
  /* #1041: (@160[16:20] += @32) */
  for (rr=w160+16, ss=w32; rr!=w160+20; rr+=1) *rr += *ss++;
  /* #1042: @32 = zeros(1x4) */
  casadi_clear(w32, 4);
  /* #1043: @33 = @33' */
  /* #1044: @161 = @34' */
  for (i=0, rr=w161, cs=w34; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1045: @32 = mac(@33,@161,@32) */
  for (i=0, rr=w32; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w33+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1046: @32 = @32' */
  /* #1047: (@160[16:20] += @32) */
  for (rr=w160+16, ss=w32; rr!=w160+20; rr+=1) *rr += *ss++;
  /* #1048: @26 = @26' */
  /* #1049: (@160[12:16] += @26) */
  for (rr=w160+12, ss=w26; rr!=w160+16; rr+=1) *rr += *ss++;
  /* #1050: @26 = zeros(1x4) */
  casadi_clear(w26, 4);
  /* #1051: @27 = @27' */
  /* #1052: @161 = @28' */
  for (i=0, rr=w161, cs=w28; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1053: @26 = mac(@27,@161,@26) */
  for (i=0, rr=w26; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w27+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1054: @26 = @26' */
  /* #1055: (@160[12:16] += @26) */
  for (rr=w160+12, ss=w26; rr!=w160+16; rr+=1) *rr += *ss++;
  /* #1056: @20 = @20' */
  /* #1057: (@160[8:12] += @20) */
  for (rr=w160+8, ss=w20; rr!=w160+12; rr+=1) *rr += *ss++;
  /* #1058: @20 = zeros(1x4) */
  casadi_clear(w20, 4);
  /* #1059: @21 = @21' */
  /* #1060: @161 = @22' */
  for (i=0, rr=w161, cs=w22; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1061: @20 = mac(@21,@161,@20) */
  for (i=0, rr=w20; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w21+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1062: @20 = @20' */
  /* #1063: (@160[8:12] += @20) */
  for (rr=w160+8, ss=w20; rr!=w160+12; rr+=1) *rr += *ss++;
  /* #1064: @14 = @14' */
  /* #1065: (@160[4:8] += @14) */
  for (rr=w160+4, ss=w14; rr!=w160+8; rr+=1) *rr += *ss++;
  /* #1066: @14 = zeros(1x4) */
  casadi_clear(w14, 4);
  /* #1067: @15 = @15' */
  /* #1068: @161 = @16' */
  for (i=0, rr=w161, cs=w16; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1069: @14 = mac(@15,@161,@14) */
  for (i=0, rr=w14; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w15+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1070: @14 = @14' */
  /* #1071: (@160[4:8] += @14) */
  for (rr=w160+4, ss=w14; rr!=w160+8; rr+=1) *rr += *ss++;
  /* #1072: @7 = @7' */
  /* #1073: (@160[:4] += @7) */
  for (rr=w160+0, ss=w7; rr!=w160+4; rr+=1) *rr += *ss++;
  /* #1074: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #1075: @9 = @9' */
  /* #1076: @161 = @10' */
  for (i=0, rr=w161, cs=w10; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1077: @7 = mac(@9,@161,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w161+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1078: @7 = @7' */
  /* #1079: (@160[:4] += @7) */
  for (rr=w160+0, ss=w7; rr!=w160+4; rr+=1) *rr += *ss++;
  /* #1080: output[1][1] = @160 */
  if (res[1]) casadi_copy(w160, 100, res[1]+364);
  /* #1081: @162 = @2[14:28] */
  for (rr=w162, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #1082: @163 = @2[:14] */
  for (rr=w163, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #1083: @7 = @8[:4] */
  for (rr=w7, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #1084: @164 = f_disc(@163, @7) */
  arg1[0]=w163;
  arg1[1]=w7;
  res1[0]=w164;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1085: @162 = (@162-@164) */
  for (i=0, rr=w162, cs=w164; i<14; ++i) (*rr++) -= (*cs++);
  /* #1086: output[2][0] = @162 */
  casadi_copy(w162, 14, res[2]);
  /* #1087: @0 = 0 */
  w0 = 0.;
  /* #1088: @165 = @2[10:13] */
  for (rr=w165, ss=w2+10; ss!=w2+13; ss+=1) *rr++ = *ss;
  /* #1089: @165 = @165' */
  /* #1090: @166 = @2[3:6] */
  for (rr=w166, ss=w2+3; ss!=w2+6; ss+=1) *rr++ = *ss;
  /* #1091: @0 = mac(@165,@166,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w165+j, tt=w166+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1092: output[2][1] = @0 */
  if (res[2]) res[2][14] = w0;
  /* #1093: @0 = @2[2] */
  for (rr=(&w0), ss=w2+2; ss!=w2+3; ss+=1) *rr++ = *ss;
  /* #1094: @6 = @2[13] */
  for (rr=(&w6), ss=w2+13; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #1095: @0 = (@0-@6) */
  w0 -= w6;
  /* #1096: output[2][2] = @0 */
  if (res[2]) res[2][15] = w0;
  /* #1097: @167 = @2[3:6] */
  for (rr=w167, ss=w2+3; ss!=w2+6; ss+=1) *rr++ = *ss;
  /* #1098: output[2][3] = @167 */
  if (res[2]) casadi_copy(w167, 3, res[2]+16);
  /* #1099: @167 = @8[:3] */
  for (rr=w167, ss=w8+0; ss!=w8+3; ss+=1) *rr++ = *ss;
  /* #1100: output[2][4] = @167 */
  if (res[2]) casadi_copy(w167, 3, res[2]+19);
  /* #1101: @162 = @2[28:42] */
  for (rr=w162, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #1102: @164 = @2[14:28] */
  for (rr=w164, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #1103: @9 = @8[4:8] */
  for (rr=w9, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #1104: @168 = f_disc(@164, @9) */
  arg1[0]=w164;
  arg1[1]=w9;
  res1[0]=w168;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1105: @162 = (@162-@168) */
  for (i=0, rr=w162, cs=w168; i<14; ++i) (*rr++) -= (*cs++);
  /* #1106: output[2][5] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+22);
  /* #1107: @0 = 0 */
  w0 = 0.;
  /* #1108: @167 = @2[24:27] */
  for (rr=w167, ss=w2+24; ss!=w2+27; ss+=1) *rr++ = *ss;
  /* #1109: @167 = @167' */
  /* #1110: @169 = @2[17:20] */
  for (rr=w169, ss=w2+17; ss!=w2+20; ss+=1) *rr++ = *ss;
  /* #1111: @0 = mac(@167,@169,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w167+j, tt=w169+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1112: output[2][6] = @0 */
  if (res[2]) res[2][36] = w0;
  /* #1113: @0 = @2[16] */
  for (rr=(&w0), ss=w2+16; ss!=w2+17; ss+=1) *rr++ = *ss;
  /* #1114: @6 = @2[27] */
  for (rr=(&w6), ss=w2+27; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #1115: @0 = (@0-@6) */
  w0 -= w6;
  /* #1116: output[2][7] = @0 */
  if (res[2]) res[2][37] = w0;
  /* #1117: @170 = @2[17:20] */
  for (rr=w170, ss=w2+17; ss!=w2+20; ss+=1) *rr++ = *ss;
  /* #1118: output[2][8] = @170 */
  if (res[2]) casadi_copy(w170, 3, res[2]+38);
  /* #1119: @170 = @8[4:7] */
  for (rr=w170, ss=w8+4; ss!=w8+7; ss+=1) *rr++ = *ss;
  /* #1120: output[2][9] = @170 */
  if (res[2]) casadi_copy(w170, 3, res[2]+41);
  /* #1121: @162 = @2[42:56] */
  for (rr=w162, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #1122: @168 = @2[28:42] */
  for (rr=w168, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #1123: @14 = @8[8:12] */
  for (rr=w14, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #1124: @171 = f_disc(@168, @14) */
  arg1[0]=w168;
  arg1[1]=w14;
  res1[0]=w171;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1125: @162 = (@162-@171) */
  for (i=0, rr=w162, cs=w171; i<14; ++i) (*rr++) -= (*cs++);
  /* #1126: output[2][10] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+44);
  /* #1127: @0 = 0 */
  w0 = 0.;
  /* #1128: @170 = @2[38:41] */
  for (rr=w170, ss=w2+38; ss!=w2+41; ss+=1) *rr++ = *ss;
  /* #1129: @170 = @170' */
  /* #1130: @172 = @2[31:34] */
  for (rr=w172, ss=w2+31; ss!=w2+34; ss+=1) *rr++ = *ss;
  /* #1131: @0 = mac(@170,@172,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w170+j, tt=w172+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1132: output[2][11] = @0 */
  if (res[2]) res[2][58] = w0;
  /* #1133: @0 = @2[30] */
  for (rr=(&w0), ss=w2+30; ss!=w2+31; ss+=1) *rr++ = *ss;
  /* #1134: @6 = @2[41] */
  for (rr=(&w6), ss=w2+41; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #1135: @0 = (@0-@6) */
  w0 -= w6;
  /* #1136: output[2][12] = @0 */
  if (res[2]) res[2][59] = w0;
  /* #1137: @173 = @2[31:34] */
  for (rr=w173, ss=w2+31; ss!=w2+34; ss+=1) *rr++ = *ss;
  /* #1138: output[2][13] = @173 */
  if (res[2]) casadi_copy(w173, 3, res[2]+60);
  /* #1139: @173 = @8[8:11] */
  for (rr=w173, ss=w8+8; ss!=w8+11; ss+=1) *rr++ = *ss;
  /* #1140: output[2][14] = @173 */
  if (res[2]) casadi_copy(w173, 3, res[2]+63);
  /* #1141: @162 = @2[56:70] */
  for (rr=w162, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #1142: @171 = @2[42:56] */
  for (rr=w171, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #1143: @15 = @8[12:16] */
  for (rr=w15, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #1144: @174 = f_disc(@171, @15) */
  arg1[0]=w171;
  arg1[1]=w15;
  res1[0]=w174;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1145: @162 = (@162-@174) */
  for (i=0, rr=w162, cs=w174; i<14; ++i) (*rr++) -= (*cs++);
  /* #1146: output[2][15] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+66);
  /* #1147: @0 = 0 */
  w0 = 0.;
  /* #1148: @173 = @2[52:55] */
  for (rr=w173, ss=w2+52; ss!=w2+55; ss+=1) *rr++ = *ss;
  /* #1149: @173 = @173' */
  /* #1150: @175 = @2[45:48] */
  for (rr=w175, ss=w2+45; ss!=w2+48; ss+=1) *rr++ = *ss;
  /* #1151: @0 = mac(@173,@175,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w173+j, tt=w175+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1152: output[2][16] = @0 */
  if (res[2]) res[2][80] = w0;
  /* #1153: @0 = @2[44] */
  for (rr=(&w0), ss=w2+44; ss!=w2+45; ss+=1) *rr++ = *ss;
  /* #1154: @6 = @2[55] */
  for (rr=(&w6), ss=w2+55; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #1155: @0 = (@0-@6) */
  w0 -= w6;
  /* #1156: output[2][17] = @0 */
  if (res[2]) res[2][81] = w0;
  /* #1157: @176 = @2[45:48] */
  for (rr=w176, ss=w2+45; ss!=w2+48; ss+=1) *rr++ = *ss;
  /* #1158: output[2][18] = @176 */
  if (res[2]) casadi_copy(w176, 3, res[2]+82);
  /* #1159: @176 = @8[12:15] */
  for (rr=w176, ss=w8+12; ss!=w8+15; ss+=1) *rr++ = *ss;
  /* #1160: output[2][19] = @176 */
  if (res[2]) casadi_copy(w176, 3, res[2]+85);
  /* #1161: @162 = @2[70:84] */
  for (rr=w162, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #1162: @174 = @2[56:70] */
  for (rr=w174, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #1163: @20 = @8[16:20] */
  for (rr=w20, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #1164: @177 = f_disc(@174, @20) */
  arg1[0]=w174;
  arg1[1]=w20;
  res1[0]=w177;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1165: @162 = (@162-@177) */
  for (i=0, rr=w162, cs=w177; i<14; ++i) (*rr++) -= (*cs++);
  /* #1166: output[2][20] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+88);
  /* #1167: @0 = 0 */
  w0 = 0.;
  /* #1168: @176 = @2[66:69] */
  for (rr=w176, ss=w2+66; ss!=w2+69; ss+=1) *rr++ = *ss;
  /* #1169: @176 = @176' */
  /* #1170: @178 = @2[59:62] */
  for (rr=w178, ss=w2+59; ss!=w2+62; ss+=1) *rr++ = *ss;
  /* #1171: @0 = mac(@176,@178,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w176+j, tt=w178+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1172: output[2][21] = @0 */
  if (res[2]) res[2][102] = w0;
  /* #1173: @0 = @2[58] */
  for (rr=(&w0), ss=w2+58; ss!=w2+59; ss+=1) *rr++ = *ss;
  /* #1174: @6 = @2[69] */
  for (rr=(&w6), ss=w2+69; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #1175: @0 = (@0-@6) */
  w0 -= w6;
  /* #1176: output[2][22] = @0 */
  if (res[2]) res[2][103] = w0;
  /* #1177: @179 = @2[59:62] */
  for (rr=w179, ss=w2+59; ss!=w2+62; ss+=1) *rr++ = *ss;
  /* #1178: output[2][23] = @179 */
  if (res[2]) casadi_copy(w179, 3, res[2]+104);
  /* #1179: @179 = @8[16:19] */
  for (rr=w179, ss=w8+16; ss!=w8+19; ss+=1) *rr++ = *ss;
  /* #1180: output[2][24] = @179 */
  if (res[2]) casadi_copy(w179, 3, res[2]+107);
  /* #1181: @162 = @2[84:98] */
  for (rr=w162, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #1182: @177 = @2[70:84] */
  for (rr=w177, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #1183: @21 = @8[20:24] */
  for (rr=w21, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #1184: @180 = f_disc(@177, @21) */
  arg1[0]=w177;
  arg1[1]=w21;
  res1[0]=w180;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1185: @162 = (@162-@180) */
  for (i=0, rr=w162, cs=w180; i<14; ++i) (*rr++) -= (*cs++);
  /* #1186: output[2][25] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+110);
  /* #1187: @0 = 0 */
  w0 = 0.;
  /* #1188: @179 = @2[80:83] */
  for (rr=w179, ss=w2+80; ss!=w2+83; ss+=1) *rr++ = *ss;
  /* #1189: @179 = @179' */
  /* #1190: @181 = @2[73:76] */
  for (rr=w181, ss=w2+73; ss!=w2+76; ss+=1) *rr++ = *ss;
  /* #1191: @0 = mac(@179,@181,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w179+j, tt=w181+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1192: output[2][26] = @0 */
  if (res[2]) res[2][124] = w0;
  /* #1193: @0 = @2[72] */
  for (rr=(&w0), ss=w2+72; ss!=w2+73; ss+=1) *rr++ = *ss;
  /* #1194: @6 = @2[83] */
  for (rr=(&w6), ss=w2+83; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #1195: @0 = (@0-@6) */
  w0 -= w6;
  /* #1196: output[2][27] = @0 */
  if (res[2]) res[2][125] = w0;
  /* #1197: @182 = @2[73:76] */
  for (rr=w182, ss=w2+73; ss!=w2+76; ss+=1) *rr++ = *ss;
  /* #1198: output[2][28] = @182 */
  if (res[2]) casadi_copy(w182, 3, res[2]+126);
  /* #1199: @182 = @8[20:23] */
  for (rr=w182, ss=w8+20; ss!=w8+23; ss+=1) *rr++ = *ss;
  /* #1200: output[2][29] = @182 */
  if (res[2]) casadi_copy(w182, 3, res[2]+129);
  /* #1201: @162 = @2[98:112] */
  for (rr=w162, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #1202: @180 = @2[84:98] */
  for (rr=w180, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #1203: @26 = @8[24:28] */
  for (rr=w26, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #1204: @183 = f_disc(@180, @26) */
  arg1[0]=w180;
  arg1[1]=w26;
  res1[0]=w183;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1205: @162 = (@162-@183) */
  for (i=0, rr=w162, cs=w183; i<14; ++i) (*rr++) -= (*cs++);
  /* #1206: output[2][30] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+132);
  /* #1207: @0 = 0 */
  w0 = 0.;
  /* #1208: @182 = @2[94:97] */
  for (rr=w182, ss=w2+94; ss!=w2+97; ss+=1) *rr++ = *ss;
  /* #1209: @182 = @182' */
  /* #1210: @184 = @2[87:90] */
  for (rr=w184, ss=w2+87; ss!=w2+90; ss+=1) *rr++ = *ss;
  /* #1211: @0 = mac(@182,@184,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w182+j, tt=w184+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1212: output[2][31] = @0 */
  if (res[2]) res[2][146] = w0;
  /* #1213: @0 = @2[86] */
  for (rr=(&w0), ss=w2+86; ss!=w2+87; ss+=1) *rr++ = *ss;
  /* #1214: @6 = @2[97] */
  for (rr=(&w6), ss=w2+97; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #1215: @0 = (@0-@6) */
  w0 -= w6;
  /* #1216: output[2][32] = @0 */
  if (res[2]) res[2][147] = w0;
  /* #1217: @185 = @2[87:90] */
  for (rr=w185, ss=w2+87; ss!=w2+90; ss+=1) *rr++ = *ss;
  /* #1218: output[2][33] = @185 */
  if (res[2]) casadi_copy(w185, 3, res[2]+148);
  /* #1219: @185 = @8[24:27] */
  for (rr=w185, ss=w8+24; ss!=w8+27; ss+=1) *rr++ = *ss;
  /* #1220: output[2][34] = @185 */
  if (res[2]) casadi_copy(w185, 3, res[2]+151);
  /* #1221: @162 = @2[112:126] */
  for (rr=w162, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #1222: @183 = @2[98:112] */
  for (rr=w183, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #1223: @27 = @8[28:32] */
  for (rr=w27, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #1224: @186 = f_disc(@183, @27) */
  arg1[0]=w183;
  arg1[1]=w27;
  res1[0]=w186;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1225: @162 = (@162-@186) */
  for (i=0, rr=w162, cs=w186; i<14; ++i) (*rr++) -= (*cs++);
  /* #1226: output[2][35] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+154);
  /* #1227: @0 = 0 */
  w0 = 0.;
  /* #1228: @185 = @2[108:111] */
  for (rr=w185, ss=w2+108; ss!=w2+111; ss+=1) *rr++ = *ss;
  /* #1229: @185 = @185' */
  /* #1230: @187 = @2[101:104] */
  for (rr=w187, ss=w2+101; ss!=w2+104; ss+=1) *rr++ = *ss;
  /* #1231: @0 = mac(@185,@187,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w185+j, tt=w187+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1232: output[2][36] = @0 */
  if (res[2]) res[2][168] = w0;
  /* #1233: @0 = @2[100] */
  for (rr=(&w0), ss=w2+100; ss!=w2+101; ss+=1) *rr++ = *ss;
  /* #1234: @6 = @2[111] */
  for (rr=(&w6), ss=w2+111; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #1235: @0 = (@0-@6) */
  w0 -= w6;
  /* #1236: output[2][37] = @0 */
  if (res[2]) res[2][169] = w0;
  /* #1237: @188 = @2[101:104] */
  for (rr=w188, ss=w2+101; ss!=w2+104; ss+=1) *rr++ = *ss;
  /* #1238: output[2][38] = @188 */
  if (res[2]) casadi_copy(w188, 3, res[2]+170);
  /* #1239: @188 = @8[28:31] */
  for (rr=w188, ss=w8+28; ss!=w8+31; ss+=1) *rr++ = *ss;
  /* #1240: output[2][39] = @188 */
  if (res[2]) casadi_copy(w188, 3, res[2]+173);
  /* #1241: @162 = @2[126:140] */
  for (rr=w162, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #1242: @186 = @2[112:126] */
  for (rr=w186, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #1243: @32 = @8[32:36] */
  for (rr=w32, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #1244: @189 = f_disc(@186, @32) */
  arg1[0]=w186;
  arg1[1]=w32;
  res1[0]=w189;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1245: @162 = (@162-@189) */
  for (i=0, rr=w162, cs=w189; i<14; ++i) (*rr++) -= (*cs++);
  /* #1246: output[2][40] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+176);
  /* #1247: @0 = 0 */
  w0 = 0.;
  /* #1248: @188 = @2[122:125] */
  for (rr=w188, ss=w2+122; ss!=w2+125; ss+=1) *rr++ = *ss;
  /* #1249: @188 = @188' */
  /* #1250: @190 = @2[115:118] */
  for (rr=w190, ss=w2+115; ss!=w2+118; ss+=1) *rr++ = *ss;
  /* #1251: @0 = mac(@188,@190,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w188+j, tt=w190+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1252: output[2][41] = @0 */
  if (res[2]) res[2][190] = w0;
  /* #1253: @0 = @2[114] */
  for (rr=(&w0), ss=w2+114; ss!=w2+115; ss+=1) *rr++ = *ss;
  /* #1254: @6 = @2[125] */
  for (rr=(&w6), ss=w2+125; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #1255: @0 = (@0-@6) */
  w0 -= w6;
  /* #1256: output[2][42] = @0 */
  if (res[2]) res[2][191] = w0;
  /* #1257: @191 = @2[115:118] */
  for (rr=w191, ss=w2+115; ss!=w2+118; ss+=1) *rr++ = *ss;
  /* #1258: output[2][43] = @191 */
  if (res[2]) casadi_copy(w191, 3, res[2]+192);
  /* #1259: @191 = @8[32:35] */
  for (rr=w191, ss=w8+32; ss!=w8+35; ss+=1) *rr++ = *ss;
  /* #1260: output[2][44] = @191 */
  if (res[2]) casadi_copy(w191, 3, res[2]+195);
  /* #1261: @162 = @2[140:154] */
  for (rr=w162, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #1262: @189 = @2[126:140] */
  for (rr=w189, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #1263: @33 = @8[36:40] */
  for (rr=w33, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #1264: @192 = f_disc(@189, @33) */
  arg1[0]=w189;
  arg1[1]=w33;
  res1[0]=w192;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1265: @162 = (@162-@192) */
  for (i=0, rr=w162, cs=w192; i<14; ++i) (*rr++) -= (*cs++);
  /* #1266: output[2][45] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+198);
  /* #1267: @0 = 0 */
  w0 = 0.;
  /* #1268: @191 = @2[136:139] */
  for (rr=w191, ss=w2+136; ss!=w2+139; ss+=1) *rr++ = *ss;
  /* #1269: @191 = @191' */
  /* #1270: @193 = @2[129:132] */
  for (rr=w193, ss=w2+129; ss!=w2+132; ss+=1) *rr++ = *ss;
  /* #1271: @0 = mac(@191,@193,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w191+j, tt=w193+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1272: output[2][46] = @0 */
  if (res[2]) res[2][212] = w0;
  /* #1273: @0 = @2[128] */
  for (rr=(&w0), ss=w2+128; ss!=w2+129; ss+=1) *rr++ = *ss;
  /* #1274: @6 = @2[139] */
  for (rr=(&w6), ss=w2+139; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #1275: @0 = (@0-@6) */
  w0 -= w6;
  /* #1276: output[2][47] = @0 */
  if (res[2]) res[2][213] = w0;
  /* #1277: @194 = @2[129:132] */
  for (rr=w194, ss=w2+129; ss!=w2+132; ss+=1) *rr++ = *ss;
  /* #1278: output[2][48] = @194 */
  if (res[2]) casadi_copy(w194, 3, res[2]+214);
  /* #1279: @194 = @8[36:39] */
  for (rr=w194, ss=w8+36; ss!=w8+39; ss+=1) *rr++ = *ss;
  /* #1280: output[2][49] = @194 */
  if (res[2]) casadi_copy(w194, 3, res[2]+217);
  /* #1281: @162 = @2[154:168] */
  for (rr=w162, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #1282: @192 = @2[140:154] */
  for (rr=w192, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #1283: @38 = @8[40:44] */
  for (rr=w38, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #1284: @195 = f_disc(@192, @38) */
  arg1[0]=w192;
  arg1[1]=w38;
  res1[0]=w195;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1285: @162 = (@162-@195) */
  for (i=0, rr=w162, cs=w195; i<14; ++i) (*rr++) -= (*cs++);
  /* #1286: output[2][50] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+220);
  /* #1287: @0 = 0 */
  w0 = 0.;
  /* #1288: @194 = @2[150:153] */
  for (rr=w194, ss=w2+150; ss!=w2+153; ss+=1) *rr++ = *ss;
  /* #1289: @194 = @194' */
  /* #1290: @196 = @2[143:146] */
  for (rr=w196, ss=w2+143; ss!=w2+146; ss+=1) *rr++ = *ss;
  /* #1291: @0 = mac(@194,@196,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w194+j, tt=w196+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1292: output[2][51] = @0 */
  if (res[2]) res[2][234] = w0;
  /* #1293: @0 = @2[142] */
  for (rr=(&w0), ss=w2+142; ss!=w2+143; ss+=1) *rr++ = *ss;
  /* #1294: @6 = @2[153] */
  for (rr=(&w6), ss=w2+153; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #1295: @0 = (@0-@6) */
  w0 -= w6;
  /* #1296: output[2][52] = @0 */
  if (res[2]) res[2][235] = w0;
  /* #1297: @197 = @2[143:146] */
  for (rr=w197, ss=w2+143; ss!=w2+146; ss+=1) *rr++ = *ss;
  /* #1298: output[2][53] = @197 */
  if (res[2]) casadi_copy(w197, 3, res[2]+236);
  /* #1299: @197 = @8[40:43] */
  for (rr=w197, ss=w8+40; ss!=w8+43; ss+=1) *rr++ = *ss;
  /* #1300: output[2][54] = @197 */
  if (res[2]) casadi_copy(w197, 3, res[2]+239);
  /* #1301: @162 = @2[168:182] */
  for (rr=w162, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #1302: @195 = @2[154:168] */
  for (rr=w195, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #1303: @39 = @8[44:48] */
  for (rr=w39, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #1304: @198 = f_disc(@195, @39) */
  arg1[0]=w195;
  arg1[1]=w39;
  res1[0]=w198;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1305: @162 = (@162-@198) */
  for (i=0, rr=w162, cs=w198; i<14; ++i) (*rr++) -= (*cs++);
  /* #1306: output[2][55] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+242);
  /* #1307: @0 = 0 */
  w0 = 0.;
  /* #1308: @197 = @2[164:167] */
  for (rr=w197, ss=w2+164; ss!=w2+167; ss+=1) *rr++ = *ss;
  /* #1309: @197 = @197' */
  /* #1310: @199 = @2[157:160] */
  for (rr=w199, ss=w2+157; ss!=w2+160; ss+=1) *rr++ = *ss;
  /* #1311: @0 = mac(@197,@199,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w197+j, tt=w199+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1312: output[2][56] = @0 */
  if (res[2]) res[2][256] = w0;
  /* #1313: @0 = @2[156] */
  for (rr=(&w0), ss=w2+156; ss!=w2+157; ss+=1) *rr++ = *ss;
  /* #1314: @6 = @2[167] */
  for (rr=(&w6), ss=w2+167; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #1315: @0 = (@0-@6) */
  w0 -= w6;
  /* #1316: output[2][57] = @0 */
  if (res[2]) res[2][257] = w0;
  /* #1317: @200 = @2[157:160] */
  for (rr=w200, ss=w2+157; ss!=w2+160; ss+=1) *rr++ = *ss;
  /* #1318: output[2][58] = @200 */
  if (res[2]) casadi_copy(w200, 3, res[2]+258);
  /* #1319: @200 = @8[44:47] */
  for (rr=w200, ss=w8+44; ss!=w8+47; ss+=1) *rr++ = *ss;
  /* #1320: output[2][59] = @200 */
  if (res[2]) casadi_copy(w200, 3, res[2]+261);
  /* #1321: @162 = @2[182:196] */
  for (rr=w162, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #1322: @198 = @2[168:182] */
  for (rr=w198, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #1323: @44 = @8[48:52] */
  for (rr=w44, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #1324: @201 = f_disc(@198, @44) */
  arg1[0]=w198;
  arg1[1]=w44;
  res1[0]=w201;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1325: @162 = (@162-@201) */
  for (i=0, rr=w162, cs=w201; i<14; ++i) (*rr++) -= (*cs++);
  /* #1326: output[2][60] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+264);
  /* #1327: @0 = 0 */
  w0 = 0.;
  /* #1328: @200 = @2[178:181] */
  for (rr=w200, ss=w2+178; ss!=w2+181; ss+=1) *rr++ = *ss;
  /* #1329: @200 = @200' */
  /* #1330: @202 = @2[171:174] */
  for (rr=w202, ss=w2+171; ss!=w2+174; ss+=1) *rr++ = *ss;
  /* #1331: @0 = mac(@200,@202,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w200+j, tt=w202+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1332: output[2][61] = @0 */
  if (res[2]) res[2][278] = w0;
  /* #1333: @0 = @2[170] */
  for (rr=(&w0), ss=w2+170; ss!=w2+171; ss+=1) *rr++ = *ss;
  /* #1334: @6 = @2[181] */
  for (rr=(&w6), ss=w2+181; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #1335: @0 = (@0-@6) */
  w0 -= w6;
  /* #1336: output[2][62] = @0 */
  if (res[2]) res[2][279] = w0;
  /* #1337: @203 = @2[171:174] */
  for (rr=w203, ss=w2+171; ss!=w2+174; ss+=1) *rr++ = *ss;
  /* #1338: output[2][63] = @203 */
  if (res[2]) casadi_copy(w203, 3, res[2]+280);
  /* #1339: @203 = @8[48:51] */
  for (rr=w203, ss=w8+48; ss!=w8+51; ss+=1) *rr++ = *ss;
  /* #1340: output[2][64] = @203 */
  if (res[2]) casadi_copy(w203, 3, res[2]+283);
  /* #1341: @162 = @2[196:210] */
  for (rr=w162, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #1342: @201 = @2[182:196] */
  for (rr=w201, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #1343: @45 = @8[52:56] */
  for (rr=w45, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #1344: @204 = f_disc(@201, @45) */
  arg1[0]=w201;
  arg1[1]=w45;
  res1[0]=w204;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1345: @162 = (@162-@204) */
  for (i=0, rr=w162, cs=w204; i<14; ++i) (*rr++) -= (*cs++);
  /* #1346: output[2][65] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+286);
  /* #1347: @0 = 0 */
  w0 = 0.;
  /* #1348: @203 = @2[192:195] */
  for (rr=w203, ss=w2+192; ss!=w2+195; ss+=1) *rr++ = *ss;
  /* #1349: @203 = @203' */
  /* #1350: @205 = @2[185:188] */
  for (rr=w205, ss=w2+185; ss!=w2+188; ss+=1) *rr++ = *ss;
  /* #1351: @0 = mac(@203,@205,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w203+j, tt=w205+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1352: output[2][66] = @0 */
  if (res[2]) res[2][300] = w0;
  /* #1353: @0 = @2[184] */
  for (rr=(&w0), ss=w2+184; ss!=w2+185; ss+=1) *rr++ = *ss;
  /* #1354: @6 = @2[195] */
  for (rr=(&w6), ss=w2+195; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #1355: @0 = (@0-@6) */
  w0 -= w6;
  /* #1356: output[2][67] = @0 */
  if (res[2]) res[2][301] = w0;
  /* #1357: @206 = @2[185:188] */
  for (rr=w206, ss=w2+185; ss!=w2+188; ss+=1) *rr++ = *ss;
  /* #1358: output[2][68] = @206 */
  if (res[2]) casadi_copy(w206, 3, res[2]+302);
  /* #1359: @206 = @8[52:55] */
  for (rr=w206, ss=w8+52; ss!=w8+55; ss+=1) *rr++ = *ss;
  /* #1360: output[2][69] = @206 */
  if (res[2]) casadi_copy(w206, 3, res[2]+305);
  /* #1361: @162 = @2[210:224] */
  for (rr=w162, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #1362: @204 = @2[196:210] */
  for (rr=w204, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #1363: @50 = @8[56:60] */
  for (rr=w50, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #1364: @207 = f_disc(@204, @50) */
  arg1[0]=w204;
  arg1[1]=w50;
  res1[0]=w207;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1365: @162 = (@162-@207) */
  for (i=0, rr=w162, cs=w207; i<14; ++i) (*rr++) -= (*cs++);
  /* #1366: output[2][70] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+308);
  /* #1367: @0 = 0 */
  w0 = 0.;
  /* #1368: @206 = @2[206:209] */
  for (rr=w206, ss=w2+206; ss!=w2+209; ss+=1) *rr++ = *ss;
  /* #1369: @206 = @206' */
  /* #1370: @208 = @2[199:202] */
  for (rr=w208, ss=w2+199; ss!=w2+202; ss+=1) *rr++ = *ss;
  /* #1371: @0 = mac(@206,@208,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w206+j, tt=w208+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1372: output[2][71] = @0 */
  if (res[2]) res[2][322] = w0;
  /* #1373: @0 = @2[198] */
  for (rr=(&w0), ss=w2+198; ss!=w2+199; ss+=1) *rr++ = *ss;
  /* #1374: @6 = @2[209] */
  for (rr=(&w6), ss=w2+209; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #1375: @0 = (@0-@6) */
  w0 -= w6;
  /* #1376: output[2][72] = @0 */
  if (res[2]) res[2][323] = w0;
  /* #1377: @209 = @2[199:202] */
  for (rr=w209, ss=w2+199; ss!=w2+202; ss+=1) *rr++ = *ss;
  /* #1378: output[2][73] = @209 */
  if (res[2]) casadi_copy(w209, 3, res[2]+324);
  /* #1379: @209 = @8[56:59] */
  for (rr=w209, ss=w8+56; ss!=w8+59; ss+=1) *rr++ = *ss;
  /* #1380: output[2][74] = @209 */
  if (res[2]) casadi_copy(w209, 3, res[2]+327);
  /* #1381: @162 = @2[224:238] */
  for (rr=w162, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #1382: @207 = @2[210:224] */
  for (rr=w207, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #1383: @51 = @8[60:64] */
  for (rr=w51, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #1384: @210 = f_disc(@207, @51) */
  arg1[0]=w207;
  arg1[1]=w51;
  res1[0]=w210;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1385: @162 = (@162-@210) */
  for (i=0, rr=w162, cs=w210; i<14; ++i) (*rr++) -= (*cs++);
  /* #1386: output[2][75] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+330);
  /* #1387: @0 = 0 */
  w0 = 0.;
  /* #1388: @209 = @2[220:223] */
  for (rr=w209, ss=w2+220; ss!=w2+223; ss+=1) *rr++ = *ss;
  /* #1389: @209 = @209' */
  /* #1390: @211 = @2[213:216] */
  for (rr=w211, ss=w2+213; ss!=w2+216; ss+=1) *rr++ = *ss;
  /* #1391: @0 = mac(@209,@211,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w209+j, tt=w211+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1392: output[2][76] = @0 */
  if (res[2]) res[2][344] = w0;
  /* #1393: @0 = @2[212] */
  for (rr=(&w0), ss=w2+212; ss!=w2+213; ss+=1) *rr++ = *ss;
  /* #1394: @6 = @2[223] */
  for (rr=(&w6), ss=w2+223; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #1395: @0 = (@0-@6) */
  w0 -= w6;
  /* #1396: output[2][77] = @0 */
  if (res[2]) res[2][345] = w0;
  /* #1397: @212 = @2[213:216] */
  for (rr=w212, ss=w2+213; ss!=w2+216; ss+=1) *rr++ = *ss;
  /* #1398: output[2][78] = @212 */
  if (res[2]) casadi_copy(w212, 3, res[2]+346);
  /* #1399: @212 = @8[60:63] */
  for (rr=w212, ss=w8+60; ss!=w8+63; ss+=1) *rr++ = *ss;
  /* #1400: output[2][79] = @212 */
  if (res[2]) casadi_copy(w212, 3, res[2]+349);
  /* #1401: @162 = @2[238:252] */
  for (rr=w162, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #1402: @210 = @2[224:238] */
  for (rr=w210, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #1403: @56 = @8[64:68] */
  for (rr=w56, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #1404: @213 = f_disc(@210, @56) */
  arg1[0]=w210;
  arg1[1]=w56;
  res1[0]=w213;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1405: @162 = (@162-@213) */
  for (i=0, rr=w162, cs=w213; i<14; ++i) (*rr++) -= (*cs++);
  /* #1406: output[2][80] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+352);
  /* #1407: @0 = 0 */
  w0 = 0.;
  /* #1408: @212 = @2[234:237] */
  for (rr=w212, ss=w2+234; ss!=w2+237; ss+=1) *rr++ = *ss;
  /* #1409: @212 = @212' */
  /* #1410: @214 = @2[227:230] */
  for (rr=w214, ss=w2+227; ss!=w2+230; ss+=1) *rr++ = *ss;
  /* #1411: @0 = mac(@212,@214,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w212+j, tt=w214+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1412: output[2][81] = @0 */
  if (res[2]) res[2][366] = w0;
  /* #1413: @0 = @2[226] */
  for (rr=(&w0), ss=w2+226; ss!=w2+227; ss+=1) *rr++ = *ss;
  /* #1414: @6 = @2[237] */
  for (rr=(&w6), ss=w2+237; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #1415: @0 = (@0-@6) */
  w0 -= w6;
  /* #1416: output[2][82] = @0 */
  if (res[2]) res[2][367] = w0;
  /* #1417: @215 = @2[227:230] */
  for (rr=w215, ss=w2+227; ss!=w2+230; ss+=1) *rr++ = *ss;
  /* #1418: output[2][83] = @215 */
  if (res[2]) casadi_copy(w215, 3, res[2]+368);
  /* #1419: @215 = @8[64:67] */
  for (rr=w215, ss=w8+64; ss!=w8+67; ss+=1) *rr++ = *ss;
  /* #1420: output[2][84] = @215 */
  if (res[2]) casadi_copy(w215, 3, res[2]+371);
  /* #1421: @162 = @2[252:266] */
  for (rr=w162, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #1422: @213 = @2[238:252] */
  for (rr=w213, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #1423: @57 = @8[68:72] */
  for (rr=w57, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #1424: @216 = f_disc(@213, @57) */
  arg1[0]=w213;
  arg1[1]=w57;
  res1[0]=w216;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1425: @162 = (@162-@216) */
  for (i=0, rr=w162, cs=w216; i<14; ++i) (*rr++) -= (*cs++);
  /* #1426: output[2][85] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+374);
  /* #1427: @0 = 0 */
  w0 = 0.;
  /* #1428: @215 = @2[248:251] */
  for (rr=w215, ss=w2+248; ss!=w2+251; ss+=1) *rr++ = *ss;
  /* #1429: @215 = @215' */
  /* #1430: @217 = @2[241:244] */
  for (rr=w217, ss=w2+241; ss!=w2+244; ss+=1) *rr++ = *ss;
  /* #1431: @0 = mac(@215,@217,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w215+j, tt=w217+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1432: output[2][86] = @0 */
  if (res[2]) res[2][388] = w0;
  /* #1433: @0 = @2[240] */
  for (rr=(&w0), ss=w2+240; ss!=w2+241; ss+=1) *rr++ = *ss;
  /* #1434: @6 = @2[251] */
  for (rr=(&w6), ss=w2+251; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #1435: @0 = (@0-@6) */
  w0 -= w6;
  /* #1436: output[2][87] = @0 */
  if (res[2]) res[2][389] = w0;
  /* #1437: @218 = @2[241:244] */
  for (rr=w218, ss=w2+241; ss!=w2+244; ss+=1) *rr++ = *ss;
  /* #1438: output[2][88] = @218 */
  if (res[2]) casadi_copy(w218, 3, res[2]+390);
  /* #1439: @218 = @8[68:71] */
  for (rr=w218, ss=w8+68; ss!=w8+71; ss+=1) *rr++ = *ss;
  /* #1440: output[2][89] = @218 */
  if (res[2]) casadi_copy(w218, 3, res[2]+393);
  /* #1441: @162 = @2[266:280] */
  for (rr=w162, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #1442: @216 = @2[252:266] */
  for (rr=w216, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #1443: @62 = @8[72:76] */
  for (rr=w62, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #1444: @219 = f_disc(@216, @62) */
  arg1[0]=w216;
  arg1[1]=w62;
  res1[0]=w219;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1445: @162 = (@162-@219) */
  for (i=0, rr=w162, cs=w219; i<14; ++i) (*rr++) -= (*cs++);
  /* #1446: output[2][90] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+396);
  /* #1447: @0 = 0 */
  w0 = 0.;
  /* #1448: @218 = @2[262:265] */
  for (rr=w218, ss=w2+262; ss!=w2+265; ss+=1) *rr++ = *ss;
  /* #1449: @218 = @218' */
  /* #1450: @220 = @2[255:258] */
  for (rr=w220, ss=w2+255; ss!=w2+258; ss+=1) *rr++ = *ss;
  /* #1451: @0 = mac(@218,@220,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w218+j, tt=w220+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1452: output[2][91] = @0 */
  if (res[2]) res[2][410] = w0;
  /* #1453: @0 = @2[254] */
  for (rr=(&w0), ss=w2+254; ss!=w2+255; ss+=1) *rr++ = *ss;
  /* #1454: @6 = @2[265] */
  for (rr=(&w6), ss=w2+265; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #1455: @0 = (@0-@6) */
  w0 -= w6;
  /* #1456: output[2][92] = @0 */
  if (res[2]) res[2][411] = w0;
  /* #1457: @221 = @2[255:258] */
  for (rr=w221, ss=w2+255; ss!=w2+258; ss+=1) *rr++ = *ss;
  /* #1458: output[2][93] = @221 */
  if (res[2]) casadi_copy(w221, 3, res[2]+412);
  /* #1459: @221 = @8[72:75] */
  for (rr=w221, ss=w8+72; ss!=w8+75; ss+=1) *rr++ = *ss;
  /* #1460: output[2][94] = @221 */
  if (res[2]) casadi_copy(w221, 3, res[2]+415);
  /* #1461: @162 = @2[280:294] */
  for (rr=w162, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #1462: @219 = @2[266:280] */
  for (rr=w219, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #1463: @63 = @8[76:80] */
  for (rr=w63, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #1464: @222 = f_disc(@219, @63) */
  arg1[0]=w219;
  arg1[1]=w63;
  res1[0]=w222;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1465: @162 = (@162-@222) */
  for (i=0, rr=w162, cs=w222; i<14; ++i) (*rr++) -= (*cs++);
  /* #1466: output[2][95] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+418);
  /* #1467: @0 = 0 */
  w0 = 0.;
  /* #1468: @221 = @2[276:279] */
  for (rr=w221, ss=w2+276; ss!=w2+279; ss+=1) *rr++ = *ss;
  /* #1469: @221 = @221' */
  /* #1470: @223 = @2[269:272] */
  for (rr=w223, ss=w2+269; ss!=w2+272; ss+=1) *rr++ = *ss;
  /* #1471: @0 = mac(@221,@223,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w221+j, tt=w223+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1472: output[2][96] = @0 */
  if (res[2]) res[2][432] = w0;
  /* #1473: @0 = @2[268] */
  for (rr=(&w0), ss=w2+268; ss!=w2+269; ss+=1) *rr++ = *ss;
  /* #1474: @6 = @2[279] */
  for (rr=(&w6), ss=w2+279; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #1475: @0 = (@0-@6) */
  w0 -= w6;
  /* #1476: output[2][97] = @0 */
  if (res[2]) res[2][433] = w0;
  /* #1477: @224 = @2[269:272] */
  for (rr=w224, ss=w2+269; ss!=w2+272; ss+=1) *rr++ = *ss;
  /* #1478: output[2][98] = @224 */
  if (res[2]) casadi_copy(w224, 3, res[2]+434);
  /* #1479: @224 = @8[76:79] */
  for (rr=w224, ss=w8+76; ss!=w8+79; ss+=1) *rr++ = *ss;
  /* #1480: output[2][99] = @224 */
  if (res[2]) casadi_copy(w224, 3, res[2]+437);
  /* #1481: @162 = @2[294:308] */
  for (rr=w162, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #1482: @222 = @2[280:294] */
  for (rr=w222, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #1483: @68 = @8[80:84] */
  for (rr=w68, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #1484: @225 = f_disc(@222, @68) */
  arg1[0]=w222;
  arg1[1]=w68;
  res1[0]=w225;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1485: @162 = (@162-@225) */
  for (i=0, rr=w162, cs=w225; i<14; ++i) (*rr++) -= (*cs++);
  /* #1486: output[2][100] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+440);
  /* #1487: @0 = 0 */
  w0 = 0.;
  /* #1488: @224 = @2[290:293] */
  for (rr=w224, ss=w2+290; ss!=w2+293; ss+=1) *rr++ = *ss;
  /* #1489: @224 = @224' */
  /* #1490: @226 = @2[283:286] */
  for (rr=w226, ss=w2+283; ss!=w2+286; ss+=1) *rr++ = *ss;
  /* #1491: @0 = mac(@224,@226,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w224+j, tt=w226+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1492: output[2][101] = @0 */
  if (res[2]) res[2][454] = w0;
  /* #1493: @0 = @2[282] */
  for (rr=(&w0), ss=w2+282; ss!=w2+283; ss+=1) *rr++ = *ss;
  /* #1494: @6 = @2[293] */
  for (rr=(&w6), ss=w2+293; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #1495: @0 = (@0-@6) */
  w0 -= w6;
  /* #1496: output[2][102] = @0 */
  if (res[2]) res[2][455] = w0;
  /* #1497: @227 = @2[283:286] */
  for (rr=w227, ss=w2+283; ss!=w2+286; ss+=1) *rr++ = *ss;
  /* #1498: output[2][103] = @227 */
  if (res[2]) casadi_copy(w227, 3, res[2]+456);
  /* #1499: @227 = @8[80:83] */
  for (rr=w227, ss=w8+80; ss!=w8+83; ss+=1) *rr++ = *ss;
  /* #1500: output[2][104] = @227 */
  if (res[2]) casadi_copy(w227, 3, res[2]+459);
  /* #1501: @162 = @2[308:322] */
  for (rr=w162, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1502: @225 = @2[294:308] */
  for (rr=w225, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #1503: @69 = @8[84:88] */
  for (rr=w69, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #1504: @228 = f_disc(@225, @69) */
  arg1[0]=w225;
  arg1[1]=w69;
  res1[0]=w228;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1505: @162 = (@162-@228) */
  for (i=0, rr=w162, cs=w228; i<14; ++i) (*rr++) -= (*cs++);
  /* #1506: output[2][105] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+462);
  /* #1507: @0 = 0 */
  w0 = 0.;
  /* #1508: @227 = @2[304:307] */
  for (rr=w227, ss=w2+304; ss!=w2+307; ss+=1) *rr++ = *ss;
  /* #1509: @227 = @227' */
  /* #1510: @229 = @2[297:300] */
  for (rr=w229, ss=w2+297; ss!=w2+300; ss+=1) *rr++ = *ss;
  /* #1511: @0 = mac(@227,@229,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w227+j, tt=w229+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1512: output[2][106] = @0 */
  if (res[2]) res[2][476] = w0;
  /* #1513: @0 = @2[296] */
  for (rr=(&w0), ss=w2+296; ss!=w2+297; ss+=1) *rr++ = *ss;
  /* #1514: @6 = @2[307] */
  for (rr=(&w6), ss=w2+307; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #1515: @0 = (@0-@6) */
  w0 -= w6;
  /* #1516: output[2][107] = @0 */
  if (res[2]) res[2][477] = w0;
  /* #1517: @230 = @2[297:300] */
  for (rr=w230, ss=w2+297; ss!=w2+300; ss+=1) *rr++ = *ss;
  /* #1518: output[2][108] = @230 */
  if (res[2]) casadi_copy(w230, 3, res[2]+478);
  /* #1519: @230 = @8[84:87] */
  for (rr=w230, ss=w8+84; ss!=w8+87; ss+=1) *rr++ = *ss;
  /* #1520: output[2][109] = @230 */
  if (res[2]) casadi_copy(w230, 3, res[2]+481);
  /* #1521: @162 = @2[322:336] */
  for (rr=w162, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1522: @228 = @2[308:322] */
  for (rr=w228, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1523: @74 = @8[88:92] */
  for (rr=w74, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #1524: @231 = f_disc(@228, @74) */
  arg1[0]=w228;
  arg1[1]=w74;
  res1[0]=w231;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1525: @162 = (@162-@231) */
  for (i=0, rr=w162, cs=w231; i<14; ++i) (*rr++) -= (*cs++);
  /* #1526: output[2][110] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+484);
  /* #1527: @0 = 0 */
  w0 = 0.;
  /* #1528: @230 = @2[318:321] */
  for (rr=w230, ss=w2+318; ss!=w2+321; ss+=1) *rr++ = *ss;
  /* #1529: @230 = @230' */
  /* #1530: @232 = @2[311:314] */
  for (rr=w232, ss=w2+311; ss!=w2+314; ss+=1) *rr++ = *ss;
  /* #1531: @0 = mac(@230,@232,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w230+j, tt=w232+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1532: output[2][111] = @0 */
  if (res[2]) res[2][498] = w0;
  /* #1533: @0 = @2[310] */
  for (rr=(&w0), ss=w2+310; ss!=w2+311; ss+=1) *rr++ = *ss;
  /* #1534: @6 = @2[321] */
  for (rr=(&w6), ss=w2+321; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1535: @0 = (@0-@6) */
  w0 -= w6;
  /* #1536: output[2][112] = @0 */
  if (res[2]) res[2][499] = w0;
  /* #1537: @233 = @2[311:314] */
  for (rr=w233, ss=w2+311; ss!=w2+314; ss+=1) *rr++ = *ss;
  /* #1538: output[2][113] = @233 */
  if (res[2]) casadi_copy(w233, 3, res[2]+500);
  /* #1539: @233 = @8[88:91] */
  for (rr=w233, ss=w8+88; ss!=w8+91; ss+=1) *rr++ = *ss;
  /* #1540: output[2][114] = @233 */
  if (res[2]) casadi_copy(w233, 3, res[2]+503);
  /* #1541: @162 = @2[336:350] */
  for (rr=w162, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1542: @231 = @2[322:336] */
  for (rr=w231, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1543: @75 = @8[92:96] */
  for (rr=w75, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #1544: @234 = f_disc(@231, @75) */
  arg1[0]=w231;
  arg1[1]=w75;
  res1[0]=w234;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1545: @162 = (@162-@234) */
  for (i=0, rr=w162, cs=w234; i<14; ++i) (*rr++) -= (*cs++);
  /* #1546: output[2][115] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+506);
  /* #1547: @0 = 0 */
  w0 = 0.;
  /* #1548: @233 = @2[332:335] */
  for (rr=w233, ss=w2+332; ss!=w2+335; ss+=1) *rr++ = *ss;
  /* #1549: @233 = @233' */
  /* #1550: @235 = @2[325:328] */
  for (rr=w235, ss=w2+325; ss!=w2+328; ss+=1) *rr++ = *ss;
  /* #1551: @0 = mac(@233,@235,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w233+j, tt=w235+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1552: output[2][116] = @0 */
  if (res[2]) res[2][520] = w0;
  /* #1553: @0 = @2[324] */
  for (rr=(&w0), ss=w2+324; ss!=w2+325; ss+=1) *rr++ = *ss;
  /* #1554: @6 = @2[335] */
  for (rr=(&w6), ss=w2+335; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1555: @0 = (@0-@6) */
  w0 -= w6;
  /* #1556: output[2][117] = @0 */
  if (res[2]) res[2][521] = w0;
  /* #1557: @236 = @2[325:328] */
  for (rr=w236, ss=w2+325; ss!=w2+328; ss+=1) *rr++ = *ss;
  /* #1558: output[2][118] = @236 */
  if (res[2]) casadi_copy(w236, 3, res[2]+522);
  /* #1559: @236 = @8[92:95] */
  for (rr=w236, ss=w8+92; ss!=w8+95; ss+=1) *rr++ = *ss;
  /* #1560: output[2][119] = @236 */
  if (res[2]) casadi_copy(w236, 3, res[2]+525);
  /* #1561: @162 = @2[350:364] */
  for (rr=w162, ss=w2+350; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #1562: @234 = @2[336:350] */
  for (rr=w234, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1563: @80 = @8[96:100] */
  for (rr=w80, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #1564: @237 = f_disc(@234, @80) */
  arg1[0]=w234;
  arg1[1]=w80;
  res1[0]=w237;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1565: @162 = (@162-@237) */
  for (i=0, rr=w162, cs=w237; i<14; ++i) (*rr++) -= (*cs++);
  /* #1566: output[2][120] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+528);
  /* #1567: @0 = 0 */
  w0 = 0.;
  /* #1568: @236 = @2[346:349] */
  for (rr=w236, ss=w2+346; ss!=w2+349; ss+=1) *rr++ = *ss;
  /* #1569: @236 = @236' */
  /* #1570: @238 = @2[339:342] */
  for (rr=w238, ss=w2+339; ss!=w2+342; ss+=1) *rr++ = *ss;
  /* #1571: @0 = mac(@236,@238,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w236+j, tt=w238+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1572: output[2][121] = @0 */
  if (res[2]) res[2][542] = w0;
  /* #1573: @0 = @2[338] */
  for (rr=(&w0), ss=w2+338; ss!=w2+339; ss+=1) *rr++ = *ss;
  /* #1574: @6 = @2[349] */
  for (rr=(&w6), ss=w2+349; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1575: @0 = (@0-@6) */
  w0 -= w6;
  /* #1576: output[2][122] = @0 */
  if (res[2]) res[2][543] = w0;
  /* #1577: @239 = @2[339:342] */
  for (rr=w239, ss=w2+339; ss!=w2+342; ss+=1) *rr++ = *ss;
  /* #1578: output[2][123] = @239 */
  if (res[2]) casadi_copy(w239, 3, res[2]+544);
  /* #1579: @239 = @8[96:99] */
  for (rr=w239, ss=w8+96; ss!=w8+99; ss+=1) *rr++ = *ss;
  /* #1580: output[2][124] = @239 */
  if (res[2]) casadi_copy(w239, 3, res[2]+547);
  /* #1581: @162 = @2[:14] */
  for (rr=w162, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #1582: output[2][125] = @162 */
  if (res[2]) casadi_copy(w162, 14, res[2]+550);
  /* #1583: @240 = zeros(464x564,1389nz) */
  casadi_clear(w240, 1389);
  /* #1584: @241 = ones(464x1,118nz) */
  casadi_fill(w241, 118, 1.);
  /* #1585: {@242, NULL} = vertsplit(@241) */
  casadi_copy(w241, 118, w242);
  /* #1586: @242 = reshape(@242) */
  /* #1587: @243 = @242[7:9] */
  for (rr=w243, ss=w242+7; ss!=w242+9; ss+=1) *rr++ = *ss;
  /* #1588: @162 = dense(@243) */
  casadi_densify(w243, casadi_s2, w162, 0);
  /* #1589: @244 = zeros(14x1,0nz) */
  /* #1590: @1 = @242[:7] */
  for (rr=w1, ss=w242+0; ss!=w242+7; ss+=1) *rr++ = *ss;
  /* #1591: @245 = ones(464x1,112nz) */
  casadi_fill(w245, 112, 1.);
  /* #1592: {@246, NULL} = vertsplit(@245) */
  casadi_copy(w245, 112, w246);
  /* #1593: @246 = reshape(@246) */
  /* #1594: @243 = @246[:2] */
  for (rr=w243, ss=w246+0; ss!=w246+2; ss+=1) *rr++ = *ss;
  /* #1595: @247 = ones(464x1,82nz) */
  casadi_fill(w247, 82, 1.);
  /* #1596: {@248, @249} = vertsplit(@247) */
  casadi_copy(w247, 56, w248);
  casadi_copy(w247+56, 26, w249);
  /* #1597: @248 = reshape(@248) */
  /* #1598: @0 = @248[0] */
  for (rr=(&w0), ss=w248+0; ss!=w248+1; ss+=1) *rr++ = *ss;
  /* #1599: @250 = ones(464x1,95nz) */
  casadi_fill(w250, 95, 1.);
  /* #1600: {@251, @252} = vertsplit(@250) */
  casadi_copy(w250, 25, w251);
  casadi_copy(w250+25, 70, w252);
  /* #1601: @251 = reshape(@251) */
  /* #1602: @6 = @251[0] */
  for (rr=(&w6), ss=w251+0; ss!=w251+1; ss+=1) *rr++ = *ss;
  /* #1603: @253 = ones(464x1,29nz) */
  casadi_fill(w253, 29, 1.);
  /* #1604: {@254, @81} = vertsplit(@253) */
  casadi_copy(w253, 25, w254);
  casadi_copy(w253+25, 4, w81);
  /* #1605: @254 = reshape(@254) */
  /* #1606: @255 = @254[0] */
  for (rr=(&w255), ss=w254+0; ss!=w254+1; ss+=1) *rr++ = *ss;
  /* #1607: @237 = ones(464x1,14nz) */
  casadi_fill(w237, 14, 1.);
  /* #1608: {@256, NULL} = vertsplit(@237) */
  casadi_copy(w237, 14, w256);
  /* #1609: @256 = reshape(@256) */
  /* #1610: @257 = @256[0] */
  for (rr=(&w257), ss=w256+0; ss!=w256+1; ss+=1) *rr++ = *ss;
  /* #1611: @258 = ones(464x1,13nz) */
  casadi_fill(w258, 13, 1.);
  /* #1612: {@259, NULL} = vertsplit(@258) */
  casadi_copy(w258, 13, w259);
  /* #1613: @259 = reshape(@259) */
  /* #1614: @260 = @259[0] */
  for (rr=(&w260), ss=w259+0; ss!=w259+1; ss+=1) *rr++ = *ss;
  /* #1615: @237 = horzcat(@1, @243, @0, @6, @255, @257, @260) */
  rr=w237;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w0;
  *rr++ = w6;
  *rr++ = w255;
  *rr++ = w257;
  *rr++ = w260;
  /* #1616: @261 = dense(@237) */
  casadi_densify(w237, casadi_s3, w261, 0);
  /* #1617: @262 = zeros(4x1,0nz) */
  /* #1618: @263 = zeros(4x1,0nz) */
  /* #1619: @249 = reshape(@249) */
  /* #1620: @0 = @249[0] */
  for (rr=(&w0), ss=w249+0; ss!=w249+1; ss+=1) *rr++ = *ss;
  /* #1621: @252 = reshape(@252) */
  /* #1622: @6 = @252[0] */
  for (rr=(&w6), ss=w252+0; ss!=w252+1; ss+=1) *rr++ = *ss;
  /* #1623: @81 = reshape(@81) */
  /* #1624: @243 = @81[:2] */
  for (rr=w243, ss=w81+0; ss!=w81+2; ss+=1) *rr++ = *ss;
  /* #1625: @264 = zeros(4x1,0nz) */
  /* #1626: @265 = zeros(4x1,0nz) */
  /* #1627: @86 = horzcat(@262, @263, @0, @6, @243, @264, @265) */
  rr=w86;
  *rr++ = w0;
  *rr++ = w6;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  /* #1628: @266 = dense(@86) */
  casadi_densify(w86, casadi_s4, w266, 0);
  /* #1629: @267 = fwd7_f_disc(@163, @7, @244, @261, @266) */
  arg1[0]=w163;
  arg1[1]=w7;
  arg1[2]=0;
  arg1[3]=w261;
  arg1[4]=w266;
  res1[0]=w267;
  if (casadi_f8(arg1, res1, iw, w, 0)) return 1;
  /* #1630: {@163, @237, @268, @269, @270, @271, @272} = horzsplit(@267) */
  casadi_copy(w267, 14, w163);
  casadi_copy(w267+14, 14, w237);
  casadi_copy(w267+28, 14, w268);
  casadi_copy(w267+42, 14, w269);
  casadi_copy(w267+56, 14, w270);
  casadi_copy(w267+70, 14, w271);
  casadi_copy(w267+84, 14, w272);
  /* #1631: @162 = (@162-@163) */
  for (i=0, rr=w162, cs=w163; i<14; ++i) (*rr++) -= (*cs++);
  /* #1632: @244 = 00 */
  /* #1633: @0 = @242[2] */
  for (rr=(&w0), ss=w242+2; ss!=w242+3; ss+=1) *rr++ = *ss;
  /* #1634: @262 = zeros(3x1,0nz) */
  /* #1635: @263 = zeros(3x1,0nz) */
  /* #1636: @273 = @242[9:15] */
  for (rr=w273, ss=w242+9; ss!=w242+15; ss+=1) *rr++ = *ss;
  /* #1637: @163 = dense(@273) */
  casadi_densify(w273, casadi_s5, w163, 0);
  /* #1638: @264 = zeros(14x1,0nz) */
  /* #1639: @243 = @242[7:9] */
  for (rr=w243, ss=w242+7; ss!=w242+9; ss+=1) *rr++ = *ss;
  /* #1640: @273 = @246[2:8] */
  for (rr=w273, ss=w246+2; ss!=w246+8; ss+=1) *rr++ = *ss;
  /* #1641: @274 = @248[1:3] */
  for (rr=w274, ss=w248+1; ss!=w248+3; ss+=1) *rr++ = *ss;
  /* #1642: @6 = @251[1] */
  for (rr=(&w6), ss=w251+1; ss!=w251+2; ss+=1) *rr++ = *ss;
  /* #1643: @255 = @254[1] */
  for (rr=(&w255), ss=w254+1; ss!=w254+2; ss+=1) *rr++ = *ss;
  /* #1644: @257 = @256[1] */
  for (rr=(&w257), ss=w256+1; ss!=w256+2; ss+=1) *rr++ = *ss;
  /* #1645: @260 = ones(464x1,1nz) */
  w260 = 1.;
  /* #1646: {@275, NULL} = vertsplit(@260) */
  w275 = w260;
  /* #1647: @275 = reshape(@275) */
  /* #1648: @260 = @275[0] */
  for (rr=(&w260), ss=(&w275)+0; ss!=(&w275)+1; ss+=1) *rr++ = *ss;
  /* #1649: @276 = horzcat(@243, @273, @274, @6, @255, @257, @260) */
  rr=w276;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w6;
  *rr++ = w255;
  *rr++ = w257;
  *rr++ = w260;
  /* #1650: @267 = dense(@276) */
  casadi_densify(w276, casadi_s6, w267, 0);
  /* #1651: @265 = zeros(4x1,0nz) */
  /* #1652: @277 = zeros(4x1,0nz) */
  /* #1653: @243 = @249[1:3] */
  for (rr=w243, ss=w249+1; ss!=w249+3; ss+=1) *rr++ = *ss;
  /* #1654: @6 = @252[1] */
  for (rr=(&w6), ss=w252+1; ss!=w252+2; ss+=1) *rr++ = *ss;
  /* #1655: @255 = @81[2] */
  for (rr=(&w255), ss=w81+2; ss!=w81+3; ss+=1) *rr++ = *ss;
  /* #1656: @278 = zeros(4x1,0nz) */
  /* #1657: @279 = zeros(4x1,0nz) */
  /* #1658: @7 = horzcat(@265, @277, @243, @6, @255, @278, @279) */
  rr=w7;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w6;
  *rr++ = w255;
  /* #1659: @266 = dense(@7) */
  casadi_densify(w7, casadi_s7, w266, 0);
  /* #1660: @261 = fwd7_f_disc(@164, @9, @264, @267, @266) */
  arg1[0]=w164;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w267;
  arg1[4]=w266;
  res1[0]=w261;
  if (casadi_f8(arg1, res1, iw, w, 0)) return 1;
  /* #1661: {@164, @276, @280, @281, @282, @283, @284} = horzsplit(@261) */
  casadi_copy(w261, 14, w164);
  casadi_copy(w261+14, 14, w276);
  casadi_copy(w261+28, 14, w280);
  casadi_copy(w261+42, 14, w281);
  casadi_copy(w261+56, 14, w282);
  casadi_copy(w261+70, 14, w283);
  casadi_copy(w261+84, 14, w284);
  /* #1662: @163 = (@163-@164) */
  for (i=0, rr=w163, cs=w164; i<14; ++i) (*rr++) -= (*cs++);
  /* #1663: @6 = 0 */
  w6 = 0.;
  /* #1664: @255 = @242[7] */
  for (rr=(&w255), ss=w242+7; ss!=w242+8; ss+=1) *rr++ = *ss;
  /* #1665: @6 = mac(@167,@255,@6) */
  casadi_mtimes(w167, casadi_s10, (&w255), casadi_s9, (&w6), casadi_s8, w, 0);
  /* #1666: @255 = @242[8] */
  for (rr=(&w255), ss=w242+8; ss!=w242+9; ss+=1) *rr++ = *ss;
  /* #1667: @255 = (-@255) */
  w255 = (- w255 );
  /* #1668: @257 = @242[7] */
  for (rr=(&w257), ss=w242+7; ss!=w242+8; ss+=1) *rr++ = *ss;
  /* #1669: @264 = zeros(3x1,0nz) */
  /* #1670: @239 = @242[15:18] */
  for (rr=w239, ss=w242+15; ss!=w242+18; ss+=1) *rr++ = *ss;
  /* #1671: @164 = dense(@239) */
  casadi_densify(w239, casadi_s11, w164, 0);
  /* #1672: @265 = zeros(14x1,0nz) */
  /* #1673: @273 = @242[9:15] */
  for (rr=w273, ss=w242+9; ss!=w242+15; ss+=1) *rr++ = *ss;
  /* #1674: @239 = @246[8:11] */
  for (rr=w239, ss=w246+8; ss!=w246+11; ss+=1) *rr++ = *ss;
  /* #1675: @260 = @248[3] */
  for (rr=(&w260), ss=w248+3; ss!=w248+4; ss+=1) *rr++ = *ss;
  /* #1676: @285 = @251[2] */
  for (rr=(&w285), ss=w251+2; ss!=w251+3; ss+=1) *rr++ = *ss;
  /* #1677: @286 = @254[2] */
  for (rr=(&w286), ss=w254+2; ss!=w254+3; ss+=1) *rr++ = *ss;
  /* #1678: @287 = @256[2] */
  for (rr=(&w287), ss=w256+2; ss!=w256+3; ss+=1) *rr++ = *ss;
  /* #1679: @288 = @259[1] */
  for (rr=(&w288), ss=w259+1; ss!=w259+2; ss+=1) *rr++ = *ss;
  /* #1680: @289 = horzcat(@273, @239, @260, @285, @286, @287, @288) */
  rr=w289;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w260;
  *rr++ = w285;
  *rr++ = w286;
  *rr++ = w287;
  *rr++ = w288;
  /* #1681: @261 = dense(@289) */
  casadi_densify(w289, casadi_s12, w261, 0);
  /* #1682: @277 = zeros(4x1,0nz) */
  /* #1683: @278 = zeros(4x1,0nz) */
  /* #1684: @260 = @249[3] */
  for (rr=(&w260), ss=w249+3; ss!=w249+4; ss+=1) *rr++ = *ss;
  /* #1685: @243 = @252[2:4] */
  for (rr=w243, ss=w252+2; ss!=w252+4; ss+=1) *rr++ = *ss;
  /* #1686: @285 = @81[3] */
  for (rr=(&w285), ss=w81+3; ss!=w81+4; ss+=1) *rr++ = *ss;
  /* #1687: @279 = zeros(4x1,0nz) */
  /* #1688: @290 = zeros(4x1,0nz) */
  /* #1689: @9 = horzcat(@277, @278, @260, @243, @285, @279, @290) */
  rr=w9;
  *rr++ = w260;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w285;
  /* #1690: @266 = dense(@9) */
  casadi_densify(w9, casadi_s13, w266, 0);
  /* #1691: @267 = fwd7_f_disc(@168, @14, @265, @261, @266) */
  arg1[0]=w168;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w261;
  arg1[4]=w266;
  res1[0]=w267;
  if (casadi_f8(arg1, res1, iw, w, 0)) return 1;
  /* #1692: {@168, @289, @291, @292, @293, @294, @295} = horzsplit(@267) */
  casadi_copy(w267, 14, w168);
  casadi_copy(w267+14, 14, w289);
  casadi_copy(w267+28, 14, w291);
  casadi_copy(w267+42, 14, w292);
  casadi_copy(w267+56, 14, w293);
  casadi_copy(w267+70, 14, w294);
  casadi_copy(w267+84, 14, w295);
  /* #1693: @164 = (@164-@168) */
  for (i=0, rr=w164, cs=w168; i<14; ++i) (*rr++) -= (*cs++);
  /* #1694: @265 = 00 */
  /* #1695: @260 = @242[10] */
  for (rr=(&w260), ss=w242+10; ss!=w242+11; ss+=1) *rr++ = *ss;
  /* #1696: @277 = zeros(3x1,0nz) */
  /* #1697: @278 = zeros(3x1,0nz) */
  /* #1698: @273 = @242[18:24] */
  for (rr=w273, ss=w242+18; ss!=w242+24; ss+=1) *rr++ = *ss;
  /* #1699: @168 = dense(@273) */
  casadi_densify(w273, casadi_s14, w168, 0);
  /* #1700: @279 = zeros(14x1,0nz) */
  /* #1701: @239 = @242[15:18] */
  for (rr=w239, ss=w242+15; ss!=w242+18; ss+=1) *rr++ = *ss;
  /* #1702: @273 = @246[11:17] */
  for (rr=w273, ss=w246+11; ss!=w246+17; ss+=1) *rr++ = *ss;
  /* #1703: @243 = @248[4:6] */
  for (rr=w243, ss=w248+4; ss!=w248+6; ss+=1) *rr++ = *ss;
  /* #1704: @285 = @251[3] */
  for (rr=(&w285), ss=w251+3; ss!=w251+4; ss+=1) *rr++ = *ss;
  /* #1705: @286 = @254[3] */
  for (rr=(&w286), ss=w254+3; ss!=w254+4; ss+=1) *rr++ = *ss;
  /* #1706: @287 = @256[3] */
  for (rr=(&w287), ss=w256+3; ss!=w256+4; ss+=1) *rr++ = *ss;
  /* #1707: @296 = horzcat(@239, @273, @243, @285, @286, @287) */
  rr=w296;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w285;
  *rr++ = w286;
  *rr++ = w287;
  /* #1708: @297 = dense(@296) */
  casadi_densify(w296, casadi_s15, w297, 0);
  /* #1709: @290 = zeros(4x1,0nz) */
  /* #1710: @298 = zeros(4x1,0nz) */
  /* #1711: @285 = @249[4] */
  for (rr=(&w285), ss=w249+4; ss!=w249+5; ss+=1) *rr++ = *ss;
  /* #1712: @239 = @252[4:7] */
  for (rr=w239, ss=w252+4; ss!=w252+7; ss+=1) *rr++ = *ss;
  /* #1713: @299 = zeros(4x1,0nz) */
  /* #1714: @300 = zeros(4x1,0nz) */
  /* #1715: @14 = horzcat(@290, @298, @285, @239, @299, @300) */
  rr=w14;
  *rr++ = w285;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1716: @301 = dense(@14) */
  casadi_densify(w14, casadi_s16, w301, 0);
  /* #1717: @302 = fwd6_f_disc(@171, @15, @279, @297, @301) */
  arg1[0]=w171;
  arg1[1]=w15;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1718: {@171, @296, @303, @304, @305, @306} = horzsplit(@302) */
  casadi_copy(w302, 14, w171);
  casadi_copy(w302+14, 14, w296);
  casadi_copy(w302+28, 14, w303);
  casadi_copy(w302+42, 14, w304);
  casadi_copy(w302+56, 14, w305);
  casadi_copy(w302+70, 14, w306);
  /* #1719: @168 = (@168-@171) */
  for (i=0, rr=w168, cs=w171; i<14; ++i) (*rr++) -= (*cs++);
  /* #1720: @285 = 0 */
  w285 = 0.;
  /* #1721: @286 = @242[16] */
  for (rr=(&w286), ss=w242+16; ss!=w242+17; ss+=1) *rr++ = *ss;
  /* #1722: @285 = mac(@173,@286,@285) */
  casadi_mtimes(w173, casadi_s10, (&w286), casadi_s17, (&w285), casadi_s8, w, 0);
  /* #1723: @286 = @242[17] */
  for (rr=(&w286), ss=w242+17; ss!=w242+18; ss+=1) *rr++ = *ss;
  /* #1724: @286 = (-@286) */
  w286 = (- w286 );
  /* #1725: @287 = @242[16] */
  for (rr=(&w287), ss=w242+16; ss!=w242+17; ss+=1) *rr++ = *ss;
  /* #1726: @279 = zeros(3x1,0nz) */
  /* #1727: @239 = @242[24:27] */
  for (rr=w239, ss=w242+24; ss!=w242+27; ss+=1) *rr++ = *ss;
  /* #1728: @171 = dense(@239) */
  casadi_densify(w239, casadi_s18, w171, 0);
  /* #1729: @290 = zeros(14x1,0nz) */
  /* #1730: @273 = @242[18:24] */
  for (rr=w273, ss=w242+18; ss!=w242+24; ss+=1) *rr++ = *ss;
  /* #1731: @239 = @246[17:20] */
  for (rr=w239, ss=w246+17; ss!=w246+20; ss+=1) *rr++ = *ss;
  /* #1732: @243 = @248[6:8] */
  for (rr=w243, ss=w248+6; ss!=w248+8; ss+=1) *rr++ = *ss;
  /* #1733: @288 = @251[4] */
  for (rr=(&w288), ss=w251+4; ss!=w251+5; ss+=1) *rr++ = *ss;
  /* #1734: @307 = @254[4] */
  for (rr=(&w307), ss=w254+4; ss!=w254+5; ss+=1) *rr++ = *ss;
  /* #1735: @308 = @259[2] */
  for (rr=(&w308), ss=w259+2; ss!=w259+3; ss+=1) *rr++ = *ss;
  /* #1736: @309 = horzcat(@273, @239, @243, @288, @307, @308) */
  rr=w309;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w288;
  *rr++ = w307;
  *rr++ = w308;
  /* #1737: @302 = dense(@309) */
  casadi_densify(w309, casadi_s19, w302, 0);
  /* #1738: @298 = zeros(4x1,0nz) */
  /* #1739: @299 = zeros(4x1,0nz) */
  /* #1740: @288 = @249[5] */
  for (rr=(&w288), ss=w249+5; ss!=w249+6; ss+=1) *rr++ = *ss;
  /* #1741: @239 = @252[7:10] */
  for (rr=w239, ss=w252+7; ss!=w252+10; ss+=1) *rr++ = *ss;
  /* #1742: @300 = zeros(4x1,0nz) */
  /* #1743: @310 = zeros(4x1,0nz) */
  /* #1744: @15 = horzcat(@298, @299, @288, @239, @300, @310) */
  rr=w15;
  *rr++ = w288;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1745: @301 = dense(@15) */
  casadi_densify(w15, casadi_s16, w301, 0);
  /* #1746: @297 = fwd6_f_disc(@174, @20, @290, @302, @301) */
  arg1[0]=w174;
  arg1[1]=w20;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1747: {@174, @309, @311, @312, @313, @314} = horzsplit(@297) */
  casadi_copy(w297, 14, w174);
  casadi_copy(w297+14, 14, w309);
  casadi_copy(w297+28, 14, w311);
  casadi_copy(w297+42, 14, w312);
  casadi_copy(w297+56, 14, w313);
  casadi_copy(w297+70, 14, w314);
  /* #1748: @171 = (@171-@174) */
  for (i=0, rr=w171, cs=w174; i<14; ++i) (*rr++) -= (*cs++);
  /* #1749: @288 = 0 */
  w288 = 0.;
  /* #1750: @307 = @242[19] */
  for (rr=(&w307), ss=w242+19; ss!=w242+20; ss+=1) *rr++ = *ss;
  /* #1751: @288 = mac(@176,@307,@288) */
  casadi_mtimes(w176, casadi_s10, (&w307), casadi_s9, (&w288), casadi_s8, w, 0);
  /* #1752: @307 = @242[18] */
  for (rr=(&w307), ss=w242+18; ss!=w242+19; ss+=1) *rr++ = *ss;
  /* #1753: @308 = @242[19] */
  for (rr=(&w308), ss=w242+19; ss!=w242+20; ss+=1) *rr++ = *ss;
  /* #1754: @290 = zeros(3x1,0nz) */
  /* #1755: @273 = @242[27:33] */
  for (rr=w273, ss=w242+27; ss!=w242+33; ss+=1) *rr++ = *ss;
  /* #1756: @174 = dense(@273) */
  casadi_densify(w273, casadi_s20, w174, 0);
  /* #1757: @298 = zeros(14x1,0nz) */
  /* #1758: @239 = @242[24:27] */
  for (rr=w239, ss=w242+24; ss!=w242+27; ss+=1) *rr++ = *ss;
  /* #1759: @273 = @246[20:26] */
  for (rr=w273, ss=w246+20; ss!=w246+26; ss+=1) *rr++ = *ss;
  /* #1760: @243 = @248[8:10] */
  for (rr=w243, ss=w248+8; ss!=w248+10; ss+=1) *rr++ = *ss;
  /* #1761: @315 = @251[5] */
  for (rr=(&w315), ss=w251+5; ss!=w251+6; ss+=1) *rr++ = *ss;
  /* #1762: @316 = @254[5] */
  for (rr=(&w316), ss=w254+5; ss!=w254+6; ss+=1) *rr++ = *ss;
  /* #1763: @317 = @256[4] */
  for (rr=(&w317), ss=w256+4; ss!=w256+5; ss+=1) *rr++ = *ss;
  /* #1764: @318 = horzcat(@239, @273, @243, @315, @316, @317) */
  rr=w318;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w315;
  *rr++ = w316;
  *rr++ = w317;
  /* #1765: @297 = dense(@318) */
  casadi_densify(w318, casadi_s21, w297, 0);
  /* #1766: @299 = zeros(4x1,0nz) */
  /* #1767: @300 = zeros(4x1,0nz) */
  /* #1768: @315 = @249[6] */
  for (rr=(&w315), ss=w249+6; ss!=w249+7; ss+=1) *rr++ = *ss;
  /* #1769: @239 = @252[10:13] */
  for (rr=w239, ss=w252+10; ss!=w252+13; ss+=1) *rr++ = *ss;
  /* #1770: @310 = zeros(4x1,0nz) */
  /* #1771: @319 = zeros(4x1,0nz) */
  /* #1772: @20 = horzcat(@299, @300, @315, @239, @310, @319) */
  rr=w20;
  *rr++ = w315;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1773: @301 = dense(@20) */
  casadi_densify(w20, casadi_s16, w301, 0);
  /* #1774: @302 = fwd6_f_disc(@177, @21, @298, @297, @301) */
  arg1[0]=w177;
  arg1[1]=w21;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1775: {@177, @318, @320, @321, @322, @323} = horzsplit(@302) */
  casadi_copy(w302, 14, w177);
  casadi_copy(w302+14, 14, w318);
  casadi_copy(w302+28, 14, w320);
  casadi_copy(w302+42, 14, w321);
  casadi_copy(w302+56, 14, w322);
  casadi_copy(w302+70, 14, w323);
  /* #1776: @174 = (@174-@177) */
  for (i=0, rr=w174, cs=w177; i<14; ++i) (*rr++) -= (*cs++);
  /* #1777: @315 = 0 */
  w315 = 0.;
  /* #1778: @316 = @242[25] */
  for (rr=(&w316), ss=w242+25; ss!=w242+26; ss+=1) *rr++ = *ss;
  /* #1779: @315 = mac(@179,@316,@315) */
  casadi_mtimes(w179, casadi_s10, (&w316), casadi_s22, (&w315), casadi_s8, w, 0);
  /* #1780: @316 = @242[26] */
  for (rr=(&w316), ss=w242+26; ss!=w242+27; ss+=1) *rr++ = *ss;
  /* #1781: @316 = (-@316) */
  w316 = (- w316 );
  /* #1782: @317 = @242[25] */
  for (rr=(&w317), ss=w242+25; ss!=w242+26; ss+=1) *rr++ = *ss;
  /* #1783: @298 = zeros(3x1,0nz) */
  /* #1784: @243 = @242[33:35] */
  for (rr=w243, ss=w242+33; ss!=w242+35; ss+=1) *rr++ = *ss;
  /* #1785: @177 = dense(@243) */
  casadi_densify(w243, casadi_s23, w177, 0);
  /* #1786: @299 = zeros(14x1,0nz) */
  /* #1787: @273 = @242[27:33] */
  for (rr=w273, ss=w242+27; ss!=w242+33; ss+=1) *rr++ = *ss;
  /* #1788: @243 = @246[26:28] */
  for (rr=w243, ss=w246+26; ss!=w246+28; ss+=1) *rr++ = *ss;
  /* #1789: @239 = @248[10:13] */
  for (rr=w239, ss=w248+10; ss!=w248+13; ss+=1) *rr++ = *ss;
  /* #1790: @324 = @251[6] */
  for (rr=(&w324), ss=w251+6; ss!=w251+7; ss+=1) *rr++ = *ss;
  /* #1791: @325 = @254[6] */
  for (rr=(&w325), ss=w254+6; ss!=w254+7; ss+=1) *rr++ = *ss;
  /* #1792: @326 = @259[3] */
  for (rr=(&w326), ss=w259+3; ss!=w259+4; ss+=1) *rr++ = *ss;
  /* #1793: @327 = horzcat(@273, @243, @239, @324, @325, @326) */
  rr=w327;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w324;
  *rr++ = w325;
  *rr++ = w326;
  /* #1794: @302 = dense(@327) */
  casadi_densify(w327, casadi_s24, w302, 0);
  /* #1795: @300 = zeros(4x1,0nz) */
  /* #1796: @310 = zeros(4x1,0nz) */
  /* #1797: @324 = @249[7] */
  for (rr=(&w324), ss=w249+7; ss!=w249+8; ss+=1) *rr++ = *ss;
  /* #1798: @239 = @252[13:16] */
  for (rr=w239, ss=w252+13; ss!=w252+16; ss+=1) *rr++ = *ss;
  /* #1799: @319 = zeros(4x1,0nz) */
  /* #1800: @328 = zeros(4x1,0nz) */
  /* #1801: @21 = horzcat(@300, @310, @324, @239, @319, @328) */
  rr=w21;
  *rr++ = w324;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1802: @301 = dense(@21) */
  casadi_densify(w21, casadi_s16, w301, 0);
  /* #1803: @297 = fwd6_f_disc(@180, @26, @299, @302, @301) */
  arg1[0]=w180;
  arg1[1]=w26;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1804: {@180, @327, @329, @330, @331, @332} = horzsplit(@297) */
  casadi_copy(w297, 14, w180);
  casadi_copy(w297+14, 14, w327);
  casadi_copy(w297+28, 14, w329);
  casadi_copy(w297+42, 14, w330);
  casadi_copy(w297+56, 14, w331);
  casadi_copy(w297+70, 14, w332);
  /* #1805: @177 = (@177-@180) */
  for (i=0, rr=w177, cs=w180; i<14; ++i) (*rr++) -= (*cs++);
  /* #1806: @324 = 0 */
  w324 = 0.;
  /* #1807: @325 = @242[28] */
  for (rr=(&w325), ss=w242+28; ss!=w242+29; ss+=1) *rr++ = *ss;
  /* #1808: @324 = mac(@182,@325,@324) */
  casadi_mtimes(w182, casadi_s10, (&w325), casadi_s17, (&w324), casadi_s8, w, 0);
  /* #1809: @299 = 00 */
  /* #1810: @325 = @242[28] */
  for (rr=(&w325), ss=w242+28; ss!=w242+29; ss+=1) *rr++ = *ss;
  /* #1811: @300 = zeros(3x1,0nz) */
  /* #1812: @1 = @242[35:42] */
  for (rr=w1, ss=w242+35; ss!=w242+42; ss+=1) *rr++ = *ss;
  /* #1813: @180 = dense(@1) */
  casadi_densify(w1, casadi_s25, w180, 0);
  /* #1814: @310 = zeros(14x1,0nz) */
  /* #1815: @243 = @242[33:35] */
  for (rr=w243, ss=w242+33; ss!=w242+35; ss+=1) *rr++ = *ss;
  /* #1816: @1 = @246[28:35] */
  for (rr=w1, ss=w246+28; ss!=w246+35; ss+=1) *rr++ = *ss;
  /* #1817: @274 = @248[13:15] */
  for (rr=w274, ss=w248+13; ss!=w248+15; ss+=1) *rr++ = *ss;
  /* #1818: @326 = @251[7] */
  for (rr=(&w326), ss=w251+7; ss!=w251+8; ss+=1) *rr++ = *ss;
  /* #1819: @333 = @254[7] */
  for (rr=(&w333), ss=w254+7; ss!=w254+8; ss+=1) *rr++ = *ss;
  /* #1820: @334 = @256[5] */
  for (rr=(&w334), ss=w256+5; ss!=w256+6; ss+=1) *rr++ = *ss;
  /* #1821: @335 = horzcat(@243, @1, @274, @326, @333, @334) */
  rr=w335;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w326;
  *rr++ = w333;
  *rr++ = w334;
  /* #1822: @297 = dense(@335) */
  casadi_densify(w335, casadi_s26, w297, 0);
  /* #1823: @319 = zeros(4x1,0nz) */
  /* #1824: @328 = zeros(4x1,0nz) */
  /* #1825: @326 = @249[8] */
  for (rr=(&w326), ss=w249+8; ss!=w249+9; ss+=1) *rr++ = *ss;
  /* #1826: @239 = @252[16:19] */
  for (rr=w239, ss=w252+16; ss!=w252+19; ss+=1) *rr++ = *ss;
  /* #1827: @336 = zeros(4x1,0nz) */
  /* #1828: @337 = zeros(4x1,0nz) */
  /* #1829: @26 = horzcat(@319, @328, @326, @239, @336, @337) */
  rr=w26;
  *rr++ = w326;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1830: @301 = dense(@26) */
  casadi_densify(w26, casadi_s16, w301, 0);
  /* #1831: @302 = fwd6_f_disc(@183, @27, @310, @297, @301) */
  arg1[0]=w183;
  arg1[1]=w27;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1832: {@183, @335, @338, @339, @340, @341} = horzsplit(@302) */
  casadi_copy(w302, 14, w183);
  casadi_copy(w302+14, 14, w335);
  casadi_copy(w302+28, 14, w338);
  casadi_copy(w302+42, 14, w339);
  casadi_copy(w302+56, 14, w340);
  casadi_copy(w302+70, 14, w341);
  /* #1833: @180 = (@180-@183) */
  for (i=0, rr=w180, cs=w183; i<14; ++i) (*rr++) -= (*cs++);
  /* #1834: @326 = 0 */
  w326 = 0.;
  /* #1835: @333 = @242[34] */
  for (rr=(&w333), ss=w242+34; ss!=w242+35; ss+=1) *rr++ = *ss;
  /* #1836: @326 = mac(@185,@333,@326) */
  casadi_mtimes(w185, casadi_s10, (&w333), casadi_s9, (&w326), casadi_s8, w, 0);
  /* #1837: @333 = @242[33] */
  for (rr=(&w333), ss=w242+33; ss!=w242+34; ss+=1) *rr++ = *ss;
  /* #1838: @334 = @242[34] */
  for (rr=(&w334), ss=w242+34; ss!=w242+35; ss+=1) *rr++ = *ss;
  /* #1839: @310 = zeros(3x1,0nz) */
  /* #1840: @243 = @242[42:44] */
  for (rr=w243, ss=w242+42; ss!=w242+44; ss+=1) *rr++ = *ss;
  /* #1841: @183 = dense(@243) */
  casadi_densify(w243, casadi_s27, w183, 0);
  /* #1842: @319 = zeros(14x1,0nz) */
  /* #1843: @1 = @242[35:42] */
  for (rr=w1, ss=w242+35; ss!=w242+42; ss+=1) *rr++ = *ss;
  /* #1844: @243 = @246[35:37] */
  for (rr=w243, ss=w246+35; ss!=w246+37; ss+=1) *rr++ = *ss;
  /* #1845: @274 = @248[15:17] */
  for (rr=w274, ss=w248+15; ss!=w248+17; ss+=1) *rr++ = *ss;
  /* #1846: @342 = @251[8] */
  for (rr=(&w342), ss=w251+8; ss!=w251+9; ss+=1) *rr++ = *ss;
  /* #1847: @343 = @254[8] */
  for (rr=(&w343), ss=w254+8; ss!=w254+9; ss+=1) *rr++ = *ss;
  /* #1848: @344 = @259[4] */
  for (rr=(&w344), ss=w259+4; ss!=w259+5; ss+=1) *rr++ = *ss;
  /* #1849: @345 = horzcat(@1, @243, @274, @342, @343, @344) */
  rr=w345;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w342;
  *rr++ = w343;
  *rr++ = w344;
  /* #1850: @302 = dense(@345) */
  casadi_densify(w345, casadi_s28, w302, 0);
  /* #1851: @328 = zeros(4x1,0nz) */
  /* #1852: @336 = zeros(4x1,0nz) */
  /* #1853: @342 = @249[9] */
  for (rr=(&w342), ss=w249+9; ss!=w249+10; ss+=1) *rr++ = *ss;
  /* #1854: @239 = @252[19:22] */
  for (rr=w239, ss=w252+19; ss!=w252+22; ss+=1) *rr++ = *ss;
  /* #1855: @337 = zeros(4x1,0nz) */
  /* #1856: @346 = zeros(4x1,0nz) */
  /* #1857: @27 = horzcat(@328, @336, @342, @239, @337, @346) */
  rr=w27;
  *rr++ = w342;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1858: @301 = dense(@27) */
  casadi_densify(w27, casadi_s16, w301, 0);
  /* #1859: @297 = fwd6_f_disc(@186, @32, @319, @302, @301) */
  arg1[0]=w186;
  arg1[1]=w32;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1860: {@186, @345, @347, @348, @349, @350} = horzsplit(@297) */
  casadi_copy(w297, 14, w186);
  casadi_copy(w297+14, 14, w345);
  casadi_copy(w297+28, 14, w347);
  casadi_copy(w297+42, 14, w348);
  casadi_copy(w297+56, 14, w349);
  casadi_copy(w297+70, 14, w350);
  /* #1861: @183 = (@183-@186) */
  for (i=0, rr=w183, cs=w186; i<14; ++i) (*rr++) -= (*cs++);
  /* #1862: @342 = 0 */
  w342 = 0.;
  /* #1863: @343 = @242[36] */
  for (rr=(&w343), ss=w242+36; ss!=w242+37; ss+=1) *rr++ = *ss;
  /* #1864: @342 = mac(@188,@343,@342) */
  casadi_mtimes(w188, casadi_s10, (&w343), casadi_s22, (&w342), casadi_s8, w, 0);
  /* #1865: @343 = @242[41] */
  for (rr=(&w343), ss=w242+41; ss!=w242+42; ss+=1) *rr++ = *ss;
  /* #1866: @343 = (-@343) */
  w343 = (- w343 );
  /* #1867: @344 = @242[36] */
  for (rr=(&w344), ss=w242+36; ss!=w242+37; ss+=1) *rr++ = *ss;
  /* #1868: @319 = zeros(3x1,0nz) */
  /* #1869: @273 = @242[44:50] */
  for (rr=w273, ss=w242+44; ss!=w242+50; ss+=1) *rr++ = *ss;
  /* #1870: @186 = dense(@273) */
  casadi_densify(w273, casadi_s14, w186, 0);
  /* #1871: @328 = zeros(14x1,0nz) */
  /* #1872: @243 = @242[42:44] */
  for (rr=w243, ss=w242+42; ss!=w242+44; ss+=1) *rr++ = *ss;
  /* #1873: @273 = @246[37:43] */
  for (rr=w273, ss=w246+37; ss!=w246+43; ss+=1) *rr++ = *ss;
  /* #1874: @239 = @248[17:20] */
  for (rr=w239, ss=w248+17; ss!=w248+20; ss+=1) *rr++ = *ss;
  /* #1875: @351 = @251[9] */
  for (rr=(&w351), ss=w251+9; ss!=w251+10; ss+=1) *rr++ = *ss;
  /* #1876: @352 = @254[9] */
  for (rr=(&w352), ss=w254+9; ss!=w254+10; ss+=1) *rr++ = *ss;
  /* #1877: @353 = @256[6] */
  for (rr=(&w353), ss=w256+6; ss!=w256+7; ss+=1) *rr++ = *ss;
  /* #1878: @354 = horzcat(@243, @273, @239, @351, @352, @353) */
  rr=w354;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w351;
  *rr++ = w352;
  *rr++ = w353;
  /* #1879: @297 = dense(@354) */
  casadi_densify(w354, casadi_s29, w297, 0);
  /* #1880: @336 = zeros(4x1,0nz) */
  /* #1881: @337 = zeros(4x1,0nz) */
  /* #1882: @351 = @249[10] */
  for (rr=(&w351), ss=w249+10; ss!=w249+11; ss+=1) *rr++ = *ss;
  /* #1883: @239 = @252[22:25] */
  for (rr=w239, ss=w252+22; ss!=w252+25; ss+=1) *rr++ = *ss;
  /* #1884: @346 = zeros(4x1,0nz) */
  /* #1885: @355 = zeros(4x1,0nz) */
  /* #1886: @32 = horzcat(@336, @337, @351, @239, @346, @355) */
  rr=w32;
  *rr++ = w351;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1887: @301 = dense(@32) */
  casadi_densify(w32, casadi_s16, w301, 0);
  /* #1888: @302 = fwd6_f_disc(@189, @33, @328, @297, @301) */
  arg1[0]=w189;
  arg1[1]=w33;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1889: {@189, @354, @356, @357, @358, @359} = horzsplit(@302) */
  casadi_copy(w302, 14, w189);
  casadi_copy(w302+14, 14, w354);
  casadi_copy(w302+28, 14, w356);
  casadi_copy(w302+42, 14, w357);
  casadi_copy(w302+56, 14, w358);
  casadi_copy(w302+70, 14, w359);
  /* #1890: @186 = (@186-@189) */
  for (i=0, rr=w186, cs=w189; i<14; ++i) (*rr++) -= (*cs++);
  /* #1891: @351 = 0 */
  w351 = 0.;
  /* #1892: @352 = @242[43] */
  for (rr=(&w352), ss=w242+43; ss!=w242+44; ss+=1) *rr++ = *ss;
  /* #1893: @351 = mac(@191,@352,@351) */
  casadi_mtimes(w191, casadi_s10, (&w352), casadi_s17, (&w351), casadi_s8, w, 0);
  /* #1894: @328 = 00 */
  /* #1895: @352 = @242[43] */
  for (rr=(&w352), ss=w242+43; ss!=w242+44; ss+=1) *rr++ = *ss;
  /* #1896: @336 = zeros(3x1,0nz) */
  /* #1897: @239 = @242[50:53] */
  for (rr=w239, ss=w242+50; ss!=w242+53; ss+=1) *rr++ = *ss;
  /* #1898: @189 = dense(@239) */
  casadi_densify(w239, casadi_s18, w189, 0);
  /* #1899: @337 = zeros(14x1,0nz) */
  /* #1900: @273 = @242[44:50] */
  for (rr=w273, ss=w242+44; ss!=w242+50; ss+=1) *rr++ = *ss;
  /* #1901: @239 = @246[43:46] */
  for (rr=w239, ss=w246+43; ss!=w246+46; ss+=1) *rr++ = *ss;
  /* #1902: @243 = @248[20:22] */
  for (rr=w243, ss=w248+20; ss!=w248+22; ss+=1) *rr++ = *ss;
  /* #1903: @353 = @251[10] */
  for (rr=(&w353), ss=w251+10; ss!=w251+11; ss+=1) *rr++ = *ss;
  /* #1904: @360 = @254[10] */
  for (rr=(&w360), ss=w254+10; ss!=w254+11; ss+=1) *rr++ = *ss;
  /* #1905: @361 = @259[5] */
  for (rr=(&w361), ss=w259+5; ss!=w259+6; ss+=1) *rr++ = *ss;
  /* #1906: @362 = horzcat(@273, @239, @243, @353, @360, @361) */
  rr=w362;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w353;
  *rr++ = w360;
  *rr++ = w361;
  /* #1907: @302 = dense(@362) */
  casadi_densify(w362, casadi_s19, w302, 0);
  /* #1908: @346 = zeros(4x1,0nz) */
  /* #1909: @355 = zeros(4x1,0nz) */
  /* #1910: @353 = @249[11] */
  for (rr=(&w353), ss=w249+11; ss!=w249+12; ss+=1) *rr++ = *ss;
  /* #1911: @239 = @252[25:28] */
  for (rr=w239, ss=w252+25; ss!=w252+28; ss+=1) *rr++ = *ss;
  /* #1912: @363 = zeros(4x1,0nz) */
  /* #1913: @364 = zeros(4x1,0nz) */
  /* #1914: @33 = horzcat(@346, @355, @353, @239, @363, @364) */
  rr=w33;
  *rr++ = w353;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1915: @301 = dense(@33) */
  casadi_densify(w33, casadi_s16, w301, 0);
  /* #1916: @297 = fwd6_f_disc(@192, @38, @337, @302, @301) */
  arg1[0]=w192;
  arg1[1]=w38;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1917: {@192, @362, @365, @366, @367, @368} = horzsplit(@297) */
  casadi_copy(w297, 14, w192);
  casadi_copy(w297+14, 14, w362);
  casadi_copy(w297+28, 14, w365);
  casadi_copy(w297+42, 14, w366);
  casadi_copy(w297+56, 14, w367);
  casadi_copy(w297+70, 14, w368);
  /* #1918: @189 = (@189-@192) */
  for (i=0, rr=w189, cs=w192; i<14; ++i) (*rr++) -= (*cs++);
  /* #1919: @353 = 0 */
  w353 = 0.;
  /* #1920: @360 = @242[45] */
  for (rr=(&w360), ss=w242+45; ss!=w242+46; ss+=1) *rr++ = *ss;
  /* #1921: @353 = mac(@194,@360,@353) */
  casadi_mtimes(w194, casadi_s10, (&w360), casadi_s9, (&w353), casadi_s8, w, 0);
  /* #1922: @360 = @242[44] */
  for (rr=(&w360), ss=w242+44; ss!=w242+45; ss+=1) *rr++ = *ss;
  /* #1923: @361 = @242[45] */
  for (rr=(&w361), ss=w242+45; ss!=w242+46; ss+=1) *rr++ = *ss;
  /* #1924: @337 = zeros(3x1,0nz) */
  /* #1925: @273 = @242[53:59] */
  for (rr=w273, ss=w242+53; ss!=w242+59; ss+=1) *rr++ = *ss;
  /* #1926: @192 = dense(@273) */
  casadi_densify(w273, casadi_s20, w192, 0);
  /* #1927: @346 = zeros(14x1,0nz) */
  /* #1928: @239 = @242[50:53] */
  for (rr=w239, ss=w242+50; ss!=w242+53; ss+=1) *rr++ = *ss;
  /* #1929: @273 = @246[46:52] */
  for (rr=w273, ss=w246+46; ss!=w246+52; ss+=1) *rr++ = *ss;
  /* #1930: @243 = @248[22:24] */
  for (rr=w243, ss=w248+22; ss!=w248+24; ss+=1) *rr++ = *ss;
  /* #1931: @369 = @251[11] */
  for (rr=(&w369), ss=w251+11; ss!=w251+12; ss+=1) *rr++ = *ss;
  /* #1932: @370 = @254[11] */
  for (rr=(&w370), ss=w254+11; ss!=w254+12; ss+=1) *rr++ = *ss;
  /* #1933: @371 = @256[7] */
  for (rr=(&w371), ss=w256+7; ss!=w256+8; ss+=1) *rr++ = *ss;
  /* #1934: @372 = horzcat(@239, @273, @243, @369, @370, @371) */
  rr=w372;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w369;
  *rr++ = w370;
  *rr++ = w371;
  /* #1935: @297 = dense(@372) */
  casadi_densify(w372, casadi_s21, w297, 0);
  /* #1936: @355 = zeros(4x1,0nz) */
  /* #1937: @363 = zeros(4x1,0nz) */
  /* #1938: @369 = @249[12] */
  for (rr=(&w369), ss=w249+12; ss!=w249+13; ss+=1) *rr++ = *ss;
  /* #1939: @239 = @252[28:31] */
  for (rr=w239, ss=w252+28; ss!=w252+31; ss+=1) *rr++ = *ss;
  /* #1940: @364 = zeros(4x1,0nz) */
  /* #1941: @373 = zeros(4x1,0nz) */
  /* #1942: @38 = horzcat(@355, @363, @369, @239, @364, @373) */
  rr=w38;
  *rr++ = w369;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1943: @301 = dense(@38) */
  casadi_densify(w38, casadi_s16, w301, 0);
  /* #1944: @302 = fwd6_f_disc(@195, @39, @346, @297, @301) */
  arg1[0]=w195;
  arg1[1]=w39;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1945: {@195, @372, @374, @375, @376, @377} = horzsplit(@302) */
  casadi_copy(w302, 14, w195);
  casadi_copy(w302+14, 14, w372);
  casadi_copy(w302+28, 14, w374);
  casadi_copy(w302+42, 14, w375);
  casadi_copy(w302+56, 14, w376);
  casadi_copy(w302+70, 14, w377);
  /* #1946: @192 = (@192-@195) */
  for (i=0, rr=w192, cs=w195; i<14; ++i) (*rr++) -= (*cs++);
  /* #1947: @369 = 0 */
  w369 = 0.;
  /* #1948: @370 = @242[51] */
  for (rr=(&w370), ss=w242+51; ss!=w242+52; ss+=1) *rr++ = *ss;
  /* #1949: @369 = mac(@197,@370,@369) */
  casadi_mtimes(w197, casadi_s10, (&w370), casadi_s22, (&w369), casadi_s8, w, 0);
  /* #1950: @370 = @242[52] */
  for (rr=(&w370), ss=w242+52; ss!=w242+53; ss+=1) *rr++ = *ss;
  /* #1951: @370 = (-@370) */
  w370 = (- w370 );
  /* #1952: @371 = @242[51] */
  for (rr=(&w371), ss=w242+51; ss!=w242+52; ss+=1) *rr++ = *ss;
  /* #1953: @346 = zeros(3x1,0nz) */
  /* #1954: @243 = @242[59:61] */
  for (rr=w243, ss=w242+59; ss!=w242+61; ss+=1) *rr++ = *ss;
  /* #1955: @195 = dense(@243) */
  casadi_densify(w243, casadi_s23, w195, 0);
  /* #1956: @355 = zeros(14x1,0nz) */
  /* #1957: @273 = @242[53:59] */
  for (rr=w273, ss=w242+53; ss!=w242+59; ss+=1) *rr++ = *ss;
  /* #1958: @243 = @246[52:54] */
  for (rr=w243, ss=w246+52; ss!=w246+54; ss+=1) *rr++ = *ss;
  /* #1959: @239 = @248[24:27] */
  for (rr=w239, ss=w248+24; ss!=w248+27; ss+=1) *rr++ = *ss;
  /* #1960: @378 = @251[12] */
  for (rr=(&w378), ss=w251+12; ss!=w251+13; ss+=1) *rr++ = *ss;
  /* #1961: @379 = @254[12] */
  for (rr=(&w379), ss=w254+12; ss!=w254+13; ss+=1) *rr++ = *ss;
  /* #1962: @380 = @259[6] */
  for (rr=(&w380), ss=w259+6; ss!=w259+7; ss+=1) *rr++ = *ss;
  /* #1963: @381 = horzcat(@273, @243, @239, @378, @379, @380) */
  rr=w381;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w378;
  *rr++ = w379;
  *rr++ = w380;
  /* #1964: @302 = dense(@381) */
  casadi_densify(w381, casadi_s24, w302, 0);
  /* #1965: @363 = zeros(4x1,0nz) */
  /* #1966: @364 = zeros(4x1,0nz) */
  /* #1967: @378 = @249[13] */
  for (rr=(&w378), ss=w249+13; ss!=w249+14; ss+=1) *rr++ = *ss;
  /* #1968: @239 = @252[31:34] */
  for (rr=w239, ss=w252+31; ss!=w252+34; ss+=1) *rr++ = *ss;
  /* #1969: @373 = zeros(4x1,0nz) */
  /* #1970: @382 = zeros(4x1,0nz) */
  /* #1971: @39 = horzcat(@363, @364, @378, @239, @373, @382) */
  rr=w39;
  *rr++ = w378;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #1972: @301 = dense(@39) */
  casadi_densify(w39, casadi_s16, w301, 0);
  /* #1973: @297 = fwd6_f_disc(@198, @44, @355, @302, @301) */
  arg1[0]=w198;
  arg1[1]=w44;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #1974: {@198, @381, @383, @384, @385, @386} = horzsplit(@297) */
  casadi_copy(w297, 14, w198);
  casadi_copy(w297+14, 14, w381);
  casadi_copy(w297+28, 14, w383);
  casadi_copy(w297+42, 14, w384);
  casadi_copy(w297+56, 14, w385);
  casadi_copy(w297+70, 14, w386);
  /* #1975: @195 = (@195-@198) */
  for (i=0, rr=w195, cs=w198; i<14; ++i) (*rr++) -= (*cs++);
  /* #1976: @378 = 0 */
  w378 = 0.;
  /* #1977: @379 = @242[54] */
  for (rr=(&w379), ss=w242+54; ss!=w242+55; ss+=1) *rr++ = *ss;
  /* #1978: @378 = mac(@200,@379,@378) */
  casadi_mtimes(w200, casadi_s10, (&w379), casadi_s17, (&w378), casadi_s8, w, 0);
  /* #1979: @355 = 00 */
  /* #1980: @379 = @242[54] */
  for (rr=(&w379), ss=w242+54; ss!=w242+55; ss+=1) *rr++ = *ss;
  /* #1981: @363 = zeros(3x1,0nz) */
  /* #1982: @1 = @242[61:68] */
  for (rr=w1, ss=w242+61; ss!=w242+68; ss+=1) *rr++ = *ss;
  /* #1983: @198 = dense(@1) */
  casadi_densify(w1, casadi_s25, w198, 0);
  /* #1984: @364 = zeros(14x1,0nz) */
  /* #1985: @243 = @242[59:61] */
  for (rr=w243, ss=w242+59; ss!=w242+61; ss+=1) *rr++ = *ss;
  /* #1986: @1 = @246[54:61] */
  for (rr=w1, ss=w246+54; ss!=w246+61; ss+=1) *rr++ = *ss;
  /* #1987: @274 = @248[27:29] */
  for (rr=w274, ss=w248+27; ss!=w248+29; ss+=1) *rr++ = *ss;
  /* #1988: @380 = @251[13] */
  for (rr=(&w380), ss=w251+13; ss!=w251+14; ss+=1) *rr++ = *ss;
  /* #1989: @387 = @254[13] */
  for (rr=(&w387), ss=w254+13; ss!=w254+14; ss+=1) *rr++ = *ss;
  /* #1990: @388 = @256[8] */
  for (rr=(&w388), ss=w256+8; ss!=w256+9; ss+=1) *rr++ = *ss;
  /* #1991: @389 = horzcat(@243, @1, @274, @380, @387, @388) */
  rr=w389;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w380;
  *rr++ = w387;
  *rr++ = w388;
  /* #1992: @297 = dense(@389) */
  casadi_densify(w389, casadi_s26, w297, 0);
  /* #1993: @373 = zeros(4x1,0nz) */
  /* #1994: @382 = zeros(4x1,0nz) */
  /* #1995: @380 = @249[14] */
  for (rr=(&w380), ss=w249+14; ss!=w249+15; ss+=1) *rr++ = *ss;
  /* #1996: @239 = @252[34:37] */
  for (rr=w239, ss=w252+34; ss!=w252+37; ss+=1) *rr++ = *ss;
  /* #1997: @390 = zeros(4x1,0nz) */
  /* #1998: @391 = zeros(4x1,0nz) */
  /* #1999: @44 = horzcat(@373, @382, @380, @239, @390, @391) */
  rr=w44;
  *rr++ = w380;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2000: @301 = dense(@44) */
  casadi_densify(w44, casadi_s16, w301, 0);
  /* #2001: @302 = fwd6_f_disc(@201, @45, @364, @297, @301) */
  arg1[0]=w201;
  arg1[1]=w45;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2002: {@201, @389, @392, @393, @394, @395} = horzsplit(@302) */
  casadi_copy(w302, 14, w201);
  casadi_copy(w302+14, 14, w389);
  casadi_copy(w302+28, 14, w392);
  casadi_copy(w302+42, 14, w393);
  casadi_copy(w302+56, 14, w394);
  casadi_copy(w302+70, 14, w395);
  /* #2003: @198 = (@198-@201) */
  for (i=0, rr=w198, cs=w201; i<14; ++i) (*rr++) -= (*cs++);
  /* #2004: @380 = 0 */
  w380 = 0.;
  /* #2005: @387 = @242[60] */
  for (rr=(&w387), ss=w242+60; ss!=w242+61; ss+=1) *rr++ = *ss;
  /* #2006: @380 = mac(@203,@387,@380) */
  casadi_mtimes(w203, casadi_s10, (&w387), casadi_s9, (&w380), casadi_s8, w, 0);
  /* #2007: @387 = @242[59] */
  for (rr=(&w387), ss=w242+59; ss!=w242+60; ss+=1) *rr++ = *ss;
  /* #2008: @388 = @242[60] */
  for (rr=(&w388), ss=w242+60; ss!=w242+61; ss+=1) *rr++ = *ss;
  /* #2009: @364 = zeros(3x1,0nz) */
  /* #2010: @243 = @242[68:70] */
  for (rr=w243, ss=w242+68; ss!=w242+70; ss+=1) *rr++ = *ss;
  /* #2011: @201 = dense(@243) */
  casadi_densify(w243, casadi_s27, w201, 0);
  /* #2012: @373 = zeros(14x1,0nz) */
  /* #2013: @1 = @242[61:68] */
  for (rr=w1, ss=w242+61; ss!=w242+68; ss+=1) *rr++ = *ss;
  /* #2014: @243 = @246[61:63] */
  for (rr=w243, ss=w246+61; ss!=w246+63; ss+=1) *rr++ = *ss;
  /* #2015: @274 = @248[29:31] */
  for (rr=w274, ss=w248+29; ss!=w248+31; ss+=1) *rr++ = *ss;
  /* #2016: @396 = @251[14] */
  for (rr=(&w396), ss=w251+14; ss!=w251+15; ss+=1) *rr++ = *ss;
  /* #2017: @397 = @254[14] */
  for (rr=(&w397), ss=w254+14; ss!=w254+15; ss+=1) *rr++ = *ss;
  /* #2018: @398 = @259[7] */
  for (rr=(&w398), ss=w259+7; ss!=w259+8; ss+=1) *rr++ = *ss;
  /* #2019: @399 = horzcat(@1, @243, @274, @396, @397, @398) */
  rr=w399;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w396;
  *rr++ = w397;
  *rr++ = w398;
  /* #2020: @302 = dense(@399) */
  casadi_densify(w399, casadi_s28, w302, 0);
  /* #2021: @382 = zeros(4x1,0nz) */
  /* #2022: @390 = zeros(4x1,0nz) */
  /* #2023: @396 = @249[15] */
  for (rr=(&w396), ss=w249+15; ss!=w249+16; ss+=1) *rr++ = *ss;
  /* #2024: @239 = @252[37:40] */
  for (rr=w239, ss=w252+37; ss!=w252+40; ss+=1) *rr++ = *ss;
  /* #2025: @391 = zeros(4x1,0nz) */
  /* #2026: @400 = zeros(4x1,0nz) */
  /* #2027: @45 = horzcat(@382, @390, @396, @239, @391, @400) */
  rr=w45;
  *rr++ = w396;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2028: @301 = dense(@45) */
  casadi_densify(w45, casadi_s16, w301, 0);
  /* #2029: @297 = fwd6_f_disc(@204, @50, @373, @302, @301) */
  arg1[0]=w204;
  arg1[1]=w50;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2030: {@204, @399, @401, @402, @403, @404} = horzsplit(@297) */
  casadi_copy(w297, 14, w204);
  casadi_copy(w297+14, 14, w399);
  casadi_copy(w297+28, 14, w401);
  casadi_copy(w297+42, 14, w402);
  casadi_copy(w297+56, 14, w403);
  casadi_copy(w297+70, 14, w404);
  /* #2031: @201 = (@201-@204) */
  for (i=0, rr=w201, cs=w204; i<14; ++i) (*rr++) -= (*cs++);
  /* #2032: @396 = 0 */
  w396 = 0.;
  /* #2033: @397 = @242[62] */
  for (rr=(&w397), ss=w242+62; ss!=w242+63; ss+=1) *rr++ = *ss;
  /* #2034: @396 = mac(@206,@397,@396) */
  casadi_mtimes(w206, casadi_s10, (&w397), casadi_s22, (&w396), casadi_s8, w, 0);
  /* #2035: @397 = @242[67] */
  for (rr=(&w397), ss=w242+67; ss!=w242+68; ss+=1) *rr++ = *ss;
  /* #2036: @397 = (-@397) */
  w397 = (- w397 );
  /* #2037: @398 = @242[62] */
  for (rr=(&w398), ss=w242+62; ss!=w242+63; ss+=1) *rr++ = *ss;
  /* #2038: @373 = zeros(3x1,0nz) */
  /* #2039: @273 = @242[70:76] */
  for (rr=w273, ss=w242+70; ss!=w242+76; ss+=1) *rr++ = *ss;
  /* #2040: @204 = dense(@273) */
  casadi_densify(w273, casadi_s14, w204, 0);
  /* #2041: @382 = zeros(14x1,0nz) */
  /* #2042: @243 = @242[68:70] */
  for (rr=w243, ss=w242+68; ss!=w242+70; ss+=1) *rr++ = *ss;
  /* #2043: @273 = @246[63:69] */
  for (rr=w273, ss=w246+63; ss!=w246+69; ss+=1) *rr++ = *ss;
  /* #2044: @239 = @248[31:34] */
  for (rr=w239, ss=w248+31; ss!=w248+34; ss+=1) *rr++ = *ss;
  /* #2045: @405 = @251[15] */
  for (rr=(&w405), ss=w251+15; ss!=w251+16; ss+=1) *rr++ = *ss;
  /* #2046: @406 = @254[15] */
  for (rr=(&w406), ss=w254+15; ss!=w254+16; ss+=1) *rr++ = *ss;
  /* #2047: @407 = @256[9] */
  for (rr=(&w407), ss=w256+9; ss!=w256+10; ss+=1) *rr++ = *ss;
  /* #2048: @408 = horzcat(@243, @273, @239, @405, @406, @407) */
  rr=w408;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w405;
  *rr++ = w406;
  *rr++ = w407;
  /* #2049: @297 = dense(@408) */
  casadi_densify(w408, casadi_s29, w297, 0);
  /* #2050: @390 = zeros(4x1,0nz) */
  /* #2051: @391 = zeros(4x1,0nz) */
  /* #2052: @405 = @249[16] */
  for (rr=(&w405), ss=w249+16; ss!=w249+17; ss+=1) *rr++ = *ss;
  /* #2053: @239 = @252[40:43] */
  for (rr=w239, ss=w252+40; ss!=w252+43; ss+=1) *rr++ = *ss;
  /* #2054: @400 = zeros(4x1,0nz) */
  /* #2055: @409 = zeros(4x1,0nz) */
  /* #2056: @50 = horzcat(@390, @391, @405, @239, @400, @409) */
  rr=w50;
  *rr++ = w405;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2057: @301 = dense(@50) */
  casadi_densify(w50, casadi_s16, w301, 0);
  /* #2058: @302 = fwd6_f_disc(@207, @51, @382, @297, @301) */
  arg1[0]=w207;
  arg1[1]=w51;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2059: {@207, @408, @410, @411, @412, @413} = horzsplit(@302) */
  casadi_copy(w302, 14, w207);
  casadi_copy(w302+14, 14, w408);
  casadi_copy(w302+28, 14, w410);
  casadi_copy(w302+42, 14, w411);
  casadi_copy(w302+56, 14, w412);
  casadi_copy(w302+70, 14, w413);
  /* #2060: @204 = (@204-@207) */
  for (i=0, rr=w204, cs=w207; i<14; ++i) (*rr++) -= (*cs++);
  /* #2061: @405 = 0 */
  w405 = 0.;
  /* #2062: @406 = @242[69] */
  for (rr=(&w406), ss=w242+69; ss!=w242+70; ss+=1) *rr++ = *ss;
  /* #2063: @405 = mac(@209,@406,@405) */
  casadi_mtimes(w209, casadi_s10, (&w406), casadi_s17, (&w405), casadi_s8, w, 0);
  /* #2064: @382 = 00 */
  /* #2065: @406 = @242[69] */
  for (rr=(&w406), ss=w242+69; ss!=w242+70; ss+=1) *rr++ = *ss;
  /* #2066: @390 = zeros(3x1,0nz) */
  /* #2067: @239 = @242[76:79] */
  for (rr=w239, ss=w242+76; ss!=w242+79; ss+=1) *rr++ = *ss;
  /* #2068: @207 = dense(@239) */
  casadi_densify(w239, casadi_s18, w207, 0);
  /* #2069: @391 = zeros(14x1,0nz) */
  /* #2070: @273 = @242[70:76] */
  for (rr=w273, ss=w242+70; ss!=w242+76; ss+=1) *rr++ = *ss;
  /* #2071: @239 = @246[69:72] */
  for (rr=w239, ss=w246+69; ss!=w246+72; ss+=1) *rr++ = *ss;
  /* #2072: @243 = @248[34:36] */
  for (rr=w243, ss=w248+34; ss!=w248+36; ss+=1) *rr++ = *ss;
  /* #2073: @407 = @251[16] */
  for (rr=(&w407), ss=w251+16; ss!=w251+17; ss+=1) *rr++ = *ss;
  /* #2074: @414 = @254[16] */
  for (rr=(&w414), ss=w254+16; ss!=w254+17; ss+=1) *rr++ = *ss;
  /* #2075: @415 = @259[8] */
  for (rr=(&w415), ss=w259+8; ss!=w259+9; ss+=1) *rr++ = *ss;
  /* #2076: @416 = horzcat(@273, @239, @243, @407, @414, @415) */
  rr=w416;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w407;
  *rr++ = w414;
  *rr++ = w415;
  /* #2077: @302 = dense(@416) */
  casadi_densify(w416, casadi_s19, w302, 0);
  /* #2078: @400 = zeros(4x1,0nz) */
  /* #2079: @409 = zeros(4x1,0nz) */
  /* #2080: @407 = @249[17] */
  for (rr=(&w407), ss=w249+17; ss!=w249+18; ss+=1) *rr++ = *ss;
  /* #2081: @239 = @252[43:46] */
  for (rr=w239, ss=w252+43; ss!=w252+46; ss+=1) *rr++ = *ss;
  /* #2082: @417 = zeros(4x1,0nz) */
  /* #2083: @418 = zeros(4x1,0nz) */
  /* #2084: @51 = horzcat(@400, @409, @407, @239, @417, @418) */
  rr=w51;
  *rr++ = w407;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2085: @301 = dense(@51) */
  casadi_densify(w51, casadi_s16, w301, 0);
  /* #2086: @297 = fwd6_f_disc(@210, @56, @391, @302, @301) */
  arg1[0]=w210;
  arg1[1]=w56;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2087: {@210, @416, @419, @420, @421, @422} = horzsplit(@297) */
  casadi_copy(w297, 14, w210);
  casadi_copy(w297+14, 14, w416);
  casadi_copy(w297+28, 14, w419);
  casadi_copy(w297+42, 14, w420);
  casadi_copy(w297+56, 14, w421);
  casadi_copy(w297+70, 14, w422);
  /* #2088: @207 = (@207-@210) */
  for (i=0, rr=w207, cs=w210; i<14; ++i) (*rr++) -= (*cs++);
  /* #2089: @407 = 0 */
  w407 = 0.;
  /* #2090: @414 = @242[71] */
  for (rr=(&w414), ss=w242+71; ss!=w242+72; ss+=1) *rr++ = *ss;
  /* #2091: @407 = mac(@212,@414,@407) */
  casadi_mtimes(w212, casadi_s10, (&w414), casadi_s9, (&w407), casadi_s8, w, 0);
  /* #2092: @414 = @242[70] */
  for (rr=(&w414), ss=w242+70; ss!=w242+71; ss+=1) *rr++ = *ss;
  /* #2093: @415 = @242[71] */
  for (rr=(&w415), ss=w242+71; ss!=w242+72; ss+=1) *rr++ = *ss;
  /* #2094: @391 = zeros(3x1,0nz) */
  /* #2095: @273 = @242[79:85] */
  for (rr=w273, ss=w242+79; ss!=w242+85; ss+=1) *rr++ = *ss;
  /* #2096: @210 = dense(@273) */
  casadi_densify(w273, casadi_s20, w210, 0);
  /* #2097: @400 = zeros(14x1,0nz) */
  /* #2098: @239 = @242[76:79] */
  for (rr=w239, ss=w242+76; ss!=w242+79; ss+=1) *rr++ = *ss;
  /* #2099: @273 = @246[72:78] */
  for (rr=w273, ss=w246+72; ss!=w246+78; ss+=1) *rr++ = *ss;
  /* #2100: @243 = @248[36:38] */
  for (rr=w243, ss=w248+36; ss!=w248+38; ss+=1) *rr++ = *ss;
  /* #2101: @423 = @251[17] */
  for (rr=(&w423), ss=w251+17; ss!=w251+18; ss+=1) *rr++ = *ss;
  /* #2102: @424 = @254[17] */
  for (rr=(&w424), ss=w254+17; ss!=w254+18; ss+=1) *rr++ = *ss;
  /* #2103: @425 = @256[10] */
  for (rr=(&w425), ss=w256+10; ss!=w256+11; ss+=1) *rr++ = *ss;
  /* #2104: @426 = horzcat(@239, @273, @243, @423, @424, @425) */
  rr=w426;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w423;
  *rr++ = w424;
  *rr++ = w425;
  /* #2105: @297 = dense(@426) */
  casadi_densify(w426, casadi_s21, w297, 0);
  /* #2106: @409 = zeros(4x1,0nz) */
  /* #2107: @417 = zeros(4x1,0nz) */
  /* #2108: @423 = @249[18] */
  for (rr=(&w423), ss=w249+18; ss!=w249+19; ss+=1) *rr++ = *ss;
  /* #2109: @239 = @252[46:49] */
  for (rr=w239, ss=w252+46; ss!=w252+49; ss+=1) *rr++ = *ss;
  /* #2110: @418 = zeros(4x1,0nz) */
  /* #2111: @427 = zeros(4x1,0nz) */
  /* #2112: @56 = horzcat(@409, @417, @423, @239, @418, @427) */
  rr=w56;
  *rr++ = w423;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2113: @301 = dense(@56) */
  casadi_densify(w56, casadi_s16, w301, 0);
  /* #2114: @302 = fwd6_f_disc(@213, @57, @400, @297, @301) */
  arg1[0]=w213;
  arg1[1]=w57;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2115: {@213, @426, @428, @429, @430, @431} = horzsplit(@302) */
  casadi_copy(w302, 14, w213);
  casadi_copy(w302+14, 14, w426);
  casadi_copy(w302+28, 14, w428);
  casadi_copy(w302+42, 14, w429);
  casadi_copy(w302+56, 14, w430);
  casadi_copy(w302+70, 14, w431);
  /* #2116: @210 = (@210-@213) */
  for (i=0, rr=w210, cs=w213; i<14; ++i) (*rr++) -= (*cs++);
  /* #2117: @423 = 0 */
  w423 = 0.;
  /* #2118: @424 = @242[77] */
  for (rr=(&w424), ss=w242+77; ss!=w242+78; ss+=1) *rr++ = *ss;
  /* #2119: @423 = mac(@215,@424,@423) */
  casadi_mtimes(w215, casadi_s10, (&w424), casadi_s22, (&w423), casadi_s8, w, 0);
  /* #2120: @424 = @242[78] */
  for (rr=(&w424), ss=w242+78; ss!=w242+79; ss+=1) *rr++ = *ss;
  /* #2121: @424 = (-@424) */
  w424 = (- w424 );
  /* #2122: @425 = @242[77] */
  for (rr=(&w425), ss=w242+77; ss!=w242+78; ss+=1) *rr++ = *ss;
  /* #2123: @400 = zeros(3x1,0nz) */
  /* #2124: @243 = @242[85:87] */
  for (rr=w243, ss=w242+85; ss!=w242+87; ss+=1) *rr++ = *ss;
  /* #2125: @213 = dense(@243) */
  casadi_densify(w243, casadi_s23, w213, 0);
  /* #2126: @409 = zeros(14x1,0nz) */
  /* #2127: @273 = @242[79:85] */
  for (rr=w273, ss=w242+79; ss!=w242+85; ss+=1) *rr++ = *ss;
  /* #2128: @243 = @246[78:80] */
  for (rr=w243, ss=w246+78; ss!=w246+80; ss+=1) *rr++ = *ss;
  /* #2129: @239 = @248[38:41] */
  for (rr=w239, ss=w248+38; ss!=w248+41; ss+=1) *rr++ = *ss;
  /* #2130: @432 = @251[18] */
  for (rr=(&w432), ss=w251+18; ss!=w251+19; ss+=1) *rr++ = *ss;
  /* #2131: @433 = @254[18] */
  for (rr=(&w433), ss=w254+18; ss!=w254+19; ss+=1) *rr++ = *ss;
  /* #2132: @434 = @259[9] */
  for (rr=(&w434), ss=w259+9; ss!=w259+10; ss+=1) *rr++ = *ss;
  /* #2133: @435 = horzcat(@273, @243, @239, @432, @433, @434) */
  rr=w435;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w432;
  *rr++ = w433;
  *rr++ = w434;
  /* #2134: @302 = dense(@435) */
  casadi_densify(w435, casadi_s24, w302, 0);
  /* #2135: @417 = zeros(4x1,0nz) */
  /* #2136: @418 = zeros(4x1,0nz) */
  /* #2137: @432 = @249[19] */
  for (rr=(&w432), ss=w249+19; ss!=w249+20; ss+=1) *rr++ = *ss;
  /* #2138: @239 = @252[49:52] */
  for (rr=w239, ss=w252+49; ss!=w252+52; ss+=1) *rr++ = *ss;
  /* #2139: @427 = zeros(4x1,0nz) */
  /* #2140: @436 = zeros(4x1,0nz) */
  /* #2141: @57 = horzcat(@417, @418, @432, @239, @427, @436) */
  rr=w57;
  *rr++ = w432;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2142: @301 = dense(@57) */
  casadi_densify(w57, casadi_s16, w301, 0);
  /* #2143: @297 = fwd6_f_disc(@216, @62, @409, @302, @301) */
  arg1[0]=w216;
  arg1[1]=w62;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2144: {@216, @435, @437, @438, @439, @440} = horzsplit(@297) */
  casadi_copy(w297, 14, w216);
  casadi_copy(w297+14, 14, w435);
  casadi_copy(w297+28, 14, w437);
  casadi_copy(w297+42, 14, w438);
  casadi_copy(w297+56, 14, w439);
  casadi_copy(w297+70, 14, w440);
  /* #2145: @213 = (@213-@216) */
  for (i=0, rr=w213, cs=w216; i<14; ++i) (*rr++) -= (*cs++);
  /* #2146: @432 = 0 */
  w432 = 0.;
  /* #2147: @433 = @242[80] */
  for (rr=(&w433), ss=w242+80; ss!=w242+81; ss+=1) *rr++ = *ss;
  /* #2148: @432 = mac(@218,@433,@432) */
  casadi_mtimes(w218, casadi_s10, (&w433), casadi_s17, (&w432), casadi_s8, w, 0);
  /* #2149: @409 = 00 */
  /* #2150: @433 = @242[80] */
  for (rr=(&w433), ss=w242+80; ss!=w242+81; ss+=1) *rr++ = *ss;
  /* #2151: @417 = zeros(3x1,0nz) */
  /* #2152: @1 = @242[87:94] */
  for (rr=w1, ss=w242+87; ss!=w242+94; ss+=1) *rr++ = *ss;
  /* #2153: @216 = dense(@1) */
  casadi_densify(w1, casadi_s25, w216, 0);
  /* #2154: @418 = zeros(14x1,0nz) */
  /* #2155: @243 = @242[85:87] */
  for (rr=w243, ss=w242+85; ss!=w242+87; ss+=1) *rr++ = *ss;
  /* #2156: @1 = @246[80:87] */
  for (rr=w1, ss=w246+80; ss!=w246+87; ss+=1) *rr++ = *ss;
  /* #2157: @274 = @248[41:43] */
  for (rr=w274, ss=w248+41; ss!=w248+43; ss+=1) *rr++ = *ss;
  /* #2158: @434 = @251[19] */
  for (rr=(&w434), ss=w251+19; ss!=w251+20; ss+=1) *rr++ = *ss;
  /* #2159: @441 = @254[19] */
  for (rr=(&w441), ss=w254+19; ss!=w254+20; ss+=1) *rr++ = *ss;
  /* #2160: @442 = @256[11] */
  for (rr=(&w442), ss=w256+11; ss!=w256+12; ss+=1) *rr++ = *ss;
  /* #2161: @443 = horzcat(@243, @1, @274, @434, @441, @442) */
  rr=w443;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w434;
  *rr++ = w441;
  *rr++ = w442;
  /* #2162: @297 = dense(@443) */
  casadi_densify(w443, casadi_s26, w297, 0);
  /* #2163: @427 = zeros(4x1,0nz) */
  /* #2164: @436 = zeros(4x1,0nz) */
  /* #2165: @434 = @249[20] */
  for (rr=(&w434), ss=w249+20; ss!=w249+21; ss+=1) *rr++ = *ss;
  /* #2166: @239 = @252[52:55] */
  for (rr=w239, ss=w252+52; ss!=w252+55; ss+=1) *rr++ = *ss;
  /* #2167: @444 = zeros(4x1,0nz) */
  /* #2168: @445 = zeros(4x1,0nz) */
  /* #2169: @62 = horzcat(@427, @436, @434, @239, @444, @445) */
  rr=w62;
  *rr++ = w434;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2170: @301 = dense(@62) */
  casadi_densify(w62, casadi_s16, w301, 0);
  /* #2171: @302 = fwd6_f_disc(@219, @63, @418, @297, @301) */
  arg1[0]=w219;
  arg1[1]=w63;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2172: {@219, @443, @446, @447, @448, @449} = horzsplit(@302) */
  casadi_copy(w302, 14, w219);
  casadi_copy(w302+14, 14, w443);
  casadi_copy(w302+28, 14, w446);
  casadi_copy(w302+42, 14, w447);
  casadi_copy(w302+56, 14, w448);
  casadi_copy(w302+70, 14, w449);
  /* #2173: @216 = (@216-@219) */
  for (i=0, rr=w216, cs=w219; i<14; ++i) (*rr++) -= (*cs++);
  /* #2174: @434 = 0 */
  w434 = 0.;
  /* #2175: @441 = @242[86] */
  for (rr=(&w441), ss=w242+86; ss!=w242+87; ss+=1) *rr++ = *ss;
  /* #2176: @434 = mac(@221,@441,@434) */
  casadi_mtimes(w221, casadi_s10, (&w441), casadi_s9, (&w434), casadi_s8, w, 0);
  /* #2177: @441 = @242[85] */
  for (rr=(&w441), ss=w242+85; ss!=w242+86; ss+=1) *rr++ = *ss;
  /* #2178: @442 = @242[86] */
  for (rr=(&w442), ss=w242+86; ss!=w242+87; ss+=1) *rr++ = *ss;
  /* #2179: @418 = zeros(3x1,0nz) */
  /* #2180: @243 = @242[94:96] */
  for (rr=w243, ss=w242+94; ss!=w242+96; ss+=1) *rr++ = *ss;
  /* #2181: @219 = dense(@243) */
  casadi_densify(w243, casadi_s27, w219, 0);
  /* #2182: @427 = zeros(14x1,0nz) */
  /* #2183: @1 = @242[87:94] */
  for (rr=w1, ss=w242+87; ss!=w242+94; ss+=1) *rr++ = *ss;
  /* #2184: @243 = @246[87:89] */
  for (rr=w243, ss=w246+87; ss!=w246+89; ss+=1) *rr++ = *ss;
  /* #2185: @274 = @248[43:45] */
  for (rr=w274, ss=w248+43; ss!=w248+45; ss+=1) *rr++ = *ss;
  /* #2186: @450 = @251[20] */
  for (rr=(&w450), ss=w251+20; ss!=w251+21; ss+=1) *rr++ = *ss;
  /* #2187: @451 = @254[20] */
  for (rr=(&w451), ss=w254+20; ss!=w254+21; ss+=1) *rr++ = *ss;
  /* #2188: @452 = @259[10] */
  for (rr=(&w452), ss=w259+10; ss!=w259+11; ss+=1) *rr++ = *ss;
  /* #2189: @453 = horzcat(@1, @243, @274, @450, @451, @452) */
  rr=w453;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w274; i<2; ++i) *rr++ = *cs++;
  *rr++ = w450;
  *rr++ = w451;
  *rr++ = w452;
  /* #2190: @302 = dense(@453) */
  casadi_densify(w453, casadi_s28, w302, 0);
  /* #2191: @436 = zeros(4x1,0nz) */
  /* #2192: @444 = zeros(4x1,0nz) */
  /* #2193: @450 = @249[21] */
  for (rr=(&w450), ss=w249+21; ss!=w249+22; ss+=1) *rr++ = *ss;
  /* #2194: @239 = @252[55:58] */
  for (rr=w239, ss=w252+55; ss!=w252+58; ss+=1) *rr++ = *ss;
  /* #2195: @445 = zeros(4x1,0nz) */
  /* #2196: @454 = zeros(4x1,0nz) */
  /* #2197: @63 = horzcat(@436, @444, @450, @239, @445, @454) */
  rr=w63;
  *rr++ = w450;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2198: @301 = dense(@63) */
  casadi_densify(w63, casadi_s16, w301, 0);
  /* #2199: @297 = fwd6_f_disc(@222, @68, @427, @302, @301) */
  arg1[0]=w222;
  arg1[1]=w68;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2200: {@222, @453, @455, @456, @457, @458} = horzsplit(@297) */
  casadi_copy(w297, 14, w222);
  casadi_copy(w297+14, 14, w453);
  casadi_copy(w297+28, 14, w455);
  casadi_copy(w297+42, 14, w456);
  casadi_copy(w297+56, 14, w457);
  casadi_copy(w297+70, 14, w458);
  /* #2201: @219 = (@219-@222) */
  for (i=0, rr=w219, cs=w222; i<14; ++i) (*rr++) -= (*cs++);
  /* #2202: @450 = 0 */
  w450 = 0.;
  /* #2203: @451 = @242[88] */
  for (rr=(&w451), ss=w242+88; ss!=w242+89; ss+=1) *rr++ = *ss;
  /* #2204: @450 = mac(@224,@451,@450) */
  casadi_mtimes(w224, casadi_s10, (&w451), casadi_s22, (&w450), casadi_s8, w, 0);
  /* #2205: @451 = @242[93] */
  for (rr=(&w451), ss=w242+93; ss!=w242+94; ss+=1) *rr++ = *ss;
  /* #2206: @451 = (-@451) */
  w451 = (- w451 );
  /* #2207: @452 = @242[88] */
  for (rr=(&w452), ss=w242+88; ss!=w242+89; ss+=1) *rr++ = *ss;
  /* #2208: @427 = zeros(3x1,0nz) */
  /* #2209: @273 = @242[96:102] */
  for (rr=w273, ss=w242+96; ss!=w242+102; ss+=1) *rr++ = *ss;
  /* #2210: @222 = dense(@273) */
  casadi_densify(w273, casadi_s14, w222, 0);
  /* #2211: @436 = zeros(14x1,0nz) */
  /* #2212: @243 = @242[94:96] */
  for (rr=w243, ss=w242+94; ss!=w242+96; ss+=1) *rr++ = *ss;
  /* #2213: @273 = @246[89:95] */
  for (rr=w273, ss=w246+89; ss!=w246+95; ss+=1) *rr++ = *ss;
  /* #2214: @239 = @248[45:48] */
  for (rr=w239, ss=w248+45; ss!=w248+48; ss+=1) *rr++ = *ss;
  /* #2215: @459 = @251[21] */
  for (rr=(&w459), ss=w251+21; ss!=w251+22; ss+=1) *rr++ = *ss;
  /* #2216: @460 = @254[21] */
  for (rr=(&w460), ss=w254+21; ss!=w254+22; ss+=1) *rr++ = *ss;
  /* #2217: @461 = @256[12] */
  for (rr=(&w461), ss=w256+12; ss!=w256+13; ss+=1) *rr++ = *ss;
  /* #2218: @462 = horzcat(@243, @273, @239, @459, @460, @461) */
  rr=w462;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w459;
  *rr++ = w460;
  *rr++ = w461;
  /* #2219: @297 = dense(@462) */
  casadi_densify(w462, casadi_s29, w297, 0);
  /* #2220: @444 = zeros(4x1,0nz) */
  /* #2221: @445 = zeros(4x1,0nz) */
  /* #2222: @459 = @249[22] */
  for (rr=(&w459), ss=w249+22; ss!=w249+23; ss+=1) *rr++ = *ss;
  /* #2223: @239 = @252[58:61] */
  for (rr=w239, ss=w252+58; ss!=w252+61; ss+=1) *rr++ = *ss;
  /* #2224: @454 = zeros(4x1,0nz) */
  /* #2225: @463 = zeros(4x1,0nz) */
  /* #2226: @68 = horzcat(@444, @445, @459, @239, @454, @463) */
  rr=w68;
  *rr++ = w459;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2227: @301 = dense(@68) */
  casadi_densify(w68, casadi_s16, w301, 0);
  /* #2228: @302 = fwd6_f_disc(@225, @69, @436, @297, @301) */
  arg1[0]=w225;
  arg1[1]=w69;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2229: {@225, @462, @464, @465, @466, @467} = horzsplit(@302) */
  casadi_copy(w302, 14, w225);
  casadi_copy(w302+14, 14, w462);
  casadi_copy(w302+28, 14, w464);
  casadi_copy(w302+42, 14, w465);
  casadi_copy(w302+56, 14, w466);
  casadi_copy(w302+70, 14, w467);
  /* #2230: @222 = (@222-@225) */
  for (i=0, rr=w222, cs=w225; i<14; ++i) (*rr++) -= (*cs++);
  /* #2231: @459 = 0 */
  w459 = 0.;
  /* #2232: @460 = @242[95] */
  for (rr=(&w460), ss=w242+95; ss!=w242+96; ss+=1) *rr++ = *ss;
  /* #2233: @459 = mac(@227,@460,@459) */
  casadi_mtimes(w227, casadi_s10, (&w460), casadi_s17, (&w459), casadi_s8, w, 0);
  /* #2234: @436 = 00 */
  /* #2235: @460 = @242[95] */
  for (rr=(&w460), ss=w242+95; ss!=w242+96; ss+=1) *rr++ = *ss;
  /* #2236: @444 = zeros(3x1,0nz) */
  /* #2237: @239 = @242[102:105] */
  for (rr=w239, ss=w242+102; ss!=w242+105; ss+=1) *rr++ = *ss;
  /* #2238: @225 = dense(@239) */
  casadi_densify(w239, casadi_s18, w225, 0);
  /* #2239: @445 = zeros(14x1,0nz) */
  /* #2240: @273 = @242[96:102] */
  for (rr=w273, ss=w242+96; ss!=w242+102; ss+=1) *rr++ = *ss;
  /* #2241: @239 = @246[95:98] */
  for (rr=w239, ss=w246+95; ss!=w246+98; ss+=1) *rr++ = *ss;
  /* #2242: @243 = @248[48:50] */
  for (rr=w243, ss=w248+48; ss!=w248+50; ss+=1) *rr++ = *ss;
  /* #2243: @461 = @251[22] */
  for (rr=(&w461), ss=w251+22; ss!=w251+23; ss+=1) *rr++ = *ss;
  /* #2244: @468 = @254[22] */
  for (rr=(&w468), ss=w254+22; ss!=w254+23; ss+=1) *rr++ = *ss;
  /* #2245: @469 = @259[11] */
  for (rr=(&w469), ss=w259+11; ss!=w259+12; ss+=1) *rr++ = *ss;
  /* #2246: @470 = horzcat(@273, @239, @243, @461, @468, @469) */
  rr=w470;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w461;
  *rr++ = w468;
  *rr++ = w469;
  /* #2247: @302 = dense(@470) */
  casadi_densify(w470, casadi_s19, w302, 0);
  /* #2248: @454 = zeros(4x1,0nz) */
  /* #2249: @463 = zeros(4x1,0nz) */
  /* #2250: @461 = @249[23] */
  for (rr=(&w461), ss=w249+23; ss!=w249+24; ss+=1) *rr++ = *ss;
  /* #2251: @239 = @252[61:64] */
  for (rr=w239, ss=w252+61; ss!=w252+64; ss+=1) *rr++ = *ss;
  /* #2252: @471 = zeros(4x1,0nz) */
  /* #2253: @472 = zeros(4x1,0nz) */
  /* #2254: @69 = horzcat(@454, @463, @461, @239, @471, @472) */
  rr=w69;
  *rr++ = w461;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2255: @301 = dense(@69) */
  casadi_densify(w69, casadi_s16, w301, 0);
  /* #2256: @297 = fwd6_f_disc(@228, @74, @445, @302, @301) */
  arg1[0]=w228;
  arg1[1]=w74;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2257: {@228, @470, @473, @474, @475, @476} = horzsplit(@297) */
  casadi_copy(w297, 14, w228);
  casadi_copy(w297+14, 14, w470);
  casadi_copy(w297+28, 14, w473);
  casadi_copy(w297+42, 14, w474);
  casadi_copy(w297+56, 14, w475);
  casadi_copy(w297+70, 14, w476);
  /* #2258: @225 = (@225-@228) */
  for (i=0, rr=w225, cs=w228; i<14; ++i) (*rr++) -= (*cs++);
  /* #2259: @461 = 0 */
  w461 = 0.;
  /* #2260: @468 = @242[97] */
  for (rr=(&w468), ss=w242+97; ss!=w242+98; ss+=1) *rr++ = *ss;
  /* #2261: @461 = mac(@230,@468,@461) */
  casadi_mtimes(w230, casadi_s10, (&w468), casadi_s9, (&w461), casadi_s8, w, 0);
  /* #2262: @468 = @242[96] */
  for (rr=(&w468), ss=w242+96; ss!=w242+97; ss+=1) *rr++ = *ss;
  /* #2263: @469 = @242[97] */
  for (rr=(&w469), ss=w242+97; ss!=w242+98; ss+=1) *rr++ = *ss;
  /* #2264: @445 = zeros(3x1,0nz) */
  /* #2265: @273 = @242[105:111] */
  for (rr=w273, ss=w242+105; ss!=w242+111; ss+=1) *rr++ = *ss;
  /* #2266: @228 = dense(@273) */
  casadi_densify(w273, casadi_s20, w228, 0);
  /* #2267: @454 = zeros(14x1,0nz) */
  /* #2268: @239 = @242[102:105] */
  for (rr=w239, ss=w242+102; ss!=w242+105; ss+=1) *rr++ = *ss;
  /* #2269: @273 = @246[98:104] */
  for (rr=w273, ss=w246+98; ss!=w246+104; ss+=1) *rr++ = *ss;
  /* #2270: @243 = @248[50:52] */
  for (rr=w243, ss=w248+50; ss!=w248+52; ss+=1) *rr++ = *ss;
  /* #2271: @477 = @251[23] */
  for (rr=(&w477), ss=w251+23; ss!=w251+24; ss+=1) *rr++ = *ss;
  /* #2272: @478 = @254[23] */
  for (rr=(&w478), ss=w254+23; ss!=w254+24; ss+=1) *rr++ = *ss;
  /* #2273: @479 = @256[13] */
  for (rr=(&w479), ss=w256+13; ss!=w256+14; ss+=1) *rr++ = *ss;
  /* #2274: @480 = horzcat(@239, @273, @243, @477, @478, @479) */
  rr=w480;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  *rr++ = w477;
  *rr++ = w478;
  *rr++ = w479;
  /* #2275: @297 = dense(@480) */
  casadi_densify(w480, casadi_s21, w297, 0);
  /* #2276: @463 = zeros(4x1,0nz) */
  /* #2277: @471 = zeros(4x1,0nz) */
  /* #2278: @477 = @249[24] */
  for (rr=(&w477), ss=w249+24; ss!=w249+25; ss+=1) *rr++ = *ss;
  /* #2279: @239 = @252[64:67] */
  for (rr=w239, ss=w252+64; ss!=w252+67; ss+=1) *rr++ = *ss;
  /* #2280: @472 = zeros(4x1,0nz) */
  /* #2281: @481 = zeros(4x1,0nz) */
  /* #2282: @74 = horzcat(@463, @471, @477, @239, @472, @481) */
  rr=w74;
  *rr++ = w477;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2283: @301 = dense(@74) */
  casadi_densify(w74, casadi_s16, w301, 0);
  /* #2284: @302 = fwd6_f_disc(@231, @75, @454, @297, @301) */
  arg1[0]=w231;
  arg1[1]=w75;
  arg1[2]=0;
  arg1[3]=w297;
  arg1[4]=w301;
  res1[0]=w302;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2285: {@231, @480, @482, @483, @484, @485} = horzsplit(@302) */
  casadi_copy(w302, 14, w231);
  casadi_copy(w302+14, 14, w480);
  casadi_copy(w302+28, 14, w482);
  casadi_copy(w302+42, 14, w483);
  casadi_copy(w302+56, 14, w484);
  casadi_copy(w302+70, 14, w485);
  /* #2286: @228 = (@228-@231) */
  for (i=0, rr=w228, cs=w231; i<14; ++i) (*rr++) -= (*cs++);
  /* #2287: @477 = 0 */
  w477 = 0.;
  /* #2288: @478 = @242[103] */
  for (rr=(&w478), ss=w242+103; ss!=w242+104; ss+=1) *rr++ = *ss;
  /* #2289: @477 = mac(@233,@478,@477) */
  casadi_mtimes(w233, casadi_s10, (&w478), casadi_s22, (&w477), casadi_s8, w, 0);
  /* #2290: @478 = @242[104] */
  for (rr=(&w478), ss=w242+104; ss!=w242+105; ss+=1) *rr++ = *ss;
  /* #2291: @478 = (-@478) */
  w478 = (- w478 );
  /* #2292: @479 = @242[103] */
  for (rr=(&w479), ss=w242+103; ss!=w242+104; ss+=1) *rr++ = *ss;
  /* #2293: @454 = zeros(3x1,0nz) */
  /* #2294: @1 = @242[111:118] */
  for (rr=w1, ss=w242+111; ss!=w242+118; ss+=1) *rr++ = *ss;
  /* #2295: @231 = dense(@1) */
  casadi_densify(w1, casadi_s30, w231, 0);
  /* #2296: @463 = zeros(14x1,0nz) */
  /* #2297: @273 = @242[105:111] */
  for (rr=w273, ss=w242+105; ss!=w242+111; ss+=1) *rr++ = *ss;
  /* #2298: @243 = @246[104:106] */
  for (rr=w243, ss=w246+104; ss!=w246+106; ss+=1) *rr++ = *ss;
  /* #2299: @239 = @248[52:55] */
  for (rr=w239, ss=w248+52; ss!=w248+55; ss+=1) *rr++ = *ss;
  /* #2300: @486 = @251[24] */
  for (rr=(&w486), ss=w251+24; ss!=w251+25; ss+=1) *rr++ = *ss;
  /* #2301: @487 = @254[24] */
  for (rr=(&w487), ss=w254+24; ss!=w254+25; ss+=1) *rr++ = *ss;
  /* #2302: @488 = @259[12] */
  for (rr=(&w488), ss=w259+12; ss!=w259+13; ss+=1) *rr++ = *ss;
  /* #2303: @489 = horzcat(@273, @243, @239, @486, @487, @488) */
  rr=w489;
  for (i=0, cs=w273; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  *rr++ = w486;
  *rr++ = w487;
  *rr++ = w488;
  /* #2304: @302 = dense(@489) */
  casadi_densify(w489, casadi_s24, w302, 0);
  /* #2305: @471 = zeros(4x1,0nz) */
  /* #2306: @472 = zeros(4x1,0nz) */
  /* #2307: @486 = @249[25] */
  for (rr=(&w486), ss=w249+25; ss!=w249+26; ss+=1) *rr++ = *ss;
  /* #2308: @239 = @252[67:70] */
  for (rr=w239, ss=w252+67; ss!=w252+70; ss+=1) *rr++ = *ss;
  /* #2309: @481 = zeros(4x1,0nz) */
  /* #2310: @490 = zeros(4x1,0nz) */
  /* #2311: @75 = horzcat(@471, @472, @486, @239, @481, @490) */
  rr=w75;
  *rr++ = w486;
  for (i=0, cs=w239; i<3; ++i) *rr++ = *cs++;
  /* #2312: @301 = dense(@75) */
  casadi_densify(w75, casadi_s16, w301, 0);
  /* #2313: @297 = fwd6_f_disc(@234, @80, @463, @302, @301) */
  arg1[0]=w234;
  arg1[1]=w80;
  arg1[2]=0;
  arg1[3]=w302;
  arg1[4]=w301;
  res1[0]=w297;
  if (casadi_f12(arg1, res1, iw, w, 0)) return 1;
  /* #2314: {@234, @489, @491, @492, @493, @494} = horzsplit(@297) */
  casadi_copy(w297, 14, w234);
  casadi_copy(w297+14, 14, w489);
  casadi_copy(w297+28, 14, w491);
  casadi_copy(w297+42, 14, w492);
  casadi_copy(w297+56, 14, w493);
  casadi_copy(w297+70, 14, w494);
  /* #2315: @231 = (@231-@234) */
  for (i=0, rr=w231, cs=w234; i<14; ++i) (*rr++) -= (*cs++);
  /* #2316: @486 = 0 */
  w486 = 0.;
  /* #2317: @487 = @242[106] */
  for (rr=(&w487), ss=w242+106; ss!=w242+107; ss+=1) *rr++ = *ss;
  /* #2318: @486 = mac(@236,@487,@486) */
  casadi_mtimes(w236, casadi_s10, (&w487), casadi_s17, (&w486), casadi_s8, w, 0);
  /* #2319: @463 = 00 */
  /* #2320: @487 = @242[106] */
  for (rr=(&w487), ss=w242+106; ss!=w242+107; ss+=1) *rr++ = *ss;
  /* #2321: @471 = zeros(3x1,0nz) */
  /* #2322: @1 = @242[:7] */
  for (rr=w1, ss=w242+0; ss!=w242+7; ss+=1) *rr++ = *ss;
  /* #2323: @495 = vertcat(@162, @244, @0, @262, @263, @163, @6, @255, @257, @264, @164, @265, @260, @277, @278, @168, @285, @286, @287, @279, @171, @288, @307, @308, @290, @174, @315, @316, @317, @298, @177, @324, @299, @325, @300, @180, @326, @333, @334, @310, @183, @342, @343, @344, @319, @186, @351, @328, @352, @336, @189, @353, @360, @361, @337, @192, @369, @370, @371, @346, @195, @378, @355, @379, @363, @198, @380, @387, @388, @364, @201, @396, @397, @398, @373, @204, @405, @382, @406, @390, @207, @407, @414, @415, @391, @210, @423, @424, @425, @400, @213, @432, @409, @433, @417, @216, @434, @441, @442, @418, @219, @450, @451, @452, @427, @222, @459, @436, @460, @444, @225, @461, @468, @469, @445, @228, @477, @478, @479, @454, @231, @486, @463, @487, @471, @1) */
  rr=w495;
  for (i=0, cs=w162; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  for (i=0, cs=w163; i<14; ++i) *rr++ = *cs++;
  *rr++ = w6;
  *rr++ = w255;
  *rr++ = w257;
  for (i=0, cs=w164; i<14; ++i) *rr++ = *cs++;
  *rr++ = w260;
  for (i=0, cs=w168; i<14; ++i) *rr++ = *cs++;
  *rr++ = w285;
  *rr++ = w286;
  *rr++ = w287;
  for (i=0, cs=w171; i<14; ++i) *rr++ = *cs++;
  *rr++ = w288;
  *rr++ = w307;
  *rr++ = w308;
  for (i=0, cs=w174; i<14; ++i) *rr++ = *cs++;
  *rr++ = w315;
  *rr++ = w316;
  *rr++ = w317;
  for (i=0, cs=w177; i<14; ++i) *rr++ = *cs++;
  *rr++ = w324;
  *rr++ = w325;
  for (i=0, cs=w180; i<14; ++i) *rr++ = *cs++;
  *rr++ = w326;
  *rr++ = w333;
  *rr++ = w334;
  for (i=0, cs=w183; i<14; ++i) *rr++ = *cs++;
  *rr++ = w342;
  *rr++ = w343;
  *rr++ = w344;
  for (i=0, cs=w186; i<14; ++i) *rr++ = *cs++;
  *rr++ = w351;
  *rr++ = w352;
  for (i=0, cs=w189; i<14; ++i) *rr++ = *cs++;
  *rr++ = w353;
  *rr++ = w360;
  *rr++ = w361;
  for (i=0, cs=w192; i<14; ++i) *rr++ = *cs++;
  *rr++ = w369;
  *rr++ = w370;
  *rr++ = w371;
  for (i=0, cs=w195; i<14; ++i) *rr++ = *cs++;
  *rr++ = w378;
  *rr++ = w379;
  for (i=0, cs=w198; i<14; ++i) *rr++ = *cs++;
  *rr++ = w380;
  *rr++ = w387;
  *rr++ = w388;
  for (i=0, cs=w201; i<14; ++i) *rr++ = *cs++;
  *rr++ = w396;
  *rr++ = w397;
  *rr++ = w398;
  for (i=0, cs=w204; i<14; ++i) *rr++ = *cs++;
  *rr++ = w405;
  *rr++ = w406;
  for (i=0, cs=w207; i<14; ++i) *rr++ = *cs++;
  *rr++ = w407;
  *rr++ = w414;
  *rr++ = w415;
  for (i=0, cs=w210; i<14; ++i) *rr++ = *cs++;
  *rr++ = w423;
  *rr++ = w424;
  *rr++ = w425;
  for (i=0, cs=w213; i<14; ++i) *rr++ = *cs++;
  *rr++ = w432;
  *rr++ = w433;
  for (i=0, cs=w216; i<14; ++i) *rr++ = *cs++;
  *rr++ = w434;
  *rr++ = w441;
  *rr++ = w442;
  for (i=0, cs=w219; i<14; ++i) *rr++ = *cs++;
  *rr++ = w450;
  *rr++ = w451;
  *rr++ = w452;
  for (i=0, cs=w222; i<14; ++i) *rr++ = *cs++;
  *rr++ = w459;
  *rr++ = w460;
  for (i=0, cs=w225; i<14; ++i) *rr++ = *cs++;
  *rr++ = w461;
  *rr++ = w468;
  *rr++ = w469;
  for (i=0, cs=w228; i<14; ++i) *rr++ = *cs++;
  *rr++ = w477;
  *rr++ = w478;
  *rr++ = w479;
  for (i=0, cs=w231; i<14; ++i) *rr++ = *cs++;
  *rr++ = w486;
  *rr++ = w487;
  for (i=0, cs=w1; i<7; ++i) *rr++ = *cs++;
  /* #2324: @496 = @495[0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420] */
  for (cii=casadi_s31, rr=w496, ss=w495; cii!=casadi_s31+316; ++cii) *rr++ = ss[*cii];
  /* #2325: (@240[0, 4, 8, 13, 21, 24, 27, 30, 40, 47, 56, 61, 65, 67, 77, 81, 84, 87, 94, 96, 103, 104, 112, 114, 118, 126, 131, 134, 137, 140, 150, 157, 165, 170, 175, 178, 180, 187, 191, 194, 197, 204, 207, 213, 215, 221, 226, 228, 232, 239, 241, 244, 247, 250, 260, 261, 267, 269, 277, 279, 284, 291, 293, 297, 301, 304, 307, 314, 318, 323, 326, 330, 335, 340, 343, 345, 351, 354, 357, 360, 372, 380, 386, 391, 393, 397, 404, 407, 411, 414, 417, 425, 426, 432, 434, 442, 444, 449, 456, 458, 461, 464, 467, 470, 479, 483, 488, 491, 495, 500, 505, 508, 510, 517, 521, 524, 527, 537, 545, 551, 556, 558, 562, 569, 571, 574, 577, 580, 590, 591, 597, 599, 607, 609, 614, 621, 623, 627, 631, 634, 637, 644, 648, 653, 656, 660, 665, 670, 673, 675, 681, 684, 687, 690, 702, 710, 716, 721, 723, 727, 734, 737, 741, 744, 747, 755, 756, 762, 764, 772, 774, 779, 786, 788, 791, 794, 797, 800, 809, 813, 818, 821, 825, 830, 835, 838, 840, 847, 851, 854, 857, 867, 875, 881, 886, 888, 892, 899, 901, 904, 907, 910, 920, 921, 927, 929, 937, 939, 944, 951, 953, 957, 961, 964, 967, 974, 978, 983, 986, 990, 995, 1000, 1003, 1005, 1011, 1014, 1017, 1020, 1032, 1040, 1046, 1051, 1053, 1057, 1064, 1067, 1071, 1074, 1077, 1085, 1086, 1092, 1094, 1102, 1104, 1109, 1116, 1118, 1121, 1124, 1127, 1130, 1139, 1143, 1148, 1151, 1155, 1160, 1165, 1168, 1170, 1177, 1181, 1184, 1187, 1197, 1205, 1211, 1216, 1218, 1222, 1229, 1231, 1234, 1237, 1240, 1250, 1251, 1257, 1259, 1267, 1269, 1274, 1281, 1283, 1287, 1291, 1294, 1297, 1304, 1308, 1313, 1316, 1320, 1325, 1330, 1333, 1335, 1339, 1341, 1344, 1347, 1350, 1354, 1356, 1358, 1360, 1362, 1370, 1375, 1376, 1377, 1381, 1382, 1383, 1384] = @496) */
  for (cii=casadi_s32, rr=w240, ss=w496; cii!=casadi_s32+316; ++cii, ++ss) rr[*cii] = *ss;
  /* #2326: @273 = @246[2:8] */
  for (rr=w273, ss=w246+2; ss!=w246+8; ss+=1) *rr++ = *ss;
  /* #2327: @162 = dense(@273) */
  casadi_densify(w273, casadi_s5, w162, 0);
  /* #2328: @162 = (@162-@237) */
  for (i=0, rr=w162, cs=w237; i<14; ++i) (*rr++) -= (*cs++);
  /* #2329: @0 = 0 */
  w0 = 0.;
  /* #2330: @6 = @246[0] */
  for (rr=(&w6), ss=w246+0; ss!=w246+1; ss+=1) *rr++ = *ss;
  /* #2331: @0 = mac(@165,@6,@0) */
  casadi_mtimes(w165, casadi_s10, (&w6), casadi_s9, (&w0), casadi_s8, w, 0);
  /* #2332: @6 = @246[1] */
  for (rr=(&w6), ss=w246+1; ss!=w246+2; ss+=1) *rr++ = *ss;
  /* #2333: @6 = (-@6) */
  w6 = (- w6 );
  /* #2334: @255 = @246[0] */
  for (rr=(&w255), ss=w246+0; ss!=w246+1; ss+=1) *rr++ = *ss;
  /* #2335: @244 = zeros(3x1,0nz) */
  /* #2336: @239 = @246[8:11] */
  for (rr=w239, ss=w246+8; ss!=w246+11; ss+=1) *rr++ = *ss;
  /* #2337: @237 = dense(@239) */
  casadi_densify(w239, casadi_s11, w237, 0);
  /* #2338: @237 = (@237-@276) */
  for (i=0, rr=w237, cs=w276; i<14; ++i) (*rr++) -= (*cs++);
  /* #2339: @262 = 00 */
  /* #2340: @257 = @246[3] */
  for (rr=(&w257), ss=w246+3; ss!=w246+4; ss+=1) *rr++ = *ss;
  /* #2341: @263 = zeros(3x1,0nz) */
  /* #2342: @264 = zeros(3x1,0nz) */
  /* #2343: @273 = @246[11:17] */
  for (rr=w273, ss=w246+11; ss!=w246+17; ss+=1) *rr++ = *ss;
  /* #2344: @276 = dense(@273) */
  casadi_densify(w273, casadi_s14, w276, 0);
  /* #2345: @276 = (@276-@289) */
  for (i=0, rr=w276, cs=w289; i<14; ++i) (*rr++) -= (*cs++);
  /* #2346: @260 = 0 */
  w260 = 0.;
  /* #2347: @285 = @246[9] */
  for (rr=(&w285), ss=w246+9; ss!=w246+10; ss+=1) *rr++ = *ss;
  /* #2348: @260 = mac(@170,@285,@260) */
  casadi_mtimes(w170, casadi_s10, (&w285), casadi_s17, (&w260), casadi_s8, w, 0);
  /* #2349: @285 = @246[10] */
  for (rr=(&w285), ss=w246+10; ss!=w246+11; ss+=1) *rr++ = *ss;
  /* #2350: @285 = (-@285) */
  w285 = (- w285 );
  /* #2351: @286 = @246[9] */
  for (rr=(&w286), ss=w246+9; ss!=w246+10; ss+=1) *rr++ = *ss;
  /* #2352: @265 = zeros(3x1,0nz) */
  /* #2353: @239 = @246[17:20] */
  for (rr=w239, ss=w246+17; ss!=w246+20; ss+=1) *rr++ = *ss;
  /* #2354: @289 = dense(@239) */
  casadi_densify(w239, casadi_s18, w289, 0);
  /* #2355: @289 = (@289-@296) */
  for (i=0, rr=w289, cs=w296; i<14; ++i) (*rr++) -= (*cs++);
  /* #2356: @287 = 0 */
  w287 = 0.;
  /* #2357: @288 = @246[12] */
  for (rr=(&w288), ss=w246+12; ss!=w246+13; ss+=1) *rr++ = *ss;
  /* #2358: @287 = mac(@173,@288,@287) */
  casadi_mtimes(w173, casadi_s10, (&w288), casadi_s9, (&w287), casadi_s8, w, 0);
  /* #2359: @288 = @246[11] */
  for (rr=(&w288), ss=w246+11; ss!=w246+12; ss+=1) *rr++ = *ss;
  /* #2360: @307 = @246[12] */
  for (rr=(&w307), ss=w246+12; ss!=w246+13; ss+=1) *rr++ = *ss;
  /* #2361: @277 = zeros(3x1,0nz) */
  /* #2362: @273 = @246[20:26] */
  for (rr=w273, ss=w246+20; ss!=w246+26; ss+=1) *rr++ = *ss;
  /* #2363: @296 = dense(@273) */
  casadi_densify(w273, casadi_s20, w296, 0);
  /* #2364: @296 = (@296-@309) */
  for (i=0, rr=w296, cs=w309; i<14; ++i) (*rr++) -= (*cs++);
  /* #2365: @308 = 0 */
  w308 = 0.;
  /* #2366: @315 = @246[18] */
  for (rr=(&w315), ss=w246+18; ss!=w246+19; ss+=1) *rr++ = *ss;
  /* #2367: @308 = mac(@176,@315,@308) */
  casadi_mtimes(w176, casadi_s10, (&w315), casadi_s22, (&w308), casadi_s8, w, 0);
  /* #2368: @315 = @246[19] */
  for (rr=(&w315), ss=w246+19; ss!=w246+20; ss+=1) *rr++ = *ss;
  /* #2369: @315 = (-@315) */
  w315 = (- w315 );
  /* #2370: @316 = @246[18] */
  for (rr=(&w316), ss=w246+18; ss!=w246+19; ss+=1) *rr++ = *ss;
  /* #2371: @278 = zeros(3x1,0nz) */
  /* #2372: @243 = @246[26:28] */
  for (rr=w243, ss=w246+26; ss!=w246+28; ss+=1) *rr++ = *ss;
  /* #2373: @309 = dense(@243) */
  casadi_densify(w243, casadi_s23, w309, 0);
  /* #2374: @309 = (@309-@318) */
  for (i=0, rr=w309, cs=w318; i<14; ++i) (*rr++) -= (*cs++);
  /* #2375: @317 = 0 */
  w317 = 0.;
  /* #2376: @324 = @246[21] */
  for (rr=(&w324), ss=w246+21; ss!=w246+22; ss+=1) *rr++ = *ss;
  /* #2377: @317 = mac(@179,@324,@317) */
  casadi_mtimes(w179, casadi_s10, (&w324), casadi_s17, (&w317), casadi_s8, w, 0);
  /* #2378: @279 = 00 */
  /* #2379: @324 = @246[21] */
  for (rr=(&w324), ss=w246+21; ss!=w246+22; ss+=1) *rr++ = *ss;
  /* #2380: @290 = zeros(3x1,0nz) */
  /* #2381: @1 = @246[28:35] */
  for (rr=w1, ss=w246+28; ss!=w246+35; ss+=1) *rr++ = *ss;
  /* #2382: @318 = dense(@1) */
  casadi_densify(w1, casadi_s25, w318, 0);
  /* #2383: @318 = (@318-@327) */
  for (i=0, rr=w318, cs=w327; i<14; ++i) (*rr++) -= (*cs++);
  /* #2384: @325 = 0 */
  w325 = 0.;
  /* #2385: @326 = @246[27] */
  for (rr=(&w326), ss=w246+27; ss!=w246+28; ss+=1) *rr++ = *ss;
  /* #2386: @325 = mac(@182,@326,@325) */
  casadi_mtimes(w182, casadi_s10, (&w326), casadi_s9, (&w325), casadi_s8, w, 0);
  /* #2387: @326 = @246[26] */
  for (rr=(&w326), ss=w246+26; ss!=w246+27; ss+=1) *rr++ = *ss;
  /* #2388: @333 = @246[27] */
  for (rr=(&w333), ss=w246+27; ss!=w246+28; ss+=1) *rr++ = *ss;
  /* #2389: @298 = zeros(3x1,0nz) */
  /* #2390: @243 = @246[35:37] */
  for (rr=w243, ss=w246+35; ss!=w246+37; ss+=1) *rr++ = *ss;
  /* #2391: @327 = dense(@243) */
  casadi_densify(w243, casadi_s27, w327, 0);
  /* #2392: @327 = (@327-@335) */
  for (i=0, rr=w327, cs=w335; i<14; ++i) (*rr++) -= (*cs++);
  /* #2393: @334 = 0 */
  w334 = 0.;
  /* #2394: @342 = @246[29] */
  for (rr=(&w342), ss=w246+29; ss!=w246+30; ss+=1) *rr++ = *ss;
  /* #2395: @334 = mac(@185,@342,@334) */
  casadi_mtimes(w185, casadi_s10, (&w342), casadi_s22, (&w334), casadi_s8, w, 0);
  /* #2396: @342 = @246[34] */
  for (rr=(&w342), ss=w246+34; ss!=w246+35; ss+=1) *rr++ = *ss;
  /* #2397: @342 = (-@342) */
  w342 = (- w342 );
  /* #2398: @343 = @246[29] */
  for (rr=(&w343), ss=w246+29; ss!=w246+30; ss+=1) *rr++ = *ss;
  /* #2399: @299 = zeros(3x1,0nz) */
  /* #2400: @273 = @246[37:43] */
  for (rr=w273, ss=w246+37; ss!=w246+43; ss+=1) *rr++ = *ss;
  /* #2401: @335 = dense(@273) */
  casadi_densify(w273, casadi_s14, w335, 0);
  /* #2402: @335 = (@335-@345) */
  for (i=0, rr=w335, cs=w345; i<14; ++i) (*rr++) -= (*cs++);
  /* #2403: @344 = 0 */
  w344 = 0.;
  /* #2404: @351 = @246[36] */
  for (rr=(&w351), ss=w246+36; ss!=w246+37; ss+=1) *rr++ = *ss;
  /* #2405: @344 = mac(@188,@351,@344) */
  casadi_mtimes(w188, casadi_s10, (&w351), casadi_s17, (&w344), casadi_s8, w, 0);
  /* #2406: @300 = 00 */
  /* #2407: @351 = @246[36] */
  for (rr=(&w351), ss=w246+36; ss!=w246+37; ss+=1) *rr++ = *ss;
  /* #2408: @310 = zeros(3x1,0nz) */
  /* #2409: @239 = @246[43:46] */
  for (rr=w239, ss=w246+43; ss!=w246+46; ss+=1) *rr++ = *ss;
  /* #2410: @345 = dense(@239) */
  casadi_densify(w239, casadi_s18, w345, 0);
  /* #2411: @345 = (@345-@354) */
  for (i=0, rr=w345, cs=w354; i<14; ++i) (*rr++) -= (*cs++);
  /* #2412: @352 = 0 */
  w352 = 0.;
  /* #2413: @353 = @246[38] */
  for (rr=(&w353), ss=w246+38; ss!=w246+39; ss+=1) *rr++ = *ss;
  /* #2414: @352 = mac(@191,@353,@352) */
  casadi_mtimes(w191, casadi_s10, (&w353), casadi_s9, (&w352), casadi_s8, w, 0);
  /* #2415: @353 = @246[37] */
  for (rr=(&w353), ss=w246+37; ss!=w246+38; ss+=1) *rr++ = *ss;
  /* #2416: @360 = @246[38] */
  for (rr=(&w360), ss=w246+38; ss!=w246+39; ss+=1) *rr++ = *ss;
  /* #2417: @319 = zeros(3x1,0nz) */
  /* #2418: @273 = @246[46:52] */
  for (rr=w273, ss=w246+46; ss!=w246+52; ss+=1) *rr++ = *ss;
  /* #2419: @354 = dense(@273) */
  casadi_densify(w273, casadi_s20, w354, 0);
  /* #2420: @354 = (@354-@362) */
  for (i=0, rr=w354, cs=w362; i<14; ++i) (*rr++) -= (*cs++);
  /* #2421: @361 = 0 */
  w361 = 0.;
  /* #2422: @369 = @246[44] */
  for (rr=(&w369), ss=w246+44; ss!=w246+45; ss+=1) *rr++ = *ss;
  /* #2423: @361 = mac(@194,@369,@361) */
  casadi_mtimes(w194, casadi_s10, (&w369), casadi_s22, (&w361), casadi_s8, w, 0);
  /* #2424: @369 = @246[45] */
  for (rr=(&w369), ss=w246+45; ss!=w246+46; ss+=1) *rr++ = *ss;
  /* #2425: @369 = (-@369) */
  w369 = (- w369 );
  /* #2426: @370 = @246[44] */
  for (rr=(&w370), ss=w246+44; ss!=w246+45; ss+=1) *rr++ = *ss;
  /* #2427: @328 = zeros(3x1,0nz) */
  /* #2428: @243 = @246[52:54] */
  for (rr=w243, ss=w246+52; ss!=w246+54; ss+=1) *rr++ = *ss;
  /* #2429: @362 = dense(@243) */
  casadi_densify(w243, casadi_s23, w362, 0);
  /* #2430: @362 = (@362-@372) */
  for (i=0, rr=w362, cs=w372; i<14; ++i) (*rr++) -= (*cs++);
  /* #2431: @371 = 0 */
  w371 = 0.;
  /* #2432: @378 = @246[47] */
  for (rr=(&w378), ss=w246+47; ss!=w246+48; ss+=1) *rr++ = *ss;
  /* #2433: @371 = mac(@197,@378,@371) */
  casadi_mtimes(w197, casadi_s10, (&w378), casadi_s17, (&w371), casadi_s8, w, 0);
  /* #2434: @336 = 00 */
  /* #2435: @378 = @246[47] */
  for (rr=(&w378), ss=w246+47; ss!=w246+48; ss+=1) *rr++ = *ss;
  /* #2436: @337 = zeros(3x1,0nz) */
  /* #2437: @1 = @246[54:61] */
  for (rr=w1, ss=w246+54; ss!=w246+61; ss+=1) *rr++ = *ss;
  /* #2438: @372 = dense(@1) */
  casadi_densify(w1, casadi_s25, w372, 0);
  /* #2439: @372 = (@372-@381) */
  for (i=0, rr=w372, cs=w381; i<14; ++i) (*rr++) -= (*cs++);
  /* #2440: @379 = 0 */
  w379 = 0.;
  /* #2441: @380 = @246[53] */
  for (rr=(&w380), ss=w246+53; ss!=w246+54; ss+=1) *rr++ = *ss;
  /* #2442: @379 = mac(@200,@380,@379) */
  casadi_mtimes(w200, casadi_s10, (&w380), casadi_s9, (&w379), casadi_s8, w, 0);
  /* #2443: @380 = @246[52] */
  for (rr=(&w380), ss=w246+52; ss!=w246+53; ss+=1) *rr++ = *ss;
  /* #2444: @387 = @246[53] */
  for (rr=(&w387), ss=w246+53; ss!=w246+54; ss+=1) *rr++ = *ss;
  /* #2445: @346 = zeros(3x1,0nz) */
  /* #2446: @243 = @246[61:63] */
  for (rr=w243, ss=w246+61; ss!=w246+63; ss+=1) *rr++ = *ss;
  /* #2447: @381 = dense(@243) */
  casadi_densify(w243, casadi_s27, w381, 0);
  /* #2448: @381 = (@381-@389) */
  for (i=0, rr=w381, cs=w389; i<14; ++i) (*rr++) -= (*cs++);
  /* #2449: @388 = 0 */
  w388 = 0.;
  /* #2450: @396 = @246[55] */
  for (rr=(&w396), ss=w246+55; ss!=w246+56; ss+=1) *rr++ = *ss;
  /* #2451: @388 = mac(@203,@396,@388) */
  casadi_mtimes(w203, casadi_s10, (&w396), casadi_s22, (&w388), casadi_s8, w, 0);
  /* #2452: @396 = @246[60] */
  for (rr=(&w396), ss=w246+60; ss!=w246+61; ss+=1) *rr++ = *ss;
  /* #2453: @396 = (-@396) */
  w396 = (- w396 );
  /* #2454: @397 = @246[55] */
  for (rr=(&w397), ss=w246+55; ss!=w246+56; ss+=1) *rr++ = *ss;
  /* #2455: @355 = zeros(3x1,0nz) */
  /* #2456: @273 = @246[63:69] */
  for (rr=w273, ss=w246+63; ss!=w246+69; ss+=1) *rr++ = *ss;
  /* #2457: @389 = dense(@273) */
  casadi_densify(w273, casadi_s14, w389, 0);
  /* #2458: @389 = (@389-@399) */
  for (i=0, rr=w389, cs=w399; i<14; ++i) (*rr++) -= (*cs++);
  /* #2459: @398 = 0 */
  w398 = 0.;
  /* #2460: @405 = @246[62] */
  for (rr=(&w405), ss=w246+62; ss!=w246+63; ss+=1) *rr++ = *ss;
  /* #2461: @398 = mac(@206,@405,@398) */
  casadi_mtimes(w206, casadi_s10, (&w405), casadi_s17, (&w398), casadi_s8, w, 0);
  /* #2462: @363 = 00 */
  /* #2463: @405 = @246[62] */
  for (rr=(&w405), ss=w246+62; ss!=w246+63; ss+=1) *rr++ = *ss;
  /* #2464: @364 = zeros(3x1,0nz) */
  /* #2465: @239 = @246[69:72] */
  for (rr=w239, ss=w246+69; ss!=w246+72; ss+=1) *rr++ = *ss;
  /* #2466: @399 = dense(@239) */
  casadi_densify(w239, casadi_s18, w399, 0);
  /* #2467: @399 = (@399-@408) */
  for (i=0, rr=w399, cs=w408; i<14; ++i) (*rr++) -= (*cs++);
  /* #2468: @406 = 0 */
  w406 = 0.;
  /* #2469: @407 = @246[64] */
  for (rr=(&w407), ss=w246+64; ss!=w246+65; ss+=1) *rr++ = *ss;
  /* #2470: @406 = mac(@209,@407,@406) */
  casadi_mtimes(w209, casadi_s10, (&w407), casadi_s9, (&w406), casadi_s8, w, 0);
  /* #2471: @407 = @246[63] */
  for (rr=(&w407), ss=w246+63; ss!=w246+64; ss+=1) *rr++ = *ss;
  /* #2472: @414 = @246[64] */
  for (rr=(&w414), ss=w246+64; ss!=w246+65; ss+=1) *rr++ = *ss;
  /* #2473: @373 = zeros(3x1,0nz) */
  /* #2474: @273 = @246[72:78] */
  for (rr=w273, ss=w246+72; ss!=w246+78; ss+=1) *rr++ = *ss;
  /* #2475: @408 = dense(@273) */
  casadi_densify(w273, casadi_s20, w408, 0);
  /* #2476: @408 = (@408-@416) */
  for (i=0, rr=w408, cs=w416; i<14; ++i) (*rr++) -= (*cs++);
  /* #2477: @415 = 0 */
  w415 = 0.;
  /* #2478: @423 = @246[70] */
  for (rr=(&w423), ss=w246+70; ss!=w246+71; ss+=1) *rr++ = *ss;
  /* #2479: @415 = mac(@212,@423,@415) */
  casadi_mtimes(w212, casadi_s10, (&w423), casadi_s22, (&w415), casadi_s8, w, 0);
  /* #2480: @423 = @246[71] */
  for (rr=(&w423), ss=w246+71; ss!=w246+72; ss+=1) *rr++ = *ss;
  /* #2481: @423 = (-@423) */
  w423 = (- w423 );
  /* #2482: @424 = @246[70] */
  for (rr=(&w424), ss=w246+70; ss!=w246+71; ss+=1) *rr++ = *ss;
  /* #2483: @382 = zeros(3x1,0nz) */
  /* #2484: @243 = @246[78:80] */
  for (rr=w243, ss=w246+78; ss!=w246+80; ss+=1) *rr++ = *ss;
  /* #2485: @416 = dense(@243) */
  casadi_densify(w243, casadi_s23, w416, 0);
  /* #2486: @416 = (@416-@426) */
  for (i=0, rr=w416, cs=w426; i<14; ++i) (*rr++) -= (*cs++);
  /* #2487: @425 = 0 */
  w425 = 0.;
  /* #2488: @432 = @246[73] */
  for (rr=(&w432), ss=w246+73; ss!=w246+74; ss+=1) *rr++ = *ss;
  /* #2489: @425 = mac(@215,@432,@425) */
  casadi_mtimes(w215, casadi_s10, (&w432), casadi_s17, (&w425), casadi_s8, w, 0);
  /* #2490: @390 = 00 */
  /* #2491: @432 = @246[73] */
  for (rr=(&w432), ss=w246+73; ss!=w246+74; ss+=1) *rr++ = *ss;
  /* #2492: @391 = zeros(3x1,0nz) */
  /* #2493: @1 = @246[80:87] */
  for (rr=w1, ss=w246+80; ss!=w246+87; ss+=1) *rr++ = *ss;
  /* #2494: @426 = dense(@1) */
  casadi_densify(w1, casadi_s25, w426, 0);
  /* #2495: @426 = (@426-@435) */
  for (i=0, rr=w426, cs=w435; i<14; ++i) (*rr++) -= (*cs++);
  /* #2496: @433 = 0 */
  w433 = 0.;
  /* #2497: @434 = @246[79] */
  for (rr=(&w434), ss=w246+79; ss!=w246+80; ss+=1) *rr++ = *ss;
  /* #2498: @433 = mac(@218,@434,@433) */
  casadi_mtimes(w218, casadi_s10, (&w434), casadi_s9, (&w433), casadi_s8, w, 0);
  /* #2499: @434 = @246[78] */
  for (rr=(&w434), ss=w246+78; ss!=w246+79; ss+=1) *rr++ = *ss;
  /* #2500: @441 = @246[79] */
  for (rr=(&w441), ss=w246+79; ss!=w246+80; ss+=1) *rr++ = *ss;
  /* #2501: @400 = zeros(3x1,0nz) */
  /* #2502: @243 = @246[87:89] */
  for (rr=w243, ss=w246+87; ss!=w246+89; ss+=1) *rr++ = *ss;
  /* #2503: @435 = dense(@243) */
  casadi_densify(w243, casadi_s27, w435, 0);
  /* #2504: @435 = (@435-@443) */
  for (i=0, rr=w435, cs=w443; i<14; ++i) (*rr++) -= (*cs++);
  /* #2505: @442 = 0 */
  w442 = 0.;
  /* #2506: @450 = @246[81] */
  for (rr=(&w450), ss=w246+81; ss!=w246+82; ss+=1) *rr++ = *ss;
  /* #2507: @442 = mac(@221,@450,@442) */
  casadi_mtimes(w221, casadi_s10, (&w450), casadi_s22, (&w442), casadi_s8, w, 0);
  /* #2508: @450 = @246[86] */
  for (rr=(&w450), ss=w246+86; ss!=w246+87; ss+=1) *rr++ = *ss;
  /* #2509: @450 = (-@450) */
  w450 = (- w450 );
  /* #2510: @451 = @246[81] */
  for (rr=(&w451), ss=w246+81; ss!=w246+82; ss+=1) *rr++ = *ss;
  /* #2511: @409 = zeros(3x1,0nz) */
  /* #2512: @273 = @246[89:95] */
  for (rr=w273, ss=w246+89; ss!=w246+95; ss+=1) *rr++ = *ss;
  /* #2513: @443 = dense(@273) */
  casadi_densify(w273, casadi_s14, w443, 0);
  /* #2514: @443 = (@443-@453) */
  for (i=0, rr=w443, cs=w453; i<14; ++i) (*rr++) -= (*cs++);
  /* #2515: @452 = 0 */
  w452 = 0.;
  /* #2516: @459 = @246[88] */
  for (rr=(&w459), ss=w246+88; ss!=w246+89; ss+=1) *rr++ = *ss;
  /* #2517: @452 = mac(@224,@459,@452) */
  casadi_mtimes(w224, casadi_s10, (&w459), casadi_s17, (&w452), casadi_s8, w, 0);
  /* #2518: @417 = 00 */
  /* #2519: @459 = @246[88] */
  for (rr=(&w459), ss=w246+88; ss!=w246+89; ss+=1) *rr++ = *ss;
  /* #2520: @418 = zeros(3x1,0nz) */
  /* #2521: @239 = @246[95:98] */
  for (rr=w239, ss=w246+95; ss!=w246+98; ss+=1) *rr++ = *ss;
  /* #2522: @453 = dense(@239) */
  casadi_densify(w239, casadi_s18, w453, 0);
  /* #2523: @453 = (@453-@462) */
  for (i=0, rr=w453, cs=w462; i<14; ++i) (*rr++) -= (*cs++);
  /* #2524: @460 = 0 */
  w460 = 0.;
  /* #2525: @461 = @246[90] */
  for (rr=(&w461), ss=w246+90; ss!=w246+91; ss+=1) *rr++ = *ss;
  /* #2526: @460 = mac(@227,@461,@460) */
  casadi_mtimes(w227, casadi_s10, (&w461), casadi_s9, (&w460), casadi_s8, w, 0);
  /* #2527: @461 = @246[89] */
  for (rr=(&w461), ss=w246+89; ss!=w246+90; ss+=1) *rr++ = *ss;
  /* #2528: @468 = @246[90] */
  for (rr=(&w468), ss=w246+90; ss!=w246+91; ss+=1) *rr++ = *ss;
  /* #2529: @427 = zeros(3x1,0nz) */
  /* #2530: @273 = @246[98:104] */
  for (rr=w273, ss=w246+98; ss!=w246+104; ss+=1) *rr++ = *ss;
  /* #2531: @462 = dense(@273) */
  casadi_densify(w273, casadi_s20, w462, 0);
  /* #2532: @462 = (@462-@470) */
  for (i=0, rr=w462, cs=w470; i<14; ++i) (*rr++) -= (*cs++);
  /* #2533: @469 = 0 */
  w469 = 0.;
  /* #2534: @477 = @246[96] */
  for (rr=(&w477), ss=w246+96; ss!=w246+97; ss+=1) *rr++ = *ss;
  /* #2535: @469 = mac(@230,@477,@469) */
  casadi_mtimes(w230, casadi_s10, (&w477), casadi_s22, (&w469), casadi_s8, w, 0);
  /* #2536: @477 = @246[97] */
  for (rr=(&w477), ss=w246+97; ss!=w246+98; ss+=1) *rr++ = *ss;
  /* #2537: @477 = (-@477) */
  w477 = (- w477 );
  /* #2538: @478 = @246[96] */
  for (rr=(&w478), ss=w246+96; ss!=w246+97; ss+=1) *rr++ = *ss;
  /* #2539: @436 = zeros(3x1,0nz) */
  /* #2540: @243 = @246[104:106] */
  for (rr=w243, ss=w246+104; ss!=w246+106; ss+=1) *rr++ = *ss;
  /* #2541: @470 = dense(@243) */
  casadi_densify(w243, casadi_s23, w470, 0);
  /* #2542: @470 = (@470-@480) */
  for (i=0, rr=w470, cs=w480; i<14; ++i) (*rr++) -= (*cs++);
  /* #2543: @479 = 0 */
  w479 = 0.;
  /* #2544: @486 = @246[99] */
  for (rr=(&w486), ss=w246+99; ss!=w246+100; ss+=1) *rr++ = *ss;
  /* #2545: @479 = mac(@233,@486,@479) */
  casadi_mtimes(w233, casadi_s10, (&w486), casadi_s17, (&w479), casadi_s8, w, 0);
  /* #2546: @444 = 00 */
  /* #2547: @486 = @246[99] */
  for (rr=(&w486), ss=w246+99; ss!=w246+100; ss+=1) *rr++ = *ss;
  /* #2548: @445 = zeros(3x1,0nz) */
  /* #2549: @273 = @246[106:112] */
  for (rr=w273, ss=w246+106; ss!=w246+112; ss+=1) *rr++ = *ss;
  /* #2550: @480 = dense(@273) */
  casadi_densify(w273, casadi_s33, w480, 0);
  /* #2551: @480 = (@480-@489) */
  for (i=0, rr=w480, cs=w489; i<14; ++i) (*rr++) -= (*cs++);
  /* #2552: @487 = 0 */
  w487 = 0.;
  /* #2553: @488 = @246[105] */
  for (rr=(&w488), ss=w246+105; ss!=w246+106; ss+=1) *rr++ = *ss;
  /* #2554: @487 = mac(@236,@488,@487) */
  casadi_mtimes(w236, casadi_s10, (&w488), casadi_s9, (&w487), casadi_s8, w, 0);
  /* #2555: @488 = @246[104] */
  for (rr=(&w488), ss=w246+104; ss!=w246+105; ss+=1) *rr++ = *ss;
  /* #2556: @497 = @246[105] */
  for (rr=(&w497), ss=w246+105; ss!=w246+106; ss+=1) *rr++ = *ss;
  /* #2557: @454 = zeros(3x1,0nz) */
  /* #2558: @243 = @246[:2] */
  for (rr=w243, ss=w246+0; ss!=w246+2; ss+=1) *rr++ = *ss;
  /* #2559: @498 = vertcat(@162, @0, @6, @255, @244, @237, @262, @257, @263, @264, @276, @260, @285, @286, @265, @289, @287, @288, @307, @277, @296, @308, @315, @316, @278, @309, @317, @279, @324, @290, @318, @325, @326, @333, @298, @327, @334, @342, @343, @299, @335, @344, @300, @351, @310, @345, @352, @353, @360, @319, @354, @361, @369, @370, @328, @362, @371, @336, @378, @337, @372, @379, @380, @387, @346, @381, @388, @396, @397, @355, @389, @398, @363, @405, @364, @399, @406, @407, @414, @373, @408, @415, @423, @424, @382, @416, @425, @390, @432, @391, @426, @433, @434, @441, @400, @435, @442, @450, @451, @409, @443, @452, @417, @459, @418, @453, @460, @461, @468, @427, @462, @469, @477, @478, @436, @470, @479, @444, @486, @445, @480, @487, @488, @497, @454, @243) */
  rr=w498;
  for (i=0, cs=w162; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  *rr++ = w6;
  *rr++ = w255;
  for (i=0, cs=w237; i<14; ++i) *rr++ = *cs++;
  *rr++ = w257;
  for (i=0, cs=w276; i<14; ++i) *rr++ = *cs++;
  *rr++ = w260;
  *rr++ = w285;
  *rr++ = w286;
  for (i=0, cs=w289; i<14; ++i) *rr++ = *cs++;
  *rr++ = w287;
  *rr++ = w288;
  *rr++ = w307;
  for (i=0, cs=w296; i<14; ++i) *rr++ = *cs++;
  *rr++ = w308;
  *rr++ = w315;
  *rr++ = w316;
  for (i=0, cs=w309; i<14; ++i) *rr++ = *cs++;
  *rr++ = w317;
  *rr++ = w324;
  for (i=0, cs=w318; i<14; ++i) *rr++ = *cs++;
  *rr++ = w325;
  *rr++ = w326;
  *rr++ = w333;
  for (i=0, cs=w327; i<14; ++i) *rr++ = *cs++;
  *rr++ = w334;
  *rr++ = w342;
  *rr++ = w343;
  for (i=0, cs=w335; i<14; ++i) *rr++ = *cs++;
  *rr++ = w344;
  *rr++ = w351;
  for (i=0, cs=w345; i<14; ++i) *rr++ = *cs++;
  *rr++ = w352;
  *rr++ = w353;
  *rr++ = w360;
  for (i=0, cs=w354; i<14; ++i) *rr++ = *cs++;
  *rr++ = w361;
  *rr++ = w369;
  *rr++ = w370;
  for (i=0, cs=w362; i<14; ++i) *rr++ = *cs++;
  *rr++ = w371;
  *rr++ = w378;
  for (i=0, cs=w372; i<14; ++i) *rr++ = *cs++;
  *rr++ = w379;
  *rr++ = w380;
  *rr++ = w387;
  for (i=0, cs=w381; i<14; ++i) *rr++ = *cs++;
  *rr++ = w388;
  *rr++ = w396;
  *rr++ = w397;
  for (i=0, cs=w389; i<14; ++i) *rr++ = *cs++;
  *rr++ = w398;
  *rr++ = w405;
  for (i=0, cs=w399; i<14; ++i) *rr++ = *cs++;
  *rr++ = w406;
  *rr++ = w407;
  *rr++ = w414;
  for (i=0, cs=w408; i<14; ++i) *rr++ = *cs++;
  *rr++ = w415;
  *rr++ = w423;
  *rr++ = w424;
  for (i=0, cs=w416; i<14; ++i) *rr++ = *cs++;
  *rr++ = w425;
  *rr++ = w432;
  for (i=0, cs=w426; i<14; ++i) *rr++ = *cs++;
  *rr++ = w433;
  *rr++ = w434;
  *rr++ = w441;
  for (i=0, cs=w435; i<14; ++i) *rr++ = *cs++;
  *rr++ = w442;
  *rr++ = w450;
  *rr++ = w451;
  for (i=0, cs=w443; i<14; ++i) *rr++ = *cs++;
  *rr++ = w452;
  *rr++ = w459;
  for (i=0, cs=w453; i<14; ++i) *rr++ = *cs++;
  *rr++ = w460;
  *rr++ = w461;
  *rr++ = w468;
  for (i=0, cs=w462; i<14; ++i) *rr++ = *cs++;
  *rr++ = w469;
  *rr++ = w477;
  *rr++ = w478;
  for (i=0, cs=w470; i<14; ++i) *rr++ = *cs++;
  *rr++ = w479;
  *rr++ = w486;
  for (i=0, cs=w480; i<14; ++i) *rr++ = *cs++;
  *rr++ = w487;
  *rr++ = w488;
  *rr++ = w497;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  /* #2560: @499 = @498[0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 413, 414, 415, 416, 417] */
  for (cii=casadi_s34, rr=w499, ss=w498; cii!=casadi_s34+308; ++cii) *rr++ = ss[*cii];
  /* #2561: (@240[1, 6, 10, 12, 22, 26, 29, 32, 39, 41, 48, 49, 57, 59, 63, 71, 76, 79, 82, 85, 95, 102, 110, 115, 120, 123, 125, 132, 136, 139, 142, 149, 152, 158, 160, 166, 171, 173, 177, 184, 186, 189, 192, 195, 205, 206, 212, 214, 222, 224, 229, 236, 238, 242, 246, 249, 252, 259, 263, 268, 271, 275, 280, 285, 288, 290, 296, 299, 302, 305, 317, 325, 331, 336, 338, 342, 349, 352, 356, 359, 362, 370, 371, 377, 379, 387, 389, 394, 401, 403, 406, 409, 412, 415, 424, 428, 433, 436, 440, 445, 450, 453, 455, 462, 466, 469, 472, 482, 490, 496, 501, 503, 507, 514, 516, 519, 522, 525, 535, 536, 542, 544, 552, 554, 559, 566, 568, 572, 576, 579, 582, 589, 593, 598, 601, 605, 610, 615, 618, 620, 626, 629, 632, 635, 647, 655, 661, 666, 668, 672, 679, 682, 686, 689, 692, 700, 701, 707, 709, 717, 719, 724, 731, 733, 736, 739, 742, 745, 754, 758, 763, 766, 770, 775, 780, 783, 785, 792, 796, 799, 802, 812, 820, 826, 831, 833, 837, 844, 846, 849, 852, 855, 865, 866, 872, 874, 882, 884, 889, 896, 898, 902, 906, 909, 912, 919, 923, 928, 931, 935, 940, 945, 948, 950, 956, 959, 962, 965, 977, 985, 991, 996, 998, 1002, 1009, 1012, 1016, 1019, 1022, 1030, 1031, 1037, 1039, 1047, 1049, 1054, 1061, 1063, 1066, 1069, 1072, 1075, 1084, 1088, 1093, 1096, 1100, 1105, 1110, 1113, 1115, 1122, 1126, 1129, 1132, 1142, 1150, 1156, 1161, 1163, 1167, 1174, 1176, 1179, 1182, 1185, 1195, 1196, 1202, 1204, 1212, 1214, 1219, 1226, 1228, 1232, 1236, 1239, 1242, 1249, 1253, 1258, 1261, 1265, 1270, 1275, 1278, 1280, 1286, 1289, 1292, 1295, 1307, 1315, 1321, 1326, 1328, 1332, 1336, 1342, 1346, 1349, 1352, 1361, 1367, 1369, 1378, 1388] = @499) */
  for (cii=casadi_s35, rr=w240, ss=w499; cii!=casadi_s35+308; ++cii, ++ss) rr[*cii] = *ss;
  /* #2562: @243 = @248[1:3] */
  for (rr=w243, ss=w248+1; ss!=w248+3; ss+=1) *rr++ = *ss;
  /* #2563: @162 = dense(@243) */
  casadi_densify(w243, casadi_s36, w162, 0);
  /* #2564: @162 = (@162-@268) */
  for (i=0, rr=w162, cs=w268; i<14; ++i) (*rr++) -= (*cs++);
  /* #2565: @0 = 0 */
  w0 = 0.;
  /* #2566: @6 = @248[0] */
  for (rr=(&w6), ss=w248+0; ss!=w248+1; ss+=1) *rr++ = *ss;
  /* #2567: @0 = mac(@165,@6,@0) */
  casadi_mtimes(w165, casadi_s10, (&w6), casadi_s17, (&w0), casadi_s8, w, 0);
  /* #2568: @244 = 00 */
  /* #2569: @6 = @248[0] */
  for (rr=(&w6), ss=w248+0; ss!=w248+1; ss+=1) *rr++ = *ss;
  /* #2570: @262 = zeros(3x1,0nz) */
  /* #2571: @255 = @248[3] */
  for (rr=(&w255), ss=w248+3; ss!=w248+4; ss+=1) *rr++ = *ss;
  /* #2572: @268 = dense(@255) */
  casadi_densify((&w255), casadi_s37, w268, 0);
  /* #2573: @268 = (@268-@280) */
  for (i=0, rr=w268, cs=w280; i<14; ++i) (*rr++) -= (*cs++);
  /* #2574: @255 = 0 */
  w255 = 0.;
  /* #2575: @257 = @248[2] */
  for (rr=(&w257), ss=w248+2; ss!=w248+3; ss+=1) *rr++ = *ss;
  /* #2576: @255 = mac(@167,@257,@255) */
  casadi_mtimes(w167, casadi_s10, (&w257), casadi_s22, (&w255), casadi_s8, w, 0);
  /* #2577: @263 = 00 */
  /* #2578: @257 = @248[2] */
  for (rr=(&w257), ss=w248+2; ss!=w248+3; ss+=1) *rr++ = *ss;
  /* #2579: @260 = @249[1] */
  for (rr=(&w260), ss=w249+1; ss!=w249+2; ss+=1) *rr++ = *ss;
  /* #2580: @243 = @248[4:6] */
  for (rr=w243, ss=w248+4; ss!=w248+6; ss+=1) *rr++ = *ss;
  /* #2581: @280 = dense(@243) */
  casadi_densify(w243, casadi_s38, w280, 0);
  /* #2582: @280 = (@280-@291) */
  for (i=0, rr=w280, cs=w291; i<14; ++i) (*rr++) -= (*cs++);
  /* #2583: @285 = 0 */
  w285 = 0.;
  /* #2584: @286 = @248[3] */
  for (rr=(&w286), ss=w248+3; ss!=w248+4; ss+=1) *rr++ = *ss;
  /* #2585: @285 = mac(@170,@286,@285) */
  casadi_mtimes(w170, casadi_s10, (&w286), casadi_s9, (&w285), casadi_s8, w, 0);
  /* #2586: @264 = 00 */
  /* #2587: @286 = @248[3] */
  for (rr=(&w286), ss=w248+3; ss!=w248+4; ss+=1) *rr++ = *ss;
  /* #2588: @265 = zeros(3x1,0nz) */
  /* #2589: @243 = @248[6:8] */
  for (rr=w243, ss=w248+6; ss!=w248+8; ss+=1) *rr++ = *ss;
  /* #2590: @291 = dense(@243) */
  casadi_densify(w243, casadi_s27, w291, 0);
  /* #2591: @291 = (@291-@303) */
  for (i=0, rr=w291, cs=w303; i<14; ++i) (*rr++) -= (*cs++);
  /* #2592: @287 = 0 */
  w287 = 0.;
  /* #2593: @288 = @248[5] */
  for (rr=(&w288), ss=w248+5; ss!=w248+6; ss+=1) *rr++ = *ss;
  /* #2594: @287 = mac(@173,@288,@287) */
  casadi_mtimes(w173, casadi_s10, (&w288), casadi_s22, (&w287), casadi_s8, w, 0);
  /* #2595: @277 = 00 */
  /* #2596: @288 = @248[5] */
  for (rr=(&w288), ss=w248+5; ss!=w248+6; ss+=1) *rr++ = *ss;
  /* #2597: @278 = zeros(3x1,0nz) */
  /* #2598: @243 = @248[8:10] */
  for (rr=w243, ss=w248+8; ss!=w248+10; ss+=1) *rr++ = *ss;
  /* #2599: @303 = dense(@243) */
  casadi_densify(w243, casadi_s23, w303, 0);
  /* #2600: @303 = (@303-@311) */
  for (i=0, rr=w303, cs=w311; i<14; ++i) (*rr++) -= (*cs++);
  /* #2601: @307 = 0 */
  w307 = 0.;
  /* #2602: @308 = @248[7] */
  for (rr=(&w308), ss=w248+7; ss!=w248+8; ss+=1) *rr++ = *ss;
  /* #2603: @307 = mac(@176,@308,@307) */
  casadi_mtimes(w176, casadi_s10, (&w308), casadi_s17, (&w307), casadi_s8, w, 0);
  /* #2604: @279 = 00 */
  /* #2605: @308 = @248[7] */
  for (rr=(&w308), ss=w248+7; ss!=w248+8; ss+=1) *rr++ = *ss;
  /* #2606: @290 = zeros(3x1,0nz) */
  /* #2607: @176 = @248[10:13] */
  for (rr=w176, ss=w248+10; ss!=w248+13; ss+=1) *rr++ = *ss;
  /* #2608: @311 = dense(@176) */
  casadi_densify(w176, casadi_s18, w311, 0);
  /* #2609: @311 = (@311-@320) */
  for (i=0, rr=w311, cs=w320; i<14; ++i) (*rr++) -= (*cs++);
  /* #2610: @315 = 0 */
  w315 = 0.;
  /* #2611: @316 = @248[9] */
  for (rr=(&w316), ss=w248+9; ss!=w248+10; ss+=1) *rr++ = *ss;
  /* #2612: @315 = mac(@179,@316,@315) */
  casadi_mtimes(w179, casadi_s10, (&w316), casadi_s9, (&w315), casadi_s8, w, 0);
  /* #2613: @316 = @248[8] */
  for (rr=(&w316), ss=w248+8; ss!=w248+9; ss+=1) *rr++ = *ss;
  /* #2614: @317 = @248[9] */
  for (rr=(&w317), ss=w248+9; ss!=w248+10; ss+=1) *rr++ = *ss;
  /* #2615: @298 = zeros(3x1,0nz) */
  /* #2616: @243 = @248[13:15] */
  for (rr=w243, ss=w248+13; ss!=w248+15; ss+=1) *rr++ = *ss;
  /* #2617: @320 = dense(@243) */
  casadi_densify(w243, casadi_s27, w320, 0);
  /* #2618: @320 = (@320-@329) */
  for (i=0, rr=w320, cs=w329; i<14; ++i) (*rr++) -= (*cs++);
  /* #2619: @324 = 0 */
  w324 = 0.;
  /* #2620: @325 = @248[11] */
  for (rr=(&w325), ss=w248+11; ss!=w248+12; ss+=1) *rr++ = *ss;
  /* #2621: @324 = mac(@182,@325,@324) */
  casadi_mtimes(w182, casadi_s10, (&w325), casadi_s22, (&w324), casadi_s8, w, 0);
  /* #2622: @325 = @248[12] */
  for (rr=(&w325), ss=w248+12; ss!=w248+13; ss+=1) *rr++ = *ss;
  /* #2623: @325 = (-@325) */
  w325 = (- w325 );
  /* #2624: @326 = @248[11] */
  for (rr=(&w326), ss=w248+11; ss!=w248+12; ss+=1) *rr++ = *ss;
  /* #2625: @299 = zeros(3x1,0nz) */
  /* #2626: @243 = @248[15:17] */
  for (rr=w243, ss=w248+15; ss!=w248+17; ss+=1) *rr++ = *ss;
  /* #2627: @329 = dense(@243) */
  casadi_densify(w243, casadi_s23, w329, 0);
  /* #2628: @329 = (@329-@338) */
  for (i=0, rr=w329, cs=w338; i<14; ++i) (*rr++) -= (*cs++);
  /* #2629: @333 = 0 */
  w333 = 0.;
  /* #2630: @334 = @248[14] */
  for (rr=(&w334), ss=w248+14; ss!=w248+15; ss+=1) *rr++ = *ss;
  /* #2631: @333 = mac(@185,@334,@333) */
  casadi_mtimes(w185, casadi_s10, (&w334), casadi_s17, (&w333), casadi_s8, w, 0);
  /* #2632: @300 = 00 */
  /* #2633: @334 = @248[14] */
  for (rr=(&w334), ss=w248+14; ss!=w248+15; ss+=1) *rr++ = *ss;
  /* #2634: @310 = zeros(3x1,0nz) */
  /* #2635: @185 = @248[17:20] */
  for (rr=w185, ss=w248+17; ss!=w248+20; ss+=1) *rr++ = *ss;
  /* #2636: @338 = dense(@185) */
  casadi_densify(w185, casadi_s18, w338, 0);
  /* #2637: @338 = (@338-@347) */
  for (i=0, rr=w338, cs=w347; i<14; ++i) (*rr++) -= (*cs++);
  /* #2638: @342 = 0 */
  w342 = 0.;
  /* #2639: @343 = @248[16] */
  for (rr=(&w343), ss=w248+16; ss!=w248+17; ss+=1) *rr++ = *ss;
  /* #2640: @342 = mac(@188,@343,@342) */
  casadi_mtimes(w188, casadi_s10, (&w343), casadi_s9, (&w342), casadi_s8, w, 0);
  /* #2641: @343 = @248[15] */
  for (rr=(&w343), ss=w248+15; ss!=w248+16; ss+=1) *rr++ = *ss;
  /* #2642: @344 = @248[16] */
  for (rr=(&w344), ss=w248+16; ss!=w248+17; ss+=1) *rr++ = *ss;
  /* #2643: @319 = zeros(3x1,0nz) */
  /* #2644: @243 = @248[20:22] */
  for (rr=w243, ss=w248+20; ss!=w248+22; ss+=1) *rr++ = *ss;
  /* #2645: @347 = dense(@243) */
  casadi_densify(w243, casadi_s27, w347, 0);
  /* #2646: @347 = (@347-@356) */
  for (i=0, rr=w347, cs=w356; i<14; ++i) (*rr++) -= (*cs++);
  /* #2647: @351 = 0 */
  w351 = 0.;
  /* #2648: @352 = @248[18] */
  for (rr=(&w352), ss=w248+18; ss!=w248+19; ss+=1) *rr++ = *ss;
  /* #2649: @351 = mac(@191,@352,@351) */
  casadi_mtimes(w191, casadi_s10, (&w352), casadi_s22, (&w351), casadi_s8, w, 0);
  /* #2650: @352 = @248[19] */
  for (rr=(&w352), ss=w248+19; ss!=w248+20; ss+=1) *rr++ = *ss;
  /* #2651: @352 = (-@352) */
  w352 = (- w352 );
  /* #2652: @353 = @248[18] */
  for (rr=(&w353), ss=w248+18; ss!=w248+19; ss+=1) *rr++ = *ss;
  /* #2653: @328 = zeros(3x1,0nz) */
  /* #2654: @243 = @248[22:24] */
  for (rr=w243, ss=w248+22; ss!=w248+24; ss+=1) *rr++ = *ss;
  /* #2655: @356 = dense(@243) */
  casadi_densify(w243, casadi_s23, w356, 0);
  /* #2656: @356 = (@356-@365) */
  for (i=0, rr=w356, cs=w365; i<14; ++i) (*rr++) -= (*cs++);
  /* #2657: @360 = 0 */
  w360 = 0.;
  /* #2658: @361 = @248[21] */
  for (rr=(&w361), ss=w248+21; ss!=w248+22; ss+=1) *rr++ = *ss;
  /* #2659: @360 = mac(@194,@361,@360) */
  casadi_mtimes(w194, casadi_s10, (&w361), casadi_s17, (&w360), casadi_s8, w, 0);
  /* #2660: @336 = 00 */
  /* #2661: @361 = @248[21] */
  for (rr=(&w361), ss=w248+21; ss!=w248+22; ss+=1) *rr++ = *ss;
  /* #2662: @337 = zeros(3x1,0nz) */
  /* #2663: @194 = @248[24:27] */
  for (rr=w194, ss=w248+24; ss!=w248+27; ss+=1) *rr++ = *ss;
  /* #2664: @365 = dense(@194) */
  casadi_densify(w194, casadi_s18, w365, 0);
  /* #2665: @365 = (@365-@374) */
  for (i=0, rr=w365, cs=w374; i<14; ++i) (*rr++) -= (*cs++);
  /* #2666: @369 = 0 */
  w369 = 0.;
  /* #2667: @370 = @248[23] */
  for (rr=(&w370), ss=w248+23; ss!=w248+24; ss+=1) *rr++ = *ss;
  /* #2668: @369 = mac(@197,@370,@369) */
  casadi_mtimes(w197, casadi_s10, (&w370), casadi_s9, (&w369), casadi_s8, w, 0);
  /* #2669: @370 = @248[22] */
  for (rr=(&w370), ss=w248+22; ss!=w248+23; ss+=1) *rr++ = *ss;
  /* #2670: @371 = @248[23] */
  for (rr=(&w371), ss=w248+23; ss!=w248+24; ss+=1) *rr++ = *ss;
  /* #2671: @346 = zeros(3x1,0nz) */
  /* #2672: @243 = @248[27:29] */
  for (rr=w243, ss=w248+27; ss!=w248+29; ss+=1) *rr++ = *ss;
  /* #2673: @374 = dense(@243) */
  casadi_densify(w243, casadi_s27, w374, 0);
  /* #2674: @374 = (@374-@383) */
  for (i=0, rr=w374, cs=w383; i<14; ++i) (*rr++) -= (*cs++);
  /* #2675: @378 = 0 */
  w378 = 0.;
  /* #2676: @379 = @248[25] */
  for (rr=(&w379), ss=w248+25; ss!=w248+26; ss+=1) *rr++ = *ss;
  /* #2677: @378 = mac(@200,@379,@378) */
  casadi_mtimes(w200, casadi_s10, (&w379), casadi_s22, (&w378), casadi_s8, w, 0);
  /* #2678: @379 = @248[26] */
  for (rr=(&w379), ss=w248+26; ss!=w248+27; ss+=1) *rr++ = *ss;
  /* #2679: @379 = (-@379) */
  w379 = (- w379 );
  /* #2680: @380 = @248[25] */
  for (rr=(&w380), ss=w248+25; ss!=w248+26; ss+=1) *rr++ = *ss;
  /* #2681: @355 = zeros(3x1,0nz) */
  /* #2682: @243 = @248[29:31] */
  for (rr=w243, ss=w248+29; ss!=w248+31; ss+=1) *rr++ = *ss;
  /* #2683: @383 = dense(@243) */
  casadi_densify(w243, casadi_s23, w383, 0);
  /* #2684: @383 = (@383-@392) */
  for (i=0, rr=w383, cs=w392; i<14; ++i) (*rr++) -= (*cs++);
  /* #2685: @387 = 0 */
  w387 = 0.;
  /* #2686: @388 = @248[28] */
  for (rr=(&w388), ss=w248+28; ss!=w248+29; ss+=1) *rr++ = *ss;
  /* #2687: @387 = mac(@203,@388,@387) */
  casadi_mtimes(w203, casadi_s10, (&w388), casadi_s17, (&w387), casadi_s8, w, 0);
  /* #2688: @363 = 00 */
  /* #2689: @388 = @248[28] */
  for (rr=(&w388), ss=w248+28; ss!=w248+29; ss+=1) *rr++ = *ss;
  /* #2690: @364 = zeros(3x1,0nz) */
  /* #2691: @203 = @248[31:34] */
  for (rr=w203, ss=w248+31; ss!=w248+34; ss+=1) *rr++ = *ss;
  /* #2692: @392 = dense(@203) */
  casadi_densify(w203, casadi_s18, w392, 0);
  /* #2693: @392 = (@392-@401) */
  for (i=0, rr=w392, cs=w401; i<14; ++i) (*rr++) -= (*cs++);
  /* #2694: @396 = 0 */
  w396 = 0.;
  /* #2695: @397 = @248[30] */
  for (rr=(&w397), ss=w248+30; ss!=w248+31; ss+=1) *rr++ = *ss;
  /* #2696: @396 = mac(@206,@397,@396) */
  casadi_mtimes(w206, casadi_s10, (&w397), casadi_s9, (&w396), casadi_s8, w, 0);
  /* #2697: @397 = @248[29] */
  for (rr=(&w397), ss=w248+29; ss!=w248+30; ss+=1) *rr++ = *ss;
  /* #2698: @398 = @248[30] */
  for (rr=(&w398), ss=w248+30; ss!=w248+31; ss+=1) *rr++ = *ss;
  /* #2699: @373 = zeros(3x1,0nz) */
  /* #2700: @243 = @248[34:36] */
  for (rr=w243, ss=w248+34; ss!=w248+36; ss+=1) *rr++ = *ss;
  /* #2701: @401 = dense(@243) */
  casadi_densify(w243, casadi_s27, w401, 0);
  /* #2702: @401 = (@401-@410) */
  for (i=0, rr=w401, cs=w410; i<14; ++i) (*rr++) -= (*cs++);
  /* #2703: @405 = 0 */
  w405 = 0.;
  /* #2704: @406 = @248[32] */
  for (rr=(&w406), ss=w248+32; ss!=w248+33; ss+=1) *rr++ = *ss;
  /* #2705: @405 = mac(@209,@406,@405) */
  casadi_mtimes(w209, casadi_s10, (&w406), casadi_s22, (&w405), casadi_s8, w, 0);
  /* #2706: @406 = @248[33] */
  for (rr=(&w406), ss=w248+33; ss!=w248+34; ss+=1) *rr++ = *ss;
  /* #2707: @406 = (-@406) */
  w406 = (- w406 );
  /* #2708: @407 = @248[32] */
  for (rr=(&w407), ss=w248+32; ss!=w248+33; ss+=1) *rr++ = *ss;
  /* #2709: @382 = zeros(3x1,0nz) */
  /* #2710: @243 = @248[36:38] */
  for (rr=w243, ss=w248+36; ss!=w248+38; ss+=1) *rr++ = *ss;
  /* #2711: @410 = dense(@243) */
  casadi_densify(w243, casadi_s23, w410, 0);
  /* #2712: @410 = (@410-@419) */
  for (i=0, rr=w410, cs=w419; i<14; ++i) (*rr++) -= (*cs++);
  /* #2713: @414 = 0 */
  w414 = 0.;
  /* #2714: @415 = @248[35] */
  for (rr=(&w415), ss=w248+35; ss!=w248+36; ss+=1) *rr++ = *ss;
  /* #2715: @414 = mac(@212,@415,@414) */
  casadi_mtimes(w212, casadi_s10, (&w415), casadi_s17, (&w414), casadi_s8, w, 0);
  /* #2716: @390 = 00 */
  /* #2717: @415 = @248[35] */
  for (rr=(&w415), ss=w248+35; ss!=w248+36; ss+=1) *rr++ = *ss;
  /* #2718: @391 = zeros(3x1,0nz) */
  /* #2719: @212 = @248[38:41] */
  for (rr=w212, ss=w248+38; ss!=w248+41; ss+=1) *rr++ = *ss;
  /* #2720: @419 = dense(@212) */
  casadi_densify(w212, casadi_s18, w419, 0);
  /* #2721: @419 = (@419-@428) */
  for (i=0, rr=w419, cs=w428; i<14; ++i) (*rr++) -= (*cs++);
  /* #2722: @423 = 0 */
  w423 = 0.;
  /* #2723: @424 = @248[37] */
  for (rr=(&w424), ss=w248+37; ss!=w248+38; ss+=1) *rr++ = *ss;
  /* #2724: @423 = mac(@215,@424,@423) */
  casadi_mtimes(w215, casadi_s10, (&w424), casadi_s9, (&w423), casadi_s8, w, 0);
  /* #2725: @424 = @248[36] */
  for (rr=(&w424), ss=w248+36; ss!=w248+37; ss+=1) *rr++ = *ss;
  /* #2726: @425 = @248[37] */
  for (rr=(&w425), ss=w248+37; ss!=w248+38; ss+=1) *rr++ = *ss;
  /* #2727: @400 = zeros(3x1,0nz) */
  /* #2728: @243 = @248[41:43] */
  for (rr=w243, ss=w248+41; ss!=w248+43; ss+=1) *rr++ = *ss;
  /* #2729: @428 = dense(@243) */
  casadi_densify(w243, casadi_s27, w428, 0);
  /* #2730: @428 = (@428-@437) */
  for (i=0, rr=w428, cs=w437; i<14; ++i) (*rr++) -= (*cs++);
  /* #2731: @432 = 0 */
  w432 = 0.;
  /* #2732: @433 = @248[39] */
  for (rr=(&w433), ss=w248+39; ss!=w248+40; ss+=1) *rr++ = *ss;
  /* #2733: @432 = mac(@218,@433,@432) */
  casadi_mtimes(w218, casadi_s10, (&w433), casadi_s22, (&w432), casadi_s8, w, 0);
  /* #2734: @433 = @248[40] */
  for (rr=(&w433), ss=w248+40; ss!=w248+41; ss+=1) *rr++ = *ss;
  /* #2735: @433 = (-@433) */
  w433 = (- w433 );
  /* #2736: @434 = @248[39] */
  for (rr=(&w434), ss=w248+39; ss!=w248+40; ss+=1) *rr++ = *ss;
  /* #2737: @409 = zeros(3x1,0nz) */
  /* #2738: @243 = @248[43:45] */
  for (rr=w243, ss=w248+43; ss!=w248+45; ss+=1) *rr++ = *ss;
  /* #2739: @437 = dense(@243) */
  casadi_densify(w243, casadi_s23, w437, 0);
  /* #2740: @437 = (@437-@446) */
  for (i=0, rr=w437, cs=w446; i<14; ++i) (*rr++) -= (*cs++);
  /* #2741: @441 = 0 */
  w441 = 0.;
  /* #2742: @442 = @248[42] */
  for (rr=(&w442), ss=w248+42; ss!=w248+43; ss+=1) *rr++ = *ss;
  /* #2743: @441 = mac(@221,@442,@441) */
  casadi_mtimes(w221, casadi_s10, (&w442), casadi_s17, (&w441), casadi_s8, w, 0);
  /* #2744: @417 = 00 */
  /* #2745: @442 = @248[42] */
  for (rr=(&w442), ss=w248+42; ss!=w248+43; ss+=1) *rr++ = *ss;
  /* #2746: @418 = zeros(3x1,0nz) */
  /* #2747: @221 = @248[45:48] */
  for (rr=w221, ss=w248+45; ss!=w248+48; ss+=1) *rr++ = *ss;
  /* #2748: @446 = dense(@221) */
  casadi_densify(w221, casadi_s18, w446, 0);
  /* #2749: @446 = (@446-@455) */
  for (i=0, rr=w446, cs=w455; i<14; ++i) (*rr++) -= (*cs++);
  /* #2750: @450 = 0 */
  w450 = 0.;
  /* #2751: @451 = @248[44] */
  for (rr=(&w451), ss=w248+44; ss!=w248+45; ss+=1) *rr++ = *ss;
  /* #2752: @450 = mac(@224,@451,@450) */
  casadi_mtimes(w224, casadi_s10, (&w451), casadi_s9, (&w450), casadi_s8, w, 0);
  /* #2753: @451 = @248[43] */
  for (rr=(&w451), ss=w248+43; ss!=w248+44; ss+=1) *rr++ = *ss;
  /* #2754: @452 = @248[44] */
  for (rr=(&w452), ss=w248+44; ss!=w248+45; ss+=1) *rr++ = *ss;
  /* #2755: @427 = zeros(3x1,0nz) */
  /* #2756: @243 = @248[48:50] */
  for (rr=w243, ss=w248+48; ss!=w248+50; ss+=1) *rr++ = *ss;
  /* #2757: @455 = dense(@243) */
  casadi_densify(w243, casadi_s27, w455, 0);
  /* #2758: @455 = (@455-@464) */
  for (i=0, rr=w455, cs=w464; i<14; ++i) (*rr++) -= (*cs++);
  /* #2759: @459 = 0 */
  w459 = 0.;
  /* #2760: @460 = @248[46] */
  for (rr=(&w460), ss=w248+46; ss!=w248+47; ss+=1) *rr++ = *ss;
  /* #2761: @459 = mac(@227,@460,@459) */
  casadi_mtimes(w227, casadi_s10, (&w460), casadi_s22, (&w459), casadi_s8, w, 0);
  /* #2762: @460 = @248[47] */
  for (rr=(&w460), ss=w248+47; ss!=w248+48; ss+=1) *rr++ = *ss;
  /* #2763: @460 = (-@460) */
  w460 = (- w460 );
  /* #2764: @461 = @248[46] */
  for (rr=(&w461), ss=w248+46; ss!=w248+47; ss+=1) *rr++ = *ss;
  /* #2765: @436 = zeros(3x1,0nz) */
  /* #2766: @243 = @248[50:52] */
  for (rr=w243, ss=w248+50; ss!=w248+52; ss+=1) *rr++ = *ss;
  /* #2767: @464 = dense(@243) */
  casadi_densify(w243, casadi_s23, w464, 0);
  /* #2768: @464 = (@464-@473) */
  for (i=0, rr=w464, cs=w473; i<14; ++i) (*rr++) -= (*cs++);
  /* #2769: @468 = 0 */
  w468 = 0.;
  /* #2770: @469 = @248[49] */
  for (rr=(&w469), ss=w248+49; ss!=w248+50; ss+=1) *rr++ = *ss;
  /* #2771: @468 = mac(@230,@469,@468) */
  casadi_mtimes(w230, casadi_s10, (&w469), casadi_s17, (&w468), casadi_s8, w, 0);
  /* #2772: @444 = 00 */
  /* #2773: @469 = @248[49] */
  for (rr=(&w469), ss=w248+49; ss!=w248+50; ss+=1) *rr++ = *ss;
  /* #2774: @445 = zeros(3x1,0nz) */
  /* #2775: @230 = @248[52:55] */
  for (rr=w230, ss=w248+52; ss!=w248+55; ss+=1) *rr++ = *ss;
  /* #2776: @473 = dense(@230) */
  casadi_densify(w230, casadi_s18, w473, 0);
  /* #2777: @473 = (@473-@482) */
  for (i=0, rr=w473, cs=w482; i<14; ++i) (*rr++) -= (*cs++);
  /* #2778: @477 = 0 */
  w477 = 0.;
  /* #2779: @478 = @248[51] */
  for (rr=(&w478), ss=w248+51; ss!=w248+52; ss+=1) *rr++ = *ss;
  /* #2780: @477 = mac(@233,@478,@477) */
  casadi_mtimes(w233, casadi_s10, (&w478), casadi_s9, (&w477), casadi_s8, w, 0);
  /* #2781: @478 = @248[50] */
  for (rr=(&w478), ss=w248+50; ss!=w248+51; ss+=1) *rr++ = *ss;
  /* #2782: @479 = @248[51] */
  for (rr=(&w479), ss=w248+51; ss!=w248+52; ss+=1) *rr++ = *ss;
  /* #2783: @454 = zeros(3x1,0nz) */
  /* #2784: @486 = @248[55] */
  for (rr=(&w486), ss=w248+55; ss!=w248+56; ss+=1) *rr++ = *ss;
  /* #2785: @482 = dense(@486) */
  casadi_densify((&w486), casadi_s39, w482, 0);
  /* #2786: @482 = (@482-@491) */
  for (i=0, rr=w482, cs=w491; i<14; ++i) (*rr++) -= (*cs++);
  /* #2787: @486 = 0 */
  w486 = 0.;
  /* #2788: @487 = @248[53] */
  for (rr=(&w487), ss=w248+53; ss!=w248+54; ss+=1) *rr++ = *ss;
  /* #2789: @486 = mac(@236,@487,@486) */
  casadi_mtimes(w236, casadi_s10, (&w487), casadi_s22, (&w486), casadi_s8, w, 0);
  /* #2790: @487 = @248[54] */
  for (rr=(&w487), ss=w248+54; ss!=w248+55; ss+=1) *rr++ = *ss;
  /* #2791: @487 = (-@487) */
  w487 = (- w487 );
  /* #2792: @488 = @248[53] */
  for (rr=(&w488), ss=w248+53; ss!=w248+54; ss+=1) *rr++ = *ss;
  /* #2793: @463 = zeros(3x1,0nz) */
  /* #2794: @497 = @248[0] */
  for (rr=(&w497), ss=w248+0; ss!=w248+1; ss+=1) *rr++ = *ss;
  /* #2795: @500 = vertcat(@162, @0, @244, @6, @262, @268, @255, @263, @257, @260, @280, @285, @264, @286, @265, @291, @287, @277, @288, @278, @303, @307, @279, @308, @290, @311, @315, @316, @317, @298, @320, @324, @325, @326, @299, @329, @333, @300, @334, @310, @338, @342, @343, @344, @319, @347, @351, @352, @353, @328, @356, @360, @336, @361, @337, @365, @369, @370, @371, @346, @374, @378, @379, @380, @355, @383, @387, @363, @388, @364, @392, @396, @397, @398, @373, @401, @405, @406, @407, @382, @410, @414, @390, @415, @391, @419, @423, @424, @425, @400, @428, @432, @433, @434, @409, @437, @441, @417, @442, @418, @446, @450, @451, @452, @427, @455, @459, @460, @461, @436, @464, @468, @444, @469, @445, @473, @477, @478, @479, @454, @482, @486, @487, @488, @463, @497) */
  rr=w500;
  for (i=0, cs=w162; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  *rr++ = w6;
  for (i=0, cs=w268; i<14; ++i) *rr++ = *cs++;
  *rr++ = w255;
  *rr++ = w257;
  *rr++ = w260;
  for (i=0, cs=w280; i<14; ++i) *rr++ = *cs++;
  *rr++ = w285;
  *rr++ = w286;
  for (i=0, cs=w291; i<14; ++i) *rr++ = *cs++;
  *rr++ = w287;
  *rr++ = w288;
  for (i=0, cs=w303; i<14; ++i) *rr++ = *cs++;
  *rr++ = w307;
  *rr++ = w308;
  for (i=0, cs=w311; i<14; ++i) *rr++ = *cs++;
  *rr++ = w315;
  *rr++ = w316;
  *rr++ = w317;
  for (i=0, cs=w320; i<14; ++i) *rr++ = *cs++;
  *rr++ = w324;
  *rr++ = w325;
  *rr++ = w326;
  for (i=0, cs=w329; i<14; ++i) *rr++ = *cs++;
  *rr++ = w333;
  *rr++ = w334;
  for (i=0, cs=w338; i<14; ++i) *rr++ = *cs++;
  *rr++ = w342;
  *rr++ = w343;
  *rr++ = w344;
  for (i=0, cs=w347; i<14; ++i) *rr++ = *cs++;
  *rr++ = w351;
  *rr++ = w352;
  *rr++ = w353;
  for (i=0, cs=w356; i<14; ++i) *rr++ = *cs++;
  *rr++ = w360;
  *rr++ = w361;
  for (i=0, cs=w365; i<14; ++i) *rr++ = *cs++;
  *rr++ = w369;
  *rr++ = w370;
  *rr++ = w371;
  for (i=0, cs=w374; i<14; ++i) *rr++ = *cs++;
  *rr++ = w378;
  *rr++ = w379;
  *rr++ = w380;
  for (i=0, cs=w383; i<14; ++i) *rr++ = *cs++;
  *rr++ = w387;
  *rr++ = w388;
  for (i=0, cs=w392; i<14; ++i) *rr++ = *cs++;
  *rr++ = w396;
  *rr++ = w397;
  *rr++ = w398;
  for (i=0, cs=w401; i<14; ++i) *rr++ = *cs++;
  *rr++ = w405;
  *rr++ = w406;
  *rr++ = w407;
  for (i=0, cs=w410; i<14; ++i) *rr++ = *cs++;
  *rr++ = w414;
  *rr++ = w415;
  for (i=0, cs=w419; i<14; ++i) *rr++ = *cs++;
  *rr++ = w423;
  *rr++ = w424;
  *rr++ = w425;
  for (i=0, cs=w428; i<14; ++i) *rr++ = *cs++;
  *rr++ = w432;
  *rr++ = w433;
  *rr++ = w434;
  for (i=0, cs=w437; i<14; ++i) *rr++ = *cs++;
  *rr++ = w441;
  *rr++ = w442;
  for (i=0, cs=w446; i<14; ++i) *rr++ = *cs++;
  *rr++ = w450;
  *rr++ = w451;
  *rr++ = w452;
  for (i=0, cs=w455; i<14; ++i) *rr++ = *cs++;
  *rr++ = w459;
  *rr++ = w460;
  *rr++ = w461;
  for (i=0, cs=w464; i<14; ++i) *rr++ = *cs++;
  *rr++ = w468;
  *rr++ = w469;
  for (i=0, cs=w473; i<14; ++i) *rr++ = *cs++;
  *rr++ = w477;
  *rr++ = w478;
  *rr++ = w479;
  for (i=0, cs=w482; i<14; ++i) *rr++ = *cs++;
  *rr++ = w486;
  *rr++ = w487;
  *rr++ = w488;
  *rr++ = w497;
  /* #2796: @501 = @500[0, 1, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 31, 32, 33, 34, 36, 38, 39, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 81, 82, 83, 84, 86, 87, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 129, 130, 131, 132, 133, 134, 136, 137, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 179, 180, 181, 182, 183, 184, 186, 187, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 229, 230, 231, 232, 233, 234, 236, 237, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 280, 281, 282, 283, 284, 286, 287, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 329, 330, 331, 332, 333, 334, 336, 337, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 379, 380, 381, 382, 383, 384, 386, 387, 394, 395, 396, 397, 398, 399, 400, 403, 404, 411, 412, 413, 414, 415] */
  for (cii=casadi_s40, rr=w501, ss=w500; cii!=casadi_s40+228; ++cii) *rr++ = ss[*cii];
  /* #2797: (@240[2, 5, 15, 19, 23, 42, 50, 55, 62, 64, 68, 72, 73, 78, 98, 106, 108, 111, 116, 122, 129, 133, 151, 159, 167, 169, 174, 181, 183, 188, 208, 216, 220, 225, 230, 233, 235, 243, 262, 270, 276, 281, 283, 287, 294, 298, 315, 316, 322, 324, 332, 334, 339, 346, 348, 353, 369, 373, 378, 381, 385, 390, 395, 398, 400, 408, 427, 435, 441, 446, 448, 452, 459, 463, 480, 481, 487, 489, 497, 499, 504, 511, 513, 518, 534, 538, 543, 546, 550, 555, 560, 563, 565, 573, 592, 600, 606, 611, 613, 617, 624, 628, 645, 646, 652, 654, 662, 664, 669, 676, 678, 683, 699, 703, 708, 711, 715, 720, 725, 728, 730, 738, 757, 765, 771, 776, 778, 782, 789, 793, 810, 811, 817, 819, 827, 829, 834, 841, 843, 848, 864, 868, 873, 876, 880, 885, 890, 893, 895, 903, 922, 930, 936, 941, 943, 947, 954, 958, 975, 976, 982, 984, 992, 994, 999, 1006, 1008, 1013, 1029, 1033, 1038, 1041, 1045, 1050, 1055, 1058, 1060, 1068, 1087, 1095, 1101, 1106, 1108, 1112, 1119, 1123, 1140, 1141, 1147, 1149, 1157, 1159, 1164, 1171, 1173, 1178, 1194, 1198, 1203, 1206, 1210, 1215, 1220, 1223, 1225, 1233, 1252, 1260, 1266, 1271, 1273, 1277, 1284, 1288, 1305, 1306, 1312, 1314, 1322, 1324, 1329, 1338, 1343, 1359, 1363, 1368, 1371, 1379] = @501) */
  for (cii=casadi_s41, rr=w240, ss=w501; cii!=casadi_s41+228; ++cii, ++ss) rr[*cii] = *ss;
  /* #2798: @0 = @251[1] */
  for (rr=(&w0), ss=w251+1; ss!=w251+2; ss+=1) *rr++ = *ss;
  /* #2799: @162 = dense(@0) */
  casadi_densify((&w0), casadi_s42, w162, 0);
  /* #2800: @162 = (@162-@269) */
  for (i=0, rr=w162, cs=w269; i<14; ++i) (*rr++) -= (*cs++);
  /* #2801: @0 = 0 */
  w0 = 0.;
  /* #2802: @6 = @251[0] */
  for (rr=(&w6), ss=w251+0; ss!=w251+1; ss+=1) *rr++ = *ss;
  /* #2803: @0 = mac(@165,@6,@0) */
  casadi_mtimes(w165, casadi_s10, (&w6), casadi_s22, (&w0), casadi_s8, w, 0);
  /* #2804: @244 = 00 */
  /* #2805: @6 = @251[0] */
  for (rr=(&w6), ss=w251+0; ss!=w251+1; ss+=1) *rr++ = *ss;
  /* #2806: @255 = @252[0] */
  for (rr=(&w255), ss=w252+0; ss!=w252+1; ss+=1) *rr++ = *ss;
  /* #2807: @257 = @251[2] */
  for (rr=(&w257), ss=w251+2; ss!=w251+3; ss+=1) *rr++ = *ss;
  /* #2808: @269 = dense(@257) */
  casadi_densify((&w257), casadi_s43, w269, 0);
  /* #2809: @269 = (@269-@281) */
  for (i=0, rr=w269, cs=w281; i<14; ++i) (*rr++) -= (*cs++);
  /* #2810: @257 = 0 */
  w257 = 0.;
  /* #2811: @260 = @251[1] */
  for (rr=(&w260), ss=w251+1; ss!=w251+2; ss+=1) *rr++ = *ss;
  /* #2812: @257 = mac(@167,@260,@257) */
  casadi_mtimes(w167, casadi_s10, (&w260), casadi_s17, (&w257), casadi_s8, w, 0);
  /* #2813: @262 = 00 */
  /* #2814: @260 = @251[1] */
  for (rr=(&w260), ss=w251+1; ss!=w251+2; ss+=1) *rr++ = *ss;
  /* #2815: @285 = @252[1] */
  for (rr=(&w285), ss=w252+1; ss!=w252+2; ss+=1) *rr++ = *ss;
  /* #2816: @286 = @251[3] */
  for (rr=(&w286), ss=w251+3; ss!=w251+4; ss+=1) *rr++ = *ss;
  /* #2817: @281 = dense(@286) */
  casadi_densify((&w286), casadi_s44, w281, 0);
  /* #2818: @281 = (@281-@292) */
  for (i=0, rr=w281, cs=w292; i<14; ++i) (*rr++) -= (*cs++);
  /* #2819: @286 = 0 */
  w286 = 0.;
  /* #2820: @287 = @251[2] */
  for (rr=(&w287), ss=w251+2; ss!=w251+3; ss+=1) *rr++ = *ss;
  /* #2821: @286 = mac(@170,@287,@286) */
  casadi_mtimes(w170, casadi_s10, (&w287), casadi_s22, (&w286), casadi_s8, w, 0);
  /* #2822: @263 = 00 */
  /* #2823: @287 = @251[2] */
  for (rr=(&w287), ss=w251+2; ss!=w251+3; ss+=1) *rr++ = *ss;
  /* #2824: @243 = @252[2:4] */
  for (rr=w243, ss=w252+2; ss!=w252+4; ss+=1) *rr++ = *ss;
  /* #2825: @288 = @251[4] */
  for (rr=(&w288), ss=w251+4; ss!=w251+5; ss+=1) *rr++ = *ss;
  /* #2826: @292 = dense(@288) */
  casadi_densify((&w288), casadi_s45, w292, 0);
  /* #2827: @292 = (@292-@304) */
  for (i=0, rr=w292, cs=w304; i<14; ++i) (*rr++) -= (*cs++);
  /* #2828: @288 = 0 */
  w288 = 0.;
  /* #2829: @307 = @251[3] */
  for (rr=(&w307), ss=w251+3; ss!=w251+4; ss+=1) *rr++ = *ss;
  /* #2830: @307 = @307' */
  /* #2831: @288 = mac(@307,@175,@288) */
  casadi_mtimes((&w307), casadi_s47, w175, casadi_s46, (&w288), casadi_s8, w, 0);
  /* #2832: @264 = 00 */
  /* #2833: @265 = zeros(3x1,0nz) */
  /* #2834: @170 = @252[4:7] */
  for (rr=w170, ss=w252+4; ss!=w252+7; ss+=1) *rr++ = *ss;
  /* #2835: @307 = @251[5] */
  for (rr=(&w307), ss=w251+5; ss!=w251+6; ss+=1) *rr++ = *ss;
  /* #2836: @304 = dense(@307) */
  casadi_densify((&w307), casadi_s44, w304, 0);
  /* #2837: @304 = (@304-@312) */
  for (i=0, rr=w304, cs=w312; i<14; ++i) (*rr++) -= (*cs++);
  /* #2838: @307 = 0 */
  w307 = 0.;
  /* #2839: @308 = @251[4] */
  for (rr=(&w308), ss=w251+4; ss!=w251+5; ss+=1) *rr++ = *ss;
  /* #2840: @308 = @308' */
  /* #2841: @307 = mac(@308,@178,@307) */
  casadi_mtimes((&w308), casadi_s48, w178, casadi_s46, (&w307), casadi_s8, w, 0);
  /* #2842: @277 = 00 */
  /* #2843: @278 = zeros(3x1,0nz) */
  /* #2844: @167 = @252[7:10] */
  for (rr=w167, ss=w252+7; ss!=w252+10; ss+=1) *rr++ = *ss;
  /* #2845: @308 = @251[6] */
  for (rr=(&w308), ss=w251+6; ss!=w251+7; ss+=1) *rr++ = *ss;
  /* #2846: @312 = dense(@308) */
  casadi_densify((&w308), casadi_s45, w312, 0);
  /* #2847: @312 = (@312-@321) */
  for (i=0, rr=w312, cs=w321; i<14; ++i) (*rr++) -= (*cs++);
  /* #2848: @308 = 0 */
  w308 = 0.;
  /* #2849: @315 = @251[5] */
  for (rr=(&w315), ss=w251+5; ss!=w251+6; ss+=1) *rr++ = *ss;
  /* #2850: @315 = @315' */
  /* #2851: @308 = mac(@315,@181,@308) */
  casadi_mtimes((&w315), casadi_s47, w181, casadi_s46, (&w308), casadi_s8, w, 0);
  /* #2852: @279 = 00 */
  /* #2853: @290 = zeros(3x1,0nz) */
  /* #2854: @165 = @252[10:13] */
  for (rr=w165, ss=w252+10; ss!=w252+13; ss+=1) *rr++ = *ss;
  /* #2855: @315 = @251[7] */
  for (rr=(&w315), ss=w251+7; ss!=w251+8; ss+=1) *rr++ = *ss;
  /* #2856: @321 = dense(@315) */
  casadi_densify((&w315), casadi_s44, w321, 0);
  /* #2857: @321 = (@321-@330) */
  for (i=0, rr=w321, cs=w330; i<14; ++i) (*rr++) -= (*cs++);
  /* #2858: @315 = 0 */
  w315 = 0.;
  /* #2859: @316 = @251[6] */
  for (rr=(&w316), ss=w251+6; ss!=w251+7; ss+=1) *rr++ = *ss;
  /* #2860: @316 = @316' */
  /* #2861: @315 = mac(@316,@184,@315) */
  casadi_mtimes((&w316), casadi_s48, w184, casadi_s46, (&w315), casadi_s8, w, 0);
  /* #2862: @298 = 00 */
  /* #2863: @299 = zeros(3x1,0nz) */
  /* #2864: @236 = @252[13:16] */
  for (rr=w236, ss=w252+13; ss!=w252+16; ss+=1) *rr++ = *ss;
  /* #2865: @316 = @251[8] */
  for (rr=(&w316), ss=w251+8; ss!=w251+9; ss+=1) *rr++ = *ss;
  /* #2866: @330 = dense(@316) */
  casadi_densify((&w316), casadi_s45, w330, 0);
  /* #2867: @330 = (@330-@339) */
  for (i=0, rr=w330, cs=w339; i<14; ++i) (*rr++) -= (*cs++);
  /* #2868: @316 = 0 */
  w316 = 0.;
  /* #2869: @317 = @251[7] */
  for (rr=(&w317), ss=w251+7; ss!=w251+8; ss+=1) *rr++ = *ss;
  /* #2870: @317 = @317' */
  /* #2871: @316 = mac(@317,@187,@316) */
  casadi_mtimes((&w317), casadi_s47, w187, casadi_s46, (&w316), casadi_s8, w, 0);
  /* #2872: @300 = 00 */
  /* #2873: @310 = zeros(3x1,0nz) */
  /* #2874: @233 = @252[16:19] */
  for (rr=w233, ss=w252+16; ss!=w252+19; ss+=1) *rr++ = *ss;
  /* #2875: @317 = @251[9] */
  for (rr=(&w317), ss=w251+9; ss!=w251+10; ss+=1) *rr++ = *ss;
  /* #2876: @339 = dense(@317) */
  casadi_densify((&w317), casadi_s44, w339, 0);
  /* #2877: @339 = (@339-@348) */
  for (i=0, rr=w339, cs=w348; i<14; ++i) (*rr++) -= (*cs++);
  /* #2878: @317 = 0 */
  w317 = 0.;
  /* #2879: @324 = @251[8] */
  for (rr=(&w324), ss=w251+8; ss!=w251+9; ss+=1) *rr++ = *ss;
  /* #2880: @324 = @324' */
  /* #2881: @317 = mac(@324,@190,@317) */
  casadi_mtimes((&w324), casadi_s48, w190, casadi_s46, (&w317), casadi_s8, w, 0);
  /* #2882: @319 = 00 */
  /* #2883: @328 = zeros(3x1,0nz) */
  /* #2884: @230 = @252[19:22] */
  for (rr=w230, ss=w252+19; ss!=w252+22; ss+=1) *rr++ = *ss;
  /* #2885: @324 = @251[10] */
  for (rr=(&w324), ss=w251+10; ss!=w251+11; ss+=1) *rr++ = *ss;
  /* #2886: @348 = dense(@324) */
  casadi_densify((&w324), casadi_s45, w348, 0);
  /* #2887: @348 = (@348-@357) */
  for (i=0, rr=w348, cs=w357; i<14; ++i) (*rr++) -= (*cs++);
  /* #2888: @324 = 0 */
  w324 = 0.;
  /* #2889: @325 = @251[9] */
  for (rr=(&w325), ss=w251+9; ss!=w251+10; ss+=1) *rr++ = *ss;
  /* #2890: @325 = @325' */
  /* #2891: @324 = mac(@325,@193,@324) */
  casadi_mtimes((&w325), casadi_s47, w193, casadi_s46, (&w324), casadi_s8, w, 0);
  /* #2892: @336 = 00 */
  /* #2893: @337 = zeros(3x1,0nz) */
  /* #2894: @227 = @252[22:25] */
  for (rr=w227, ss=w252+22; ss!=w252+25; ss+=1) *rr++ = *ss;
  /* #2895: @325 = @251[11] */
  for (rr=(&w325), ss=w251+11; ss!=w251+12; ss+=1) *rr++ = *ss;
  /* #2896: @357 = dense(@325) */
  casadi_densify((&w325), casadi_s44, w357, 0);
  /* #2897: @357 = (@357-@366) */
  for (i=0, rr=w357, cs=w366; i<14; ++i) (*rr++) -= (*cs++);
  /* #2898: @325 = 0 */
  w325 = 0.;
  /* #2899: @326 = @251[10] */
  for (rr=(&w326), ss=w251+10; ss!=w251+11; ss+=1) *rr++ = *ss;
  /* #2900: @326 = @326' */
  /* #2901: @325 = mac(@326,@196,@325) */
  casadi_mtimes((&w326), casadi_s48, w196, casadi_s46, (&w325), casadi_s8, w, 0);
  /* #2902: @346 = 00 */
  /* #2903: @355 = zeros(3x1,0nz) */
  /* #2904: @224 = @252[25:28] */
  for (rr=w224, ss=w252+25; ss!=w252+28; ss+=1) *rr++ = *ss;
  /* #2905: @326 = @251[12] */
  for (rr=(&w326), ss=w251+12; ss!=w251+13; ss+=1) *rr++ = *ss;
  /* #2906: @366 = dense(@326) */
  casadi_densify((&w326), casadi_s45, w366, 0);
  /* #2907: @366 = (@366-@375) */
  for (i=0, rr=w366, cs=w375; i<14; ++i) (*rr++) -= (*cs++);
  /* #2908: @326 = 0 */
  w326 = 0.;
  /* #2909: @333 = @251[11] */
  for (rr=(&w333), ss=w251+11; ss!=w251+12; ss+=1) *rr++ = *ss;
  /* #2910: @333 = @333' */
  /* #2911: @326 = mac(@333,@199,@326) */
  casadi_mtimes((&w333), casadi_s47, w199, casadi_s46, (&w326), casadi_s8, w, 0);
  /* #2912: @363 = 00 */
  /* #2913: @364 = zeros(3x1,0nz) */
  /* #2914: @221 = @252[28:31] */
  for (rr=w221, ss=w252+28; ss!=w252+31; ss+=1) *rr++ = *ss;
  /* #2915: @333 = @251[13] */
  for (rr=(&w333), ss=w251+13; ss!=w251+14; ss+=1) *rr++ = *ss;
  /* #2916: @375 = dense(@333) */
  casadi_densify((&w333), casadi_s44, w375, 0);
  /* #2917: @375 = (@375-@384) */
  for (i=0, rr=w375, cs=w384; i<14; ++i) (*rr++) -= (*cs++);
  /* #2918: @333 = 0 */
  w333 = 0.;
  /* #2919: @334 = @251[12] */
  for (rr=(&w334), ss=w251+12; ss!=w251+13; ss+=1) *rr++ = *ss;
  /* #2920: @334 = @334' */
  /* #2921: @333 = mac(@334,@202,@333) */
  casadi_mtimes((&w334), casadi_s48, w202, casadi_s46, (&w333), casadi_s8, w, 0);
  /* #2922: @373 = 00 */
  /* #2923: @382 = zeros(3x1,0nz) */
  /* #2924: @218 = @252[31:34] */
  for (rr=w218, ss=w252+31; ss!=w252+34; ss+=1) *rr++ = *ss;
  /* #2925: @334 = @251[14] */
  for (rr=(&w334), ss=w251+14; ss!=w251+15; ss+=1) *rr++ = *ss;
  /* #2926: @384 = dense(@334) */
  casadi_densify((&w334), casadi_s45, w384, 0);
  /* #2927: @384 = (@384-@393) */
  for (i=0, rr=w384, cs=w393; i<14; ++i) (*rr++) -= (*cs++);
  /* #2928: @334 = 0 */
  w334 = 0.;
  /* #2929: @342 = @251[13] */
  for (rr=(&w342), ss=w251+13; ss!=w251+14; ss+=1) *rr++ = *ss;
  /* #2930: @342 = @342' */
  /* #2931: @334 = mac(@342,@205,@334) */
  casadi_mtimes((&w342), casadi_s47, w205, casadi_s46, (&w334), casadi_s8, w, 0);
  /* #2932: @390 = 00 */
  /* #2933: @391 = zeros(3x1,0nz) */
  /* #2934: @215 = @252[34:37] */
  for (rr=w215, ss=w252+34; ss!=w252+37; ss+=1) *rr++ = *ss;
  /* #2935: @342 = @251[15] */
  for (rr=(&w342), ss=w251+15; ss!=w251+16; ss+=1) *rr++ = *ss;
  /* #2936: @393 = dense(@342) */
  casadi_densify((&w342), casadi_s44, w393, 0);
  /* #2937: @393 = (@393-@402) */
  for (i=0, rr=w393, cs=w402; i<14; ++i) (*rr++) -= (*cs++);
  /* #2938: @342 = 0 */
  w342 = 0.;
  /* #2939: @343 = @251[14] */
  for (rr=(&w343), ss=w251+14; ss!=w251+15; ss+=1) *rr++ = *ss;
  /* #2940: @343 = @343' */
  /* #2941: @342 = mac(@343,@208,@342) */
  casadi_mtimes((&w343), casadi_s48, w208, casadi_s46, (&w342), casadi_s8, w, 0);
  /* #2942: @400 = 00 */
  /* #2943: @409 = zeros(3x1,0nz) */
  /* #2944: @212 = @252[37:40] */
  for (rr=w212, ss=w252+37; ss!=w252+40; ss+=1) *rr++ = *ss;
  /* #2945: @343 = @251[16] */
  for (rr=(&w343), ss=w251+16; ss!=w251+17; ss+=1) *rr++ = *ss;
  /* #2946: @402 = dense(@343) */
  casadi_densify((&w343), casadi_s45, w402, 0);
  /* #2947: @402 = (@402-@411) */
  for (i=0, rr=w402, cs=w411; i<14; ++i) (*rr++) -= (*cs++);
  /* #2948: @343 = 0 */
  w343 = 0.;
  /* #2949: @344 = @251[15] */
  for (rr=(&w344), ss=w251+15; ss!=w251+16; ss+=1) *rr++ = *ss;
  /* #2950: @344 = @344' */
  /* #2951: @343 = mac(@344,@211,@343) */
  casadi_mtimes((&w344), casadi_s47, w211, casadi_s46, (&w343), casadi_s8, w, 0);
  /* #2952: @417 = 00 */
  /* #2953: @418 = zeros(3x1,0nz) */
  /* #2954: @209 = @252[40:43] */
  for (rr=w209, ss=w252+40; ss!=w252+43; ss+=1) *rr++ = *ss;
  /* #2955: @344 = @251[17] */
  for (rr=(&w344), ss=w251+17; ss!=w251+18; ss+=1) *rr++ = *ss;
  /* #2956: @411 = dense(@344) */
  casadi_densify((&w344), casadi_s44, w411, 0);
  /* #2957: @411 = (@411-@420) */
  for (i=0, rr=w411, cs=w420; i<14; ++i) (*rr++) -= (*cs++);
  /* #2958: @344 = 0 */
  w344 = 0.;
  /* #2959: @351 = @251[16] */
  for (rr=(&w351), ss=w251+16; ss!=w251+17; ss+=1) *rr++ = *ss;
  /* #2960: @351 = @351' */
  /* #2961: @344 = mac(@351,@214,@344) */
  casadi_mtimes((&w351), casadi_s48, w214, casadi_s46, (&w344), casadi_s8, w, 0);
  /* #2962: @427 = 00 */
  /* #2963: @436 = zeros(3x1,0nz) */
  /* #2964: @206 = @252[43:46] */
  for (rr=w206, ss=w252+43; ss!=w252+46; ss+=1) *rr++ = *ss;
  /* #2965: @351 = @251[18] */
  for (rr=(&w351), ss=w251+18; ss!=w251+19; ss+=1) *rr++ = *ss;
  /* #2966: @420 = dense(@351) */
  casadi_densify((&w351), casadi_s45, w420, 0);
  /* #2967: @420 = (@420-@429) */
  for (i=0, rr=w420, cs=w429; i<14; ++i) (*rr++) -= (*cs++);
  /* #2968: @351 = 0 */
  w351 = 0.;
  /* #2969: @352 = @251[17] */
  for (rr=(&w352), ss=w251+17; ss!=w251+18; ss+=1) *rr++ = *ss;
  /* #2970: @352 = @352' */
  /* #2971: @351 = mac(@352,@217,@351) */
  casadi_mtimes((&w352), casadi_s47, w217, casadi_s46, (&w351), casadi_s8, w, 0);
  /* #2972: @444 = 00 */
  /* #2973: @445 = zeros(3x1,0nz) */
  /* #2974: @203 = @252[46:49] */
  for (rr=w203, ss=w252+46; ss!=w252+49; ss+=1) *rr++ = *ss;
  /* #2975: @352 = @251[19] */
  for (rr=(&w352), ss=w251+19; ss!=w251+20; ss+=1) *rr++ = *ss;
  /* #2976: @429 = dense(@352) */
  casadi_densify((&w352), casadi_s44, w429, 0);
  /* #2977: @429 = (@429-@438) */
  for (i=0, rr=w429, cs=w438; i<14; ++i) (*rr++) -= (*cs++);
  /* #2978: @352 = 0 */
  w352 = 0.;
  /* #2979: @353 = @251[18] */
  for (rr=(&w353), ss=w251+18; ss!=w251+19; ss+=1) *rr++ = *ss;
  /* #2980: @353 = @353' */
  /* #2981: @352 = mac(@353,@220,@352) */
  casadi_mtimes((&w353), casadi_s48, w220, casadi_s46, (&w352), casadi_s8, w, 0);
  /* #2982: @454 = 00 */
  /* #2983: @463 = zeros(3x1,0nz) */
  /* #2984: @200 = @252[49:52] */
  for (rr=w200, ss=w252+49; ss!=w252+52; ss+=1) *rr++ = *ss;
  /* #2985: @353 = @251[20] */
  for (rr=(&w353), ss=w251+20; ss!=w251+21; ss+=1) *rr++ = *ss;
  /* #2986: @438 = dense(@353) */
  casadi_densify((&w353), casadi_s45, w438, 0);
  /* #2987: @438 = (@438-@447) */
  for (i=0, rr=w438, cs=w447; i<14; ++i) (*rr++) -= (*cs++);
  /* #2988: @353 = 0 */
  w353 = 0.;
  /* #2989: @360 = @251[19] */
  for (rr=(&w360), ss=w251+19; ss!=w251+20; ss+=1) *rr++ = *ss;
  /* #2990: @360 = @360' */
  /* #2991: @353 = mac(@360,@223,@353) */
  casadi_mtimes((&w360), casadi_s47, w223, casadi_s46, (&w353), casadi_s8, w, 0);
  /* #2992: @471 = 00 */
  /* #2993: @472 = zeros(3x1,0nz) */
  /* #2994: @197 = @252[52:55] */
  for (rr=w197, ss=w252+52; ss!=w252+55; ss+=1) *rr++ = *ss;
  /* #2995: @360 = @251[21] */
  for (rr=(&w360), ss=w251+21; ss!=w251+22; ss+=1) *rr++ = *ss;
  /* #2996: @447 = dense(@360) */
  casadi_densify((&w360), casadi_s44, w447, 0);
  /* #2997: @447 = (@447-@456) */
  for (i=0, rr=w447, cs=w456; i<14; ++i) (*rr++) -= (*cs++);
  /* #2998: @360 = 0 */
  w360 = 0.;
  /* #2999: @361 = @251[20] */
  for (rr=(&w361), ss=w251+20; ss!=w251+21; ss+=1) *rr++ = *ss;
  /* #3000: @361 = @361' */
  /* #3001: @360 = mac(@361,@226,@360) */
  casadi_mtimes((&w361), casadi_s48, w226, casadi_s46, (&w360), casadi_s8, w, 0);
  /* #3002: @481 = 00 */
  /* #3003: @490 = zeros(3x1,0nz) */
  /* #3004: @194 = @252[55:58] */
  for (rr=w194, ss=w252+55; ss!=w252+58; ss+=1) *rr++ = *ss;
  /* #3005: @361 = @251[22] */
  for (rr=(&w361), ss=w251+22; ss!=w251+23; ss+=1) *rr++ = *ss;
  /* #3006: @456 = dense(@361) */
  casadi_densify((&w361), casadi_s45, w456, 0);
  /* #3007: @456 = (@456-@465) */
  for (i=0, rr=w456, cs=w465; i<14; ++i) (*rr++) -= (*cs++);
  /* #3008: @361 = 0 */
  w361 = 0.;
  /* #3009: @369 = @251[21] */
  for (rr=(&w369), ss=w251+21; ss!=w251+22; ss+=1) *rr++ = *ss;
  /* #3010: @369 = @369' */
  /* #3011: @361 = mac(@369,@229,@361) */
  casadi_mtimes((&w369), casadi_s47, w229, casadi_s46, (&w361), casadi_s8, w, 0);
  /* #3012: @502 = 00 */
  /* #3013: @503 = zeros(3x1,0nz) */
  /* #3014: @191 = @252[58:61] */
  for (rr=w191, ss=w252+58; ss!=w252+61; ss+=1) *rr++ = *ss;
  /* #3015: @369 = @251[23] */
  for (rr=(&w369), ss=w251+23; ss!=w251+24; ss+=1) *rr++ = *ss;
  /* #3016: @465 = dense(@369) */
  casadi_densify((&w369), casadi_s44, w465, 0);
  /* #3017: @465 = (@465-@474) */
  for (i=0, rr=w465, cs=w474; i<14; ++i) (*rr++) -= (*cs++);
  /* #3018: @369 = 0 */
  w369 = 0.;
  /* #3019: @370 = @251[22] */
  for (rr=(&w370), ss=w251+22; ss!=w251+23; ss+=1) *rr++ = *ss;
  /* #3020: @370 = @370' */
  /* #3021: @369 = mac(@370,@232,@369) */
  casadi_mtimes((&w370), casadi_s48, w232, casadi_s46, (&w369), casadi_s8, w, 0);
  /* #3022: @504 = 00 */
  /* #3023: @505 = zeros(3x1,0nz) */
  /* #3024: @188 = @252[61:64] */
  for (rr=w188, ss=w252+61; ss!=w252+64; ss+=1) *rr++ = *ss;
  /* #3025: @370 = @251[24] */
  for (rr=(&w370), ss=w251+24; ss!=w251+25; ss+=1) *rr++ = *ss;
  /* #3026: @474 = dense(@370) */
  casadi_densify((&w370), casadi_s45, w474, 0);
  /* #3027: @474 = (@474-@483) */
  for (i=0, rr=w474, cs=w483; i<14; ++i) (*rr++) -= (*cs++);
  /* #3028: @370 = 0 */
  w370 = 0.;
  /* #3029: @371 = @251[23] */
  for (rr=(&w371), ss=w251+23; ss!=w251+24; ss+=1) *rr++ = *ss;
  /* #3030: @371 = @371' */
  /* #3031: @370 = mac(@371,@235,@370) */
  casadi_mtimes((&w371), casadi_s47, w235, casadi_s46, (&w370), casadi_s8, w, 0);
  /* #3032: @506 = 00 */
  /* #3033: @507 = zeros(3x1,0nz) */
  /* #3034: @185 = @252[64:67] */
  for (rr=w185, ss=w252+64; ss!=w252+67; ss+=1) *rr++ = *ss;
  /* #3035: @492 = (-@492) */
  for (i=0, rr=w492, cs=w492; i<14; ++i) *rr++ = (- *cs++ );
  /* #3036: @371 = 0 */
  w371 = 0.;
  /* #3037: @378 = @251[24] */
  for (rr=(&w378), ss=w251+24; ss!=w251+25; ss+=1) *rr++ = *ss;
  /* #3038: @378 = @378' */
  /* #3039: @371 = mac(@378,@238,@371) */
  casadi_mtimes((&w378), casadi_s48, w238, casadi_s46, (&w371), casadi_s8, w, 0);
  /* #3040: @508 = 00 */
  /* #3041: @509 = zeros(3x1,0nz) */
  /* #3042: @182 = @252[67:70] */
  for (rr=w182, ss=w252+67; ss!=w252+70; ss+=1) *rr++ = *ss;
  /* #3043: @378 = @251[0] */
  for (rr=(&w378), ss=w251+0; ss!=w251+1; ss+=1) *rr++ = *ss;
  /* #3044: @510 = vertcat(@162, @0, @244, @6, @255, @269, @257, @262, @260, @285, @281, @286, @263, @287, @243, @292, @288, @264, @265, @170, @304, @307, @277, @278, @167, @312, @308, @279, @290, @165, @321, @315, @298, @299, @236, @330, @316, @300, @310, @233, @339, @317, @319, @328, @230, @348, @324, @336, @337, @227, @357, @325, @346, @355, @224, @366, @326, @363, @364, @221, @375, @333, @373, @382, @218, @384, @334, @390, @391, @215, @393, @342, @400, @409, @212, @402, @343, @417, @418, @209, @411, @344, @427, @436, @206, @420, @351, @444, @445, @203, @429, @352, @454, @463, @200, @438, @353, @471, @472, @197, @447, @360, @481, @490, @194, @456, @361, @502, @503, @191, @465, @369, @504, @505, @188, @474, @370, @506, @507, @185, @492, @371, @508, @509, @182, @378) */
  rr=w510;
  for (i=0, cs=w162; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  *rr++ = w6;
  *rr++ = w255;
  for (i=0, cs=w269; i<14; ++i) *rr++ = *cs++;
  *rr++ = w257;
  *rr++ = w260;
  *rr++ = w285;
  for (i=0, cs=w281; i<14; ++i) *rr++ = *cs++;
  *rr++ = w286;
  *rr++ = w287;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w292; i<14; ++i) *rr++ = *cs++;
  *rr++ = w288;
  for (i=0, cs=w170; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w304; i<14; ++i) *rr++ = *cs++;
  *rr++ = w307;
  for (i=0, cs=w167; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w312; i<14; ++i) *rr++ = *cs++;
  *rr++ = w308;
  for (i=0, cs=w165; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w321; i<14; ++i) *rr++ = *cs++;
  *rr++ = w315;
  for (i=0, cs=w236; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w330; i<14; ++i) *rr++ = *cs++;
  *rr++ = w316;
  for (i=0, cs=w233; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w339; i<14; ++i) *rr++ = *cs++;
  *rr++ = w317;
  for (i=0, cs=w230; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w348; i<14; ++i) *rr++ = *cs++;
  *rr++ = w324;
  for (i=0, cs=w227; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w357; i<14; ++i) *rr++ = *cs++;
  *rr++ = w325;
  for (i=0, cs=w224; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w366; i<14; ++i) *rr++ = *cs++;
  *rr++ = w326;
  for (i=0, cs=w221; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w375; i<14; ++i) *rr++ = *cs++;
  *rr++ = w333;
  for (i=0, cs=w218; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w384; i<14; ++i) *rr++ = *cs++;
  *rr++ = w334;
  for (i=0, cs=w215; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w393; i<14; ++i) *rr++ = *cs++;
  *rr++ = w342;
  for (i=0, cs=w212; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w402; i<14; ++i) *rr++ = *cs++;
  *rr++ = w343;
  for (i=0, cs=w209; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w411; i<14; ++i) *rr++ = *cs++;
  *rr++ = w344;
  for (i=0, cs=w206; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w420; i<14; ++i) *rr++ = *cs++;
  *rr++ = w351;
  for (i=0, cs=w203; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w429; i<14; ++i) *rr++ = *cs++;
  *rr++ = w352;
  for (i=0, cs=w200; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w438; i<14; ++i) *rr++ = *cs++;
  *rr++ = w353;
  for (i=0, cs=w197; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w447; i<14; ++i) *rr++ = *cs++;
  *rr++ = w360;
  for (i=0, cs=w194; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w456; i<14; ++i) *rr++ = *cs++;
  *rr++ = w361;
  for (i=0, cs=w191; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w465; i<14; ++i) *rr++ = *cs++;
  *rr++ = w369;
  for (i=0, cs=w188; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w474; i<14; ++i) *rr++ = *cs++;
  *rr++ = w370;
  for (i=0, cs=w185; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w492; i<14; ++i) *rr++ = *cs++;
  *rr++ = w371;
  for (i=0, cs=w182; i<3; ++i) *rr++ = *cs++;
  *rr++ = w378;
  /* #3045: @511 = @510[0, 2, 3, 4, 5, 14, 15, 16, 17, 18, 20, 21, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 441, 444, 445, 446, 447, 448] */
  for (cii=casadi_s49, rr=w511, ss=w510; cii!=casadi_s49+313; ++cii) *rr++ = ss[*cii];
  /* #3046: (@240[3, 9, 14, 16, 18, 43, 51, 52, 58, 60, 69, 70, 74, 97, 105, 107, 113, 117, 119, 124, 127, 128, 144, 153, 161, 162, 163, 168, 172, 176, 179, 182, 185, 190, 198, 201, 209, 217, 218, 219, 223, 227, 231, 234, 237, 240, 248, 254, 255, 265, 272, 273, 274, 278, 282, 286, 289, 292, 295, 300, 308, 311, 319, 327, 328, 329, 333, 337, 341, 344, 347, 350, 358, 364, 365, 375, 382, 383, 384, 388, 392, 396, 399, 402, 405, 410, 418, 421, 429, 437, 438, 439, 443, 447, 451, 454, 457, 460, 468, 474, 475, 485, 492, 493, 494, 498, 502, 506, 509, 512, 515, 520, 528, 531, 539, 547, 548, 549, 553, 557, 561, 564, 567, 570, 578, 584, 585, 595, 602, 603, 604, 608, 612, 616, 619, 622, 625, 630, 638, 641, 649, 657, 658, 659, 663, 667, 671, 674, 677, 680, 688, 694, 695, 705, 712, 713, 714, 718, 722, 726, 729, 732, 735, 740, 748, 751, 759, 767, 768, 769, 773, 777, 781, 784, 787, 790, 798, 804, 805, 815, 822, 823, 824, 828, 832, 836, 839, 842, 845, 850, 858, 861, 869, 877, 878, 879, 883, 887, 891, 894, 897, 900, 908, 914, 915, 925, 932, 933, 934, 938, 942, 946, 949, 952, 955, 960, 968, 971, 979, 987, 988, 989, 993, 997, 1001, 1004, 1007, 1010, 1018, 1024, 1025, 1035, 1042, 1043, 1044, 1048, 1052, 1056, 1059, 1062, 1065, 1070, 1078, 1081, 1089, 1097, 1098, 1099, 1103, 1107, 1111, 1114, 1117, 1120, 1128, 1134, 1135, 1145, 1152, 1153, 1154, 1158, 1162, 1166, 1169, 1172, 1175, 1180, 1188, 1191, 1199, 1207, 1208, 1209, 1213, 1217, 1221, 1224, 1227, 1230, 1238, 1244, 1245, 1255, 1262, 1263, 1264, 1268, 1272, 1276, 1279, 1282, 1285, 1290, 1298, 1301, 1309, 1317, 1318, 1319, 1323, 1327, 1331, 1334, 1337, 1340, 1348, 1355, 1365, 1372, 1373, 1374, 1380] = @511) */
  for (cii=casadi_s50, rr=w240, ss=w511; cii!=casadi_s50+313; ++cii, ++ss) rr[*cii] = *ss;
  /* #3047: @0 = @254[1] */
  for (rr=(&w0), ss=w254+1; ss!=w254+2; ss+=1) *rr++ = *ss;
  /* #3048: @162 = dense(@0) */
  casadi_densify((&w0), casadi_s45, w162, 0);
  /* #3049: @162 = (@162-@270) */
  for (i=0, rr=w162, cs=w270; i<14; ++i) (*rr++) -= (*cs++);
  /* #3050: @0 = 0 */
  w0 = 0.;
  /* #3051: @6 = @254[0] */
  for (rr=(&w6), ss=w254+0; ss!=w254+1; ss+=1) *rr++ = *ss;
  /* #3052: @6 = @6' */
  /* #3053: @0 = mac(@6,@166,@0) */
  casadi_mtimes((&w6), casadi_s47, w166, casadi_s46, (&w0), casadi_s8, w, 0);
  /* #3054: @244 = 00 */
  /* #3055: @262 = zeros(3x1,0nz) */
  /* #3056: @243 = @81[:2] */
  for (rr=w243, ss=w81+0; ss!=w81+2; ss+=1) *rr++ = *ss;
  /* #3057: @6 = @254[2] */
  for (rr=(&w6), ss=w254+2; ss!=w254+3; ss+=1) *rr++ = *ss;
  /* #3058: @270 = dense(@6) */
  casadi_densify((&w6), casadi_s44, w270, 0);
  /* #3059: @270 = (@270-@282) */
  for (i=0, rr=w270, cs=w282; i<14; ++i) (*rr++) -= (*cs++);
  /* #3060: @6 = 0 */
  w6 = 0.;
  /* #3061: @255 = @254[1] */
  for (rr=(&w255), ss=w254+1; ss!=w254+2; ss+=1) *rr++ = *ss;
  /* #3062: @255 = @255' */
  /* #3063: @6 = mac(@255,@169,@6) */
  casadi_mtimes((&w255), casadi_s48, w169, casadi_s46, (&w6), casadi_s8, w, 0);
  /* #3064: @263 = 00 */
  /* #3065: @264 = zeros(3x1,0nz) */
  /* #3066: @255 = @81[2] */
  for (rr=(&w255), ss=w81+2; ss!=w81+3; ss+=1) *rr++ = *ss;
  /* #3067: @257 = @254[3] */
  for (rr=(&w257), ss=w254+3; ss!=w254+4; ss+=1) *rr++ = *ss;
  /* #3068: @282 = dense(@257) */
  casadi_densify((&w257), casadi_s45, w282, 0);
  /* #3069: @282 = (@282-@293) */
  for (i=0, rr=w282, cs=w293; i<14; ++i) (*rr++) -= (*cs++);
  /* #3070: @257 = 0 */
  w257 = 0.;
  /* #3071: @260 = @254[2] */
  for (rr=(&w260), ss=w254+2; ss!=w254+3; ss+=1) *rr++ = *ss;
  /* #3072: @260 = @260' */
  /* #3073: @257 = mac(@260,@172,@257) */
  casadi_mtimes((&w260), casadi_s47, w172, casadi_s46, (&w257), casadi_s8, w, 0);
  /* #3074: @265 = 00 */
  /* #3075: @277 = zeros(3x1,0nz) */
  /* #3076: @260 = @81[3] */
  for (rr=(&w260), ss=w81+3; ss!=w81+4; ss+=1) *rr++ = *ss;
  /* #3077: @285 = @254[4] */
  for (rr=(&w285), ss=w254+4; ss!=w254+5; ss+=1) *rr++ = *ss;
  /* #3078: @293 = dense(@285) */
  casadi_densify((&w285), casadi_s44, w293, 0);
  /* #3079: @293 = (@293-@305) */
  for (i=0, rr=w293, cs=w305; i<14; ++i) (*rr++) -= (*cs++);
  /* #3080: @285 = 0 */
  w285 = 0.;
  /* #3081: @286 = @254[3] */
  for (rr=(&w286), ss=w254+3; ss!=w254+4; ss+=1) *rr++ = *ss;
  /* #3082: @286 = @286' */
  /* #3083: @285 = mac(@286,@175,@285) */
  casadi_mtimes((&w286), casadi_s48, w175, casadi_s46, (&w285), casadi_s8, w, 0);
  /* #3084: @278 = 00 */
  /* #3085: @279 = zeros(3x1,0nz) */
  /* #3086: @290 = zeros(3x1,0nz) */
  /* #3087: @286 = @254[5] */
  for (rr=(&w286), ss=w254+5; ss!=w254+6; ss+=1) *rr++ = *ss;
  /* #3088: @305 = dense(@286) */
  casadi_densify((&w286), casadi_s45, w305, 0);
  /* #3089: @305 = (@305-@313) */
  for (i=0, rr=w305, cs=w313; i<14; ++i) (*rr++) -= (*cs++);
  /* #3090: @286 = 0 */
  w286 = 0.;
  /* #3091: @287 = @254[4] */
  for (rr=(&w287), ss=w254+4; ss!=w254+5; ss+=1) *rr++ = *ss;
  /* #3092: @287 = @287' */
  /* #3093: @286 = mac(@287,@178,@286) */
  casadi_mtimes((&w287), casadi_s47, w178, casadi_s46, (&w286), casadi_s8, w, 0);
  /* #3094: @298 = 00 */
  /* #3095: @299 = zeros(3x1,0nz) */
  /* #3096: @300 = zeros(3x1,0nz) */
  /* #3097: @287 = @254[6] */
  for (rr=(&w287), ss=w254+6; ss!=w254+7; ss+=1) *rr++ = *ss;
  /* #3098: @313 = dense(@287) */
  casadi_densify((&w287), casadi_s44, w313, 0);
  /* #3099: @313 = (@313-@322) */
  for (i=0, rr=w313, cs=w322; i<14; ++i) (*rr++) -= (*cs++);
  /* #3100: @287 = 0 */
  w287 = 0.;
  /* #3101: @288 = @254[5] */
  for (rr=(&w288), ss=w254+5; ss!=w254+6; ss+=1) *rr++ = *ss;
  /* #3102: @288 = @288' */
  /* #3103: @287 = mac(@288,@181,@287) */
  casadi_mtimes((&w288), casadi_s48, w181, casadi_s46, (&w287), casadi_s8, w, 0);
  /* #3104: @310 = 00 */
  /* #3105: @319 = zeros(3x1,0nz) */
  /* #3106: @328 = zeros(3x1,0nz) */
  /* #3107: @288 = @254[7] */
  for (rr=(&w288), ss=w254+7; ss!=w254+8; ss+=1) *rr++ = *ss;
  /* #3108: @322 = dense(@288) */
  casadi_densify((&w288), casadi_s45, w322, 0);
  /* #3109: @322 = (@322-@331) */
  for (i=0, rr=w322, cs=w331; i<14; ++i) (*rr++) -= (*cs++);
  /* #3110: @288 = 0 */
  w288 = 0.;
  /* #3111: @307 = @254[6] */
  for (rr=(&w307), ss=w254+6; ss!=w254+7; ss+=1) *rr++ = *ss;
  /* #3112: @307 = @307' */
  /* #3113: @288 = mac(@307,@184,@288) */
  casadi_mtimes((&w307), casadi_s47, w184, casadi_s46, (&w288), casadi_s8, w, 0);
  /* #3114: @336 = 00 */
  /* #3115: @337 = zeros(3x1,0nz) */
  /* #3116: @346 = zeros(3x1,0nz) */
  /* #3117: @307 = @254[8] */
  for (rr=(&w307), ss=w254+8; ss!=w254+9; ss+=1) *rr++ = *ss;
  /* #3118: @331 = dense(@307) */
  casadi_densify((&w307), casadi_s44, w331, 0);
  /* #3119: @331 = (@331-@340) */
  for (i=0, rr=w331, cs=w340; i<14; ++i) (*rr++) -= (*cs++);
  /* #3120: @307 = 0 */
  w307 = 0.;
  /* #3121: @308 = @254[7] */
  for (rr=(&w308), ss=w254+7; ss!=w254+8; ss+=1) *rr++ = *ss;
  /* #3122: @308 = @308' */
  /* #3123: @307 = mac(@308,@187,@307) */
  casadi_mtimes((&w308), casadi_s48, w187, casadi_s46, (&w307), casadi_s8, w, 0);
  /* #3124: @355 = 00 */
  /* #3125: @363 = zeros(3x1,0nz) */
  /* #3126: @364 = zeros(3x1,0nz) */
  /* #3127: @308 = @254[9] */
  for (rr=(&w308), ss=w254+9; ss!=w254+10; ss+=1) *rr++ = *ss;
  /* #3128: @340 = dense(@308) */
  casadi_densify((&w308), casadi_s45, w340, 0);
  /* #3129: @340 = (@340-@349) */
  for (i=0, rr=w340, cs=w349; i<14; ++i) (*rr++) -= (*cs++);
  /* #3130: @308 = 0 */
  w308 = 0.;
  /* #3131: @315 = @254[8] */
  for (rr=(&w315), ss=w254+8; ss!=w254+9; ss+=1) *rr++ = *ss;
  /* #3132: @315 = @315' */
  /* #3133: @308 = mac(@315,@190,@308) */
  casadi_mtimes((&w315), casadi_s47, w190, casadi_s46, (&w308), casadi_s8, w, 0);
  /* #3134: @373 = 00 */
  /* #3135: @382 = zeros(3x1,0nz) */
  /* #3136: @390 = zeros(3x1,0nz) */
  /* #3137: @315 = @254[10] */
  for (rr=(&w315), ss=w254+10; ss!=w254+11; ss+=1) *rr++ = *ss;
  /* #3138: @349 = dense(@315) */
  casadi_densify((&w315), casadi_s44, w349, 0);
  /* #3139: @349 = (@349-@358) */
  for (i=0, rr=w349, cs=w358; i<14; ++i) (*rr++) -= (*cs++);
  /* #3140: @315 = 0 */
  w315 = 0.;
  /* #3141: @316 = @254[9] */
  for (rr=(&w316), ss=w254+9; ss!=w254+10; ss+=1) *rr++ = *ss;
  /* #3142: @316 = @316' */
  /* #3143: @315 = mac(@316,@193,@315) */
  casadi_mtimes((&w316), casadi_s48, w193, casadi_s46, (&w315), casadi_s8, w, 0);
  /* #3144: @391 = 00 */
  /* #3145: @400 = zeros(3x1,0nz) */
  /* #3146: @409 = zeros(3x1,0nz) */
  /* #3147: @316 = @254[11] */
  for (rr=(&w316), ss=w254+11; ss!=w254+12; ss+=1) *rr++ = *ss;
  /* #3148: @358 = dense(@316) */
  casadi_densify((&w316), casadi_s45, w358, 0);
  /* #3149: @358 = (@358-@367) */
  for (i=0, rr=w358, cs=w367; i<14; ++i) (*rr++) -= (*cs++);
  /* #3150: @316 = 0 */
  w316 = 0.;
  /* #3151: @317 = @254[10] */
  for (rr=(&w317), ss=w254+10; ss!=w254+11; ss+=1) *rr++ = *ss;
  /* #3152: @317 = @317' */
  /* #3153: @316 = mac(@317,@196,@316) */
  casadi_mtimes((&w317), casadi_s47, w196, casadi_s46, (&w316), casadi_s8, w, 0);
  /* #3154: @417 = 00 */
  /* #3155: @418 = zeros(3x1,0nz) */
  /* #3156: @427 = zeros(3x1,0nz) */
  /* #3157: @317 = @254[12] */
  for (rr=(&w317), ss=w254+12; ss!=w254+13; ss+=1) *rr++ = *ss;
  /* #3158: @367 = dense(@317) */
  casadi_densify((&w317), casadi_s44, w367, 0);
  /* #3159: @367 = (@367-@376) */
  for (i=0, rr=w367, cs=w376; i<14; ++i) (*rr++) -= (*cs++);
  /* #3160: @317 = 0 */
  w317 = 0.;
  /* #3161: @324 = @254[11] */
  for (rr=(&w324), ss=w254+11; ss!=w254+12; ss+=1) *rr++ = *ss;
  /* #3162: @324 = @324' */
  /* #3163: @317 = mac(@324,@199,@317) */
  casadi_mtimes((&w324), casadi_s48, w199, casadi_s46, (&w317), casadi_s8, w, 0);
  /* #3164: @436 = 00 */
  /* #3165: @444 = zeros(3x1,0nz) */
  /* #3166: @445 = zeros(3x1,0nz) */
  /* #3167: @324 = @254[13] */
  for (rr=(&w324), ss=w254+13; ss!=w254+14; ss+=1) *rr++ = *ss;
  /* #3168: @376 = dense(@324) */
  casadi_densify((&w324), casadi_s45, w376, 0);
  /* #3169: @376 = (@376-@385) */
  for (i=0, rr=w376, cs=w385; i<14; ++i) (*rr++) -= (*cs++);
  /* #3170: @324 = 0 */
  w324 = 0.;
  /* #3171: @325 = @254[12] */
  for (rr=(&w325), ss=w254+12; ss!=w254+13; ss+=1) *rr++ = *ss;
  /* #3172: @325 = @325' */
  /* #3173: @324 = mac(@325,@202,@324) */
  casadi_mtimes((&w325), casadi_s47, w202, casadi_s46, (&w324), casadi_s8, w, 0);
  /* #3174: @454 = 00 */
  /* #3175: @463 = zeros(3x1,0nz) */
  /* #3176: @471 = zeros(3x1,0nz) */
  /* #3177: @325 = @254[14] */
  for (rr=(&w325), ss=w254+14; ss!=w254+15; ss+=1) *rr++ = *ss;
  /* #3178: @385 = dense(@325) */
  casadi_densify((&w325), casadi_s44, w385, 0);
  /* #3179: @385 = (@385-@394) */
  for (i=0, rr=w385, cs=w394; i<14; ++i) (*rr++) -= (*cs++);
  /* #3180: @325 = 0 */
  w325 = 0.;
  /* #3181: @326 = @254[13] */
  for (rr=(&w326), ss=w254+13; ss!=w254+14; ss+=1) *rr++ = *ss;
  /* #3182: @326 = @326' */
  /* #3183: @325 = mac(@326,@205,@325) */
  casadi_mtimes((&w326), casadi_s48, w205, casadi_s46, (&w325), casadi_s8, w, 0);
  /* #3184: @472 = 00 */
  /* #3185: @481 = zeros(3x1,0nz) */
  /* #3186: @490 = zeros(3x1,0nz) */
  /* #3187: @326 = @254[15] */
  for (rr=(&w326), ss=w254+15; ss!=w254+16; ss+=1) *rr++ = *ss;
  /* #3188: @394 = dense(@326) */
  casadi_densify((&w326), casadi_s45, w394, 0);
  /* #3189: @394 = (@394-@403) */
  for (i=0, rr=w394, cs=w403; i<14; ++i) (*rr++) -= (*cs++);
  /* #3190: @326 = 0 */
  w326 = 0.;
  /* #3191: @333 = @254[14] */
  for (rr=(&w333), ss=w254+14; ss!=w254+15; ss+=1) *rr++ = *ss;
  /* #3192: @333 = @333' */
  /* #3193: @326 = mac(@333,@208,@326) */
  casadi_mtimes((&w333), casadi_s47, w208, casadi_s46, (&w326), casadi_s8, w, 0);
  /* #3194: @502 = 00 */
  /* #3195: @503 = zeros(3x1,0nz) */
  /* #3196: @504 = zeros(3x1,0nz) */
  /* #3197: @333 = @254[16] */
  for (rr=(&w333), ss=w254+16; ss!=w254+17; ss+=1) *rr++ = *ss;
  /* #3198: @403 = dense(@333) */
  casadi_densify((&w333), casadi_s44, w403, 0);
  /* #3199: @403 = (@403-@412) */
  for (i=0, rr=w403, cs=w412; i<14; ++i) (*rr++) -= (*cs++);
  /* #3200: @333 = 0 */
  w333 = 0.;
  /* #3201: @334 = @254[15] */
  for (rr=(&w334), ss=w254+15; ss!=w254+16; ss+=1) *rr++ = *ss;
  /* #3202: @334 = @334' */
  /* #3203: @333 = mac(@334,@211,@333) */
  casadi_mtimes((&w334), casadi_s48, w211, casadi_s46, (&w333), casadi_s8, w, 0);
  /* #3204: @505 = 00 */
  /* #3205: @506 = zeros(3x1,0nz) */
  /* #3206: @507 = zeros(3x1,0nz) */
  /* #3207: @334 = @254[17] */
  for (rr=(&w334), ss=w254+17; ss!=w254+18; ss+=1) *rr++ = *ss;
  /* #3208: @412 = dense(@334) */
  casadi_densify((&w334), casadi_s45, w412, 0);
  /* #3209: @412 = (@412-@421) */
  for (i=0, rr=w412, cs=w421; i<14; ++i) (*rr++) -= (*cs++);
  /* #3210: @334 = 0 */
  w334 = 0.;
  /* #3211: @342 = @254[16] */
  for (rr=(&w342), ss=w254+16; ss!=w254+17; ss+=1) *rr++ = *ss;
  /* #3212: @342 = @342' */
  /* #3213: @334 = mac(@342,@214,@334) */
  casadi_mtimes((&w342), casadi_s47, w214, casadi_s46, (&w334), casadi_s8, w, 0);
  /* #3214: @508 = 00 */
  /* #3215: @509 = zeros(3x1,0nz) */
  /* #3216: @512 = zeros(3x1,0nz) */
  /* #3217: @342 = @254[18] */
  for (rr=(&w342), ss=w254+18; ss!=w254+19; ss+=1) *rr++ = *ss;
  /* #3218: @421 = dense(@342) */
  casadi_densify((&w342), casadi_s44, w421, 0);
  /* #3219: @421 = (@421-@430) */
  for (i=0, rr=w421, cs=w430; i<14; ++i) (*rr++) -= (*cs++);
  /* #3220: @342 = 0 */
  w342 = 0.;
  /* #3221: @343 = @254[17] */
  for (rr=(&w343), ss=w254+17; ss!=w254+18; ss+=1) *rr++ = *ss;
  /* #3222: @343 = @343' */
  /* #3223: @342 = mac(@343,@217,@342) */
  casadi_mtimes((&w343), casadi_s48, w217, casadi_s46, (&w342), casadi_s8, w, 0);
  /* #3224: @513 = 00 */
  /* #3225: @514 = zeros(3x1,0nz) */
  /* #3226: @515 = zeros(3x1,0nz) */
  /* #3227: @343 = @254[19] */
  for (rr=(&w343), ss=w254+19; ss!=w254+20; ss+=1) *rr++ = *ss;
  /* #3228: @430 = dense(@343) */
  casadi_densify((&w343), casadi_s45, w430, 0);
  /* #3229: @430 = (@430-@439) */
  for (i=0, rr=w430, cs=w439; i<14; ++i) (*rr++) -= (*cs++);
  /* #3230: @343 = 0 */
  w343 = 0.;
  /* #3231: @344 = @254[18] */
  for (rr=(&w344), ss=w254+18; ss!=w254+19; ss+=1) *rr++ = *ss;
  /* #3232: @344 = @344' */
  /* #3233: @343 = mac(@344,@220,@343) */
  casadi_mtimes((&w344), casadi_s47, w220, casadi_s46, (&w343), casadi_s8, w, 0);
  /* #3234: @516 = 00 */
  /* #3235: @517 = zeros(3x1,0nz) */
  /* #3236: @518 = zeros(3x1,0nz) */
  /* #3237: @344 = @254[20] */
  for (rr=(&w344), ss=w254+20; ss!=w254+21; ss+=1) *rr++ = *ss;
  /* #3238: @439 = dense(@344) */
  casadi_densify((&w344), casadi_s44, w439, 0);
  /* #3239: @439 = (@439-@448) */
  for (i=0, rr=w439, cs=w448; i<14; ++i) (*rr++) -= (*cs++);
  /* #3240: @344 = 0 */
  w344 = 0.;
  /* #3241: @351 = @254[19] */
  for (rr=(&w351), ss=w254+19; ss!=w254+20; ss+=1) *rr++ = *ss;
  /* #3242: @351 = @351' */
  /* #3243: @344 = mac(@351,@223,@344) */
  casadi_mtimes((&w351), casadi_s48, w223, casadi_s46, (&w344), casadi_s8, w, 0);
  /* #3244: @519 = 00 */
  /* #3245: @520 = zeros(3x1,0nz) */
  /* #3246: @521 = zeros(3x1,0nz) */
  /* #3247: @351 = @254[21] */
  for (rr=(&w351), ss=w254+21; ss!=w254+22; ss+=1) *rr++ = *ss;
  /* #3248: @448 = dense(@351) */
  casadi_densify((&w351), casadi_s45, w448, 0);
  /* #3249: @448 = (@448-@457) */
  for (i=0, rr=w448, cs=w457; i<14; ++i) (*rr++) -= (*cs++);
  /* #3250: @351 = 0 */
  w351 = 0.;
  /* #3251: @352 = @254[20] */
  for (rr=(&w352), ss=w254+20; ss!=w254+21; ss+=1) *rr++ = *ss;
  /* #3252: @352 = @352' */
  /* #3253: @351 = mac(@352,@226,@351) */
  casadi_mtimes((&w352), casadi_s47, w226, casadi_s46, (&w351), casadi_s8, w, 0);
  /* #3254: @522 = 00 */
  /* #3255: @523 = zeros(3x1,0nz) */
  /* #3256: @524 = zeros(3x1,0nz) */
  /* #3257: @352 = @254[22] */
  for (rr=(&w352), ss=w254+22; ss!=w254+23; ss+=1) *rr++ = *ss;
  /* #3258: @457 = dense(@352) */
  casadi_densify((&w352), casadi_s44, w457, 0);
  /* #3259: @457 = (@457-@466) */
  for (i=0, rr=w457, cs=w466; i<14; ++i) (*rr++) -= (*cs++);
  /* #3260: @352 = 0 */
  w352 = 0.;
  /* #3261: @353 = @254[21] */
  for (rr=(&w353), ss=w254+21; ss!=w254+22; ss+=1) *rr++ = *ss;
  /* #3262: @353 = @353' */
  /* #3263: @352 = mac(@353,@229,@352) */
  casadi_mtimes((&w353), casadi_s48, w229, casadi_s46, (&w352), casadi_s8, w, 0);
  /* #3264: @525 = 00 */
  /* #3265: @526 = zeros(3x1,0nz) */
  /* #3266: @527 = zeros(3x1,0nz) */
  /* #3267: @353 = @254[23] */
  for (rr=(&w353), ss=w254+23; ss!=w254+24; ss+=1) *rr++ = *ss;
  /* #3268: @466 = dense(@353) */
  casadi_densify((&w353), casadi_s45, w466, 0);
  /* #3269: @466 = (@466-@475) */
  for (i=0, rr=w466, cs=w475; i<14; ++i) (*rr++) -= (*cs++);
  /* #3270: @353 = 0 */
  w353 = 0.;
  /* #3271: @360 = @254[22] */
  for (rr=(&w360), ss=w254+22; ss!=w254+23; ss+=1) *rr++ = *ss;
  /* #3272: @360 = @360' */
  /* #3273: @353 = mac(@360,@232,@353) */
  casadi_mtimes((&w360), casadi_s47, w232, casadi_s46, (&w353), casadi_s8, w, 0);
  /* #3274: @528 = 00 */
  /* #3275: @529 = zeros(3x1,0nz) */
  /* #3276: @530 = zeros(3x1,0nz) */
  /* #3277: @360 = @254[24] */
  for (rr=(&w360), ss=w254+24; ss!=w254+25; ss+=1) *rr++ = *ss;
  /* #3278: @475 = dense(@360) */
  casadi_densify((&w360), casadi_s44, w475, 0);
  /* #3279: @475 = (@475-@484) */
  for (i=0, rr=w475, cs=w484; i<14; ++i) (*rr++) -= (*cs++);
  /* #3280: @360 = 0 */
  w360 = 0.;
  /* #3281: @361 = @254[23] */
  for (rr=(&w361), ss=w254+23; ss!=w254+24; ss+=1) *rr++ = *ss;
  /* #3282: @361 = @361' */
  /* #3283: @360 = mac(@361,@235,@360) */
  casadi_mtimes((&w361), casadi_s48, w235, casadi_s46, (&w360), casadi_s8, w, 0);
  /* #3284: @531 = 00 */
  /* #3285: @532 = zeros(3x1,0nz) */
  /* #3286: @533 = zeros(3x1,0nz) */
  /* #3287: @493 = (-@493) */
  for (i=0, rr=w493, cs=w493; i<14; ++i) *rr++ = (- *cs++ );
  /* #3288: @361 = 0 */
  w361 = 0.;
  /* #3289: @369 = @254[24] */
  for (rr=(&w369), ss=w254+24; ss!=w254+25; ss+=1) *rr++ = *ss;
  /* #3290: @369 = @369' */
  /* #3291: @361 = mac(@369,@238,@361) */
  casadi_mtimes((&w369), casadi_s47, w238, casadi_s46, (&w361), casadi_s8, w, 0);
  /* #3292: @534 = 00 */
  /* #3293: @535 = zeros(3x1,0nz) */
  /* #3294: @536 = zeros(3x1,0nz) */
  /* #3295: @369 = @254[0] */
  for (rr=(&w369), ss=w254+0; ss!=w254+1; ss+=1) *rr++ = *ss;
  /* #3296: @537 = vertcat(@162, @0, @244, @262, @243, @270, @6, @263, @264, @255, @282, @257, @265, @277, @260, @293, @285, @278, @279, @290, @305, @286, @298, @299, @300, @313, @287, @310, @319, @328, @322, @288, @336, @337, @346, @331, @307, @355, @363, @364, @340, @308, @373, @382, @390, @349, @315, @391, @400, @409, @358, @316, @417, @418, @427, @367, @317, @436, @444, @445, @376, @324, @454, @463, @471, @385, @325, @472, @481, @490, @394, @326, @502, @503, @504, @403, @333, @505, @506, @507, @412, @334, @508, @509, @512, @421, @342, @513, @514, @515, @430, @343, @516, @517, @518, @439, @344, @519, @520, @521, @448, @351, @522, @523, @524, @457, @352, @525, @526, @527, @466, @353, @528, @529, @530, @475, @360, @531, @532, @533, @493, @361, @534, @535, @536, @369) */
  rr=w537;
  for (i=0, cs=w162; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  for (i=0, cs=w243; i<2; ++i) *rr++ = *cs++;
  for (i=0, cs=w270; i<14; ++i) *rr++ = *cs++;
  *rr++ = w6;
  *rr++ = w255;
  for (i=0, cs=w282; i<14; ++i) *rr++ = *cs++;
  *rr++ = w257;
  *rr++ = w260;
  for (i=0, cs=w293; i<14; ++i) *rr++ = *cs++;
  *rr++ = w285;
  for (i=0, cs=w305; i<14; ++i) *rr++ = *cs++;
  *rr++ = w286;
  for (i=0, cs=w313; i<14; ++i) *rr++ = *cs++;
  *rr++ = w287;
  for (i=0, cs=w322; i<14; ++i) *rr++ = *cs++;
  *rr++ = w288;
  for (i=0, cs=w331; i<14; ++i) *rr++ = *cs++;
  *rr++ = w307;
  for (i=0, cs=w340; i<14; ++i) *rr++ = *cs++;
  *rr++ = w308;
  for (i=0, cs=w349; i<14; ++i) *rr++ = *cs++;
  *rr++ = w315;
  for (i=0, cs=w358; i<14; ++i) *rr++ = *cs++;
  *rr++ = w316;
  for (i=0, cs=w367; i<14; ++i) *rr++ = *cs++;
  *rr++ = w317;
  for (i=0, cs=w376; i<14; ++i) *rr++ = *cs++;
  *rr++ = w324;
  for (i=0, cs=w385; i<14; ++i) *rr++ = *cs++;
  *rr++ = w325;
  for (i=0, cs=w394; i<14; ++i) *rr++ = *cs++;
  *rr++ = w326;
  for (i=0, cs=w403; i<14; ++i) *rr++ = *cs++;
  *rr++ = w333;
  for (i=0, cs=w412; i<14; ++i) *rr++ = *cs++;
  *rr++ = w334;
  for (i=0, cs=w421; i<14; ++i) *rr++ = *cs++;
  *rr++ = w342;
  for (i=0, cs=w430; i<14; ++i) *rr++ = *cs++;
  *rr++ = w343;
  for (i=0, cs=w439; i<14; ++i) *rr++ = *cs++;
  *rr++ = w344;
  for (i=0, cs=w448; i<14; ++i) *rr++ = *cs++;
  *rr++ = w351;
  for (i=0, cs=w457; i<14; ++i) *rr++ = *cs++;
  *rr++ = w352;
  for (i=0, cs=w466; i<14; ++i) *rr++ = *cs++;
  *rr++ = w353;
  for (i=0, cs=w475; i<14; ++i) *rr++ = *cs++;
  *rr++ = w360;
  for (i=0, cs=w493; i<14; ++i) *rr++ = *cs++;
  *rr++ = w361;
  *rr++ = w369;
  /* #3297: @246 = @537[1, 2, 4, 5, 7, 10, 11, 14, 15, 16, 19, 22, 25, 27, 28, 31, 32, 35, 38, 40, 43, 44, 47, 48, 57, 59, 60, 63, 71, 74, 75, 78, 87, 89, 90, 93, 101, 104, 105, 108, 117, 119, 120, 123, 131, 134, 135, 138, 147, 149, 150, 153, 161, 164, 165, 168, 177, 179, 180, 183, 191, 194, 195, 198, 207, 209, 210, 213, 221, 224, 225, 228, 237, 239, 240, 243, 251, 254, 255, 258, 267, 269, 270, 273, 281, 284, 285, 288, 297, 299, 300, 303, 311, 314, 315, 318, 327, 329, 330, 333, 341, 344, 345, 348, 357, 359, 360, 363, 371, 374, 378, 379] */
  for (cii=casadi_s51, rr=w246, ss=w537; cii!=casadi_s51+112; ++cii) *rr++ = ss[*cii];
  /* #3298: (@240[7, 11, 17, 20, 25, 33, 36, 44, 53, 54, 66, 75, 83, 89, 90, 100, 109, 121, 130, 135, 143, 146, 154, 164, 193, 199, 200, 210, 245, 253, 256, 264, 303, 309, 310, 320, 355, 363, 366, 374, 413, 419, 420, 430, 465, 473, 476, 484, 523, 529, 530, 540, 575, 583, 586, 594, 633, 639, 640, 650, 685, 693, 696, 704, 743, 749, 750, 760, 795, 803, 806, 814, 853, 859, 860, 870, 905, 913, 916, 924, 963, 969, 970, 980, 1015, 1023, 1026, 1034, 1073, 1079, 1080, 1090, 1125, 1133, 1136, 1144, 1183, 1189, 1190, 1200, 1235, 1243, 1246, 1254, 1293, 1299, 1300, 1310, 1345, 1353, 1364, 1385] = @246) */
  for (cii=casadi_s52, rr=w240, ss=w246; cii!=casadi_s52+112; ++cii, ++ss) rr[*cii] = *ss;
  /* #3299: @0 = @256[1] */
  for (rr=(&w0), ss=w256+1; ss!=w256+2; ss+=1) *rr++ = *ss;
  /* #3300: @162 = dense(@0) */
  casadi_densify((&w0), casadi_s44, w162, 0);
  /* #3301: @162 = (@162-@271) */
  for (i=0, rr=w162, cs=w271; i<14; ++i) (*rr++) -= (*cs++);
  /* #3302: @0 = 0 */
  w0 = 0.;
  /* #3303: @6 = @256[0] */
  for (rr=(&w6), ss=w256+0; ss!=w256+1; ss+=1) *rr++ = *ss;
  /* #3304: @6 = @6' */
  /* #3305: @0 = mac(@6,@166,@0) */
  casadi_mtimes((&w6), casadi_s48, w166, casadi_s46, (&w0), casadi_s8, w, 0);
  /* #3306: @244 = 00 */
  /* #3307: @262 = zeros(3x1,0nz) */
  /* #3308: @263 = zeros(3x1,0nz) */
  /* #3309: @6 = @256[2] */
  for (rr=(&w6), ss=w256+2; ss!=w256+3; ss+=1) *rr++ = *ss;
  /* #3310: @271 = dense(@6) */
  casadi_densify((&w6), casadi_s45, w271, 0);
  /* #3311: @271 = (@271-@283) */
  for (i=0, rr=w271, cs=w283; i<14; ++i) (*rr++) -= (*cs++);
  /* #3312: @6 = 0 */
  w6 = 0.;
  /* #3313: @255 = @256[1] */
  for (rr=(&w255), ss=w256+1; ss!=w256+2; ss+=1) *rr++ = *ss;
  /* #3314: @255 = @255' */
  /* #3315: @6 = mac(@255,@169,@6) */
  casadi_mtimes((&w255), casadi_s47, w169, casadi_s46, (&w6), casadi_s8, w, 0);
  /* #3316: @264 = 00 */
  /* #3317: @265 = zeros(3x1,0nz) */
  /* #3318: @277 = zeros(3x1,0nz) */
  /* #3319: @255 = @256[3] */
  for (rr=(&w255), ss=w256+3; ss!=w256+4; ss+=1) *rr++ = *ss;
  /* #3320: @283 = dense(@255) */
  casadi_densify((&w255), casadi_s53, w283, 0);
  /* #3321: @283 = (@283-@294) */
  for (i=0, rr=w283, cs=w294; i<14; ++i) (*rr++) -= (*cs++);
  /* #3322: @255 = 0 */
  w255 = 0.;
  /* #3323: @257 = @256[2] */
  for (rr=(&w257), ss=w256+2; ss!=w256+3; ss+=1) *rr++ = *ss;
  /* #3324: @257 = @257' */
  /* #3325: @255 = mac(@257,@172,@255) */
  casadi_mtimes((&w257), casadi_s48, w172, casadi_s46, (&w255), casadi_s8, w, 0);
  /* #3326: @278 = 00 */
  /* #3327: @279 = zeros(3x1,0nz) */
  /* #3328: @290 = zeros(3x1,0nz) */
  /* #3329: @306 = (-@306) */
  for (i=0, rr=w306, cs=w306; i<14; ++i) *rr++ = (- *cs++ );
  /* #3330: @257 = 0 */
  w257 = 0.;
  /* #3331: @260 = @256[3] */
  for (rr=(&w260), ss=w256+3; ss!=w256+4; ss+=1) *rr++ = *ss;
  /* #3332: @260 = @260' */
  /* #3333: @257 = mac(@260,@175,@257) */
  casadi_mtimes((&w260), casadi_s54, w175, casadi_s46, (&w257), casadi_s8, w, 0);
  /* #3334: @298 = 00 */
  /* #3335: @299 = zeros(3x1,0nz) */
  /* #3336: @300 = zeros(3x1,0nz) */
  /* #3337: @260 = @256[4] */
  for (rr=(&w260), ss=w256+4; ss!=w256+5; ss+=1) *rr++ = *ss;
  /* #3338: @310 = 00 */
  /* #3339: @319 = 00 */
  /* #3340: @328 = zeros(3x1,0nz) */
  /* #3341: @336 = zeros(3x1,0nz) */
  /* #3342: @323 = (-@323) */
  for (i=0, rr=w323, cs=w323; i<14; ++i) *rr++ = (- *cs++ );
  /* #3343: @285 = 0 */
  w285 = 0.;
  /* #3344: @286 = @256[4] */
  for (rr=(&w286), ss=w256+4; ss!=w256+5; ss+=1) *rr++ = *ss;
  /* #3345: @286 = @286' */
  /* #3346: @285 = mac(@286,@181,@285) */
  casadi_mtimes((&w286), casadi_s54, w181, casadi_s46, (&w285), casadi_s8, w, 0);
  /* #3347: @337 = 00 */
  /* #3348: @346 = zeros(3x1,0nz) */
  /* #3349: @355 = zeros(3x1,0nz) */
  /* #3350: @286 = @256[5] */
  for (rr=(&w286), ss=w256+5; ss!=w256+6; ss+=1) *rr++ = *ss;
  /* #3351: @363 = 00 */
  /* #3352: @364 = 00 */
  /* #3353: @373 = zeros(3x1,0nz) */
  /* #3354: @382 = zeros(3x1,0nz) */
  /* #3355: @341 = (-@341) */
  for (i=0, rr=w341, cs=w341; i<14; ++i) *rr++ = (- *cs++ );
  /* #3356: @287 = 0 */
  w287 = 0.;
  /* #3357: @288 = @256[5] */
  for (rr=(&w288), ss=w256+5; ss!=w256+6; ss+=1) *rr++ = *ss;
  /* #3358: @288 = @288' */
  /* #3359: @287 = mac(@288,@187,@287) */
  casadi_mtimes((&w288), casadi_s54, w187, casadi_s46, (&w287), casadi_s8, w, 0);
  /* #3360: @390 = 00 */
  /* #3361: @391 = zeros(3x1,0nz) */
  /* #3362: @400 = zeros(3x1,0nz) */
  /* #3363: @288 = @256[6] */
  for (rr=(&w288), ss=w256+6; ss!=w256+7; ss+=1) *rr++ = *ss;
  /* #3364: @409 = 00 */
  /* #3365: @417 = 00 */
  /* #3366: @418 = zeros(3x1,0nz) */
  /* #3367: @427 = zeros(3x1,0nz) */
  /* #3368: @359 = (-@359) */
  for (i=0, rr=w359, cs=w359; i<14; ++i) *rr++ = (- *cs++ );
  /* #3369: @307 = 0 */
  w307 = 0.;
  /* #3370: @308 = @256[6] */
  for (rr=(&w308), ss=w256+6; ss!=w256+7; ss+=1) *rr++ = *ss;
  /* #3371: @308 = @308' */
  /* #3372: @307 = mac(@308,@193,@307) */
  casadi_mtimes((&w308), casadi_s54, w193, casadi_s46, (&w307), casadi_s8, w, 0);
  /* #3373: @436 = 00 */
  /* #3374: @444 = zeros(3x1,0nz) */
  /* #3375: @445 = zeros(3x1,0nz) */
  /* #3376: @308 = @256[7] */
  for (rr=(&w308), ss=w256+7; ss!=w256+8; ss+=1) *rr++ = *ss;
  /* #3377: @454 = 00 */
  /* #3378: @463 = 00 */
  /* #3379: @471 = zeros(3x1,0nz) */
  /* #3380: @472 = zeros(3x1,0nz) */
  /* #3381: @377 = (-@377) */
  for (i=0, rr=w377, cs=w377; i<14; ++i) *rr++ = (- *cs++ );
  /* #3382: @315 = 0 */
  w315 = 0.;
  /* #3383: @316 = @256[7] */
  for (rr=(&w316), ss=w256+7; ss!=w256+8; ss+=1) *rr++ = *ss;
  /* #3384: @316 = @316' */
  /* #3385: @315 = mac(@316,@199,@315) */
  casadi_mtimes((&w316), casadi_s54, w199, casadi_s46, (&w315), casadi_s8, w, 0);
  /* #3386: @481 = 00 */
  /* #3387: @490 = zeros(3x1,0nz) */
  /* #3388: @502 = zeros(3x1,0nz) */
  /* #3389: @316 = @256[8] */
  for (rr=(&w316), ss=w256+8; ss!=w256+9; ss+=1) *rr++ = *ss;
  /* #3390: @503 = 00 */
  /* #3391: @504 = 00 */
  /* #3392: @505 = zeros(3x1,0nz) */
  /* #3393: @506 = zeros(3x1,0nz) */
  /* #3394: @395 = (-@395) */
  for (i=0, rr=w395, cs=w395; i<14; ++i) *rr++ = (- *cs++ );
  /* #3395: @317 = 0 */
  w317 = 0.;
  /* #3396: @324 = @256[8] */
  for (rr=(&w324), ss=w256+8; ss!=w256+9; ss+=1) *rr++ = *ss;
  /* #3397: @324 = @324' */
  /* #3398: @317 = mac(@324,@205,@317) */
  casadi_mtimes((&w324), casadi_s54, w205, casadi_s46, (&w317), casadi_s8, w, 0);
  /* #3399: @507 = 00 */
  /* #3400: @508 = zeros(3x1,0nz) */
  /* #3401: @509 = zeros(3x1,0nz) */
  /* #3402: @324 = @256[9] */
  for (rr=(&w324), ss=w256+9; ss!=w256+10; ss+=1) *rr++ = *ss;
  /* #3403: @512 = 00 */
  /* #3404: @513 = 00 */
  /* #3405: @514 = zeros(3x1,0nz) */
  /* #3406: @515 = zeros(3x1,0nz) */
  /* #3407: @413 = (-@413) */
  for (i=0, rr=w413, cs=w413; i<14; ++i) *rr++ = (- *cs++ );
  /* #3408: @325 = 0 */
  w325 = 0.;
  /* #3409: @326 = @256[9] */
  for (rr=(&w326), ss=w256+9; ss!=w256+10; ss+=1) *rr++ = *ss;
  /* #3410: @326 = @326' */
  /* #3411: @325 = mac(@326,@211,@325) */
  casadi_mtimes((&w326), casadi_s54, w211, casadi_s46, (&w325), casadi_s8, w, 0);
  /* #3412: @516 = 00 */
  /* #3413: @517 = zeros(3x1,0nz) */
  /* #3414: @518 = zeros(3x1,0nz) */
  /* #3415: @326 = @256[10] */
  for (rr=(&w326), ss=w256+10; ss!=w256+11; ss+=1) *rr++ = *ss;
  /* #3416: @519 = 00 */
  /* #3417: @520 = 00 */
  /* #3418: @521 = zeros(3x1,0nz) */
  /* #3419: @522 = zeros(3x1,0nz) */
  /* #3420: @431 = (-@431) */
  for (i=0, rr=w431, cs=w431; i<14; ++i) *rr++ = (- *cs++ );
  /* #3421: @333 = 0 */
  w333 = 0.;
  /* #3422: @334 = @256[10] */
  for (rr=(&w334), ss=w256+10; ss!=w256+11; ss+=1) *rr++ = *ss;
  /* #3423: @334 = @334' */
  /* #3424: @333 = mac(@334,@217,@333) */
  casadi_mtimes((&w334), casadi_s54, w217, casadi_s46, (&w333), casadi_s8, w, 0);
  /* #3425: @523 = 00 */
  /* #3426: @524 = zeros(3x1,0nz) */
  /* #3427: @525 = zeros(3x1,0nz) */
  /* #3428: @334 = @256[11] */
  for (rr=(&w334), ss=w256+11; ss!=w256+12; ss+=1) *rr++ = *ss;
  /* #3429: @526 = 00 */
  /* #3430: @527 = 00 */
  /* #3431: @528 = zeros(3x1,0nz) */
  /* #3432: @529 = zeros(3x1,0nz) */
  /* #3433: @449 = (-@449) */
  for (i=0, rr=w449, cs=w449; i<14; ++i) *rr++ = (- *cs++ );
  /* #3434: @342 = 0 */
  w342 = 0.;
  /* #3435: @343 = @256[11] */
  for (rr=(&w343), ss=w256+11; ss!=w256+12; ss+=1) *rr++ = *ss;
  /* #3436: @343 = @343' */
  /* #3437: @342 = mac(@343,@223,@342) */
  casadi_mtimes((&w343), casadi_s54, w223, casadi_s46, (&w342), casadi_s8, w, 0);
  /* #3438: @530 = 00 */
  /* #3439: @531 = zeros(3x1,0nz) */
  /* #3440: @532 = zeros(3x1,0nz) */
  /* #3441: @343 = @256[12] */
  for (rr=(&w343), ss=w256+12; ss!=w256+13; ss+=1) *rr++ = *ss;
  /* #3442: @533 = 00 */
  /* #3443: @534 = 00 */
  /* #3444: @535 = zeros(3x1,0nz) */
  /* #3445: @536 = zeros(3x1,0nz) */
  /* #3446: @467 = (-@467) */
  for (i=0, rr=w467, cs=w467; i<14; ++i) *rr++ = (- *cs++ );
  /* #3447: @344 = 0 */
  w344 = 0.;
  /* #3448: @351 = @256[12] */
  for (rr=(&w351), ss=w256+12; ss!=w256+13; ss+=1) *rr++ = *ss;
  /* #3449: @351 = @351' */
  /* #3450: @344 = mac(@351,@229,@344) */
  casadi_mtimes((&w351), casadi_s54, w229, casadi_s46, (&w344), casadi_s8, w, 0);
  /* #3451: @538 = 00 */
  /* #3452: @539 = zeros(3x1,0nz) */
  /* #3453: @540 = zeros(3x1,0nz) */
  /* #3454: @351 = @256[13] */
  for (rr=(&w351), ss=w256+13; ss!=w256+14; ss+=1) *rr++ = *ss;
  /* #3455: @541 = 00 */
  /* #3456: @542 = 00 */
  /* #3457: @543 = zeros(3x1,0nz) */
  /* #3458: @544 = zeros(3x1,0nz) */
  /* #3459: @485 = (-@485) */
  for (i=0, rr=w485, cs=w485; i<14; ++i) *rr++ = (- *cs++ );
  /* #3460: @352 = 0 */
  w352 = 0.;
  /* #3461: @353 = @256[13] */
  for (rr=(&w353), ss=w256+13; ss!=w256+14; ss+=1) *rr++ = *ss;
  /* #3462: @353 = @353' */
  /* #3463: @352 = mac(@353,@235,@352) */
  casadi_mtimes((&w353), casadi_s54, w235, casadi_s46, (&w352), casadi_s8, w, 0);
  /* #3464: @545 = 00 */
  /* #3465: @546 = zeros(3x1,0nz) */
  /* #3466: @547 = zeros(3x1,0nz) */
  /* #3467: @548 = zeros(14x1,0nz) */
  /* #3468: @549 = 00 */
  /* #3469: @550 = 00 */
  /* #3470: @551 = zeros(3x1,0nz) */
  /* #3471: @552 = zeros(3x1,0nz) */
  /* #3472: @353 = @256[0] */
  for (rr=(&w353), ss=w256+0; ss!=w256+1; ss+=1) *rr++ = *ss;
  /* #3473: @553 = vertcat(@162, @0, @244, @262, @263, @271, @6, @264, @265, @277, @283, @255, @278, @279, @290, @306, @257, @298, @299, @300, @260, @310, @319, @328, @336, @323, @285, @337, @346, @355, @286, @363, @364, @373, @382, @341, @287, @390, @391, @400, @288, @409, @417, @418, @427, @359, @307, @436, @444, @445, @308, @454, @463, @471, @472, @377, @315, @481, @490, @502, @316, @503, @504, @505, @506, @395, @317, @507, @508, @509, @324, @512, @513, @514, @515, @413, @325, @516, @517, @518, @326, @519, @520, @521, @522, @431, @333, @523, @524, @525, @334, @526, @527, @528, @529, @449, @342, @530, @531, @532, @343, @533, @534, @535, @536, @467, @344, @538, @539, @540, @351, @541, @542, @543, @544, @485, @352, @545, @546, @547, @548, @549, @550, @551, @552, @353) */
  rr=w553;
  for (i=0, cs=w162; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  for (i=0, cs=w271; i<14; ++i) *rr++ = *cs++;
  *rr++ = w6;
  for (i=0, cs=w283; i<14; ++i) *rr++ = *cs++;
  *rr++ = w255;
  for (i=0, cs=w306; i<14; ++i) *rr++ = *cs++;
  *rr++ = w257;
  *rr++ = w260;
  for (i=0, cs=w323; i<14; ++i) *rr++ = *cs++;
  *rr++ = w285;
  *rr++ = w286;
  for (i=0, cs=w341; i<14; ++i) *rr++ = *cs++;
  *rr++ = w287;
  *rr++ = w288;
  for (i=0, cs=w359; i<14; ++i) *rr++ = *cs++;
  *rr++ = w307;
  *rr++ = w308;
  for (i=0, cs=w377; i<14; ++i) *rr++ = *cs++;
  *rr++ = w315;
  *rr++ = w316;
  for (i=0, cs=w395; i<14; ++i) *rr++ = *cs++;
  *rr++ = w317;
  *rr++ = w324;
  for (i=0, cs=w413; i<14; ++i) *rr++ = *cs++;
  *rr++ = w325;
  *rr++ = w326;
  for (i=0, cs=w431; i<14; ++i) *rr++ = *cs++;
  *rr++ = w333;
  *rr++ = w334;
  for (i=0, cs=w449; i<14; ++i) *rr++ = *cs++;
  *rr++ = w342;
  *rr++ = w343;
  for (i=0, cs=w467; i<14; ++i) *rr++ = *cs++;
  *rr++ = w344;
  *rr++ = w351;
  for (i=0, cs=w485; i<14; ++i) *rr++ = *cs++;
  *rr++ = w352;
  *rr++ = w353;
  /* #3474: @248 = @553[8, 10, 11, 14, 22, 25, 26, 29, 38, 41, 42, 44, 54, 57, 59, 60, 70, 73, 75, 76, 86, 89, 91, 92, 102, 105, 107, 108, 118, 121, 123, 124, 134, 137, 139, 140, 150, 153, 155, 156, 166, 169, 171, 172, 182, 185, 187, 188, 198, 201, 203, 204, 214, 217, 219, 220] */
  for (cii=casadi_s55, rr=w248, ss=w553; cii!=casadi_s55+56; ++cii) *rr++ = ss[*cii];
  /* #3475: (@240[28, 34, 35, 45, 80, 88, 91, 99, 138, 145, 148, 155, 196, 202, 211, 258, 306, 312, 321, 368, 416, 422, 431, 478, 526, 532, 541, 588, 636, 642, 651, 698, 746, 752, 761, 808, 856, 862, 871, 918, 966, 972, 981, 1028, 1076, 1082, 1091, 1138, 1186, 1192, 1201, 1248, 1296, 1302, 1311, 1386] = @248) */
  for (cii=casadi_s56, rr=w240, ss=w248; cii!=casadi_s56+56; ++cii, ++ss) rr[*cii] = *ss;
  /* #3476: @272 = (-@272) */
  for (i=0, rr=w272, cs=w272; i<14; ++i) *rr++ = (- *cs++ );
  /* #3477: @0 = 0 */
  w0 = 0.;
  /* #3478: @6 = @259[0] */
  for (rr=(&w6), ss=w259+0; ss!=w259+1; ss+=1) *rr++ = *ss;
  /* #3479: @6 = @6' */
  /* #3480: @0 = mac(@6,@166,@0) */
  casadi_mtimes((&w6), casadi_s54, w166, casadi_s46, (&w0), casadi_s8, w, 0);
  /* #3481: @244 = 00 */
  /* #3482: @262 = zeros(3x1,0nz) */
  /* #3483: @263 = zeros(3x1,0nz) */
  /* #3484: @6 = @259[1] */
  for (rr=(&w6), ss=w259+1; ss!=w259+2; ss+=1) *rr++ = *ss;
  /* #3485: @264 = 00 */
  /* #3486: @265 = 00 */
  /* #3487: @277 = zeros(3x1,0nz) */
  /* #3488: @278 = zeros(3x1,0nz) */
  /* #3489: @295 = (-@295) */
  for (i=0, rr=w295, cs=w295; i<14; ++i) *rr++ = (- *cs++ );
  /* #3490: @255 = 0 */
  w255 = 0.;
  /* #3491: @257 = @259[1] */
  for (rr=(&w257), ss=w259+1; ss!=w259+2; ss+=1) *rr++ = *ss;
  /* #3492: @257 = @257' */
  /* #3493: @255 = mac(@257,@172,@255) */
  casadi_mtimes((&w257), casadi_s54, w172, casadi_s46, (&w255), casadi_s8, w, 0);
  /* #3494: @279 = 00 */
  /* #3495: @290 = zeros(3x1,0nz) */
  /* #3496: @298 = zeros(3x1,0nz) */
  /* #3497: @257 = @259[2] */
  for (rr=(&w257), ss=w259+2; ss!=w259+3; ss+=1) *rr++ = *ss;
  /* #3498: @299 = 00 */
  /* #3499: @300 = 00 */
  /* #3500: @310 = zeros(3x1,0nz) */
  /* #3501: @319 = zeros(3x1,0nz) */
  /* #3502: @314 = (-@314) */
  for (i=0, rr=w314, cs=w314; i<14; ++i) *rr++ = (- *cs++ );
  /* #3503: @260 = 0 */
  w260 = 0.;
  /* #3504: @285 = @259[2] */
  for (rr=(&w285), ss=w259+2; ss!=w259+3; ss+=1) *rr++ = *ss;
  /* #3505: @285 = @285' */
  /* #3506: @260 = mac(@285,@178,@260) */
  casadi_mtimes((&w285), casadi_s54, w178, casadi_s46, (&w260), casadi_s8, w, 0);
  /* #3507: @328 = 00 */
  /* #3508: @336 = zeros(3x1,0nz) */
  /* #3509: @337 = zeros(3x1,0nz) */
  /* #3510: @285 = @259[3] */
  for (rr=(&w285), ss=w259+3; ss!=w259+4; ss+=1) *rr++ = *ss;
  /* #3511: @346 = 00 */
  /* #3512: @355 = 00 */
  /* #3513: @363 = zeros(3x1,0nz) */
  /* #3514: @364 = zeros(3x1,0nz) */
  /* #3515: @332 = (-@332) */
  for (i=0, rr=w332, cs=w332; i<14; ++i) *rr++ = (- *cs++ );
  /* #3516: @286 = 0 */
  w286 = 0.;
  /* #3517: @287 = @259[3] */
  for (rr=(&w287), ss=w259+3; ss!=w259+4; ss+=1) *rr++ = *ss;
  /* #3518: @287 = @287' */
  /* #3519: @286 = mac(@287,@184,@286) */
  casadi_mtimes((&w287), casadi_s54, w184, casadi_s46, (&w286), casadi_s8, w, 0);
  /* #3520: @373 = 00 */
  /* #3521: @382 = zeros(3x1,0nz) */
  /* #3522: @390 = zeros(3x1,0nz) */
  /* #3523: @287 = @259[4] */
  for (rr=(&w287), ss=w259+4; ss!=w259+5; ss+=1) *rr++ = *ss;
  /* #3524: @391 = 00 */
  /* #3525: @400 = 00 */
  /* #3526: @409 = zeros(3x1,0nz) */
  /* #3527: @417 = zeros(3x1,0nz) */
  /* #3528: @350 = (-@350) */
  for (i=0, rr=w350, cs=w350; i<14; ++i) *rr++ = (- *cs++ );
  /* #3529: @288 = 0 */
  w288 = 0.;
  /* #3530: @307 = @259[4] */
  for (rr=(&w307), ss=w259+4; ss!=w259+5; ss+=1) *rr++ = *ss;
  /* #3531: @307 = @307' */
  /* #3532: @288 = mac(@307,@190,@288) */
  casadi_mtimes((&w307), casadi_s54, w190, casadi_s46, (&w288), casadi_s8, w, 0);
  /* #3533: @418 = 00 */
  /* #3534: @427 = zeros(3x1,0nz) */
  /* #3535: @436 = zeros(3x1,0nz) */
  /* #3536: @307 = @259[5] */
  for (rr=(&w307), ss=w259+5; ss!=w259+6; ss+=1) *rr++ = *ss;
  /* #3537: @444 = 00 */
  /* #3538: @445 = 00 */
  /* #3539: @454 = zeros(3x1,0nz) */
  /* #3540: @463 = zeros(3x1,0nz) */
  /* #3541: @368 = (-@368) */
  for (i=0, rr=w368, cs=w368; i<14; ++i) *rr++ = (- *cs++ );
  /* #3542: @308 = 0 */
  w308 = 0.;
  /* #3543: @315 = @259[5] */
  for (rr=(&w315), ss=w259+5; ss!=w259+6; ss+=1) *rr++ = *ss;
  /* #3544: @315 = @315' */
  /* #3545: @308 = mac(@315,@196,@308) */
  casadi_mtimes((&w315), casadi_s54, w196, casadi_s46, (&w308), casadi_s8, w, 0);
  /* #3546: @471 = 00 */
  /* #3547: @472 = zeros(3x1,0nz) */
  /* #3548: @481 = zeros(3x1,0nz) */
  /* #3549: @315 = @259[6] */
  for (rr=(&w315), ss=w259+6; ss!=w259+7; ss+=1) *rr++ = *ss;
  /* #3550: @490 = 00 */
  /* #3551: @502 = 00 */
  /* #3552: @503 = zeros(3x1,0nz) */
  /* #3553: @504 = zeros(3x1,0nz) */
  /* #3554: @386 = (-@386) */
  for (i=0, rr=w386, cs=w386; i<14; ++i) *rr++ = (- *cs++ );
  /* #3555: @316 = 0 */
  w316 = 0.;
  /* #3556: @317 = @259[6] */
  for (rr=(&w317), ss=w259+6; ss!=w259+7; ss+=1) *rr++ = *ss;
  /* #3557: @317 = @317' */
  /* #3558: @316 = mac(@317,@202,@316) */
  casadi_mtimes((&w317), casadi_s54, w202, casadi_s46, (&w316), casadi_s8, w, 0);
  /* #3559: @505 = 00 */
  /* #3560: @506 = zeros(3x1,0nz) */
  /* #3561: @507 = zeros(3x1,0nz) */
  /* #3562: @317 = @259[7] */
  for (rr=(&w317), ss=w259+7; ss!=w259+8; ss+=1) *rr++ = *ss;
  /* #3563: @508 = 00 */
  /* #3564: @509 = 00 */
  /* #3565: @512 = zeros(3x1,0nz) */
  /* #3566: @513 = zeros(3x1,0nz) */
  /* #3567: @404 = (-@404) */
  for (i=0, rr=w404, cs=w404; i<14; ++i) *rr++ = (- *cs++ );
  /* #3568: @324 = 0 */
  w324 = 0.;
  /* #3569: @325 = @259[7] */
  for (rr=(&w325), ss=w259+7; ss!=w259+8; ss+=1) *rr++ = *ss;
  /* #3570: @325 = @325' */
  /* #3571: @324 = mac(@325,@208,@324) */
  casadi_mtimes((&w325), casadi_s54, w208, casadi_s46, (&w324), casadi_s8, w, 0);
  /* #3572: @514 = 00 */
  /* #3573: @515 = zeros(3x1,0nz) */
  /* #3574: @516 = zeros(3x1,0nz) */
  /* #3575: @325 = @259[8] */
  for (rr=(&w325), ss=w259+8; ss!=w259+9; ss+=1) *rr++ = *ss;
  /* #3576: @517 = 00 */
  /* #3577: @518 = 00 */
  /* #3578: @519 = zeros(3x1,0nz) */
  /* #3579: @520 = zeros(3x1,0nz) */
  /* #3580: @422 = (-@422) */
  for (i=0, rr=w422, cs=w422; i<14; ++i) *rr++ = (- *cs++ );
  /* #3581: @326 = 0 */
  w326 = 0.;
  /* #3582: @333 = @259[8] */
  for (rr=(&w333), ss=w259+8; ss!=w259+9; ss+=1) *rr++ = *ss;
  /* #3583: @333 = @333' */
  /* #3584: @326 = mac(@333,@214,@326) */
  casadi_mtimes((&w333), casadi_s54, w214, casadi_s46, (&w326), casadi_s8, w, 0);
  /* #3585: @521 = 00 */
  /* #3586: @522 = zeros(3x1,0nz) */
  /* #3587: @523 = zeros(3x1,0nz) */
  /* #3588: @333 = @259[9] */
  for (rr=(&w333), ss=w259+9; ss!=w259+10; ss+=1) *rr++ = *ss;
  /* #3589: @524 = 00 */
  /* #3590: @525 = 00 */
  /* #3591: @526 = zeros(3x1,0nz) */
  /* #3592: @527 = zeros(3x1,0nz) */
  /* #3593: @440 = (-@440) */
  for (i=0, rr=w440, cs=w440; i<14; ++i) *rr++ = (- *cs++ );
  /* #3594: @334 = 0 */
  w334 = 0.;
  /* #3595: @342 = @259[9] */
  for (rr=(&w342), ss=w259+9; ss!=w259+10; ss+=1) *rr++ = *ss;
  /* #3596: @342 = @342' */
  /* #3597: @334 = mac(@342,@220,@334) */
  casadi_mtimes((&w342), casadi_s54, w220, casadi_s46, (&w334), casadi_s8, w, 0);
  /* #3598: @528 = 00 */
  /* #3599: @529 = zeros(3x1,0nz) */
  /* #3600: @530 = zeros(3x1,0nz) */
  /* #3601: @342 = @259[10] */
  for (rr=(&w342), ss=w259+10; ss!=w259+11; ss+=1) *rr++ = *ss;
  /* #3602: @531 = 00 */
  /* #3603: @532 = 00 */
  /* #3604: @533 = zeros(3x1,0nz) */
  /* #3605: @534 = zeros(3x1,0nz) */
  /* #3606: @458 = (-@458) */
  for (i=0, rr=w458, cs=w458; i<14; ++i) *rr++ = (- *cs++ );
  /* #3607: @343 = 0 */
  w343 = 0.;
  /* #3608: @344 = @259[10] */
  for (rr=(&w344), ss=w259+10; ss!=w259+11; ss+=1) *rr++ = *ss;
  /* #3609: @344 = @344' */
  /* #3610: @343 = mac(@344,@226,@343) */
  casadi_mtimes((&w344), casadi_s54, w226, casadi_s46, (&w343), casadi_s8, w, 0);
  /* #3611: @535 = 00 */
  /* #3612: @536 = zeros(3x1,0nz) */
  /* #3613: @538 = zeros(3x1,0nz) */
  /* #3614: @344 = @259[11] */
  for (rr=(&w344), ss=w259+11; ss!=w259+12; ss+=1) *rr++ = *ss;
  /* #3615: @539 = 00 */
  /* #3616: @540 = 00 */
  /* #3617: @541 = zeros(3x1,0nz) */
  /* #3618: @542 = zeros(3x1,0nz) */
  /* #3619: @476 = (-@476) */
  for (i=0, rr=w476, cs=w476; i<14; ++i) *rr++ = (- *cs++ );
  /* #3620: @351 = 0 */
  w351 = 0.;
  /* #3621: @352 = @259[11] */
  for (rr=(&w352), ss=w259+11; ss!=w259+12; ss+=1) *rr++ = *ss;
  /* #3622: @352 = @352' */
  /* #3623: @351 = mac(@352,@232,@351) */
  casadi_mtimes((&w352), casadi_s54, w232, casadi_s46, (&w351), casadi_s8, w, 0);
  /* #3624: @543 = 00 */
  /* #3625: @544 = zeros(3x1,0nz) */
  /* #3626: @545 = zeros(3x1,0nz) */
  /* #3627: @352 = @259[12] */
  for (rr=(&w352), ss=w259+12; ss!=w259+13; ss+=1) *rr++ = *ss;
  /* #3628: @546 = 00 */
  /* #3629: @547 = 00 */
  /* #3630: @548 = zeros(3x1,0nz) */
  /* #3631: @549 = zeros(3x1,0nz) */
  /* #3632: @494 = (-@494) */
  for (i=0, rr=w494, cs=w494; i<14; ++i) *rr++ = (- *cs++ );
  /* #3633: @353 = 0 */
  w353 = 0.;
  /* #3634: @360 = @259[12] */
  for (rr=(&w360), ss=w259+12; ss!=w259+13; ss+=1) *rr++ = *ss;
  /* #3635: @360 = @360' */
  /* #3636: @353 = mac(@360,@238,@353) */
  casadi_mtimes((&w360), casadi_s54, w238, casadi_s46, (&w353), casadi_s8, w, 0);
  /* #3637: @550 = 00 */
  /* #3638: @551 = zeros(3x1,0nz) */
  /* #3639: @552 = zeros(3x1,0nz) */
  /* #3640: @360 = @259[0] */
  for (rr=(&w360), ss=w259+0; ss!=w259+1; ss+=1) *rr++ = *ss;
  /* #3641: @554 = vertcat(@272, @0, @244, @262, @263, @6, @264, @265, @277, @278, @295, @255, @279, @290, @298, @257, @299, @300, @310, @319, @314, @260, @328, @336, @337, @285, @346, @355, @363, @364, @332, @286, @373, @382, @390, @287, @391, @400, @409, @417, @350, @288, @418, @427, @436, @307, @444, @445, @454, @463, @368, @308, @471, @472, @481, @315, @490, @502, @503, @504, @386, @316, @505, @506, @507, @317, @508, @509, @512, @513, @404, @324, @514, @515, @516, @325, @517, @518, @519, @520, @422, @326, @521, @522, @523, @333, @524, @525, @526, @527, @440, @334, @528, @529, @530, @342, @531, @532, @533, @534, @458, @343, @535, @536, @538, @344, @539, @540, @541, @542, @476, @351, @543, @544, @545, @352, @546, @547, @548, @549, @494, @353, @550, @551, @552, @360) */
  rr=w554;
  for (i=0, cs=w272; i<14; ++i) *rr++ = *cs++;
  *rr++ = w0;
  *rr++ = w6;
  for (i=0, cs=w295; i<14; ++i) *rr++ = *cs++;
  *rr++ = w255;
  *rr++ = w257;
  for (i=0, cs=w314; i<14; ++i) *rr++ = *cs++;
  *rr++ = w260;
  *rr++ = w285;
  for (i=0, cs=w332; i<14; ++i) *rr++ = *cs++;
  *rr++ = w286;
  *rr++ = w287;
  for (i=0, cs=w350; i<14; ++i) *rr++ = *cs++;
  *rr++ = w288;
  *rr++ = w307;
  for (i=0, cs=w368; i<14; ++i) *rr++ = *cs++;
  *rr++ = w308;
  *rr++ = w315;
  for (i=0, cs=w386; i<14; ++i) *rr++ = *cs++;
  *rr++ = w316;
  *rr++ = w317;
  for (i=0, cs=w404; i<14; ++i) *rr++ = *cs++;
  *rr++ = w324;
  *rr++ = w325;
  for (i=0, cs=w422; i<14; ++i) *rr++ = *cs++;
  *rr++ = w326;
  *rr++ = w333;
  for (i=0, cs=w440; i<14; ++i) *rr++ = *cs++;
  *rr++ = w334;
  *rr++ = w342;
  for (i=0, cs=w458; i<14; ++i) *rr++ = *cs++;
  *rr++ = w343;
  *rr++ = w344;
  for (i=0, cs=w476; i<14; ++i) *rr++ = *cs++;
  *rr++ = w351;
  *rr++ = w352;
  for (i=0, cs=w494; i<14; ++i) *rr++ = *cs++;
  *rr++ = w353;
  *rr++ = w360;
  /* #3642: @555 = @554[9, 12, 14, 15, 25, 28, 30, 31, 41, 44, 46, 47, 57, 60, 62, 63, 73, 76, 78, 79, 89, 92, 94, 95, 105, 108, 110, 111, 121, 124, 126, 127, 137, 140, 142, 143, 153, 156, 158, 159, 169, 172, 174, 175, 185, 188, 190, 191, 201, 204, 206, 207] */
  for (cii=casadi_s57, rr=w555, ss=w554; cii!=casadi_s57+52; ++cii) *rr++ = ss[*cii];
  /* #3643: (@240[31, 37, 46, 93, 141, 147, 156, 203, 251, 257, 266, 313, 361, 367, 376, 423, 471, 477, 486, 533, 581, 587, 596, 643, 691, 697, 706, 753, 801, 807, 816, 863, 911, 917, 926, 973, 1021, 1027, 1036, 1083, 1131, 1137, 1146, 1193, 1241, 1247, 1256, 1303, 1351, 1357, 1366, 1387] = @555) */
  for (cii=casadi_s58, rr=w240, ss=w555; cii!=casadi_s58+52; ++cii, ++ss) rr[*cii] = *ss;
  /* #3644: @0 = @275[0] */
  for (rr=(&w0), ss=(&w275)+0; ss!=(&w275)+1; ss+=1) *rr++ = *ss;
  /* #3645: @244 = 00 */
  /* #3646: @262 = 00 */
  /* #3647: @263 = zeros(3x1,0nz) */
  /* #3648: @264 = zeros(3x1,0nz) */
  /* #3649: @284 = (-@284) */
  for (i=0, rr=w284, cs=w284; i<14; ++i) *rr++ = (- *cs++ );
  /* #3650: @6 = 0 */
  w6 = 0.;
  /* #3651: @255 = @275[0] */
  for (rr=(&w255), ss=(&w275)+0; ss!=(&w275)+1; ss+=1) *rr++ = *ss;
  /* #3652: @255 = @255' */
  /* #3653: @6 = mac(@255,@169,@6) */
  casadi_mtimes((&w255), casadi_s54, w169, casadi_s46, (&w6), casadi_s8, w, 0);
  /* #3654: @265 = 00 */
  /* #3655: @277 = zeros(3x1,0nz) */
  /* #3656: @278 = zeros(3x1,0nz) */
  /* #3657: @279 = zeros(14x1,0nz) */
  /* #3658: @290 = 00 */
  /* #3659: @298 = 00 */
  /* #3660: @299 = zeros(3x1,0nz) */
  /* #3661: @300 = zeros(3x1,0nz) */
  /* #3662: @310 = zeros(14x1,0nz) */
  /* #3663: @319 = 00 */
  /* #3664: @328 = 00 */
  /* #3665: @336 = zeros(3x1,0nz) */
  /* #3666: @337 = zeros(3x1,0nz) */
  /* #3667: @346 = zeros(14x1,0nz) */
  /* #3668: @355 = 00 */
  /* #3669: @363 = 00 */
  /* #3670: @364 = zeros(3x1,0nz) */
  /* #3671: @373 = zeros(3x1,0nz) */
  /* #3672: @382 = zeros(14x1,0nz) */
  /* #3673: @390 = 00 */
  /* #3674: @391 = 00 */
  /* #3675: @400 = zeros(3x1,0nz) */
  /* #3676: @409 = zeros(3x1,0nz) */
  /* #3677: @417 = zeros(14x1,0nz) */
  /* #3678: @418 = 00 */
  /* #3679: @427 = 00 */
  /* #3680: @436 = zeros(3x1,0nz) */
  /* #3681: @444 = zeros(3x1,0nz) */
  /* #3682: @445 = zeros(14x1,0nz) */
  /* #3683: @454 = 00 */
  /* #3684: @463 = 00 */
  /* #3685: @471 = zeros(3x1,0nz) */
  /* #3686: @472 = zeros(3x1,0nz) */
  /* #3687: @481 = zeros(14x1,0nz) */
  /* #3688: @490 = 00 */
  /* #3689: @502 = 00 */
  /* #3690: @503 = zeros(3x1,0nz) */
  /* #3691: @504 = zeros(3x1,0nz) */
  /* #3692: @505 = zeros(14x1,0nz) */
  /* #3693: @506 = 00 */
  /* #3694: @507 = 00 */
  /* #3695: @508 = zeros(3x1,0nz) */
  /* #3696: @509 = zeros(3x1,0nz) */
  /* #3697: @512 = zeros(14x1,0nz) */
  /* #3698: @513 = 00 */
  /* #3699: @514 = 00 */
  /* #3700: @515 = zeros(3x1,0nz) */
  /* #3701: @516 = zeros(3x1,0nz) */
  /* #3702: @517 = zeros(14x1,0nz) */
  /* #3703: @518 = 00 */
  /* #3704: @519 = 00 */
  /* #3705: @520 = zeros(3x1,0nz) */
  /* #3706: @521 = zeros(3x1,0nz) */
  /* #3707: @522 = zeros(14x1,0nz) */
  /* #3708: @523 = 00 */
  /* #3709: @524 = 00 */
  /* #3710: @525 = zeros(3x1,0nz) */
  /* #3711: @526 = zeros(3x1,0nz) */
  /* #3712: @527 = zeros(14x1,0nz) */
  /* #3713: @528 = 00 */
  /* #3714: @529 = 00 */
  /* #3715: @530 = zeros(3x1,0nz) */
  /* #3716: @531 = zeros(3x1,0nz) */
  /* #3717: @532 = zeros(14x1,0nz) */
  /* #3718: @533 = 00 */
  /* #3719: @534 = 00 */
  /* #3720: @535 = zeros(3x1,0nz) */
  /* #3721: @536 = zeros(3x1,0nz) */
  /* #3722: @538 = zeros(14x1,0nz) */
  /* #3723: @539 = 00 */
  /* #3724: @540 = 00 */
  /* #3725: @541 = zeros(3x1,0nz) */
  /* #3726: @542 = zeros(3x1,0nz) */
  /* #3727: @543 = zeros(14x1,0nz) */
  /* #3728: @544 = 00 */
  /* #3729: @545 = 00 */
  /* #3730: @546 = zeros(3x1,0nz) */
  /* #3731: @547 = zeros(3x1,0nz) */
  /* #3732: @548 = zeros(14x1,0nz) */
  /* #3733: @549 = 00 */
  /* #3734: @550 = 00 */
  /* #3735: @551 = zeros(3x1,0nz) */
  /* #3736: @552 = zeros(3x1,0nz) */
  /* #3737: @556 = zeros(14x1,0nz) */
  /* #3738: @557 = 00 */
  /* #3739: @558 = 00 */
  /* #3740: @559 = zeros(3x1,0nz) */
  /* #3741: @560 = zeros(3x1,0nz) */
  /* #3742: @561 = zeros(14x1,0nz) */
  /* #3743: @562 = 00 */
  /* #3744: @563 = 00 */
  /* #3745: @564 = zeros(3x1,0nz) */
  /* #3746: @565 = zeros(3x1,0nz) */
  /* #3747: @566 = zeros(14x1,0nz) */
  /* #3748: @567 = 00 */
  /* #3749: @568 = 00 */
  /* #3750: @569 = zeros(3x1,0nz) */
  /* #3751: @570 = zeros(3x1,0nz) */
  /* #3752: @571 = zeros(14x1,0nz) */
  /* #3753: @572 = 00 */
  /* #3754: @573 = 00 */
  /* #3755: @574 = zeros(3x1,0nz) */
  /* #3756: @575 = zeros(3x1,0nz) */
  /* #3757: @576 = zeros(14x1,0nz) */
  /* #3758: @577 = 00 */
  /* #3759: @578 = 00 */
  /* #3760: @579 = zeros(3x1,0nz) */
  /* #3761: @580 = zeros(3x1,0nz) */
  /* #3762: @581 = zeros(14x1,0nz) */
  /* #3763: @582 = 00 */
  /* #3764: @583 = 00 */
  /* #3765: @584 = zeros(3x1,0nz) */
  /* #3766: @585 = zeros(3x1,0nz) */
  /* #3767: @586 = zeros(14x1,0nz) */
  /* #3768: @587 = 00 */
  /* #3769: @588 = 00 */
  /* #3770: @589 = zeros(3x1,0nz) */
  /* #3771: @590 = zeros(3x1,0nz) */
  /* #3772: @591 = zeros(14x1,0nz) */
  /* #3773: @161 = vertcat(@0, @244, @262, @263, @264, @284, @6, @265, @277, @278, @279, @290, @298, @299, @300, @310, @319, @328, @336, @337, @346, @355, @363, @364, @373, @382, @390, @391, @400, @409, @417, @418, @427, @436, @444, @445, @454, @463, @471, @472, @481, @490, @502, @503, @504, @505, @506, @507, @508, @509, @512, @513, @514, @515, @516, @517, @518, @519, @520, @521, @522, @523, @524, @525, @526, @527, @528, @529, @530, @531, @532, @533, @534, @535, @536, @538, @539, @540, @541, @542, @543, @544, @545, @546, @547, @548, @549, @550, @551, @552, @556, @557, @558, @559, @560, @561, @562, @563, @564, @565, @566, @567, @568, @569, @570, @571, @572, @573, @574, @575, @576, @577, @578, @579, @580, @581, @582, @583, @584, @585, @586, @587, @588, @589, @590, @591) */
  rr=w161;
  *rr++ = w0;
  for (i=0, cs=w284; i<14; ++i) *rr++ = *cs++;
  *rr++ = w6;
  /* #3774: @81 = @161[0, 10, 13, 15] */
  for (cii=casadi_s59, rr=w81, ss=w161; cii!=casadi_s59+4; ++cii) *rr++ = ss[*cii];
  /* #3775: (@240[38, 86, 92, 101] = @81) */
  for (cii=casadi_s60, rr=w240, ss=w81; cii!=casadi_s60+4; ++cii, ++ss) rr[*cii] = *ss;
  /* #3776: @592 = @240' */
  casadi_trans(w240,casadi_s62, w592, casadi_s61, iw);
  /* #3777: output[3][0] = @592 */
  casadi_copy(w592, 1389, res[3]);
  return 0;
}

/* adj1_dae:(t[0],x[14],z[0],p[4],u[0],out_ode[14x1,0nz],out_alg[0],out_quad[0],adj_ode[14],adj_alg[0],adj_quad[0])->(adj_t[0],adj_x[14],adj_z[0],adj_p[4],adj_u[0]) */
static int casadi_f20(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real *rr;
  const casadi_real *cs;
  casadi_real *w1=w+0, *w2=w+14, *w3=w+17, w4, *w5=w+21, *w9=w+24;
  /* #0: @0 = zeros(3x1,0nz) */
  /* #1: @1 = input[8][0] */
  casadi_copy(arg[8], 14, w1);
  /* #2: {@2, @3, @4, @5, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w3);
  w4 = w1[6];
  casadi_copy(w1+7, 3, w5);
  /* #3: @6 = 00 */
  /* #4: @7 = zeros(3x1,0nz) */
  /* #5: @8 = 00 */
  /* #6: @9 = vertcat(@0, @2, @6, @7, @5, @8) */
  rr=w9;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<3; ++i) *rr++ = *cs++;
  /* #7: @1 = dense(@9) */
  casadi_densify(w9, casadi_s63, w1, 0);
  /* #8: output[1][0] = @1 */
  casadi_copy(w1, 14, res[1]);
  /* #9: output[3][0] = @3 */
  casadi_copy(w3, 3, res[3]);
  /* #10: output[3][1] = @4 */
  if (res[3]) res[3][3] = w4;
  return 0;
}

/* adj1_step:(t[0],h,x0[14],v0[0],p[4],u[0],out_xf[14x1,0nz],out_vf[0],out_qf[0],adj_xf[14],adj_vf[0],adj_qf[0])->(adj_t[0],adj_h,adj_x0[14],adj_v0[0],adj_p[4],adj_u[0]) */
static int casadi_f19(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+6, *rr;
  const casadi_real **arg1=arg+12, *cr, *cs;
  casadi_real *w1=w+30, w2, w3, *w6=w+46, *w8=w+50, *w9=w+64, *w11=w+78, *w12=w+92, *w14=w+106, *w16=w+120, w21, *w22=w+135, *w23=w+149, *w26=w+163, *w27=w+177, w28, *w29=w+182, *w30=w+196, *w31=w+210, *w32=w+214, w33, *w34=w+219;
  /* #0: @0 = 0x1 */
  /* #1: @1 = input[2][0] */
  casadi_copy(arg[2], 14, w1);
  /* #2: @2 = input[1][0] */
  w2 = arg[1] ? arg[1][0] : 0;
  /* #3: @3 = 2 */
  w3 = 2.;
  /* #4: @3 = (@2/@3) */
  w3  = (w2/w3);
  /* #5: @4 = 0x1 */
  /* #6: @5 = 0x1 */
  /* #7: @6 = input[4][0] */
  casadi_copy(arg[4], 4, w6);
  /* #8: @7 = 0x1 */
  /* #9: {@8, NULL, NULL} = dae(@4, @1, @5, @6, @7) */
  arg1[0]=0;
  arg1[1]=w1;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w8;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #10: @9 = (@3*@8) */
  for (i=0, rr=w9, cs=w8; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #11: @9 = (@1+@9) */
  for (i=0, rr=w9, cr=w1, cs=w9; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #12: @10 = 0x1 */
  /* #13: {@11, NULL, NULL} = dae(@0, @9, @10, @6, @7) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w11;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #14: @12 = (@3*@11) */
  for (i=0, rr=w12, cs=w11; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #15: @12 = (@1+@12) */
  for (i=0, rr=w12, cr=w1, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #16: @13 = 0x1 */
  /* #17: {@14, NULL, NULL} = dae(@0, @12, @13, @6, @7) */
  arg1[0]=0;
  arg1[1]=w12;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w14;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #18: @15 = 0x1 */
  /* #19: @16 = (@2*@14) */
  for (i=0, rr=w16, cs=w14; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #20: @16 = (@1+@16) */
  for (i=0, rr=w16, cr=w1, cs=w16; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #21: @17 = 0x1 */
  /* #22: @18 = zeros(14x1,0nz) */
  /* #23: @19 = 0x1 */
  /* #24: @20 = 0x1 */
  /* #25: @21 = 6 */
  w21 = 6.;
  /* #26: @21 = (@2/@21) */
  w21  = (w2/w21);
  /* #27: @22 = input[9][0] */
  casadi_copy(arg[9], 14, w22);
  /* #28: @23 = (@21*@22) */
  for (i=0, rr=w23, cs=w22; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #29: @24 = 0x1 */
  /* #30: @25 = 0x1 */
  /* #31: {NULL, @26, NULL, @27, NULL} = adj1_dae(@15, @16, @17, @6, @7, @18, @19, @20, @23, @24, @25) */
  arg1[0]=0;
  arg1[1]=w16;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w23;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w26;
  res1[2]=0;
  res1[3]=w27;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #32: @21 = dot(@14, @26) */
  w21 = casadi_dot(14, w14, w26);
  /* #33: @28 = 0.5 */
  w28 = 5.0000000000000000e-01;
  /* #34: @18 = zeros(14x1,0nz) */
  /* #35: @19 = 0x1 */
  /* #36: @20 = 0x1 */
  /* #37: @29 = (@2*@26) */
  for (i=0, rr=w29, cs=w26; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #38: @30 = (2.*@23) */
  for (i=0, rr=w30, cs=w23; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #39: @29 = (@29+@30) */
  for (i=0, rr=w29, cs=w30; i<14; ++i) (*rr++) += (*cs++);
  /* #40: @24 = 0x1 */
  /* #41: @25 = 0x1 */
  /* #42: {NULL, @30, NULL, @31, NULL} = adj1_dae(@0, @12, @13, @6, @7, @18, @19, @20, @29, @24, @25) */
  arg1[0]=0;
  arg1[1]=w12;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w29;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w30;
  res1[2]=0;
  res1[3]=w31;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #43: @2 = dot(@11, @30) */
  w2 = casadi_dot(14, w11, w30);
  /* #44: @13 = zeros(14x1,0nz) */
  /* #45: @18 = 0x1 */
  /* #46: @19 = 0x1 */
  /* #47: @12 = (@3*@30) */
  for (i=0, rr=w12, cs=w30; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #48: @29 = (2.*@23) */
  for (i=0, rr=w29, cs=w23; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #49: @12 = (@12+@29) */
  for (i=0, rr=w12, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #50: @20 = 0x1 */
  /* #51: @24 = 0x1 */
  /* #52: {NULL, @29, NULL, @32, NULL} = adj1_dae(@0, @9, @10, @6, @7, @13, @18, @19, @12, @20, @24) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w12;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w29;
  res1[2]=0;
  res1[3]=w32;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #53: @33 = dot(@8, @29) */
  w33 = casadi_dot(14, w8, w29);
  /* #54: @2 = (@2+@33) */
  w2 += w33;
  /* #55: @28 = (@28*@2) */
  w28 *= w2;
  /* #56: @21 = (@21+@28) */
  w21 += w28;
  /* #57: @28 = 0.166667 */
  w28 = 1.6666666666666666e-01;
  /* #58: @11 = (2.*@11) */
  for (i=0, rr=w11, cs=w11; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #59: @8 = (@8+@11) */
  for (i=0, rr=w8, cs=w11; i<14; ++i) (*rr++) += (*cs++);
  /* #60: @14 = (2.*@14) */
  for (i=0, rr=w14, cs=w14; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #61: @8 = (@8+@14) */
  for (i=0, rr=w8, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #62: {@14, NULL, NULL} = dae(@15, @16, @17, @6, @7) */
  arg1[0]=0;
  arg1[1]=w16;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w14;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #63: @8 = (@8+@14) */
  for (i=0, rr=w8, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #64: @2 = dot(@8, @22) */
  w2 = casadi_dot(14, w8, w22);
  /* #65: @28 = (@28*@2) */
  w28 *= w2;
  /* #66: @21 = (@21+@28) */
  w21 += w28;
  /* #67: output[1][0] = @21 */
  if (res[1]) res[1][0] = w21;
  /* #68: @22 = (@22+@26) */
  for (i=0, rr=w22, cs=w26; i<14; ++i) (*rr++) += (*cs++);
  /* #69: @22 = (@22+@30) */
  for (i=0, rr=w22, cs=w30; i<14; ++i) (*rr++) += (*cs++);
  /* #70: @22 = (@22+@29) */
  for (i=0, rr=w22, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #71: @15 = zeros(14x1,0nz) */
  /* #72: @17 = 0x1 */
  /* #73: @0 = 0x1 */
  /* #74: @29 = (@3*@29) */
  for (i=0, rr=w29, cs=w29; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #75: @23 = (@23+@29) */
  for (i=0, rr=w23, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #76: @10 = 0x1 */
  /* #77: @13 = 0x1 */
  /* #78: {NULL, @29, NULL, @34, NULL} = adj1_dae(@4, @1, @5, @6, @7, @15, @17, @0, @23, @10, @13) */
  arg1[0]=0;
  arg1[1]=w1;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w23;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w29;
  res1[2]=0;
  res1[3]=w34;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #79: @22 = (@22+@29) */
  for (i=0, rr=w22, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #80: output[2][0] = @22 */
  casadi_copy(w22, 14, res[2]);
  /* #81: @27 = (@27+@31) */
  for (i=0, rr=w27, cs=w31; i<4; ++i) (*rr++) += (*cs++);
  /* #82: @27 = (@27+@32) */
  for (i=0, rr=w27, cs=w32; i<4; ++i) (*rr++) += (*cs++);
  /* #83: @27 = (@27+@34) */
  for (i=0, rr=w27, cs=w34; i<4; ++i) (*rr++) += (*cs++);
  /* #84: output[4][0] = @27 */
  casadi_copy(w27, 4, res[4]);
  return 0;
}

/* fwd14_dae:(t[0],x[14],z[0],p[4],u[0],out_ode[14x1,0nz],out_alg[0],out_quad[0],fwd_t[0x14],fwd_x[14x14],fwd_z[0x14],fwd_p[4x14],fwd_u[0x14])->(fwd_ode[14x14],fwd_alg[0x14],fwd_quad[0x14]) */
static int casadi_f22(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real *rr;
  const casadi_real *cs;
  casadi_real *w0=w+0, *w1=w+14, *w2=w+17, *w3=w+20, *w4=w+24, w5, *w8=w+28, *w9=w+38, *w10=w+48, *w11=w+58, *w12=w+68, *w13=w+78, *w14=w+88, *w15=w+98, *w16=w+108, *w17=w+118, *w18=w+128, *w19=w+138, *w20=w+148, *w21=w+158, *w22=w+168, *w23=w+308;
  /* #0: @0 = input[9][0] */
  casadi_copy(arg[9], 14, w0);
  /* #1: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #2: @3 = input[11][0] */
  casadi_copy(arg[11], 4, w3);
  /* #3: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #4: @6 = zeros(3x1,0nz) */
  /* #5: @7 = 00 */
  /* #6: @8 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w8;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #7: @0 = input[9][1] */
  casadi_copy(arg[9] ? arg[9]+14 : 0, 14, w0);
  /* #8: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #9: @3 = input[11][1] */
  casadi_copy(arg[11] ? arg[11]+4 : 0, 4, w3);
  /* #10: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #11: @6 = zeros(3x1,0nz) */
  /* #12: @7 = 00 */
  /* #13: @9 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w9;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #14: @0 = input[9][2] */
  casadi_copy(arg[9] ? arg[9]+28 : 0, 14, w0);
  /* #15: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #16: @3 = input[11][2] */
  casadi_copy(arg[11] ? arg[11]+8 : 0, 4, w3);
  /* #17: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #18: @6 = zeros(3x1,0nz) */
  /* #19: @7 = 00 */
  /* #20: @10 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w10;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #21: @0 = input[9][3] */
  casadi_copy(arg[9] ? arg[9]+42 : 0, 14, w0);
  /* #22: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #23: @3 = input[11][3] */
  casadi_copy(arg[11] ? arg[11]+12 : 0, 4, w3);
  /* #24: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #25: @6 = zeros(3x1,0nz) */
  /* #26: @7 = 00 */
  /* #27: @11 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w11;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #28: @0 = input[9][4] */
  casadi_copy(arg[9] ? arg[9]+56 : 0, 14, w0);
  /* #29: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #30: @3 = input[11][4] */
  casadi_copy(arg[11] ? arg[11]+16 : 0, 4, w3);
  /* #31: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #32: @6 = zeros(3x1,0nz) */
  /* #33: @7 = 00 */
  /* #34: @12 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w12;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #35: @0 = input[9][5] */
  casadi_copy(arg[9] ? arg[9]+70 : 0, 14, w0);
  /* #36: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #37: @3 = input[11][5] */
  casadi_copy(arg[11] ? arg[11]+20 : 0, 4, w3);
  /* #38: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #39: @6 = zeros(3x1,0nz) */
  /* #40: @7 = 00 */
  /* #41: @13 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w13;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #42: @0 = input[9][6] */
  casadi_copy(arg[9] ? arg[9]+84 : 0, 14, w0);
  /* #43: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #44: @3 = input[11][6] */
  casadi_copy(arg[11] ? arg[11]+24 : 0, 4, w3);
  /* #45: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #46: @6 = zeros(3x1,0nz) */
  /* #47: @7 = 00 */
  /* #48: @14 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w14;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #49: @0 = input[9][7] */
  casadi_copy(arg[9] ? arg[9]+98 : 0, 14, w0);
  /* #50: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #51: @3 = input[11][7] */
  casadi_copy(arg[11] ? arg[11]+28 : 0, 4, w3);
  /* #52: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #53: @6 = zeros(3x1,0nz) */
  /* #54: @7 = 00 */
  /* #55: @15 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w15;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #56: @0 = input[9][8] */
  casadi_copy(arg[9] ? arg[9]+112 : 0, 14, w0);
  /* #57: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #58: @3 = input[11][8] */
  casadi_copy(arg[11] ? arg[11]+32 : 0, 4, w3);
  /* #59: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #60: @6 = zeros(3x1,0nz) */
  /* #61: @7 = 00 */
  /* #62: @16 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w16;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #63: @0 = input[9][9] */
  casadi_copy(arg[9] ? arg[9]+126 : 0, 14, w0);
  /* #64: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #65: @3 = input[11][9] */
  casadi_copy(arg[11] ? arg[11]+36 : 0, 4, w3);
  /* #66: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #67: @6 = zeros(3x1,0nz) */
  /* #68: @7 = 00 */
  /* #69: @17 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w17;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #70: @0 = input[9][10] */
  casadi_copy(arg[9] ? arg[9]+140 : 0, 14, w0);
  /* #71: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #72: @3 = input[11][10] */
  casadi_copy(arg[11] ? arg[11]+40 : 0, 4, w3);
  /* #73: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #74: @6 = zeros(3x1,0nz) */
  /* #75: @7 = 00 */
  /* #76: @18 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w18;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #77: @0 = input[9][11] */
  casadi_copy(arg[9] ? arg[9]+154 : 0, 14, w0);
  /* #78: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #79: @3 = input[11][11] */
  casadi_copy(arg[11] ? arg[11]+44 : 0, 4, w3);
  /* #80: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #81: @6 = zeros(3x1,0nz) */
  /* #82: @7 = 00 */
  /* #83: @19 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w19;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #84: @0 = input[9][12] */
  casadi_copy(arg[9] ? arg[9]+168 : 0, 14, w0);
  /* #85: {NULL, @1, NULL, NULL, @2, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w2);
  /* #86: @3 = input[11][12] */
  casadi_copy(arg[11] ? arg[11]+48 : 0, 4, w3);
  /* #87: {@4, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w4);
  w5 = w3[3];
  /* #88: @6 = zeros(3x1,0nz) */
  /* #89: @7 = 00 */
  /* #90: @20 = vertcat(@1, @4, @5, @2, @6, @7) */
  rr=w20;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  /* #91: @0 = input[9][13] */
  casadi_copy(arg[9] ? arg[9]+182 : 0, 14, w0);
  /* #92: {NULL, @1, NULL, NULL, @4, NULL} = vertsplit(@0) */
  casadi_copy(w0+3, 3, w1);
  casadi_copy(w0+10, 3, w4);
  /* #93: @3 = input[11][13] */
  casadi_copy(arg[11] ? arg[11]+52 : 0, 4, w3);
  /* #94: {@2, @5} = vertsplit(@3) */
  casadi_copy(w3, 3, w2);
  w5 = w3[3];
  /* #95: @6 = zeros(3x1,0nz) */
  /* #96: @7 = 00 */
  /* #97: @21 = vertcat(@1, @2, @5, @4, @6, @7) */
  rr=w21;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  /* #98: @22 = horzcat(@8, @9, @10, @11, @12, @13, @14, @15, @16, @17, @18, @19, @20, @21) */
  rr=w22;
  for (i=0, cs=w8; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w9; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w13; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w17; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w18; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w19; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w20; i<10; ++i) *rr++ = *cs++;
  for (i=0, cs=w21; i<10; ++i) *rr++ = *cs++;
  /* #99: @23 = dense(@22) */
  casadi_densify(w22, casadi_s64, w23, 0);
  /* #100: output[0][0] = @23 */
  casadi_copy(w23, 196, res[0]);
  return 0;
}

/* fwd14_step:(t[0],h,x0[14],v0[0],p[4],u[0],out_xf[14x1,0nz],out_vf[0],out_qf[0],fwd_t[0x14],fwd_h[1x14],fwd_x0[14x14],fwd_v0[0x14],fwd_p[4x14],fwd_u[0x14])->(fwd_xf[14x14],fwd_vf[0x14],fwd_qf[0x14]) */
static int casadi_f21(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+3, *rr;
  const casadi_real **arg1=arg+15, *cr, *cs;
  casadi_real *w0=w+504, *w2=w+518, *w4=w+532, *w6=w+536, w8, w9, *w10=w+552, *w12=w+566, *w13=w+580, *w14=w+594, *w16=w+608, *w17=w+622, *w20=w+636, w21, w22, w23, *w28=w+653, *w29=w+667, *w30=w+681, *w31=w+695, *w32=w+709, *w33=w+723, *w34=w+737, *w35=w+751, *w36=w+765, *w37=w+779, *w38=w+793, *w39=w+807, *w40=w+821, *w41=w+835, *w43=w+1031, *w44=w+1035, *w45=w+1039, *w46=w+1043, *w47=w+1047, *w48=w+1051, *w49=w+1055, *w50=w+1059, *w51=w+1063, *w52=w+1067, *w53=w+1071, *w54=w+1075, *w55=w+1079, *w56=w+1083, *w57=w+1087, *w59=w+1143, *w60=w+1339, *w61=w+1353, *w62=w+1367, *w63=w+1381, *w64=w+1395, *w65=w+1409, *w66=w+1423, *w67=w+1437, *w68=w+1451, *w69=w+1465, *w70=w+1479, *w71=w+1493, *w72=w+1507, w73, w74, *w75=w+1523, *w76=w+1537, w77, w78, *w79=w+1553, w80, w81, *w82=w+1569, w83, w84, *w85=w+1585, w86, w87, *w88=w+1601, w89, w90, *w91=w+1617, w92, w93, *w94=w+1633, w95, w96, *w97=w+1649, w98, w99, *w100=w+1665, w101, w102, *w103=w+1681, w104, w105, *w106=w+1697, w107, w108, *w109=w+1713, w110, w111, *w112=w+1729, w113, *w114=w+1744, *w115=w+1758, *w116=w+1772, *w117=w+1786, *w118=w+1800, *w119=w+1814, *w120=w+1828, *w121=w+1842, *w122=w+1856, *w123=w+1870, *w124=w+1884, *w125=w+1898, *w126=w+1912, *w127=w+1926, *w128=w+1940, *w129=w+1954, *w130=w+1968, *w131=w+1982, *w132=w+1996, *w133=w+2010, *w134=w+2024, *w135=w+2038;
  /* #0: @0 = input[11][0] */
  casadi_copy(arg[11], 14, w0);
  /* #1: @1 = 0x1 */
  /* #2: @2 = input[2][0] */
  casadi_copy(arg[2], 14, w2);
  /* #3: @3 = 0x1 */
  /* #4: @4 = input[4][0] */
  casadi_copy(arg[4], 4, w4);
  /* #5: @5 = 0x1 */
  /* #6: {@6, NULL, NULL} = dae(@1, @2, @3, @4, @5) */
  arg1[0]=0;
  arg1[1]=w2;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w6;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #7: @7 = 0x1 */
  /* #8: @8 = input[1][0] */
  w8 = arg[1] ? arg[1][0] : 0;
  /* #9: @9 = 2 */
  w9 = 2.;
  /* #10: @9 = (@8/@9) */
  w9  = (w8/w9);
  /* #11: @10 = (@9*@6) */
  for (i=0, rr=w10, cs=w6; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #12: @10 = (@2+@10) */
  for (i=0, rr=w10, cr=w2, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #13: @11 = 0x1 */
  /* #14: {@12, NULL, NULL} = dae(@7, @10, @11, @4, @5) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w12;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #15: @13 = (2.*@12) */
  for (i=0, rr=w13, cs=w12; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #16: @13 = (@6+@13) */
  for (i=0, rr=w13, cr=w6, cs=w13; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #17: @14 = (@9*@12) */
  for (i=0, rr=w14, cs=w12; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #18: @14 = (@2+@14) */
  for (i=0, rr=w14, cr=w2, cs=w14; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #19: @15 = 0x1 */
  /* #20: {@16, NULL, NULL} = dae(@7, @14, @15, @4, @5) */
  arg1[0]=0;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w16;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #21: @17 = (2.*@16) */
  for (i=0, rr=w17, cs=w16; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #22: @13 = (@13+@17) */
  for (i=0, rr=w13, cs=w17; i<14; ++i) (*rr++) += (*cs++);
  /* #23: @18 = 0x1 */
  /* #24: @17 = (@8*@16) */
  for (i=0, rr=w17, cs=w16; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #25: @17 = (@2+@17) */
  for (i=0, rr=w17, cr=w2, cs=w17; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #26: @19 = 0x1 */
  /* #27: {@20, NULL, NULL} = dae(@18, @17, @19, @4, @5) */
  arg1[0]=0;
  arg1[1]=w17;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  res1[0]=w20;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #28: @13 = (@13+@20) */
  for (i=0, rr=w13, cs=w20; i<14; ++i) (*rr++) += (*cs++);
  /* #29: @21 = 0.166667 */
  w21 = 1.6666666666666666e-01;
  /* #30: @22 = input[10][0] */
  w22 = arg[10] ? arg[10][0] : 0;
  /* #31: @23 = (@21*@22) */
  w23  = (w21*w22);
  /* #32: @20 = (@13*@23) */
  for (i=0, rr=w20, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w23);
  /* #33: @23 = 6 */
  w23 = 6.;
  /* #34: @23 = (@8/@23) */
  w23  = (w8/w23);
  /* #35: @24 = zeros(14x1,0nz) */
  /* #36: @25 = 0x1 */
  /* #37: @26 = 0x1 */
  /* #38: @27 = 0x14 */
  /* #39: @28 = input[11][1] */
  casadi_copy(arg[11] ? arg[11]+14 : 0, 14, w28);
  /* #40: @29 = input[11][2] */
  casadi_copy(arg[11] ? arg[11]+28 : 0, 14, w29);
  /* #41: @30 = input[11][3] */
  casadi_copy(arg[11] ? arg[11]+42 : 0, 14, w30);
  /* #42: @31 = input[11][4] */
  casadi_copy(arg[11] ? arg[11]+56 : 0, 14, w31);
  /* #43: @32 = input[11][5] */
  casadi_copy(arg[11] ? arg[11]+70 : 0, 14, w32);
  /* #44: @33 = input[11][6] */
  casadi_copy(arg[11] ? arg[11]+84 : 0, 14, w33);
  /* #45: @34 = input[11][7] */
  casadi_copy(arg[11] ? arg[11]+98 : 0, 14, w34);
  /* #46: @35 = input[11][8] */
  casadi_copy(arg[11] ? arg[11]+112 : 0, 14, w35);
  /* #47: @36 = input[11][9] */
  casadi_copy(arg[11] ? arg[11]+126 : 0, 14, w36);
  /* #48: @37 = input[11][10] */
  casadi_copy(arg[11] ? arg[11]+140 : 0, 14, w37);
  /* #49: @38 = input[11][11] */
  casadi_copy(arg[11] ? arg[11]+154 : 0, 14, w38);
  /* #50: @39 = input[11][12] */
  casadi_copy(arg[11] ? arg[11]+168 : 0, 14, w39);
  /* #51: @40 = input[11][13] */
  casadi_copy(arg[11] ? arg[11]+182 : 0, 14, w40);
  /* #52: @41 = horzcat(@0, @28, @29, @30, @31, @32, @33, @34, @35, @36, @37, @38, @39, @40) */
  rr=w41;
  for (i=0, cs=w0; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w28; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w29; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w33; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w34; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w35; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<14; ++i) *rr++ = *cs++;
  /* #53: @42 = 0x14 */
  /* #54: @43 = input[13][0] */
  casadi_copy(arg[13], 4, w43);
  /* #55: @44 = input[13][1] */
  casadi_copy(arg[13] ? arg[13]+4 : 0, 4, w44);
  /* #56: @45 = input[13][2] */
  casadi_copy(arg[13] ? arg[13]+8 : 0, 4, w45);
  /* #57: @46 = input[13][3] */
  casadi_copy(arg[13] ? arg[13]+12 : 0, 4, w46);
  /* #58: @47 = input[13][4] */
  casadi_copy(arg[13] ? arg[13]+16 : 0, 4, w47);
  /* #59: @48 = input[13][5] */
  casadi_copy(arg[13] ? arg[13]+20 : 0, 4, w48);
  /* #60: @49 = input[13][6] */
  casadi_copy(arg[13] ? arg[13]+24 : 0, 4, w49);
  /* #61: @50 = input[13][7] */
  casadi_copy(arg[13] ? arg[13]+28 : 0, 4, w50);
  /* #62: @51 = input[13][8] */
  casadi_copy(arg[13] ? arg[13]+32 : 0, 4, w51);
  /* #63: @52 = input[13][9] */
  casadi_copy(arg[13] ? arg[13]+36 : 0, 4, w52);
  /* #64: @53 = input[13][10] */
  casadi_copy(arg[13] ? arg[13]+40 : 0, 4, w53);
  /* #65: @54 = input[13][11] */
  casadi_copy(arg[13] ? arg[13]+44 : 0, 4, w54);
  /* #66: @55 = input[13][12] */
  casadi_copy(arg[13] ? arg[13]+48 : 0, 4, w55);
  /* #67: @56 = input[13][13] */
  casadi_copy(arg[13] ? arg[13]+52 : 0, 4, w56);
  /* #68: @57 = horzcat(@43, @44, @45, @46, @47, @48, @49, @50, @51, @52, @53, @54, @55, @56) */
  rr=w57;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<4; ++i) *rr++ = *cs++;
  /* #69: @58 = 0x14 */
  /* #70: {@59, NULL, NULL} = fwd14_dae(@1, @2, @3, @4, @5, @24, @25, @26, @27, @41, @42, @57, @58) */
  arg1[0]=0;
  arg1[1]=w2;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w41;
  arg1[10]=0;
  arg1[11]=w57;
  arg1[12]=0;
  res1[0]=w59;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #71: {@2, @60, @61, @62, @63, @64, @65, @66, @67, @68, @69, @70, @71, @72} = horzsplit(@59) */
  casadi_copy(w59, 14, w2);
  casadi_copy(w59+14, 14, w60);
  casadi_copy(w59+28, 14, w61);
  casadi_copy(w59+42, 14, w62);
  casadi_copy(w59+56, 14, w63);
  casadi_copy(w59+70, 14, w64);
  casadi_copy(w59+84, 14, w65);
  casadi_copy(w59+98, 14, w66);
  casadi_copy(w59+112, 14, w67);
  casadi_copy(w59+126, 14, w68);
  casadi_copy(w59+140, 14, w69);
  casadi_copy(w59+154, 14, w70);
  casadi_copy(w59+168, 14, w71);
  casadi_copy(w59+182, 14, w72);
  /* #72: @1 = zeros(14x1,0nz) */
  /* #73: @3 = 0x1 */
  /* #74: @24 = 0x1 */
  /* #75: @25 = 0x14 */
  /* #76: @73 = 0.5 */
  w73 = 5.0000000000000000e-01;
  /* #77: @74 = (@73*@22) */
  w74  = (w73*w22);
  /* #78: @75 = (@6*@74) */
  for (i=0, rr=w75, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w74);
  /* #79: @76 = (@9*@2) */
  for (i=0, rr=w76, cs=w2; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #80: @75 = (@75+@76) */
  for (i=0, rr=w75, cs=w76; i<14; ++i) (*rr++) += (*cs++);
  /* #81: @75 = (@0+@75) */
  for (i=0, rr=w75, cr=w0, cs=w75; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #82: @77 = input[10][1] */
  w77 = arg[10] ? arg[10][1] : 0;
  /* #83: @78 = (@73*@77) */
  w78  = (w73*w77);
  /* #84: @76 = (@6*@78) */
  for (i=0, rr=w76, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w78);
  /* #85: @79 = (@9*@60) */
  for (i=0, rr=w79, cs=w60; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #86: @76 = (@76+@79) */
  for (i=0, rr=w76, cs=w79; i<14; ++i) (*rr++) += (*cs++);
  /* #87: @76 = (@28+@76) */
  for (i=0, rr=w76, cr=w28, cs=w76; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #88: @80 = input[10][2] */
  w80 = arg[10] ? arg[10][2] : 0;
  /* #89: @81 = (@73*@80) */
  w81  = (w73*w80);
  /* #90: @79 = (@6*@81) */
  for (i=0, rr=w79, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w81);
  /* #91: @82 = (@9*@61) */
  for (i=0, rr=w82, cs=w61; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #92: @79 = (@79+@82) */
  for (i=0, rr=w79, cs=w82; i<14; ++i) (*rr++) += (*cs++);
  /* #93: @79 = (@29+@79) */
  for (i=0, rr=w79, cr=w29, cs=w79; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #94: @83 = input[10][3] */
  w83 = arg[10] ? arg[10][3] : 0;
  /* #95: @84 = (@73*@83) */
  w84  = (w73*w83);
  /* #96: @82 = (@6*@84) */
  for (i=0, rr=w82, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w84);
  /* #97: @85 = (@9*@62) */
  for (i=0, rr=w85, cs=w62; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #98: @82 = (@82+@85) */
  for (i=0, rr=w82, cs=w85; i<14; ++i) (*rr++) += (*cs++);
  /* #99: @82 = (@30+@82) */
  for (i=0, rr=w82, cr=w30, cs=w82; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #100: @86 = input[10][4] */
  w86 = arg[10] ? arg[10][4] : 0;
  /* #101: @87 = (@73*@86) */
  w87  = (w73*w86);
  /* #102: @85 = (@6*@87) */
  for (i=0, rr=w85, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w87);
  /* #103: @88 = (@9*@63) */
  for (i=0, rr=w88, cs=w63; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #104: @85 = (@85+@88) */
  for (i=0, rr=w85, cs=w88; i<14; ++i) (*rr++) += (*cs++);
  /* #105: @85 = (@31+@85) */
  for (i=0, rr=w85, cr=w31, cs=w85; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #106: @89 = input[10][5] */
  w89 = arg[10] ? arg[10][5] : 0;
  /* #107: @90 = (@73*@89) */
  w90  = (w73*w89);
  /* #108: @88 = (@6*@90) */
  for (i=0, rr=w88, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w90);
  /* #109: @91 = (@9*@64) */
  for (i=0, rr=w91, cs=w64; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #110: @88 = (@88+@91) */
  for (i=0, rr=w88, cs=w91; i<14; ++i) (*rr++) += (*cs++);
  /* #111: @88 = (@32+@88) */
  for (i=0, rr=w88, cr=w32, cs=w88; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #112: @92 = input[10][6] */
  w92 = arg[10] ? arg[10][6] : 0;
  /* #113: @93 = (@73*@92) */
  w93  = (w73*w92);
  /* #114: @91 = (@6*@93) */
  for (i=0, rr=w91, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w93);
  /* #115: @94 = (@9*@65) */
  for (i=0, rr=w94, cs=w65; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #116: @91 = (@91+@94) */
  for (i=0, rr=w91, cs=w94; i<14; ++i) (*rr++) += (*cs++);
  /* #117: @91 = (@33+@91) */
  for (i=0, rr=w91, cr=w33, cs=w91; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #118: @95 = input[10][7] */
  w95 = arg[10] ? arg[10][7] : 0;
  /* #119: @96 = (@73*@95) */
  w96  = (w73*w95);
  /* #120: @94 = (@6*@96) */
  for (i=0, rr=w94, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w96);
  /* #121: @97 = (@9*@66) */
  for (i=0, rr=w97, cs=w66; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #122: @94 = (@94+@97) */
  for (i=0, rr=w94, cs=w97; i<14; ++i) (*rr++) += (*cs++);
  /* #123: @94 = (@34+@94) */
  for (i=0, rr=w94, cr=w34, cs=w94; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #124: @98 = input[10][8] */
  w98 = arg[10] ? arg[10][8] : 0;
  /* #125: @99 = (@73*@98) */
  w99  = (w73*w98);
  /* #126: @97 = (@6*@99) */
  for (i=0, rr=w97, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w99);
  /* #127: @100 = (@9*@67) */
  for (i=0, rr=w100, cs=w67; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #128: @97 = (@97+@100) */
  for (i=0, rr=w97, cs=w100; i<14; ++i) (*rr++) += (*cs++);
  /* #129: @97 = (@35+@97) */
  for (i=0, rr=w97, cr=w35, cs=w97; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #130: @101 = input[10][9] */
  w101 = arg[10] ? arg[10][9] : 0;
  /* #131: @102 = (@73*@101) */
  w102  = (w73*w101);
  /* #132: @100 = (@6*@102) */
  for (i=0, rr=w100, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w102);
  /* #133: @103 = (@9*@68) */
  for (i=0, rr=w103, cs=w68; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #134: @100 = (@100+@103) */
  for (i=0, rr=w100, cs=w103; i<14; ++i) (*rr++) += (*cs++);
  /* #135: @100 = (@36+@100) */
  for (i=0, rr=w100, cr=w36, cs=w100; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #136: @104 = input[10][10] */
  w104 = arg[10] ? arg[10][10] : 0;
  /* #137: @105 = (@73*@104) */
  w105  = (w73*w104);
  /* #138: @103 = (@6*@105) */
  for (i=0, rr=w103, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w105);
  /* #139: @106 = (@9*@69) */
  for (i=0, rr=w106, cs=w69; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #140: @103 = (@103+@106) */
  for (i=0, rr=w103, cs=w106; i<14; ++i) (*rr++) += (*cs++);
  /* #141: @103 = (@37+@103) */
  for (i=0, rr=w103, cr=w37, cs=w103; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #142: @107 = input[10][11] */
  w107 = arg[10] ? arg[10][11] : 0;
  /* #143: @108 = (@73*@107) */
  w108  = (w73*w107);
  /* #144: @106 = (@6*@108) */
  for (i=0, rr=w106, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w108);
  /* #145: @109 = (@9*@70) */
  for (i=0, rr=w109, cs=w70; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #146: @106 = (@106+@109) */
  for (i=0, rr=w106, cs=w109; i<14; ++i) (*rr++) += (*cs++);
  /* #147: @106 = (@38+@106) */
  for (i=0, rr=w106, cr=w38, cs=w106; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #148: @110 = input[10][12] */
  w110 = arg[10] ? arg[10][12] : 0;
  /* #149: @111 = (@73*@110) */
  w111  = (w73*w110);
  /* #150: @109 = (@6*@111) */
  for (i=0, rr=w109, cr=w6; i<14; ++i) (*rr++)  = ((*cr++)*w111);
  /* #151: @112 = (@9*@71) */
  for (i=0, rr=w112, cs=w71; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #152: @109 = (@109+@112) */
  for (i=0, rr=w109, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #153: @109 = (@39+@109) */
  for (i=0, rr=w109, cr=w39, cs=w109; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #154: @113 = input[10][13] */
  w113 = arg[10] ? arg[10][13] : 0;
  /* #155: @73 = (@73*@113) */
  w73 *= w113;
  /* #156: @6 = (@6*@73) */
  for (i=0, rr=w6; i<14; ++i) (*rr++) *= w73;
  /* #157: @112 = (@9*@72) */
  for (i=0, rr=w112, cs=w72; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #158: @6 = (@6+@112) */
  for (i=0, rr=w6, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #159: @6 = (@40+@6) */
  for (i=0, rr=w6, cr=w40, cs=w6; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #160: @59 = horzcat(@75, @76, @79, @82, @85, @88, @91, @94, @97, @100, @103, @106, @109, @6) */
  rr=w59;
  for (i=0, cs=w75; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w82; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w85; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w88; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w91; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w94; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w97; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w100; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w103; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w106; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w109; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  /* #161: @26 = 0x14 */
  /* #162: @57 = horzcat(@43, @44, @45, @46, @47, @48, @49, @50, @51, @52, @53, @54, @55, @56) */
  rr=w57;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<4; ++i) *rr++ = *cs++;
  /* #163: @27 = 0x14 */
  /* #164: {@41, NULL, NULL} = fwd14_dae(@7, @10, @11, @4, @5, @1, @3, @24, @25, @59, @26, @57, @27) */
  arg1[0]=0;
  arg1[1]=w10;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w59;
  arg1[10]=0;
  arg1[11]=w57;
  arg1[12]=0;
  res1[0]=w41;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #165: {@10, @75, @76, @79, @82, @85, @88, @91, @94, @97, @100, @103, @106, @109} = horzsplit(@41) */
  casadi_copy(w41, 14, w10);
  casadi_copy(w41+14, 14, w75);
  casadi_copy(w41+28, 14, w76);
  casadi_copy(w41+42, 14, w79);
  casadi_copy(w41+56, 14, w82);
  casadi_copy(w41+70, 14, w85);
  casadi_copy(w41+84, 14, w88);
  casadi_copy(w41+98, 14, w91);
  casadi_copy(w41+112, 14, w94);
  casadi_copy(w41+126, 14, w97);
  casadi_copy(w41+140, 14, w100);
  casadi_copy(w41+154, 14, w103);
  casadi_copy(w41+168, 14, w106);
  casadi_copy(w41+182, 14, w109);
  /* #166: @6 = (2.*@10) */
  for (i=0, rr=w6, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #167: @2 = (@2+@6) */
  for (i=0, rr=w2, cs=w6; i<14; ++i) (*rr++) += (*cs++);
  /* #168: @11 = zeros(14x1,0nz) */
  /* #169: @1 = 0x1 */
  /* #170: @3 = 0x1 */
  /* #171: @24 = 0x14 */
  /* #172: @6 = (@12*@74) */
  for (i=0, rr=w6, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w74);
  /* #173: @10 = (@9*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #174: @6 = (@6+@10) */
  for (i=0, rr=w6, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #175: @6 = (@0+@6) */
  for (i=0, rr=w6, cr=w0, cs=w6; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #176: @10 = (@12*@78) */
  for (i=0, rr=w10, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w78);
  /* #177: @112 = (@9*@75) */
  for (i=0, rr=w112, cs=w75; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #178: @10 = (@10+@112) */
  for (i=0, rr=w10, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #179: @10 = (@28+@10) */
  for (i=0, rr=w10, cr=w28, cs=w10; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #180: @112 = (@12*@81) */
  for (i=0, rr=w112, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w81);
  /* #181: @114 = (@9*@76) */
  for (i=0, rr=w114, cs=w76; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #182: @112 = (@112+@114) */
  for (i=0, rr=w112, cs=w114; i<14; ++i) (*rr++) += (*cs++);
  /* #183: @112 = (@29+@112) */
  for (i=0, rr=w112, cr=w29, cs=w112; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #184: @114 = (@12*@84) */
  for (i=0, rr=w114, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w84);
  /* #185: @115 = (@9*@79) */
  for (i=0, rr=w115, cs=w79; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #186: @114 = (@114+@115) */
  for (i=0, rr=w114, cs=w115; i<14; ++i) (*rr++) += (*cs++);
  /* #187: @114 = (@30+@114) */
  for (i=0, rr=w114, cr=w30, cs=w114; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #188: @115 = (@12*@87) */
  for (i=0, rr=w115, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w87);
  /* #189: @116 = (@9*@82) */
  for (i=0, rr=w116, cs=w82; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #190: @115 = (@115+@116) */
  for (i=0, rr=w115, cs=w116; i<14; ++i) (*rr++) += (*cs++);
  /* #191: @115 = (@31+@115) */
  for (i=0, rr=w115, cr=w31, cs=w115; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #192: @116 = (@12*@90) */
  for (i=0, rr=w116, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w90);
  /* #193: @117 = (@9*@85) */
  for (i=0, rr=w117, cs=w85; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #194: @116 = (@116+@117) */
  for (i=0, rr=w116, cs=w117; i<14; ++i) (*rr++) += (*cs++);
  /* #195: @116 = (@32+@116) */
  for (i=0, rr=w116, cr=w32, cs=w116; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #196: @117 = (@12*@93) */
  for (i=0, rr=w117, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w93);
  /* #197: @118 = (@9*@88) */
  for (i=0, rr=w118, cs=w88; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #198: @117 = (@117+@118) */
  for (i=0, rr=w117, cs=w118; i<14; ++i) (*rr++) += (*cs++);
  /* #199: @117 = (@33+@117) */
  for (i=0, rr=w117, cr=w33, cs=w117; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #200: @118 = (@12*@96) */
  for (i=0, rr=w118, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w96);
  /* #201: @119 = (@9*@91) */
  for (i=0, rr=w119, cs=w91; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #202: @118 = (@118+@119) */
  for (i=0, rr=w118, cs=w119; i<14; ++i) (*rr++) += (*cs++);
  /* #203: @118 = (@34+@118) */
  for (i=0, rr=w118, cr=w34, cs=w118; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #204: @119 = (@12*@99) */
  for (i=0, rr=w119, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w99);
  /* #205: @120 = (@9*@94) */
  for (i=0, rr=w120, cs=w94; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #206: @119 = (@119+@120) */
  for (i=0, rr=w119, cs=w120; i<14; ++i) (*rr++) += (*cs++);
  /* #207: @119 = (@35+@119) */
  for (i=0, rr=w119, cr=w35, cs=w119; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #208: @120 = (@12*@102) */
  for (i=0, rr=w120, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w102);
  /* #209: @121 = (@9*@97) */
  for (i=0, rr=w121, cs=w97; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #210: @120 = (@120+@121) */
  for (i=0, rr=w120, cs=w121; i<14; ++i) (*rr++) += (*cs++);
  /* #211: @120 = (@36+@120) */
  for (i=0, rr=w120, cr=w36, cs=w120; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #212: @121 = (@12*@105) */
  for (i=0, rr=w121, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w105);
  /* #213: @122 = (@9*@100) */
  for (i=0, rr=w122, cs=w100; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #214: @121 = (@121+@122) */
  for (i=0, rr=w121, cs=w122; i<14; ++i) (*rr++) += (*cs++);
  /* #215: @121 = (@37+@121) */
  for (i=0, rr=w121, cr=w37, cs=w121; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #216: @122 = (@12*@108) */
  for (i=0, rr=w122, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w108);
  /* #217: @123 = (@9*@103) */
  for (i=0, rr=w123, cs=w103; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #218: @122 = (@122+@123) */
  for (i=0, rr=w122, cs=w123; i<14; ++i) (*rr++) += (*cs++);
  /* #219: @122 = (@38+@122) */
  for (i=0, rr=w122, cr=w38, cs=w122; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #220: @123 = (@12*@111) */
  for (i=0, rr=w123, cr=w12; i<14; ++i) (*rr++)  = ((*cr++)*w111);
  /* #221: @124 = (@9*@106) */
  for (i=0, rr=w124, cs=w106; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #222: @123 = (@123+@124) */
  for (i=0, rr=w123, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #223: @123 = (@39+@123) */
  for (i=0, rr=w123, cr=w39, cs=w123; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #224: @12 = (@12*@73) */
  for (i=0, rr=w12; i<14; ++i) (*rr++) *= w73;
  /* #225: @124 = (@9*@109) */
  for (i=0, rr=w124, cs=w109; i<14; ++i) (*rr++)  = (w9*(*cs++));
  /* #226: @12 = (@12+@124) */
  for (i=0, rr=w12, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #227: @12 = (@40+@12) */
  for (i=0, rr=w12, cr=w40, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #228: @41 = horzcat(@6, @10, @112, @114, @115, @116, @117, @118, @119, @120, @121, @122, @123, @12) */
  rr=w41;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w112; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w114; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w115; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w116; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w117; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w118; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w119; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w120; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w121; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w122; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w123; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<14; ++i) *rr++ = *cs++;
  /* #229: @25 = 0x14 */
  /* #230: @57 = horzcat(@43, @44, @45, @46, @47, @48, @49, @50, @51, @52, @53, @54, @55, @56) */
  rr=w57;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<4; ++i) *rr++ = *cs++;
  /* #231: @26 = 0x14 */
  /* #232: {@59, NULL, NULL} = fwd14_dae(@7, @14, @15, @4, @5, @11, @1, @3, @24, @41, @25, @57, @26) */
  arg1[0]=0;
  arg1[1]=w14;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w41;
  arg1[10]=0;
  arg1[11]=w57;
  arg1[12]=0;
  res1[0]=w59;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #233: {@14, @6, @10, @112, @114, @115, @116, @117, @118, @119, @120, @121, @122, @123} = horzsplit(@59) */
  casadi_copy(w59, 14, w14);
  casadi_copy(w59+14, 14, w6);
  casadi_copy(w59+28, 14, w10);
  casadi_copy(w59+42, 14, w112);
  casadi_copy(w59+56, 14, w114);
  casadi_copy(w59+70, 14, w115);
  casadi_copy(w59+84, 14, w116);
  casadi_copy(w59+98, 14, w117);
  casadi_copy(w59+112, 14, w118);
  casadi_copy(w59+126, 14, w119);
  casadi_copy(w59+140, 14, w120);
  casadi_copy(w59+154, 14, w121);
  casadi_copy(w59+168, 14, w122);
  casadi_copy(w59+182, 14, w123);
  /* #234: @12 = (2.*@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #235: @2 = (@2+@12) */
  for (i=0, rr=w2, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #236: @7 = zeros(14x1,0nz) */
  /* #237: @15 = 0x1 */
  /* #238: @11 = 0x1 */
  /* #239: @1 = 0x14 */
  /* #240: @12 = (@16*@22) */
  for (i=0, rr=w12, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w22);
  /* #241: @14 = (@8*@14) */
  for (i=0, rr=w14, cs=w14; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #242: @12 = (@12+@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #243: @12 = (@0+@12) */
  for (i=0, rr=w12, cr=w0, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #244: @14 = (@16*@77) */
  for (i=0, rr=w14, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w77);
  /* #245: @124 = (@8*@6) */
  for (i=0, rr=w124, cs=w6; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #246: @14 = (@14+@124) */
  for (i=0, rr=w14, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #247: @14 = (@28+@14) */
  for (i=0, rr=w14, cr=w28, cs=w14; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #248: @124 = (@16*@80) */
  for (i=0, rr=w124, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w80);
  /* #249: @125 = (@8*@10) */
  for (i=0, rr=w125, cs=w10; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #250: @124 = (@124+@125) */
  for (i=0, rr=w124, cs=w125; i<14; ++i) (*rr++) += (*cs++);
  /* #251: @124 = (@29+@124) */
  for (i=0, rr=w124, cr=w29, cs=w124; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #252: @125 = (@16*@83) */
  for (i=0, rr=w125, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w83);
  /* #253: @126 = (@8*@112) */
  for (i=0, rr=w126, cs=w112; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #254: @125 = (@125+@126) */
  for (i=0, rr=w125, cs=w126; i<14; ++i) (*rr++) += (*cs++);
  /* #255: @125 = (@30+@125) */
  for (i=0, rr=w125, cr=w30, cs=w125; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #256: @126 = (@16*@86) */
  for (i=0, rr=w126, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w86);
  /* #257: @127 = (@8*@114) */
  for (i=0, rr=w127, cs=w114; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #258: @126 = (@126+@127) */
  for (i=0, rr=w126, cs=w127; i<14; ++i) (*rr++) += (*cs++);
  /* #259: @126 = (@31+@126) */
  for (i=0, rr=w126, cr=w31, cs=w126; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #260: @127 = (@16*@89) */
  for (i=0, rr=w127, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w89);
  /* #261: @128 = (@8*@115) */
  for (i=0, rr=w128, cs=w115; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #262: @127 = (@127+@128) */
  for (i=0, rr=w127, cs=w128; i<14; ++i) (*rr++) += (*cs++);
  /* #263: @127 = (@32+@127) */
  for (i=0, rr=w127, cr=w32, cs=w127; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #264: @128 = (@16*@92) */
  for (i=0, rr=w128, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w92);
  /* #265: @129 = (@8*@116) */
  for (i=0, rr=w129, cs=w116; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #266: @128 = (@128+@129) */
  for (i=0, rr=w128, cs=w129; i<14; ++i) (*rr++) += (*cs++);
  /* #267: @128 = (@33+@128) */
  for (i=0, rr=w128, cr=w33, cs=w128; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #268: @129 = (@16*@95) */
  for (i=0, rr=w129, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w95);
  /* #269: @130 = (@8*@117) */
  for (i=0, rr=w130, cs=w117; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #270: @129 = (@129+@130) */
  for (i=0, rr=w129, cs=w130; i<14; ++i) (*rr++) += (*cs++);
  /* #271: @129 = (@34+@129) */
  for (i=0, rr=w129, cr=w34, cs=w129; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #272: @130 = (@16*@98) */
  for (i=0, rr=w130, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w98);
  /* #273: @131 = (@8*@118) */
  for (i=0, rr=w131, cs=w118; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #274: @130 = (@130+@131) */
  for (i=0, rr=w130, cs=w131; i<14; ++i) (*rr++) += (*cs++);
  /* #275: @130 = (@35+@130) */
  for (i=0, rr=w130, cr=w35, cs=w130; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #276: @131 = (@16*@101) */
  for (i=0, rr=w131, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w101);
  /* #277: @132 = (@8*@119) */
  for (i=0, rr=w132, cs=w119; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #278: @131 = (@131+@132) */
  for (i=0, rr=w131, cs=w132; i<14; ++i) (*rr++) += (*cs++);
  /* #279: @131 = (@36+@131) */
  for (i=0, rr=w131, cr=w36, cs=w131; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #280: @132 = (@16*@104) */
  for (i=0, rr=w132, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w104);
  /* #281: @133 = (@8*@120) */
  for (i=0, rr=w133, cs=w120; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #282: @132 = (@132+@133) */
  for (i=0, rr=w132, cs=w133; i<14; ++i) (*rr++) += (*cs++);
  /* #283: @132 = (@37+@132) */
  for (i=0, rr=w132, cr=w37, cs=w132; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #284: @133 = (@16*@107) */
  for (i=0, rr=w133, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w107);
  /* #285: @134 = (@8*@121) */
  for (i=0, rr=w134, cs=w121; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #286: @133 = (@133+@134) */
  for (i=0, rr=w133, cs=w134; i<14; ++i) (*rr++) += (*cs++);
  /* #287: @133 = (@38+@133) */
  for (i=0, rr=w133, cr=w38, cs=w133; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #288: @134 = (@16*@110) */
  for (i=0, rr=w134, cr=w16; i<14; ++i) (*rr++)  = ((*cr++)*w110);
  /* #289: @135 = (@8*@122) */
  for (i=0, rr=w135, cs=w122; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #290: @134 = (@134+@135) */
  for (i=0, rr=w134, cs=w135; i<14; ++i) (*rr++) += (*cs++);
  /* #291: @134 = (@39+@134) */
  for (i=0, rr=w134, cr=w39, cs=w134; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #292: @16 = (@16*@113) */
  for (i=0, rr=w16; i<14; ++i) (*rr++) *= w113;
  /* #293: @135 = (@8*@123) */
  for (i=0, rr=w135, cs=w123; i<14; ++i) (*rr++)  = (w8*(*cs++));
  /* #294: @16 = (@16+@135) */
  for (i=0, rr=w16, cs=w135; i<14; ++i) (*rr++) += (*cs++);
  /* #295: @16 = (@40+@16) */
  for (i=0, rr=w16, cr=w40, cs=w16; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #296: @59 = horzcat(@12, @14, @124, @125, @126, @127, @128, @129, @130, @131, @132, @133, @134, @16) */
  rr=w59;
  for (i=0, cs=w12; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w124; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w125; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w126; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w127; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w128; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w129; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w130; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w131; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w132; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w133; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w134; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  /* #297: @3 = 0x14 */
  /* #298: @57 = horzcat(@43, @44, @45, @46, @47, @48, @49, @50, @51, @52, @53, @54, @55, @56) */
  rr=w57;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<4; ++i) *rr++ = *cs++;
  /* #299: @24 = 0x14 */
  /* #300: {@41, NULL, NULL} = fwd14_dae(@18, @17, @19, @4, @5, @7, @15, @11, @1, @59, @3, @57, @24) */
  arg1[0]=0;
  arg1[1]=w17;
  arg1[2]=0;
  arg1[3]=w4;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w59;
  arg1[10]=0;
  arg1[11]=w57;
  arg1[12]=0;
  res1[0]=w41;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #301: {@17, @12, @14, @124, @125, @126, @127, @128, @129, @130, @131, @132, @133, @134} = horzsplit(@41) */
  casadi_copy(w41, 14, w17);
  casadi_copy(w41+14, 14, w12);
  casadi_copy(w41+28, 14, w14);
  casadi_copy(w41+42, 14, w124);
  casadi_copy(w41+56, 14, w125);
  casadi_copy(w41+70, 14, w126);
  casadi_copy(w41+84, 14, w127);
  casadi_copy(w41+98, 14, w128);
  casadi_copy(w41+112, 14, w129);
  casadi_copy(w41+126, 14, w130);
  casadi_copy(w41+140, 14, w131);
  casadi_copy(w41+154, 14, w132);
  casadi_copy(w41+168, 14, w133);
  casadi_copy(w41+182, 14, w134);
  /* #302: @2 = (@2+@17) */
  for (i=0, rr=w2, cs=w17; i<14; ++i) (*rr++) += (*cs++);
  /* #303: @2 = (@23*@2) */
  for (i=0, rr=w2, cs=w2; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #304: @20 = (@20+@2) */
  for (i=0, rr=w20, cs=w2; i<14; ++i) (*rr++) += (*cs++);
  /* #305: @0 = (@0+@20) */
  for (i=0, rr=w0, cs=w20; i<14; ++i) (*rr++) += (*cs++);
  /* #306: output[0][0] = @0 */
  casadi_copy(w0, 14, res[0]);
  /* #307: @77 = (@21*@77) */
  w77  = (w21*w77);
  /* #308: @0 = (@13*@77) */
  for (i=0, rr=w0, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w77);
  /* #309: @75 = (2.*@75) */
  for (i=0, rr=w75, cs=w75; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #310: @60 = (@60+@75) */
  for (i=0, rr=w60, cs=w75; i<14; ++i) (*rr++) += (*cs++);
  /* #311: @6 = (2.*@6) */
  for (i=0, rr=w6, cs=w6; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #312: @60 = (@60+@6) */
  for (i=0, rr=w60, cs=w6; i<14; ++i) (*rr++) += (*cs++);
  /* #313: @60 = (@60+@12) */
  for (i=0, rr=w60, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #314: @60 = (@23*@60) */
  for (i=0, rr=w60, cs=w60; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #315: @0 = (@0+@60) */
  for (i=0, rr=w0, cs=w60; i<14; ++i) (*rr++) += (*cs++);
  /* #316: @28 = (@28+@0) */
  for (i=0, rr=w28, cs=w0; i<14; ++i) (*rr++) += (*cs++);
  /* #317: output[0][1] = @28 */
  if (res[0]) casadi_copy(w28, 14, res[0]+14);
  /* #318: @80 = (@21*@80) */
  w80  = (w21*w80);
  /* #319: @28 = (@13*@80) */
  for (i=0, rr=w28, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w80);
  /* #320: @76 = (2.*@76) */
  for (i=0, rr=w76, cs=w76; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #321: @61 = (@61+@76) */
  for (i=0, rr=w61, cs=w76; i<14; ++i) (*rr++) += (*cs++);
  /* #322: @10 = (2.*@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #323: @61 = (@61+@10) */
  for (i=0, rr=w61, cs=w10; i<14; ++i) (*rr++) += (*cs++);
  /* #324: @61 = (@61+@14) */
  for (i=0, rr=w61, cs=w14; i<14; ++i) (*rr++) += (*cs++);
  /* #325: @61 = (@23*@61) */
  for (i=0, rr=w61, cs=w61; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #326: @28 = (@28+@61) */
  for (i=0, rr=w28, cs=w61; i<14; ++i) (*rr++) += (*cs++);
  /* #327: @29 = (@29+@28) */
  for (i=0, rr=w29, cs=w28; i<14; ++i) (*rr++) += (*cs++);
  /* #328: output[0][2] = @29 */
  if (res[0]) casadi_copy(w29, 14, res[0]+28);
  /* #329: @83 = (@21*@83) */
  w83  = (w21*w83);
  /* #330: @29 = (@13*@83) */
  for (i=0, rr=w29, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w83);
  /* #331: @79 = (2.*@79) */
  for (i=0, rr=w79, cs=w79; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #332: @62 = (@62+@79) */
  for (i=0, rr=w62, cs=w79; i<14; ++i) (*rr++) += (*cs++);
  /* #333: @112 = (2.*@112) */
  for (i=0, rr=w112, cs=w112; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #334: @62 = (@62+@112) */
  for (i=0, rr=w62, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #335: @62 = (@62+@124) */
  for (i=0, rr=w62, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #336: @62 = (@23*@62) */
  for (i=0, rr=w62, cs=w62; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #337: @29 = (@29+@62) */
  for (i=0, rr=w29, cs=w62; i<14; ++i) (*rr++) += (*cs++);
  /* #338: @30 = (@30+@29) */
  for (i=0, rr=w30, cs=w29; i<14; ++i) (*rr++) += (*cs++);
  /* #339: output[0][3] = @30 */
  if (res[0]) casadi_copy(w30, 14, res[0]+42);
  /* #340: @86 = (@21*@86) */
  w86  = (w21*w86);
  /* #341: @30 = (@13*@86) */
  for (i=0, rr=w30, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w86);
  /* #342: @82 = (2.*@82) */
  for (i=0, rr=w82, cs=w82; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #343: @63 = (@63+@82) */
  for (i=0, rr=w63, cs=w82; i<14; ++i) (*rr++) += (*cs++);
  /* #344: @114 = (2.*@114) */
  for (i=0, rr=w114, cs=w114; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #345: @63 = (@63+@114) */
  for (i=0, rr=w63, cs=w114; i<14; ++i) (*rr++) += (*cs++);
  /* #346: @63 = (@63+@125) */
  for (i=0, rr=w63, cs=w125; i<14; ++i) (*rr++) += (*cs++);
  /* #347: @63 = (@23*@63) */
  for (i=0, rr=w63, cs=w63; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #348: @30 = (@30+@63) */
  for (i=0, rr=w30, cs=w63; i<14; ++i) (*rr++) += (*cs++);
  /* #349: @31 = (@31+@30) */
  for (i=0, rr=w31, cs=w30; i<14; ++i) (*rr++) += (*cs++);
  /* #350: output[0][4] = @31 */
  if (res[0]) casadi_copy(w31, 14, res[0]+56);
  /* #351: @89 = (@21*@89) */
  w89  = (w21*w89);
  /* #352: @31 = (@13*@89) */
  for (i=0, rr=w31, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w89);
  /* #353: @85 = (2.*@85) */
  for (i=0, rr=w85, cs=w85; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #354: @64 = (@64+@85) */
  for (i=0, rr=w64, cs=w85; i<14; ++i) (*rr++) += (*cs++);
  /* #355: @115 = (2.*@115) */
  for (i=0, rr=w115, cs=w115; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #356: @64 = (@64+@115) */
  for (i=0, rr=w64, cs=w115; i<14; ++i) (*rr++) += (*cs++);
  /* #357: @64 = (@64+@126) */
  for (i=0, rr=w64, cs=w126; i<14; ++i) (*rr++) += (*cs++);
  /* #358: @64 = (@23*@64) */
  for (i=0, rr=w64, cs=w64; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #359: @31 = (@31+@64) */
  for (i=0, rr=w31, cs=w64; i<14; ++i) (*rr++) += (*cs++);
  /* #360: @32 = (@32+@31) */
  for (i=0, rr=w32, cs=w31; i<14; ++i) (*rr++) += (*cs++);
  /* #361: output[0][5] = @32 */
  if (res[0]) casadi_copy(w32, 14, res[0]+70);
  /* #362: @92 = (@21*@92) */
  w92  = (w21*w92);
  /* #363: @32 = (@13*@92) */
  for (i=0, rr=w32, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w92);
  /* #364: @88 = (2.*@88) */
  for (i=0, rr=w88, cs=w88; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #365: @65 = (@65+@88) */
  for (i=0, rr=w65, cs=w88; i<14; ++i) (*rr++) += (*cs++);
  /* #366: @116 = (2.*@116) */
  for (i=0, rr=w116, cs=w116; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #367: @65 = (@65+@116) */
  for (i=0, rr=w65, cs=w116; i<14; ++i) (*rr++) += (*cs++);
  /* #368: @65 = (@65+@127) */
  for (i=0, rr=w65, cs=w127; i<14; ++i) (*rr++) += (*cs++);
  /* #369: @65 = (@23*@65) */
  for (i=0, rr=w65, cs=w65; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #370: @32 = (@32+@65) */
  for (i=0, rr=w32, cs=w65; i<14; ++i) (*rr++) += (*cs++);
  /* #371: @33 = (@33+@32) */
  for (i=0, rr=w33, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #372: output[0][6] = @33 */
  if (res[0]) casadi_copy(w33, 14, res[0]+84);
  /* #373: @95 = (@21*@95) */
  w95  = (w21*w95);
  /* #374: @33 = (@13*@95) */
  for (i=0, rr=w33, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w95);
  /* #375: @91 = (2.*@91) */
  for (i=0, rr=w91, cs=w91; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #376: @66 = (@66+@91) */
  for (i=0, rr=w66, cs=w91; i<14; ++i) (*rr++) += (*cs++);
  /* #377: @117 = (2.*@117) */
  for (i=0, rr=w117, cs=w117; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #378: @66 = (@66+@117) */
  for (i=0, rr=w66, cs=w117; i<14; ++i) (*rr++) += (*cs++);
  /* #379: @66 = (@66+@128) */
  for (i=0, rr=w66, cs=w128; i<14; ++i) (*rr++) += (*cs++);
  /* #380: @66 = (@23*@66) */
  for (i=0, rr=w66, cs=w66; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #381: @33 = (@33+@66) */
  for (i=0, rr=w33, cs=w66; i<14; ++i) (*rr++) += (*cs++);
  /* #382: @34 = (@34+@33) */
  for (i=0, rr=w34, cs=w33; i<14; ++i) (*rr++) += (*cs++);
  /* #383: output[0][7] = @34 */
  if (res[0]) casadi_copy(w34, 14, res[0]+98);
  /* #384: @98 = (@21*@98) */
  w98  = (w21*w98);
  /* #385: @34 = (@13*@98) */
  for (i=0, rr=w34, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w98);
  /* #386: @94 = (2.*@94) */
  for (i=0, rr=w94, cs=w94; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #387: @67 = (@67+@94) */
  for (i=0, rr=w67, cs=w94; i<14; ++i) (*rr++) += (*cs++);
  /* #388: @118 = (2.*@118) */
  for (i=0, rr=w118, cs=w118; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #389: @67 = (@67+@118) */
  for (i=0, rr=w67, cs=w118; i<14; ++i) (*rr++) += (*cs++);
  /* #390: @67 = (@67+@129) */
  for (i=0, rr=w67, cs=w129; i<14; ++i) (*rr++) += (*cs++);
  /* #391: @67 = (@23*@67) */
  for (i=0, rr=w67, cs=w67; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #392: @34 = (@34+@67) */
  for (i=0, rr=w34, cs=w67; i<14; ++i) (*rr++) += (*cs++);
  /* #393: @35 = (@35+@34) */
  for (i=0, rr=w35, cs=w34; i<14; ++i) (*rr++) += (*cs++);
  /* #394: output[0][8] = @35 */
  if (res[0]) casadi_copy(w35, 14, res[0]+112);
  /* #395: @101 = (@21*@101) */
  w101  = (w21*w101);
  /* #396: @35 = (@13*@101) */
  for (i=0, rr=w35, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w101);
  /* #397: @97 = (2.*@97) */
  for (i=0, rr=w97, cs=w97; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #398: @68 = (@68+@97) */
  for (i=0, rr=w68, cs=w97; i<14; ++i) (*rr++) += (*cs++);
  /* #399: @119 = (2.*@119) */
  for (i=0, rr=w119, cs=w119; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #400: @68 = (@68+@119) */
  for (i=0, rr=w68, cs=w119; i<14; ++i) (*rr++) += (*cs++);
  /* #401: @68 = (@68+@130) */
  for (i=0, rr=w68, cs=w130; i<14; ++i) (*rr++) += (*cs++);
  /* #402: @68 = (@23*@68) */
  for (i=0, rr=w68, cs=w68; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #403: @35 = (@35+@68) */
  for (i=0, rr=w35, cs=w68; i<14; ++i) (*rr++) += (*cs++);
  /* #404: @36 = (@36+@35) */
  for (i=0, rr=w36, cs=w35; i<14; ++i) (*rr++) += (*cs++);
  /* #405: output[0][9] = @36 */
  if (res[0]) casadi_copy(w36, 14, res[0]+126);
  /* #406: @104 = (@21*@104) */
  w104  = (w21*w104);
  /* #407: @36 = (@13*@104) */
  for (i=0, rr=w36, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w104);
  /* #408: @100 = (2.*@100) */
  for (i=0, rr=w100, cs=w100; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #409: @69 = (@69+@100) */
  for (i=0, rr=w69, cs=w100; i<14; ++i) (*rr++) += (*cs++);
  /* #410: @120 = (2.*@120) */
  for (i=0, rr=w120, cs=w120; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #411: @69 = (@69+@120) */
  for (i=0, rr=w69, cs=w120; i<14; ++i) (*rr++) += (*cs++);
  /* #412: @69 = (@69+@131) */
  for (i=0, rr=w69, cs=w131; i<14; ++i) (*rr++) += (*cs++);
  /* #413: @69 = (@23*@69) */
  for (i=0, rr=w69, cs=w69; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #414: @36 = (@36+@69) */
  for (i=0, rr=w36, cs=w69; i<14; ++i) (*rr++) += (*cs++);
  /* #415: @37 = (@37+@36) */
  for (i=0, rr=w37, cs=w36; i<14; ++i) (*rr++) += (*cs++);
  /* #416: output[0][10] = @37 */
  if (res[0]) casadi_copy(w37, 14, res[0]+140);
  /* #417: @107 = (@21*@107) */
  w107  = (w21*w107);
  /* #418: @37 = (@13*@107) */
  for (i=0, rr=w37, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w107);
  /* #419: @103 = (2.*@103) */
  for (i=0, rr=w103, cs=w103; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #420: @70 = (@70+@103) */
  for (i=0, rr=w70, cs=w103; i<14; ++i) (*rr++) += (*cs++);
  /* #421: @121 = (2.*@121) */
  for (i=0, rr=w121, cs=w121; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #422: @70 = (@70+@121) */
  for (i=0, rr=w70, cs=w121; i<14; ++i) (*rr++) += (*cs++);
  /* #423: @70 = (@70+@132) */
  for (i=0, rr=w70, cs=w132; i<14; ++i) (*rr++) += (*cs++);
  /* #424: @70 = (@23*@70) */
  for (i=0, rr=w70, cs=w70; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #425: @37 = (@37+@70) */
  for (i=0, rr=w37, cs=w70; i<14; ++i) (*rr++) += (*cs++);
  /* #426: @38 = (@38+@37) */
  for (i=0, rr=w38, cs=w37; i<14; ++i) (*rr++) += (*cs++);
  /* #427: output[0][11] = @38 */
  if (res[0]) casadi_copy(w38, 14, res[0]+154);
  /* #428: @110 = (@21*@110) */
  w110  = (w21*w110);
  /* #429: @38 = (@13*@110) */
  for (i=0, rr=w38, cr=w13; i<14; ++i) (*rr++)  = ((*cr++)*w110);
  /* #430: @106 = (2.*@106) */
  for (i=0, rr=w106, cs=w106; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #431: @71 = (@71+@106) */
  for (i=0, rr=w71, cs=w106; i<14; ++i) (*rr++) += (*cs++);
  /* #432: @122 = (2.*@122) */
  for (i=0, rr=w122, cs=w122; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #433: @71 = (@71+@122) */
  for (i=0, rr=w71, cs=w122; i<14; ++i) (*rr++) += (*cs++);
  /* #434: @71 = (@71+@133) */
  for (i=0, rr=w71, cs=w133; i<14; ++i) (*rr++) += (*cs++);
  /* #435: @71 = (@23*@71) */
  for (i=0, rr=w71, cs=w71; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #436: @38 = (@38+@71) */
  for (i=0, rr=w38, cs=w71; i<14; ++i) (*rr++) += (*cs++);
  /* #437: @39 = (@39+@38) */
  for (i=0, rr=w39, cs=w38; i<14; ++i) (*rr++) += (*cs++);
  /* #438: output[0][12] = @39 */
  if (res[0]) casadi_copy(w39, 14, res[0]+168);
  /* #439: @21 = (@21*@113) */
  w21 *= w113;
  /* #440: @13 = (@13*@21) */
  for (i=0, rr=w13; i<14; ++i) (*rr++) *= w21;
  /* #441: @109 = (2.*@109) */
  for (i=0, rr=w109, cs=w109; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #442: @72 = (@72+@109) */
  for (i=0, rr=w72, cs=w109; i<14; ++i) (*rr++) += (*cs++);
  /* #443: @123 = (2.*@123) */
  for (i=0, rr=w123, cs=w123; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #444: @72 = (@72+@123) */
  for (i=0, rr=w72, cs=w123; i<14; ++i) (*rr++) += (*cs++);
  /* #445: @72 = (@72+@134) */
  for (i=0, rr=w72, cs=w134; i<14; ++i) (*rr++) += (*cs++);
  /* #446: @72 = (@23*@72) */
  for (i=0, rr=w72, cs=w72; i<14; ++i) (*rr++)  = (w23*(*cs++));
  /* #447: @13 = (@13+@72) */
  for (i=0, rr=w13, cs=w72; i<14; ++i) (*rr++) += (*cs++);
  /* #448: @40 = (@40+@13) */
  for (i=0, rr=w40, cs=w13; i<14; ++i) (*rr++) += (*cs++);
  /* #449: output[0][13] = @40 */
  if (res[0]) casadi_copy(w40, 14, res[0]+182);
  return 0;
}

/* fwd14_adj1_dae:(t[0],x[14],z[0],p[4],u[0],out_ode[14x1,0nz],out_alg[0],out_quad[0],adj_ode[14],adj_alg[0],adj_quad[0],out_adj_t[0],out_adj_x[14x1,0nz],out_adj_z[0],out_adj_p[4x1,0nz],out_adj_u[0],fwd_t[0x14],fwd_x[14x14],fwd_z[0x14],fwd_p[4x14],fwd_u[0x14],fwd_out_ode[14x14,0nz],fwd_out_alg[0x14],fwd_out_quad[0x14],fwd_adj_ode[14x14],fwd_adj_alg[0x14],fwd_adj_quad[0x14])->(fwd_adj_t[0x14],fwd_adj_x[14x14],fwd_adj_z[0x14],fwd_adj_p[4x14],fwd_adj_u[0x14]) */
static int casadi_f24(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real *rr;
  const casadi_real *cs;
  casadi_real *w1=w+0, *w2=w+14, *w3=w+17, w4, *w5=w+21, *w9=w+24, w10, *w11=w+31, *w12=w+34, w13, *w14=w+41, *w15=w+44, w16, *w17=w+51, *w18=w+54, w19, *w20=w+61, *w21=w+64, w22, *w23=w+71, *w24=w+74, w25, *w26=w+81, *w27=w+84, w28, *w29=w+91, *w30=w+94, w31, *w32=w+101, *w33=w+104, w34, *w35=w+111, *w36=w+114, w37, *w38=w+121, *w39=w+124, w40, *w41=w+131, *w42=w+134, w43, *w44=w+141, *w45=w+144, w46, *w47=w+151, *w48=w+154, *w49=w+160, *w50=w+244;
  /* #0: @0 = zeros(3x1,0nz) */
  /* #1: @1 = input[24][0] */
  casadi_copy(arg[24], 14, w1);
  /* #2: {@2, @3, @4, @5, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w3);
  w4 = w1[6];
  casadi_copy(w1+7, 3, w5);
  /* #3: @6 = 00 */
  /* #4: @7 = zeros(3x1,0nz) */
  /* #5: @8 = 00 */
  /* #6: @9 = vertcat(@0, @2, @6, @7, @5, @8) */
  rr=w9;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<3; ++i) *rr++ = *cs++;
  /* #7: @0 = zeros(3x1,0nz) */
  /* #8: @1 = input[24][1] */
  casadi_copy(arg[24] ? arg[24]+14 : 0, 14, w1);
  /* #9: {@2, @5, @10, @11, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w5);
  w10 = w1[6];
  casadi_copy(w1+7, 3, w11);
  /* #10: @6 = 00 */
  /* #11: @7 = zeros(3x1,0nz) */
  /* #12: @8 = 00 */
  /* #13: @12 = vertcat(@0, @2, @6, @7, @11, @8) */
  rr=w12;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<3; ++i) *rr++ = *cs++;
  /* #14: @0 = zeros(3x1,0nz) */
  /* #15: @1 = input[24][2] */
  casadi_copy(arg[24] ? arg[24]+28 : 0, 14, w1);
  /* #16: {@2, @11, @13, @14, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w11);
  w13 = w1[6];
  casadi_copy(w1+7, 3, w14);
  /* #17: @6 = 00 */
  /* #18: @7 = zeros(3x1,0nz) */
  /* #19: @8 = 00 */
  /* #20: @15 = vertcat(@0, @2, @6, @7, @14, @8) */
  rr=w15;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w14; i<3; ++i) *rr++ = *cs++;
  /* #21: @0 = zeros(3x1,0nz) */
  /* #22: @1 = input[24][3] */
  casadi_copy(arg[24] ? arg[24]+42 : 0, 14, w1);
  /* #23: {@2, @14, @16, @17, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w14);
  w16 = w1[6];
  casadi_copy(w1+7, 3, w17);
  /* #24: @6 = 00 */
  /* #25: @7 = zeros(3x1,0nz) */
  /* #26: @8 = 00 */
  /* #27: @18 = vertcat(@0, @2, @6, @7, @17, @8) */
  rr=w18;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w17; i<3; ++i) *rr++ = *cs++;
  /* #28: @0 = zeros(3x1,0nz) */
  /* #29: @1 = input[24][4] */
  casadi_copy(arg[24] ? arg[24]+56 : 0, 14, w1);
  /* #30: {@2, @17, @19, @20, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w17);
  w19 = w1[6];
  casadi_copy(w1+7, 3, w20);
  /* #31: @6 = 00 */
  /* #32: @7 = zeros(3x1,0nz) */
  /* #33: @8 = 00 */
  /* #34: @21 = vertcat(@0, @2, @6, @7, @20, @8) */
  rr=w21;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w20; i<3; ++i) *rr++ = *cs++;
  /* #35: @0 = zeros(3x1,0nz) */
  /* #36: @1 = input[24][5] */
  casadi_copy(arg[24] ? arg[24]+70 : 0, 14, w1);
  /* #37: {@2, @20, @22, @23, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w20);
  w22 = w1[6];
  casadi_copy(w1+7, 3, w23);
  /* #38: @6 = 00 */
  /* #39: @7 = zeros(3x1,0nz) */
  /* #40: @8 = 00 */
  /* #41: @24 = vertcat(@0, @2, @6, @7, @23, @8) */
  rr=w24;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w23; i<3; ++i) *rr++ = *cs++;
  /* #42: @0 = zeros(3x1,0nz) */
  /* #43: @1 = input[24][6] */
  casadi_copy(arg[24] ? arg[24]+84 : 0, 14, w1);
  /* #44: {@2, @23, @25, @26, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w23);
  w25 = w1[6];
  casadi_copy(w1+7, 3, w26);
  /* #45: @6 = 00 */
  /* #46: @7 = zeros(3x1,0nz) */
  /* #47: @8 = 00 */
  /* #48: @27 = vertcat(@0, @2, @6, @7, @26, @8) */
  rr=w27;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<3; ++i) *rr++ = *cs++;
  /* #49: @0 = zeros(3x1,0nz) */
  /* #50: @1 = input[24][7] */
  casadi_copy(arg[24] ? arg[24]+98 : 0, 14, w1);
  /* #51: {@2, @26, @28, @29, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w26);
  w28 = w1[6];
  casadi_copy(w1+7, 3, w29);
  /* #52: @6 = 00 */
  /* #53: @7 = zeros(3x1,0nz) */
  /* #54: @8 = 00 */
  /* #55: @30 = vertcat(@0, @2, @6, @7, @29, @8) */
  rr=w30;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w29; i<3; ++i) *rr++ = *cs++;
  /* #56: @0 = zeros(3x1,0nz) */
  /* #57: @1 = input[24][8] */
  casadi_copy(arg[24] ? arg[24]+112 : 0, 14, w1);
  /* #58: {@2, @29, @31, @32, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w29);
  w31 = w1[6];
  casadi_copy(w1+7, 3, w32);
  /* #59: @6 = 00 */
  /* #60: @7 = zeros(3x1,0nz) */
  /* #61: @8 = 00 */
  /* #62: @33 = vertcat(@0, @2, @6, @7, @32, @8) */
  rr=w33;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w32; i<3; ++i) *rr++ = *cs++;
  /* #63: @0 = zeros(3x1,0nz) */
  /* #64: @1 = input[24][9] */
  casadi_copy(arg[24] ? arg[24]+126 : 0, 14, w1);
  /* #65: {@2, @32, @34, @35, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w32);
  w34 = w1[6];
  casadi_copy(w1+7, 3, w35);
  /* #66: @6 = 00 */
  /* #67: @7 = zeros(3x1,0nz) */
  /* #68: @8 = 00 */
  /* #69: @36 = vertcat(@0, @2, @6, @7, @35, @8) */
  rr=w36;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w35; i<3; ++i) *rr++ = *cs++;
  /* #70: @0 = zeros(3x1,0nz) */
  /* #71: @1 = input[24][10] */
  casadi_copy(arg[24] ? arg[24]+140 : 0, 14, w1);
  /* #72: {@2, @35, @37, @38, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w35);
  w37 = w1[6];
  casadi_copy(w1+7, 3, w38);
  /* #73: @6 = 00 */
  /* #74: @7 = zeros(3x1,0nz) */
  /* #75: @8 = 00 */
  /* #76: @39 = vertcat(@0, @2, @6, @7, @38, @8) */
  rr=w39;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<3; ++i) *rr++ = *cs++;
  /* #77: @0 = zeros(3x1,0nz) */
  /* #78: @1 = input[24][11] */
  casadi_copy(arg[24] ? arg[24]+154 : 0, 14, w1);
  /* #79: {@2, @38, @40, @41, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w38);
  w40 = w1[6];
  casadi_copy(w1+7, 3, w41);
  /* #80: @6 = 00 */
  /* #81: @7 = zeros(3x1,0nz) */
  /* #82: @8 = 00 */
  /* #83: @42 = vertcat(@0, @2, @6, @7, @41, @8) */
  rr=w42;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<3; ++i) *rr++ = *cs++;
  /* #84: @0 = zeros(3x1,0nz) */
  /* #85: @1 = input[24][12] */
  casadi_copy(arg[24] ? arg[24]+168 : 0, 14, w1);
  /* #86: {@2, @41, @43, @44, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w41);
  w43 = w1[6];
  casadi_copy(w1+7, 3, w44);
  /* #87: @6 = 00 */
  /* #88: @7 = zeros(3x1,0nz) */
  /* #89: @8 = 00 */
  /* #90: @45 = vertcat(@0, @2, @6, @7, @44, @8) */
  rr=w45;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<3; ++i) *rr++ = *cs++;
  /* #91: @0 = zeros(3x1,0nz) */
  /* #92: @1 = input[24][13] */
  casadi_copy(arg[24] ? arg[24]+182 : 0, 14, w1);
  /* #93: {@2, @44, @46, @47, NULL, NULL} = vertsplit(@1) */
  casadi_copy(w1, 3, w2);
  casadi_copy(w1+3, 3, w44);
  w46 = w1[6];
  casadi_copy(w1+7, 3, w47);
  /* #94: @6 = 00 */
  /* #95: @7 = zeros(3x1,0nz) */
  /* #96: @8 = 00 */
  /* #97: @48 = vertcat(@0, @2, @6, @7, @47, @8) */
  rr=w48;
  for (i=0, cs=w2; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<3; ++i) *rr++ = *cs++;
  /* #98: @49 = horzcat(@9, @12, @15, @18, @21, @24, @27, @30, @33, @36, @39, @42, @45, @48) */
  rr=w49;
  for (i=0, cs=w9; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w12; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w18; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w21; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w24; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w27; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w33; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w42; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<6; ++i) *rr++ = *cs++;
  /* #99: @50 = dense(@49) */
  casadi_densify(w49, casadi_s65, w50, 0);
  /* #100: output[1][0] = @50 */
  casadi_copy(w50, 196, res[1]);
  /* #101: output[3][0] = @3 */
  casadi_copy(w3, 3, res[3]);
  /* #102: output[3][1] = @4 */
  if (res[3]) res[3][3] = w4;
  /* #103: output[3][2] = @5 */
  if (res[3]) casadi_copy(w5, 3, res[3]+4);
  /* #104: output[3][3] = @10 */
  if (res[3]) res[3][7] = w10;
  /* #105: output[3][4] = @11 */
  if (res[3]) casadi_copy(w11, 3, res[3]+8);
  /* #106: output[3][5] = @13 */
  if (res[3]) res[3][11] = w13;
  /* #107: output[3][6] = @14 */
  if (res[3]) casadi_copy(w14, 3, res[3]+12);
  /* #108: output[3][7] = @16 */
  if (res[3]) res[3][15] = w16;
  /* #109: output[3][8] = @17 */
  if (res[3]) casadi_copy(w17, 3, res[3]+16);
  /* #110: output[3][9] = @19 */
  if (res[3]) res[3][19] = w19;
  /* #111: output[3][10] = @20 */
  if (res[3]) casadi_copy(w20, 3, res[3]+20);
  /* #112: output[3][11] = @22 */
  if (res[3]) res[3][23] = w22;
  /* #113: output[3][12] = @23 */
  if (res[3]) casadi_copy(w23, 3, res[3]+24);
  /* #114: output[3][13] = @25 */
  if (res[3]) res[3][27] = w25;
  /* #115: output[3][14] = @26 */
  if (res[3]) casadi_copy(w26, 3, res[3]+28);
  /* #116: output[3][15] = @28 */
  if (res[3]) res[3][31] = w28;
  /* #117: output[3][16] = @29 */
  if (res[3]) casadi_copy(w29, 3, res[3]+32);
  /* #118: output[3][17] = @31 */
  if (res[3]) res[3][35] = w31;
  /* #119: output[3][18] = @32 */
  if (res[3]) casadi_copy(w32, 3, res[3]+36);
  /* #120: output[3][19] = @34 */
  if (res[3]) res[3][39] = w34;
  /* #121: output[3][20] = @35 */
  if (res[3]) casadi_copy(w35, 3, res[3]+40);
  /* #122: output[3][21] = @37 */
  if (res[3]) res[3][43] = w37;
  /* #123: output[3][22] = @38 */
  if (res[3]) casadi_copy(w38, 3, res[3]+44);
  /* #124: output[3][23] = @40 */
  if (res[3]) res[3][47] = w40;
  /* #125: output[3][24] = @41 */
  if (res[3]) casadi_copy(w41, 3, res[3]+48);
  /* #126: output[3][25] = @43 */
  if (res[3]) res[3][51] = w43;
  /* #127: output[3][26] = @44 */
  if (res[3]) casadi_copy(w44, 3, res[3]+52);
  /* #128: output[3][27] = @46 */
  if (res[3]) res[3][55] = w46;
  return 0;
}

/* fwd14_adj1_step:(t[0],h,x0[14],v0[0],p[4],u[0],out_xf[14x1,0nz],out_vf[0],out_qf[0],adj_xf[14],adj_vf[0],adj_qf[0],out_adj_t[0],out_adj_h[1x1,0nz],out_adj_x0[14x1,0nz],out_adj_v0[0],out_adj_p[4x1,0nz],out_adj_u[0],fwd_t[0x14],fwd_h[1x14],fwd_x0[14x14],fwd_v0[0x14],fwd_p[4x14],fwd_u[0x14],fwd_out_xf[14x14,0nz],fwd_out_vf[0x14],fwd_out_qf[0x14],fwd_adj_xf[14x14],fwd_adj_vf[0x14],fwd_adj_qf[0x14])->(fwd_adj_t[0x14],fwd_adj_h[1x14],fwd_adj_x0[14x14],fwd_adj_v0[0x14],fwd_adj_p[4x14],fwd_adj_u[0x14]) */
static int casadi_f23(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+6, *rr;
  const casadi_real **arg1=arg+30, *cr, *cs;
  casadi_real *w1=w+504, w2, w3, *w6=w+520, *w8=w+524, *w9=w+538, *w11=w+552, *w12=w+566, *w14=w+580, *w16=w+594, w21, *w22=w+609, *w23=w+623, *w32=w+637, w33, *w34=w+652, w39, w40, *w41=w+668, *w46=w+682, *w51=w+696, *w52=w+710, *w53=w+724, *w54=w+738, *w55=w+752, *w56=w+766, *w57=w+780, *w58=w+794, *w59=w+808, *w60=w+822, *w61=w+836, *w62=w+850, *w63=w+864, *w64=w+878, *w66=w+1074, *w67=w+1078, *w68=w+1082, *w69=w+1086, *w70=w+1090, *w71=w+1094, *w72=w+1098, *w73=w+1102, *w74=w+1106, *w75=w+1110, *w76=w+1114, *w77=w+1118, *w78=w+1122, *w79=w+1126, *w80=w+1130, *w82=w+1186, *w83=w+1382, *w84=w+1396, *w85=w+1410, *w86=w+1424, *w87=w+1438, *w88=w+1452, *w89=w+1466, *w90=w+1480, *w91=w+1494, *w92=w+1508, *w93=w+1522, *w94=w+1536, *w95=w+1550, *w96=w+1564, *w97=w+1578, w98, w99, *w100=w+1594, w101, w102, *w103=w+1610, w104, w105, *w106=w+1626, w107, w108, *w109=w+1642, w110, w111, *w112=w+1658, w113, w114, *w115=w+1674, w116, w117, *w118=w+1690, w119, w120, *w121=w+1706, w122, w123, *w124=w+1722, w125, w126, *w127=w+1738, w128, w129, *w130=w+1754, w131, w132, *w133=w+1770, w134, *w135=w+1785, *w136=w+1799, *w137=w+1813, *w138=w+1827, *w139=w+1841, *w140=w+1855, *w141=w+1869, *w142=w+1883, *w143=w+1897, *w144=w+1911, *w145=w+1925, *w146=w+1939, *w147=w+1953, *w148=w+1967, *w149=w+1981, *w150=w+1995, *w151=w+2009, *w152=w+2023, *w153=w+2037, *w154=w+2051, *w155=w+2065, *w156=w+2079, *w157=w+2093, *w158=w+2107, *w159=w+2121, *w160=w+2135, *w161=w+2149, *w162=w+2163, *w163=w+2177, *w164=w+2191, *w165=w+2205, *w166=w+2219, *w167=w+2233, *w168=w+2247, *w169=w+2261, *w170=w+2275, *w171=w+2289, *w172=w+2303, *w173=w+2317, *w174=w+2331, *w175=w+2345, *w176=w+2359, *w177=w+2373, *w178=w+2387, *w179=w+2401, *w180=w+2415, *w181=w+2429, *w182=w+2443, *w183=w+2457, *w184=w+2471, *w185=w+2485, *w186=w+2499, *w187=w+2513, *w188=w+2527, *w189=w+2541, w190, w191, *w192=w+2557, *w193=w+2571, *w194=w+2585, *w195=w+2599, *w196=w+2613, *w197=w+2627, *w198=w+2641, *w199=w+2655, *w200=w+2669, *w201=w+2683, *w202=w+2697, *w203=w+2711, *w204=w+2725, *w205=w+2739, *w206=w+2753, *w207=w+2767, *w208=w+2781, *w209=w+2795, *w210=w+2809, *w211=w+2823, *w212=w+2837, *w213=w+2851, *w214=w+2865, *w215=w+2879, *w216=w+2893, *w217=w+2907, *w218=w+2921, *w219=w+2935, *w220=w+2949, *w221=w+3145, *w222=w+3201, *w223=w+3215, *w224=w+3229, *w225=w+3243, *w226=w+3257, *w227=w+3271, *w228=w+3285, *w229=w+3299, *w230=w+3313, *w231=w+3327, *w232=w+3341, *w233=w+3355, *w234=w+3369, *w235=w+3383, *w236=w+3397, *w237=w+3411, *w238=w+3425, *w239=w+3481, *w240=w+3537, *w241=w+3593, *w242=w+3597, *w243=w+3601, *w244=w+3605, *w245=w+3609, *w246=w+3613, *w247=w+3617, *w248=w+3621, *w249=w+3625, *w250=w+3629, *w251=w+3633, *w252=w+3637, *w253=w+3641, *w254=w+3645, *w255=w+3649, *w256=w+3653, *w257=w+3657, *w258=w+3661, *w259=w+3665, *w260=w+3669, *w261=w+3673, *w262=w+3677, *w263=w+3681, *w264=w+3685, *w265=w+3689, *w266=w+3693, *w267=w+3697, *w268=w+3701, *w269=w+3705, *w270=w+3709, *w271=w+3713, *w272=w+3717, *w273=w+3721, *w274=w+3725, *w275=w+3729, *w276=w+3733, *w277=w+3737, *w278=w+3741, *w279=w+3745;
  /* #0: @0 = 0x1 */
  /* #1: @1 = input[2][0] */
  casadi_copy(arg[2], 14, w1);
  /* #2: @2 = input[1][0] */
  w2 = arg[1] ? arg[1][0] : 0;
  /* #3: @3 = 2 */
  w3 = 2.;
  /* #4: @3 = (@2/@3) */
  w3  = (w2/w3);
  /* #5: @4 = 0x1 */
  /* #6: @5 = 0x1 */
  /* #7: @6 = input[4][0] */
  casadi_copy(arg[4], 4, w6);
  /* #8: @7 = 0x1 */
  /* #9: {@8, NULL, NULL} = dae(@4, @1, @5, @6, @7) */
  arg1[0]=0;
  arg1[1]=w1;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w8;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #10: @9 = (@3*@8) */
  for (i=0, rr=w9, cs=w8; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #11: @9 = (@1+@9) */
  for (i=0, rr=w9, cr=w1, cs=w9; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #12: @10 = 0x1 */
  /* #13: {@11, NULL, NULL} = dae(@0, @9, @10, @6, @7) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w11;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #14: @12 = (@3*@11) */
  for (i=0, rr=w12, cs=w11; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #15: @12 = (@1+@12) */
  for (i=0, rr=w12, cr=w1, cs=w12; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #16: @13 = 0x1 */
  /* #17: {@14, NULL, NULL} = dae(@0, @12, @13, @6, @7) */
  arg1[0]=0;
  arg1[1]=w12;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w14;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #18: @15 = 0x1 */
  /* #19: @16 = (@2*@14) */
  for (i=0, rr=w16, cs=w14; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #20: @16 = (@1+@16) */
  for (i=0, rr=w16, cr=w1, cs=w16; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #21: @17 = 0x1 */
  /* #22: @18 = zeros(14x1,0nz) */
  /* #23: @19 = 0x1 */
  /* #24: @20 = 0x1 */
  /* #25: @21 = 6 */
  w21 = 6.;
  /* #26: @21 = (@2/@21) */
  w21  = (w2/w21);
  /* #27: @22 = input[9][0] */
  casadi_copy(arg[9], 14, w22);
  /* #28: @23 = (@21*@22) */
  for (i=0, rr=w23, cs=w22; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #29: @24 = 0x1 */
  /* #30: @25 = 0x1 */
  /* #31: @26 = 0x1 */
  /* #32: @27 = zeros(14x1,0nz) */
  /* #33: @28 = 0x1 */
  /* #34: @29 = zeros(4x1,0nz) */
  /* #35: @30 = 0x1 */
  /* #36: @31 = 0x14 */
  /* #37: @32 = input[20][0] */
  casadi_copy(arg[20], 14, w32);
  /* #38: @33 = input[19][0] */
  w33 = arg[19] ? arg[19][0] : 0;
  /* #39: @34 = (@14*@33) */
  for (i=0, rr=w34, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w33);
  /* #40: @35 = zeros(14x1,0nz) */
  /* #41: @36 = 0x1 */
  /* #42: @37 = 0x1 */
  /* #43: @38 = 0x14 */
  /* #44: @39 = 0.5 */
  w39 = 5.0000000000000000e-01;
  /* #45: @40 = (@39*@33) */
  w40  = (w39*w33);
  /* #46: @41 = (@11*@40) */
  for (i=0, rr=w41, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w40);
  /* #47: @42 = zeros(14x1,0nz) */
  /* #48: @43 = 0x1 */
  /* #49: @44 = 0x1 */
  /* #50: @45 = 0x14 */
  /* #51: @46 = (@8*@40) */
  for (i=0, rr=w46, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w40);
  /* #52: @47 = zeros(14x1,0nz) */
  /* #53: @48 = 0x1 */
  /* #54: @49 = 0x1 */
  /* #55: @50 = 0x14 */
  /* #56: @51 = input[20][1] */
  casadi_copy(arg[20] ? arg[20]+14 : 0, 14, w51);
  /* #57: @52 = input[20][2] */
  casadi_copy(arg[20] ? arg[20]+28 : 0, 14, w52);
  /* #58: @53 = input[20][3] */
  casadi_copy(arg[20] ? arg[20]+42 : 0, 14, w53);
  /* #59: @54 = input[20][4] */
  casadi_copy(arg[20] ? arg[20]+56 : 0, 14, w54);
  /* #60: @55 = input[20][5] */
  casadi_copy(arg[20] ? arg[20]+70 : 0, 14, w55);
  /* #61: @56 = input[20][6] */
  casadi_copy(arg[20] ? arg[20]+84 : 0, 14, w56);
  /* #62: @57 = input[20][7] */
  casadi_copy(arg[20] ? arg[20]+98 : 0, 14, w57);
  /* #63: @58 = input[20][8] */
  casadi_copy(arg[20] ? arg[20]+112 : 0, 14, w58);
  /* #64: @59 = input[20][9] */
  casadi_copy(arg[20] ? arg[20]+126 : 0, 14, w59);
  /* #65: @60 = input[20][10] */
  casadi_copy(arg[20] ? arg[20]+140 : 0, 14, w60);
  /* #66: @61 = input[20][11] */
  casadi_copy(arg[20] ? arg[20]+154 : 0, 14, w61);
  /* #67: @62 = input[20][12] */
  casadi_copy(arg[20] ? arg[20]+168 : 0, 14, w62);
  /* #68: @63 = input[20][13] */
  casadi_copy(arg[20] ? arg[20]+182 : 0, 14, w63);
  /* #69: @64 = horzcat(@32, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60, @61, @62, @63) */
  rr=w64;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w57; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w59; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w61; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w62; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w63; i<14; ++i) *rr++ = *cs++;
  /* #70: @65 = 0x14 */
  /* #71: @66 = input[22][0] */
  casadi_copy(arg[22], 4, w66);
  /* #72: @67 = input[22][1] */
  casadi_copy(arg[22] ? arg[22]+4 : 0, 4, w67);
  /* #73: @68 = input[22][2] */
  casadi_copy(arg[22] ? arg[22]+8 : 0, 4, w68);
  /* #74: @69 = input[22][3] */
  casadi_copy(arg[22] ? arg[22]+12 : 0, 4, w69);
  /* #75: @70 = input[22][4] */
  casadi_copy(arg[22] ? arg[22]+16 : 0, 4, w70);
  /* #76: @71 = input[22][5] */
  casadi_copy(arg[22] ? arg[22]+20 : 0, 4, w71);
  /* #77: @72 = input[22][6] */
  casadi_copy(arg[22] ? arg[22]+24 : 0, 4, w72);
  /* #78: @73 = input[22][7] */
  casadi_copy(arg[22] ? arg[22]+28 : 0, 4, w73);
  /* #79: @74 = input[22][8] */
  casadi_copy(arg[22] ? arg[22]+32 : 0, 4, w74);
  /* #80: @75 = input[22][9] */
  casadi_copy(arg[22] ? arg[22]+36 : 0, 4, w75);
  /* #81: @76 = input[22][10] */
  casadi_copy(arg[22] ? arg[22]+40 : 0, 4, w76);
  /* #82: @77 = input[22][11] */
  casadi_copy(arg[22] ? arg[22]+44 : 0, 4, w77);
  /* #83: @78 = input[22][12] */
  casadi_copy(arg[22] ? arg[22]+48 : 0, 4, w78);
  /* #84: @79 = input[22][13] */
  casadi_copy(arg[22] ? arg[22]+52 : 0, 4, w79);
  /* #85: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #86: @81 = 0x14 */
  /* #87: {@82, NULL, NULL} = fwd14_dae(@4, @1, @5, @6, @7, @47, @48, @49, @50, @64, @65, @80, @81) */
  arg1[0]=0;
  arg1[1]=w1;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w64;
  arg1[10]=0;
  arg1[11]=w80;
  arg1[12]=0;
  res1[0]=w82;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #88: {@83, @84, @85, @86, @87, @88, @89, @90, @91, @92, @93, @94, @95, @96} = horzsplit(@82) */
  casadi_copy(w82, 14, w83);
  casadi_copy(w82+14, 14, w84);
  casadi_copy(w82+28, 14, w85);
  casadi_copy(w82+42, 14, w86);
  casadi_copy(w82+56, 14, w87);
  casadi_copy(w82+70, 14, w88);
  casadi_copy(w82+84, 14, w89);
  casadi_copy(w82+98, 14, w90);
  casadi_copy(w82+112, 14, w91);
  casadi_copy(w82+126, 14, w92);
  casadi_copy(w82+140, 14, w93);
  casadi_copy(w82+154, 14, w94);
  casadi_copy(w82+168, 14, w95);
  casadi_copy(w82+182, 14, w96);
  /* #89: @97 = (@3*@83) */
  for (i=0, rr=w97, cs=w83; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #90: @46 = (@46+@97) */
  for (i=0, rr=w46, cs=w97; i<14; ++i) (*rr++) += (*cs++);
  /* #91: @46 = (@32+@46) */
  for (i=0, rr=w46, cr=w32, cs=w46; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #92: @98 = input[19][1] */
  w98 = arg[19] ? arg[19][1] : 0;
  /* #93: @99 = (@39*@98) */
  w99  = (w39*w98);
  /* #94: @97 = (@8*@99) */
  for (i=0, rr=w97, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w99);
  /* #95: @100 = (@3*@84) */
  for (i=0, rr=w100, cs=w84; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #96: @97 = (@97+@100) */
  for (i=0, rr=w97, cs=w100; i<14; ++i) (*rr++) += (*cs++);
  /* #97: @97 = (@51+@97) */
  for (i=0, rr=w97, cr=w51, cs=w97; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #98: @101 = input[19][2] */
  w101 = arg[19] ? arg[19][2] : 0;
  /* #99: @102 = (@39*@101) */
  w102  = (w39*w101);
  /* #100: @100 = (@8*@102) */
  for (i=0, rr=w100, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w102);
  /* #101: @103 = (@3*@85) */
  for (i=0, rr=w103, cs=w85; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #102: @100 = (@100+@103) */
  for (i=0, rr=w100, cs=w103; i<14; ++i) (*rr++) += (*cs++);
  /* #103: @100 = (@52+@100) */
  for (i=0, rr=w100, cr=w52, cs=w100; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #104: @104 = input[19][3] */
  w104 = arg[19] ? arg[19][3] : 0;
  /* #105: @105 = (@39*@104) */
  w105  = (w39*w104);
  /* #106: @103 = (@8*@105) */
  for (i=0, rr=w103, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w105);
  /* #107: @106 = (@3*@86) */
  for (i=0, rr=w106, cs=w86; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #108: @103 = (@103+@106) */
  for (i=0, rr=w103, cs=w106; i<14; ++i) (*rr++) += (*cs++);
  /* #109: @103 = (@53+@103) */
  for (i=0, rr=w103, cr=w53, cs=w103; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #110: @107 = input[19][4] */
  w107 = arg[19] ? arg[19][4] : 0;
  /* #111: @108 = (@39*@107) */
  w108  = (w39*w107);
  /* #112: @106 = (@8*@108) */
  for (i=0, rr=w106, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w108);
  /* #113: @109 = (@3*@87) */
  for (i=0, rr=w109, cs=w87; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #114: @106 = (@106+@109) */
  for (i=0, rr=w106, cs=w109; i<14; ++i) (*rr++) += (*cs++);
  /* #115: @106 = (@54+@106) */
  for (i=0, rr=w106, cr=w54, cs=w106; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #116: @110 = input[19][5] */
  w110 = arg[19] ? arg[19][5] : 0;
  /* #117: @111 = (@39*@110) */
  w111  = (w39*w110);
  /* #118: @109 = (@8*@111) */
  for (i=0, rr=w109, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w111);
  /* #119: @112 = (@3*@88) */
  for (i=0, rr=w112, cs=w88; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #120: @109 = (@109+@112) */
  for (i=0, rr=w109, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #121: @109 = (@55+@109) */
  for (i=0, rr=w109, cr=w55, cs=w109; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #122: @113 = input[19][6] */
  w113 = arg[19] ? arg[19][6] : 0;
  /* #123: @114 = (@39*@113) */
  w114  = (w39*w113);
  /* #124: @112 = (@8*@114) */
  for (i=0, rr=w112, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w114);
  /* #125: @115 = (@3*@89) */
  for (i=0, rr=w115, cs=w89; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #126: @112 = (@112+@115) */
  for (i=0, rr=w112, cs=w115; i<14; ++i) (*rr++) += (*cs++);
  /* #127: @112 = (@56+@112) */
  for (i=0, rr=w112, cr=w56, cs=w112; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #128: @116 = input[19][7] */
  w116 = arg[19] ? arg[19][7] : 0;
  /* #129: @117 = (@39*@116) */
  w117  = (w39*w116);
  /* #130: @115 = (@8*@117) */
  for (i=0, rr=w115, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w117);
  /* #131: @118 = (@3*@90) */
  for (i=0, rr=w118, cs=w90; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #132: @115 = (@115+@118) */
  for (i=0, rr=w115, cs=w118; i<14; ++i) (*rr++) += (*cs++);
  /* #133: @115 = (@57+@115) */
  for (i=0, rr=w115, cr=w57, cs=w115; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #134: @119 = input[19][8] */
  w119 = arg[19] ? arg[19][8] : 0;
  /* #135: @120 = (@39*@119) */
  w120  = (w39*w119);
  /* #136: @118 = (@8*@120) */
  for (i=0, rr=w118, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w120);
  /* #137: @121 = (@3*@91) */
  for (i=0, rr=w121, cs=w91; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #138: @118 = (@118+@121) */
  for (i=0, rr=w118, cs=w121; i<14; ++i) (*rr++) += (*cs++);
  /* #139: @118 = (@58+@118) */
  for (i=0, rr=w118, cr=w58, cs=w118; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #140: @122 = input[19][9] */
  w122 = arg[19] ? arg[19][9] : 0;
  /* #141: @123 = (@39*@122) */
  w123  = (w39*w122);
  /* #142: @121 = (@8*@123) */
  for (i=0, rr=w121, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w123);
  /* #143: @124 = (@3*@92) */
  for (i=0, rr=w124, cs=w92; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #144: @121 = (@121+@124) */
  for (i=0, rr=w121, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #145: @121 = (@59+@121) */
  for (i=0, rr=w121, cr=w59, cs=w121; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #146: @125 = input[19][10] */
  w125 = arg[19] ? arg[19][10] : 0;
  /* #147: @126 = (@39*@125) */
  w126  = (w39*w125);
  /* #148: @124 = (@8*@126) */
  for (i=0, rr=w124, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w126);
  /* #149: @127 = (@3*@93) */
  for (i=0, rr=w127, cs=w93; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #150: @124 = (@124+@127) */
  for (i=0, rr=w124, cs=w127; i<14; ++i) (*rr++) += (*cs++);
  /* #151: @124 = (@60+@124) */
  for (i=0, rr=w124, cr=w60, cs=w124; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #152: @128 = input[19][11] */
  w128 = arg[19] ? arg[19][11] : 0;
  /* #153: @129 = (@39*@128) */
  w129  = (w39*w128);
  /* #154: @127 = (@8*@129) */
  for (i=0, rr=w127, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w129);
  /* #155: @130 = (@3*@94) */
  for (i=0, rr=w130, cs=w94; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #156: @127 = (@127+@130) */
  for (i=0, rr=w127, cs=w130; i<14; ++i) (*rr++) += (*cs++);
  /* #157: @127 = (@61+@127) */
  for (i=0, rr=w127, cr=w61, cs=w127; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #158: @131 = input[19][12] */
  w131 = arg[19] ? arg[19][12] : 0;
  /* #159: @132 = (@39*@131) */
  w132  = (w39*w131);
  /* #160: @130 = (@8*@132) */
  for (i=0, rr=w130, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w132);
  /* #161: @133 = (@3*@95) */
  for (i=0, rr=w133, cs=w95; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #162: @130 = (@130+@133) */
  for (i=0, rr=w130, cs=w133; i<14; ++i) (*rr++) += (*cs++);
  /* #163: @130 = (@62+@130) */
  for (i=0, rr=w130, cr=w62, cs=w130; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #164: @134 = input[19][13] */
  w134 = arg[19] ? arg[19][13] : 0;
  /* #165: @39 = (@39*@134) */
  w39 *= w134;
  /* #166: @133 = (@8*@39) */
  for (i=0, rr=w133, cr=w8; i<14; ++i) (*rr++)  = ((*cr++)*w39);
  /* #167: @135 = (@3*@96) */
  for (i=0, rr=w135, cs=w96; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #168: @133 = (@133+@135) */
  for (i=0, rr=w133, cs=w135; i<14; ++i) (*rr++) += (*cs++);
  /* #169: @133 = (@63+@133) */
  for (i=0, rr=w133, cr=w63, cs=w133; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #170: @82 = horzcat(@46, @97, @100, @103, @106, @109, @112, @115, @118, @121, @124, @127, @130, @133) */
  rr=w82;
  for (i=0, cs=w46; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w97; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w100; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w103; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w106; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w109; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w112; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w115; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w118; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w121; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w124; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w127; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w130; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w133; i<14; ++i) *rr++ = *cs++;
  /* #171: @47 = 0x14 */
  /* #172: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #173: @48 = 0x14 */
  /* #174: {@64, NULL, NULL} = fwd14_dae(@0, @9, @10, @6, @7, @42, @43, @44, @45, @82, @47, @80, @48) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w82;
  arg1[10]=0;
  arg1[11]=w80;
  arg1[12]=0;
  res1[0]=w64;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #175: {@135, @136, @137, @138, @139, @140, @141, @142, @143, @144, @145, @146, @147, @148} = horzsplit(@64) */
  casadi_copy(w64, 14, w135);
  casadi_copy(w64+14, 14, w136);
  casadi_copy(w64+28, 14, w137);
  casadi_copy(w64+42, 14, w138);
  casadi_copy(w64+56, 14, w139);
  casadi_copy(w64+70, 14, w140);
  casadi_copy(w64+84, 14, w141);
  casadi_copy(w64+98, 14, w142);
  casadi_copy(w64+112, 14, w143);
  casadi_copy(w64+126, 14, w144);
  casadi_copy(w64+140, 14, w145);
  casadi_copy(w64+154, 14, w146);
  casadi_copy(w64+168, 14, w147);
  casadi_copy(w64+182, 14, w148);
  /* #176: @149 = (@3*@135) */
  for (i=0, rr=w149, cs=w135; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #177: @41 = (@41+@149) */
  for (i=0, rr=w41, cs=w149; i<14; ++i) (*rr++) += (*cs++);
  /* #178: @41 = (@32+@41) */
  for (i=0, rr=w41, cr=w32, cs=w41; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #179: @149 = (@11*@99) */
  for (i=0, rr=w149, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w99);
  /* #180: @150 = (@3*@136) */
  for (i=0, rr=w150, cs=w136; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #181: @149 = (@149+@150) */
  for (i=0, rr=w149, cs=w150; i<14; ++i) (*rr++) += (*cs++);
  /* #182: @149 = (@51+@149) */
  for (i=0, rr=w149, cr=w51, cs=w149; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #183: @150 = (@11*@102) */
  for (i=0, rr=w150, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w102);
  /* #184: @151 = (@3*@137) */
  for (i=0, rr=w151, cs=w137; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #185: @150 = (@150+@151) */
  for (i=0, rr=w150, cs=w151; i<14; ++i) (*rr++) += (*cs++);
  /* #186: @150 = (@52+@150) */
  for (i=0, rr=w150, cr=w52, cs=w150; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #187: @151 = (@11*@105) */
  for (i=0, rr=w151, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w105);
  /* #188: @152 = (@3*@138) */
  for (i=0, rr=w152, cs=w138; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #189: @151 = (@151+@152) */
  for (i=0, rr=w151, cs=w152; i<14; ++i) (*rr++) += (*cs++);
  /* #190: @151 = (@53+@151) */
  for (i=0, rr=w151, cr=w53, cs=w151; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #191: @152 = (@11*@108) */
  for (i=0, rr=w152, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w108);
  /* #192: @153 = (@3*@139) */
  for (i=0, rr=w153, cs=w139; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #193: @152 = (@152+@153) */
  for (i=0, rr=w152, cs=w153; i<14; ++i) (*rr++) += (*cs++);
  /* #194: @152 = (@54+@152) */
  for (i=0, rr=w152, cr=w54, cs=w152; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #195: @153 = (@11*@111) */
  for (i=0, rr=w153, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w111);
  /* #196: @154 = (@3*@140) */
  for (i=0, rr=w154, cs=w140; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #197: @153 = (@153+@154) */
  for (i=0, rr=w153, cs=w154; i<14; ++i) (*rr++) += (*cs++);
  /* #198: @153 = (@55+@153) */
  for (i=0, rr=w153, cr=w55, cs=w153; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #199: @154 = (@11*@114) */
  for (i=0, rr=w154, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w114);
  /* #200: @155 = (@3*@141) */
  for (i=0, rr=w155, cs=w141; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #201: @154 = (@154+@155) */
  for (i=0, rr=w154, cs=w155; i<14; ++i) (*rr++) += (*cs++);
  /* #202: @154 = (@56+@154) */
  for (i=0, rr=w154, cr=w56, cs=w154; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #203: @155 = (@11*@117) */
  for (i=0, rr=w155, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w117);
  /* #204: @156 = (@3*@142) */
  for (i=0, rr=w156, cs=w142; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #205: @155 = (@155+@156) */
  for (i=0, rr=w155, cs=w156; i<14; ++i) (*rr++) += (*cs++);
  /* #206: @155 = (@57+@155) */
  for (i=0, rr=w155, cr=w57, cs=w155; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #207: @156 = (@11*@120) */
  for (i=0, rr=w156, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w120);
  /* #208: @157 = (@3*@143) */
  for (i=0, rr=w157, cs=w143; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #209: @156 = (@156+@157) */
  for (i=0, rr=w156, cs=w157; i<14; ++i) (*rr++) += (*cs++);
  /* #210: @156 = (@58+@156) */
  for (i=0, rr=w156, cr=w58, cs=w156; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #211: @157 = (@11*@123) */
  for (i=0, rr=w157, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w123);
  /* #212: @158 = (@3*@144) */
  for (i=0, rr=w158, cs=w144; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #213: @157 = (@157+@158) */
  for (i=0, rr=w157, cs=w158; i<14; ++i) (*rr++) += (*cs++);
  /* #214: @157 = (@59+@157) */
  for (i=0, rr=w157, cr=w59, cs=w157; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #215: @158 = (@11*@126) */
  for (i=0, rr=w158, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w126);
  /* #216: @159 = (@3*@145) */
  for (i=0, rr=w159, cs=w145; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #217: @158 = (@158+@159) */
  for (i=0, rr=w158, cs=w159; i<14; ++i) (*rr++) += (*cs++);
  /* #218: @158 = (@60+@158) */
  for (i=0, rr=w158, cr=w60, cs=w158; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #219: @159 = (@11*@129) */
  for (i=0, rr=w159, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w129);
  /* #220: @160 = (@3*@146) */
  for (i=0, rr=w160, cs=w146; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #221: @159 = (@159+@160) */
  for (i=0, rr=w159, cs=w160; i<14; ++i) (*rr++) += (*cs++);
  /* #222: @159 = (@61+@159) */
  for (i=0, rr=w159, cr=w61, cs=w159; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #223: @160 = (@11*@132) */
  for (i=0, rr=w160, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w132);
  /* #224: @161 = (@3*@147) */
  for (i=0, rr=w161, cs=w147; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #225: @160 = (@160+@161) */
  for (i=0, rr=w160, cs=w161; i<14; ++i) (*rr++) += (*cs++);
  /* #226: @160 = (@62+@160) */
  for (i=0, rr=w160, cr=w62, cs=w160; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #227: @161 = (@11*@39) */
  for (i=0, rr=w161, cr=w11; i<14; ++i) (*rr++)  = ((*cr++)*w39);
  /* #228: @162 = (@3*@148) */
  for (i=0, rr=w162, cs=w148; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #229: @161 = (@161+@162) */
  for (i=0, rr=w161, cs=w162; i<14; ++i) (*rr++) += (*cs++);
  /* #230: @161 = (@63+@161) */
  for (i=0, rr=w161, cr=w63, cs=w161; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #231: @64 = horzcat(@41, @149, @150, @151, @152, @153, @154, @155, @156, @157, @158, @159, @160, @161) */
  rr=w64;
  for (i=0, cs=w41; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w149; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w150; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w151; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w152; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w153; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w154; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w155; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w156; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w157; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w158; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w159; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w160; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w161; i<14; ++i) *rr++ = *cs++;
  /* #232: @42 = 0x14 */
  /* #233: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #234: @43 = 0x14 */
  /* #235: {@82, NULL, NULL} = fwd14_dae(@0, @12, @13, @6, @7, @35, @36, @37, @38, @64, @42, @80, @43) */
  arg1[0]=0;
  arg1[1]=w12;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w64;
  arg1[10]=0;
  arg1[11]=w80;
  arg1[12]=0;
  res1[0]=w82;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #236: {@162, @163, @164, @165, @166, @167, @168, @169, @170, @171, @172, @173, @174, @175} = horzsplit(@82) */
  casadi_copy(w82, 14, w162);
  casadi_copy(w82+14, 14, w163);
  casadi_copy(w82+28, 14, w164);
  casadi_copy(w82+42, 14, w165);
  casadi_copy(w82+56, 14, w166);
  casadi_copy(w82+70, 14, w167);
  casadi_copy(w82+84, 14, w168);
  casadi_copy(w82+98, 14, w169);
  casadi_copy(w82+112, 14, w170);
  casadi_copy(w82+126, 14, w171);
  casadi_copy(w82+140, 14, w172);
  casadi_copy(w82+154, 14, w173);
  casadi_copy(w82+168, 14, w174);
  casadi_copy(w82+182, 14, w175);
  /* #237: @176 = (@2*@162) */
  for (i=0, rr=w176, cs=w162; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #238: @34 = (@34+@176) */
  for (i=0, rr=w34, cs=w176; i<14; ++i) (*rr++) += (*cs++);
  /* #239: @34 = (@32+@34) */
  for (i=0, rr=w34, cr=w32, cs=w34; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #240: @176 = (@14*@98) */
  for (i=0, rr=w176, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w98);
  /* #241: @177 = (@2*@163) */
  for (i=0, rr=w177, cs=w163; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #242: @176 = (@176+@177) */
  for (i=0, rr=w176, cs=w177; i<14; ++i) (*rr++) += (*cs++);
  /* #243: @176 = (@51+@176) */
  for (i=0, rr=w176, cr=w51, cs=w176; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #244: @177 = (@14*@101) */
  for (i=0, rr=w177, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w101);
  /* #245: @178 = (@2*@164) */
  for (i=0, rr=w178, cs=w164; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #246: @177 = (@177+@178) */
  for (i=0, rr=w177, cs=w178; i<14; ++i) (*rr++) += (*cs++);
  /* #247: @177 = (@52+@177) */
  for (i=0, rr=w177, cr=w52, cs=w177; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #248: @178 = (@14*@104) */
  for (i=0, rr=w178, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w104);
  /* #249: @179 = (@2*@165) */
  for (i=0, rr=w179, cs=w165; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #250: @178 = (@178+@179) */
  for (i=0, rr=w178, cs=w179; i<14; ++i) (*rr++) += (*cs++);
  /* #251: @178 = (@53+@178) */
  for (i=0, rr=w178, cr=w53, cs=w178; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #252: @179 = (@14*@107) */
  for (i=0, rr=w179, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w107);
  /* #253: @180 = (@2*@166) */
  for (i=0, rr=w180, cs=w166; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #254: @179 = (@179+@180) */
  for (i=0, rr=w179, cs=w180; i<14; ++i) (*rr++) += (*cs++);
  /* #255: @179 = (@54+@179) */
  for (i=0, rr=w179, cr=w54, cs=w179; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #256: @180 = (@14*@110) */
  for (i=0, rr=w180, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w110);
  /* #257: @181 = (@2*@167) */
  for (i=0, rr=w181, cs=w167; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #258: @180 = (@180+@181) */
  for (i=0, rr=w180, cs=w181; i<14; ++i) (*rr++) += (*cs++);
  /* #259: @180 = (@55+@180) */
  for (i=0, rr=w180, cr=w55, cs=w180; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #260: @181 = (@14*@113) */
  for (i=0, rr=w181, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w113);
  /* #261: @182 = (@2*@168) */
  for (i=0, rr=w182, cs=w168; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #262: @181 = (@181+@182) */
  for (i=0, rr=w181, cs=w182; i<14; ++i) (*rr++) += (*cs++);
  /* #263: @181 = (@56+@181) */
  for (i=0, rr=w181, cr=w56, cs=w181; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #264: @182 = (@14*@116) */
  for (i=0, rr=w182, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w116);
  /* #265: @183 = (@2*@169) */
  for (i=0, rr=w183, cs=w169; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #266: @182 = (@182+@183) */
  for (i=0, rr=w182, cs=w183; i<14; ++i) (*rr++) += (*cs++);
  /* #267: @182 = (@57+@182) */
  for (i=0, rr=w182, cr=w57, cs=w182; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #268: @183 = (@14*@119) */
  for (i=0, rr=w183, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w119);
  /* #269: @184 = (@2*@170) */
  for (i=0, rr=w184, cs=w170; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #270: @183 = (@183+@184) */
  for (i=0, rr=w183, cs=w184; i<14; ++i) (*rr++) += (*cs++);
  /* #271: @183 = (@58+@183) */
  for (i=0, rr=w183, cr=w58, cs=w183; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #272: @184 = (@14*@122) */
  for (i=0, rr=w184, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w122);
  /* #273: @185 = (@2*@171) */
  for (i=0, rr=w185, cs=w171; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #274: @184 = (@184+@185) */
  for (i=0, rr=w184, cs=w185; i<14; ++i) (*rr++) += (*cs++);
  /* #275: @184 = (@59+@184) */
  for (i=0, rr=w184, cr=w59, cs=w184; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #276: @185 = (@14*@125) */
  for (i=0, rr=w185, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w125);
  /* #277: @186 = (@2*@172) */
  for (i=0, rr=w186, cs=w172; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #278: @185 = (@185+@186) */
  for (i=0, rr=w185, cs=w186; i<14; ++i) (*rr++) += (*cs++);
  /* #279: @185 = (@60+@185) */
  for (i=0, rr=w185, cr=w60, cs=w185; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #280: @186 = (@14*@128) */
  for (i=0, rr=w186, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w128);
  /* #281: @187 = (@2*@173) */
  for (i=0, rr=w187, cs=w173; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #282: @186 = (@186+@187) */
  for (i=0, rr=w186, cs=w187; i<14; ++i) (*rr++) += (*cs++);
  /* #283: @186 = (@61+@186) */
  for (i=0, rr=w186, cr=w61, cs=w186; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #284: @187 = (@14*@131) */
  for (i=0, rr=w187, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w131);
  /* #285: @188 = (@2*@174) */
  for (i=0, rr=w188, cs=w174; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #286: @187 = (@187+@188) */
  for (i=0, rr=w187, cs=w188; i<14; ++i) (*rr++) += (*cs++);
  /* #287: @187 = (@62+@187) */
  for (i=0, rr=w187, cr=w62, cs=w187; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #288: @188 = (@14*@134) */
  for (i=0, rr=w188, cr=w14; i<14; ++i) (*rr++)  = ((*cr++)*w134);
  /* #289: @189 = (@2*@175) */
  for (i=0, rr=w189, cs=w175; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #290: @188 = (@188+@189) */
  for (i=0, rr=w188, cs=w189; i<14; ++i) (*rr++) += (*cs++);
  /* #291: @188 = (@63+@188) */
  for (i=0, rr=w188, cr=w63, cs=w188; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #292: @82 = horzcat(@34, @176, @177, @178, @179, @180, @181, @182, @183, @184, @185, @186, @187, @188) */
  rr=w82;
  for (i=0, cs=w34; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w176; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w177; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w178; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w179; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w180; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w181; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w182; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w183; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w184; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w185; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w186; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w187; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w188; i<14; ++i) *rr++ = *cs++;
  /* #293: @35 = 0x14 */
  /* #294: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #295: @36 = 0x14 */
  /* #296: @37 = zeros(14x14,0nz) */
  /* #297: @38 = 0x14 */
  /* #298: @42 = 0x14 */
  /* #299: @190 = 0.166667 */
  w190 = 1.6666666666666666e-01;
  /* #300: @191 = (@190*@33) */
  w191  = (w190*w33);
  /* #301: @189 = (@22*@191) */
  for (i=0, rr=w189, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #302: @192 = input[27][0] */
  casadi_copy(arg[27], 14, w192);
  /* #303: @193 = (@21*@192) */
  for (i=0, rr=w193, cs=w192; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #304: @189 = (@189+@193) */
  for (i=0, rr=w189, cs=w193; i<14; ++i) (*rr++) += (*cs++);
  /* #305: @191 = (@190*@98) */
  w191  = (w190*w98);
  /* #306: @193 = (@22*@191) */
  for (i=0, rr=w193, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #307: @194 = input[27][1] */
  casadi_copy(arg[27] ? arg[27]+14 : 0, 14, w194);
  /* #308: @195 = (@21*@194) */
  for (i=0, rr=w195, cs=w194; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #309: @193 = (@193+@195) */
  for (i=0, rr=w193, cs=w195; i<14; ++i) (*rr++) += (*cs++);
  /* #310: @191 = (@190*@101) */
  w191  = (w190*w101);
  /* #311: @195 = (@22*@191) */
  for (i=0, rr=w195, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #312: @196 = input[27][2] */
  casadi_copy(arg[27] ? arg[27]+28 : 0, 14, w196);
  /* #313: @197 = (@21*@196) */
  for (i=0, rr=w197, cs=w196; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #314: @195 = (@195+@197) */
  for (i=0, rr=w195, cs=w197; i<14; ++i) (*rr++) += (*cs++);
  /* #315: @191 = (@190*@104) */
  w191  = (w190*w104);
  /* #316: @197 = (@22*@191) */
  for (i=0, rr=w197, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #317: @198 = input[27][3] */
  casadi_copy(arg[27] ? arg[27]+42 : 0, 14, w198);
  /* #318: @199 = (@21*@198) */
  for (i=0, rr=w199, cs=w198; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #319: @197 = (@197+@199) */
  for (i=0, rr=w197, cs=w199; i<14; ++i) (*rr++) += (*cs++);
  /* #320: @191 = (@190*@107) */
  w191  = (w190*w107);
  /* #321: @199 = (@22*@191) */
  for (i=0, rr=w199, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #322: @200 = input[27][4] */
  casadi_copy(arg[27] ? arg[27]+56 : 0, 14, w200);
  /* #323: @201 = (@21*@200) */
  for (i=0, rr=w201, cs=w200; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #324: @199 = (@199+@201) */
  for (i=0, rr=w199, cs=w201; i<14; ++i) (*rr++) += (*cs++);
  /* #325: @191 = (@190*@110) */
  w191  = (w190*w110);
  /* #326: @201 = (@22*@191) */
  for (i=0, rr=w201, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #327: @202 = input[27][5] */
  casadi_copy(arg[27] ? arg[27]+70 : 0, 14, w202);
  /* #328: @203 = (@21*@202) */
  for (i=0, rr=w203, cs=w202; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #329: @201 = (@201+@203) */
  for (i=0, rr=w201, cs=w203; i<14; ++i) (*rr++) += (*cs++);
  /* #330: @191 = (@190*@113) */
  w191  = (w190*w113);
  /* #331: @203 = (@22*@191) */
  for (i=0, rr=w203, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #332: @204 = input[27][6] */
  casadi_copy(arg[27] ? arg[27]+84 : 0, 14, w204);
  /* #333: @205 = (@21*@204) */
  for (i=0, rr=w205, cs=w204; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #334: @203 = (@203+@205) */
  for (i=0, rr=w203, cs=w205; i<14; ++i) (*rr++) += (*cs++);
  /* #335: @191 = (@190*@116) */
  w191  = (w190*w116);
  /* #336: @205 = (@22*@191) */
  for (i=0, rr=w205, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #337: @206 = input[27][7] */
  casadi_copy(arg[27] ? arg[27]+98 : 0, 14, w206);
  /* #338: @207 = (@21*@206) */
  for (i=0, rr=w207, cs=w206; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #339: @205 = (@205+@207) */
  for (i=0, rr=w205, cs=w207; i<14; ++i) (*rr++) += (*cs++);
  /* #340: @191 = (@190*@119) */
  w191  = (w190*w119);
  /* #341: @207 = (@22*@191) */
  for (i=0, rr=w207, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #342: @208 = input[27][8] */
  casadi_copy(arg[27] ? arg[27]+112 : 0, 14, w208);
  /* #343: @209 = (@21*@208) */
  for (i=0, rr=w209, cs=w208; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #344: @207 = (@207+@209) */
  for (i=0, rr=w207, cs=w209; i<14; ++i) (*rr++) += (*cs++);
  /* #345: @191 = (@190*@122) */
  w191  = (w190*w122);
  /* #346: @209 = (@22*@191) */
  for (i=0, rr=w209, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #347: @210 = input[27][9] */
  casadi_copy(arg[27] ? arg[27]+126 : 0, 14, w210);
  /* #348: @211 = (@21*@210) */
  for (i=0, rr=w211, cs=w210; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #349: @209 = (@209+@211) */
  for (i=0, rr=w209, cs=w211; i<14; ++i) (*rr++) += (*cs++);
  /* #350: @191 = (@190*@125) */
  w191  = (w190*w125);
  /* #351: @211 = (@22*@191) */
  for (i=0, rr=w211, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #352: @212 = input[27][10] */
  casadi_copy(arg[27] ? arg[27]+140 : 0, 14, w212);
  /* #353: @213 = (@21*@212) */
  for (i=0, rr=w213, cs=w212; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #354: @211 = (@211+@213) */
  for (i=0, rr=w211, cs=w213; i<14; ++i) (*rr++) += (*cs++);
  /* #355: @191 = (@190*@128) */
  w191  = (w190*w128);
  /* #356: @213 = (@22*@191) */
  for (i=0, rr=w213, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #357: @214 = input[27][11] */
  casadi_copy(arg[27] ? arg[27]+154 : 0, 14, w214);
  /* #358: @215 = (@21*@214) */
  for (i=0, rr=w215, cs=w214; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #359: @213 = (@213+@215) */
  for (i=0, rr=w213, cs=w215; i<14; ++i) (*rr++) += (*cs++);
  /* #360: @191 = (@190*@131) */
  w191  = (w190*w131);
  /* #361: @215 = (@22*@191) */
  for (i=0, rr=w215, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w191);
  /* #362: @216 = input[27][12] */
  casadi_copy(arg[27] ? arg[27]+168 : 0, 14, w216);
  /* #363: @217 = (@21*@216) */
  for (i=0, rr=w217, cs=w216; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #364: @215 = (@215+@217) */
  for (i=0, rr=w215, cs=w217; i<14; ++i) (*rr++) += (*cs++);
  /* #365: @190 = (@190*@134) */
  w190 *= w134;
  /* #366: @217 = (@22*@190) */
  for (i=0, rr=w217, cr=w22; i<14; ++i) (*rr++)  = ((*cr++)*w190);
  /* #367: @218 = input[27][13] */
  casadi_copy(arg[27] ? arg[27]+182 : 0, 14, w218);
  /* #368: @219 = (@21*@218) */
  for (i=0, rr=w219, cs=w218; i<14; ++i) (*rr++)  = (w21*(*cs++));
  /* #369: @217 = (@217+@219) */
  for (i=0, rr=w217, cs=w219; i<14; ++i) (*rr++) += (*cs++);
  /* #370: @64 = horzcat(@189, @193, @195, @197, @199, @201, @203, @205, @207, @209, @211, @213, @215, @217) */
  rr=w64;
  for (i=0, cs=w189; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w193; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w195; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w197; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w199; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w201; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w203; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w205; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w207; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w209; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w211; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w213; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w215; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w217; i<14; ++i) *rr++ = *cs++;
  /* #371: @43 = 0x14 */
  /* #372: @44 = 0x14 */
  /* #373: {NULL, @220, NULL, @221, NULL} = fwd14_adj1_dae(@15, @16, @17, @6, @7, @18, @19, @20, @23, @24, @25, @26, @27, @28, @29, @30, @31, @82, @35, @80, @36, @37, @38, @42, @64, @43, @44) */
  arg1[0]=0;
  arg1[1]=w16;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w23;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=w82;
  arg1[18]=0;
  arg1[19]=w80;
  arg1[20]=0;
  arg1[21]=0;
  arg1[22]=0;
  arg1[23]=0;
  arg1[24]=w64;
  arg1[25]=0;
  arg1[26]=0;
  res1[0]=0;
  res1[1]=w220;
  res1[2]=0;
  res1[3]=w221;
  res1[4]=0;
  if (casadi_f24(arg1, res1, iw, w, 0)) return 1;
  /* #374: {@219, @222, @223, @224, @225, @226, @227, @228, @229, @230, @231, @232, @233, @234} = horzsplit(@220) */
  casadi_copy(w220, 14, w219);
  casadi_copy(w220+14, 14, w222);
  casadi_copy(w220+28, 14, w223);
  casadi_copy(w220+42, 14, w224);
  casadi_copy(w220+56, 14, w225);
  casadi_copy(w220+70, 14, w226);
  casadi_copy(w220+84, 14, w227);
  casadi_copy(w220+98, 14, w228);
  casadi_copy(w220+112, 14, w229);
  casadi_copy(w220+126, 14, w230);
  casadi_copy(w220+140, 14, w231);
  casadi_copy(w220+154, 14, w232);
  casadi_copy(w220+168, 14, w233);
  casadi_copy(w220+182, 14, w234);
  /* #375: @21 = dot(@14, @219) */
  w21 = casadi_dot(14, w14, w219);
  /* #376: {NULL, @235, NULL, NULL, NULL} = adj1_dae(@15, @16, @17, @6, @7, @18, @19, @20, @23, @24, @25) */
  arg1[0]=0;
  arg1[1]=w16;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w23;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w235;
  res1[2]=0;
  res1[3]=0;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #377: @190 = dot(@162, @235) */
  w190 = casadi_dot(14, w162, w235);
  /* #378: @21 = (@21+@190) */
  w21 += w190;
  /* #379: @190 = 0.5 */
  w190 = 5.0000000000000000e-01;
  /* #380: @18 = zeros(14x1,0nz) */
  /* #381: @19 = 0x1 */
  /* #382: @20 = 0x1 */
  /* #383: @236 = (@2*@235) */
  for (i=0, rr=w236, cs=w235; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #384: @237 = (2.*@23) */
  for (i=0, rr=w237, cs=w23; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #385: @236 = (@236+@237) */
  for (i=0, rr=w236, cs=w237; i<14; ++i) (*rr++) += (*cs++);
  /* #386: @24 = 0x1 */
  /* #387: @25 = 0x1 */
  /* #388: @26 = 0x1 */
  /* #389: @27 = zeros(14x1,0nz) */
  /* #390: @28 = 0x1 */
  /* #391: @29 = zeros(4x1,0nz) */
  /* #392: @30 = 0x1 */
  /* #393: @31 = 0x14 */
  /* #394: @220 = horzcat(@41, @149, @150, @151, @152, @153, @154, @155, @156, @157, @158, @159, @160, @161) */
  rr=w220;
  for (i=0, cs=w41; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w149; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w150; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w151; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w152; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w153; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w154; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w155; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w156; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w157; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w158; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w159; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w160; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w161; i<14; ++i) *rr++ = *cs++;
  /* #395: @35 = 0x14 */
  /* #396: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #397: @36 = 0x14 */
  /* #398: @37 = zeros(14x14,0nz) */
  /* #399: @38 = 0x14 */
  /* #400: @42 = 0x14 */
  /* #401: @41 = (@235*@33) */
  for (i=0, rr=w41, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w33);
  /* #402: @149 = (@2*@219) */
  for (i=0, rr=w149, cs=w219; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #403: @41 = (@41+@149) */
  for (i=0, rr=w41, cs=w149; i<14; ++i) (*rr++) += (*cs++);
  /* #404: @149 = (2.*@189) */
  for (i=0, rr=w149, cs=w189; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #405: @41 = (@41+@149) */
  for (i=0, rr=w41, cs=w149; i<14; ++i) (*rr++) += (*cs++);
  /* #406: @149 = (@235*@98) */
  for (i=0, rr=w149, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w98);
  /* #407: @150 = (@2*@222) */
  for (i=0, rr=w150, cs=w222; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #408: @149 = (@149+@150) */
  for (i=0, rr=w149, cs=w150; i<14; ++i) (*rr++) += (*cs++);
  /* #409: @150 = (2.*@193) */
  for (i=0, rr=w150, cs=w193; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #410: @149 = (@149+@150) */
  for (i=0, rr=w149, cs=w150; i<14; ++i) (*rr++) += (*cs++);
  /* #411: @150 = (@235*@101) */
  for (i=0, rr=w150, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w101);
  /* #412: @151 = (@2*@223) */
  for (i=0, rr=w151, cs=w223; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #413: @150 = (@150+@151) */
  for (i=0, rr=w150, cs=w151; i<14; ++i) (*rr++) += (*cs++);
  /* #414: @151 = (2.*@195) */
  for (i=0, rr=w151, cs=w195; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #415: @150 = (@150+@151) */
  for (i=0, rr=w150, cs=w151; i<14; ++i) (*rr++) += (*cs++);
  /* #416: @151 = (@235*@104) */
  for (i=0, rr=w151, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w104);
  /* #417: @152 = (@2*@224) */
  for (i=0, rr=w152, cs=w224; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #418: @151 = (@151+@152) */
  for (i=0, rr=w151, cs=w152; i<14; ++i) (*rr++) += (*cs++);
  /* #419: @152 = (2.*@197) */
  for (i=0, rr=w152, cs=w197; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #420: @151 = (@151+@152) */
  for (i=0, rr=w151, cs=w152; i<14; ++i) (*rr++) += (*cs++);
  /* #421: @152 = (@235*@107) */
  for (i=0, rr=w152, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w107);
  /* #422: @153 = (@2*@225) */
  for (i=0, rr=w153, cs=w225; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #423: @152 = (@152+@153) */
  for (i=0, rr=w152, cs=w153; i<14; ++i) (*rr++) += (*cs++);
  /* #424: @153 = (2.*@199) */
  for (i=0, rr=w153, cs=w199; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #425: @152 = (@152+@153) */
  for (i=0, rr=w152, cs=w153; i<14; ++i) (*rr++) += (*cs++);
  /* #426: @153 = (@235*@110) */
  for (i=0, rr=w153, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w110);
  /* #427: @154 = (@2*@226) */
  for (i=0, rr=w154, cs=w226; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #428: @153 = (@153+@154) */
  for (i=0, rr=w153, cs=w154; i<14; ++i) (*rr++) += (*cs++);
  /* #429: @154 = (2.*@201) */
  for (i=0, rr=w154, cs=w201; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #430: @153 = (@153+@154) */
  for (i=0, rr=w153, cs=w154; i<14; ++i) (*rr++) += (*cs++);
  /* #431: @154 = (@235*@113) */
  for (i=0, rr=w154, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w113);
  /* #432: @155 = (@2*@227) */
  for (i=0, rr=w155, cs=w227; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #433: @154 = (@154+@155) */
  for (i=0, rr=w154, cs=w155; i<14; ++i) (*rr++) += (*cs++);
  /* #434: @155 = (2.*@203) */
  for (i=0, rr=w155, cs=w203; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #435: @154 = (@154+@155) */
  for (i=0, rr=w154, cs=w155; i<14; ++i) (*rr++) += (*cs++);
  /* #436: @155 = (@235*@116) */
  for (i=0, rr=w155, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w116);
  /* #437: @156 = (@2*@228) */
  for (i=0, rr=w156, cs=w228; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #438: @155 = (@155+@156) */
  for (i=0, rr=w155, cs=w156; i<14; ++i) (*rr++) += (*cs++);
  /* #439: @156 = (2.*@205) */
  for (i=0, rr=w156, cs=w205; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #440: @155 = (@155+@156) */
  for (i=0, rr=w155, cs=w156; i<14; ++i) (*rr++) += (*cs++);
  /* #441: @156 = (@235*@119) */
  for (i=0, rr=w156, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w119);
  /* #442: @157 = (@2*@229) */
  for (i=0, rr=w157, cs=w229; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #443: @156 = (@156+@157) */
  for (i=0, rr=w156, cs=w157; i<14; ++i) (*rr++) += (*cs++);
  /* #444: @157 = (2.*@207) */
  for (i=0, rr=w157, cs=w207; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #445: @156 = (@156+@157) */
  for (i=0, rr=w156, cs=w157; i<14; ++i) (*rr++) += (*cs++);
  /* #446: @157 = (@235*@122) */
  for (i=0, rr=w157, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w122);
  /* #447: @158 = (@2*@230) */
  for (i=0, rr=w158, cs=w230; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #448: @157 = (@157+@158) */
  for (i=0, rr=w157, cs=w158; i<14; ++i) (*rr++) += (*cs++);
  /* #449: @158 = (2.*@209) */
  for (i=0, rr=w158, cs=w209; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #450: @157 = (@157+@158) */
  for (i=0, rr=w157, cs=w158; i<14; ++i) (*rr++) += (*cs++);
  /* #451: @158 = (@235*@125) */
  for (i=0, rr=w158, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w125);
  /* #452: @159 = (@2*@231) */
  for (i=0, rr=w159, cs=w231; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #453: @158 = (@158+@159) */
  for (i=0, rr=w158, cs=w159; i<14; ++i) (*rr++) += (*cs++);
  /* #454: @159 = (2.*@211) */
  for (i=0, rr=w159, cs=w211; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #455: @158 = (@158+@159) */
  for (i=0, rr=w158, cs=w159; i<14; ++i) (*rr++) += (*cs++);
  /* #456: @159 = (@235*@128) */
  for (i=0, rr=w159, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w128);
  /* #457: @160 = (@2*@232) */
  for (i=0, rr=w160, cs=w232; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #458: @159 = (@159+@160) */
  for (i=0, rr=w159, cs=w160; i<14; ++i) (*rr++) += (*cs++);
  /* #459: @160 = (2.*@213) */
  for (i=0, rr=w160, cs=w213; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #460: @159 = (@159+@160) */
  for (i=0, rr=w159, cs=w160; i<14; ++i) (*rr++) += (*cs++);
  /* #461: @160 = (@235*@131) */
  for (i=0, rr=w160, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w131);
  /* #462: @161 = (@2*@233) */
  for (i=0, rr=w161, cs=w233; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #463: @160 = (@160+@161) */
  for (i=0, rr=w160, cs=w161; i<14; ++i) (*rr++) += (*cs++);
  /* #464: @161 = (2.*@215) */
  for (i=0, rr=w161, cs=w215; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #465: @160 = (@160+@161) */
  for (i=0, rr=w160, cs=w161; i<14; ++i) (*rr++) += (*cs++);
  /* #466: @161 = (@235*@134) */
  for (i=0, rr=w161, cr=w235; i<14; ++i) (*rr++)  = ((*cr++)*w134);
  /* #467: @237 = (@2*@234) */
  for (i=0, rr=w237, cs=w234; i<14; ++i) (*rr++)  = (w2*(*cs++));
  /* #468: @161 = (@161+@237) */
  for (i=0, rr=w161, cs=w237; i<14; ++i) (*rr++) += (*cs++);
  /* #469: @237 = (2.*@217) */
  for (i=0, rr=w237, cs=w217; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #470: @161 = (@161+@237) */
  for (i=0, rr=w161, cs=w237; i<14; ++i) (*rr++) += (*cs++);
  /* #471: @82 = horzcat(@41, @149, @150, @151, @152, @153, @154, @155, @156, @157, @158, @159, @160, @161) */
  rr=w82;
  for (i=0, cs=w41; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w149; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w150; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w151; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w152; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w153; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w154; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w155; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w156; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w157; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w158; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w159; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w160; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w161; i<14; ++i) *rr++ = *cs++;
  /* #472: @43 = 0x14 */
  /* #473: @44 = 0x14 */
  /* #474: {NULL, @64, NULL, @238, NULL} = fwd14_adj1_dae(@0, @12, @13, @6, @7, @18, @19, @20, @236, @24, @25, @26, @27, @28, @29, @30, @31, @220, @35, @80, @36, @37, @38, @42, @82, @43, @44) */
  arg1[0]=0;
  arg1[1]=w12;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w236;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=w220;
  arg1[18]=0;
  arg1[19]=w80;
  arg1[20]=0;
  arg1[21]=0;
  arg1[22]=0;
  arg1[23]=0;
  arg1[24]=w82;
  arg1[25]=0;
  arg1[26]=0;
  res1[0]=0;
  res1[1]=w64;
  res1[2]=0;
  res1[3]=w238;
  res1[4]=0;
  if (casadi_f24(arg1, res1, iw, w, 0)) return 1;
  /* #475: {@41, @149, @150, @151, @152, @153, @154, @155, @156, @157, @158, @159, @160, @161} = horzsplit(@64) */
  casadi_copy(w64, 14, w41);
  casadi_copy(w64+14, 14, w149);
  casadi_copy(w64+28, 14, w150);
  casadi_copy(w64+42, 14, w151);
  casadi_copy(w64+56, 14, w152);
  casadi_copy(w64+70, 14, w153);
  casadi_copy(w64+84, 14, w154);
  casadi_copy(w64+98, 14, w155);
  casadi_copy(w64+112, 14, w156);
  casadi_copy(w64+126, 14, w157);
  casadi_copy(w64+140, 14, w158);
  casadi_copy(w64+154, 14, w159);
  casadi_copy(w64+168, 14, w160);
  casadi_copy(w64+182, 14, w161);
  /* #476: @2 = dot(@11, @41) */
  w2 = casadi_dot(14, w11, w41);
  /* #477: {NULL, @237, NULL, NULL, NULL} = adj1_dae(@0, @12, @13, @6, @7, @18, @19, @20, @236, @24, @25) */
  arg1[0]=0;
  arg1[1]=w12;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w236;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w237;
  res1[2]=0;
  res1[3]=0;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #478: @134 = dot(@135, @237) */
  w134 = casadi_dot(14, w135, w237);
  /* #479: @2 = (@2+@134) */
  w2 += w134;
  /* #480: @13 = zeros(14x1,0nz) */
  /* #481: @18 = 0x1 */
  /* #482: @19 = 0x1 */
  /* #483: @12 = (@3*@237) */
  for (i=0, rr=w12, cs=w237; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #484: @236 = (2.*@23) */
  for (i=0, rr=w236, cs=w23; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #485: @12 = (@12+@236) */
  for (i=0, rr=w12, cs=w236; i<14; ++i) (*rr++) += (*cs++);
  /* #486: @20 = 0x1 */
  /* #487: @24 = 0x1 */
  /* #488: @25 = 0x1 */
  /* #489: @26 = zeros(14x1,0nz) */
  /* #490: @27 = 0x1 */
  /* #491: @28 = zeros(4x1,0nz) */
  /* #492: @29 = 0x1 */
  /* #493: @30 = 0x14 */
  /* #494: @64 = horzcat(@46, @97, @100, @103, @106, @109, @112, @115, @118, @121, @124, @127, @130, @133) */
  rr=w64;
  for (i=0, cs=w46; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w97; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w100; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w103; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w106; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w109; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w112; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w115; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w118; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w121; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w124; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w127; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w130; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w133; i<14; ++i) *rr++ = *cs++;
  /* #495: @31 = 0x14 */
  /* #496: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #497: @35 = 0x14 */
  /* #498: @36 = zeros(14x14,0nz) */
  /* #499: @37 = 0x14 */
  /* #500: @38 = 0x14 */
  /* #501: @46 = (@237*@40) */
  for (i=0, rr=w46, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w40);
  /* #502: @97 = (@3*@41) */
  for (i=0, rr=w97, cs=w41; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #503: @46 = (@46+@97) */
  for (i=0, rr=w46, cs=w97; i<14; ++i) (*rr++) += (*cs++);
  /* #504: @97 = (2.*@189) */
  for (i=0, rr=w97, cs=w189; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #505: @46 = (@46+@97) */
  for (i=0, rr=w46, cs=w97; i<14; ++i) (*rr++) += (*cs++);
  /* #506: @97 = (@237*@99) */
  for (i=0, rr=w97, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w99);
  /* #507: @100 = (@3*@149) */
  for (i=0, rr=w100, cs=w149; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #508: @97 = (@97+@100) */
  for (i=0, rr=w97, cs=w100; i<14; ++i) (*rr++) += (*cs++);
  /* #509: @100 = (2.*@193) */
  for (i=0, rr=w100, cs=w193; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #510: @97 = (@97+@100) */
  for (i=0, rr=w97, cs=w100; i<14; ++i) (*rr++) += (*cs++);
  /* #511: @100 = (@237*@102) */
  for (i=0, rr=w100, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w102);
  /* #512: @103 = (@3*@150) */
  for (i=0, rr=w103, cs=w150; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #513: @100 = (@100+@103) */
  for (i=0, rr=w100, cs=w103; i<14; ++i) (*rr++) += (*cs++);
  /* #514: @103 = (2.*@195) */
  for (i=0, rr=w103, cs=w195; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #515: @100 = (@100+@103) */
  for (i=0, rr=w100, cs=w103; i<14; ++i) (*rr++) += (*cs++);
  /* #516: @103 = (@237*@105) */
  for (i=0, rr=w103, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w105);
  /* #517: @106 = (@3*@151) */
  for (i=0, rr=w106, cs=w151; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #518: @103 = (@103+@106) */
  for (i=0, rr=w103, cs=w106; i<14; ++i) (*rr++) += (*cs++);
  /* #519: @106 = (2.*@197) */
  for (i=0, rr=w106, cs=w197; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #520: @103 = (@103+@106) */
  for (i=0, rr=w103, cs=w106; i<14; ++i) (*rr++) += (*cs++);
  /* #521: @106 = (@237*@108) */
  for (i=0, rr=w106, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w108);
  /* #522: @109 = (@3*@152) */
  for (i=0, rr=w109, cs=w152; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #523: @106 = (@106+@109) */
  for (i=0, rr=w106, cs=w109; i<14; ++i) (*rr++) += (*cs++);
  /* #524: @109 = (2.*@199) */
  for (i=0, rr=w109, cs=w199; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #525: @106 = (@106+@109) */
  for (i=0, rr=w106, cs=w109; i<14; ++i) (*rr++) += (*cs++);
  /* #526: @109 = (@237*@111) */
  for (i=0, rr=w109, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w111);
  /* #527: @112 = (@3*@153) */
  for (i=0, rr=w112, cs=w153; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #528: @109 = (@109+@112) */
  for (i=0, rr=w109, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #529: @112 = (2.*@201) */
  for (i=0, rr=w112, cs=w201; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #530: @109 = (@109+@112) */
  for (i=0, rr=w109, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #531: @112 = (@237*@114) */
  for (i=0, rr=w112, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w114);
  /* #532: @115 = (@3*@154) */
  for (i=0, rr=w115, cs=w154; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #533: @112 = (@112+@115) */
  for (i=0, rr=w112, cs=w115; i<14; ++i) (*rr++) += (*cs++);
  /* #534: @115 = (2.*@203) */
  for (i=0, rr=w115, cs=w203; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #535: @112 = (@112+@115) */
  for (i=0, rr=w112, cs=w115; i<14; ++i) (*rr++) += (*cs++);
  /* #536: @115 = (@237*@117) */
  for (i=0, rr=w115, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w117);
  /* #537: @118 = (@3*@155) */
  for (i=0, rr=w118, cs=w155; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #538: @115 = (@115+@118) */
  for (i=0, rr=w115, cs=w118; i<14; ++i) (*rr++) += (*cs++);
  /* #539: @118 = (2.*@205) */
  for (i=0, rr=w118, cs=w205; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #540: @115 = (@115+@118) */
  for (i=0, rr=w115, cs=w118; i<14; ++i) (*rr++) += (*cs++);
  /* #541: @118 = (@237*@120) */
  for (i=0, rr=w118, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w120);
  /* #542: @121 = (@3*@156) */
  for (i=0, rr=w121, cs=w156; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #543: @118 = (@118+@121) */
  for (i=0, rr=w118, cs=w121; i<14; ++i) (*rr++) += (*cs++);
  /* #544: @121 = (2.*@207) */
  for (i=0, rr=w121, cs=w207; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #545: @118 = (@118+@121) */
  for (i=0, rr=w118, cs=w121; i<14; ++i) (*rr++) += (*cs++);
  /* #546: @121 = (@237*@123) */
  for (i=0, rr=w121, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w123);
  /* #547: @124 = (@3*@157) */
  for (i=0, rr=w124, cs=w157; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #548: @121 = (@121+@124) */
  for (i=0, rr=w121, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #549: @124 = (2.*@209) */
  for (i=0, rr=w124, cs=w209; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #550: @121 = (@121+@124) */
  for (i=0, rr=w121, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #551: @124 = (@237*@126) */
  for (i=0, rr=w124, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w126);
  /* #552: @127 = (@3*@158) */
  for (i=0, rr=w127, cs=w158; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #553: @124 = (@124+@127) */
  for (i=0, rr=w124, cs=w127; i<14; ++i) (*rr++) += (*cs++);
  /* #554: @127 = (2.*@211) */
  for (i=0, rr=w127, cs=w211; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #555: @124 = (@124+@127) */
  for (i=0, rr=w124, cs=w127; i<14; ++i) (*rr++) += (*cs++);
  /* #556: @127 = (@237*@129) */
  for (i=0, rr=w127, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w129);
  /* #557: @130 = (@3*@159) */
  for (i=0, rr=w130, cs=w159; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #558: @127 = (@127+@130) */
  for (i=0, rr=w127, cs=w130; i<14; ++i) (*rr++) += (*cs++);
  /* #559: @130 = (2.*@213) */
  for (i=0, rr=w130, cs=w213; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #560: @127 = (@127+@130) */
  for (i=0, rr=w127, cs=w130; i<14; ++i) (*rr++) += (*cs++);
  /* #561: @130 = (@237*@132) */
  for (i=0, rr=w130, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w132);
  /* #562: @133 = (@3*@160) */
  for (i=0, rr=w133, cs=w160; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #563: @130 = (@130+@133) */
  for (i=0, rr=w130, cs=w133; i<14; ++i) (*rr++) += (*cs++);
  /* #564: @133 = (2.*@215) */
  for (i=0, rr=w133, cs=w215; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #565: @130 = (@130+@133) */
  for (i=0, rr=w130, cs=w133; i<14; ++i) (*rr++) += (*cs++);
  /* #566: @133 = (@237*@39) */
  for (i=0, rr=w133, cr=w237; i<14; ++i) (*rr++)  = ((*cr++)*w39);
  /* #567: @236 = (@3*@161) */
  for (i=0, rr=w236, cs=w161; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #568: @133 = (@133+@236) */
  for (i=0, rr=w133, cs=w236; i<14; ++i) (*rr++) += (*cs++);
  /* #569: @236 = (2.*@217) */
  for (i=0, rr=w236, cs=w217; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #570: @133 = (@133+@236) */
  for (i=0, rr=w133, cs=w236; i<14; ++i) (*rr++) += (*cs++);
  /* #571: @220 = horzcat(@46, @97, @100, @103, @106, @109, @112, @115, @118, @121, @124, @127, @130, @133) */
  rr=w220;
  for (i=0, cs=w46; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w97; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w100; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w103; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w106; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w109; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w112; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w115; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w118; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w121; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w124; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w127; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w130; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w133; i<14; ++i) *rr++ = *cs++;
  /* #572: @42 = 0x14 */
  /* #573: @43 = 0x14 */
  /* #574: {NULL, @82, NULL, @239, NULL} = fwd14_adj1_dae(@0, @9, @10, @6, @7, @13, @18, @19, @12, @20, @24, @25, @26, @27, @28, @29, @30, @64, @31, @80, @35, @36, @37, @38, @220, @42, @43) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w12;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=w64;
  arg1[18]=0;
  arg1[19]=w80;
  arg1[20]=0;
  arg1[21]=0;
  arg1[22]=0;
  arg1[23]=0;
  arg1[24]=w220;
  arg1[25]=0;
  arg1[26]=0;
  res1[0]=0;
  res1[1]=w82;
  res1[2]=0;
  res1[3]=w239;
  res1[4]=0;
  if (casadi_f24(arg1, res1, iw, w, 0)) return 1;
  /* #575: {@46, @97, @100, @103, @106, @109, @112, @115, @118, @121, @124, @127, @130, @133} = horzsplit(@82) */
  casadi_copy(w82, 14, w46);
  casadi_copy(w82+14, 14, w97);
  casadi_copy(w82+28, 14, w100);
  casadi_copy(w82+42, 14, w103);
  casadi_copy(w82+56, 14, w106);
  casadi_copy(w82+70, 14, w109);
  casadi_copy(w82+84, 14, w112);
  casadi_copy(w82+98, 14, w115);
  casadi_copy(w82+112, 14, w118);
  casadi_copy(w82+126, 14, w121);
  casadi_copy(w82+140, 14, w124);
  casadi_copy(w82+154, 14, w127);
  casadi_copy(w82+168, 14, w130);
  casadi_copy(w82+182, 14, w133);
  /* #576: @134 = dot(@8, @46) */
  w134 = casadi_dot(14, w8, w46);
  /* #577: {NULL, @236, NULL, NULL, NULL} = adj1_dae(@0, @9, @10, @6, @7, @13, @18, @19, @12, @20, @24) */
  arg1[0]=0;
  arg1[1]=w9;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w12;
  arg1[9]=0;
  arg1[10]=0;
  res1[0]=0;
  res1[1]=w236;
  res1[2]=0;
  res1[3]=0;
  res1[4]=0;
  if (casadi_f20(arg1, res1, iw, w, 0)) return 1;
  /* #578: @131 = dot(@83, @236) */
  w131 = casadi_dot(14, w83, w236);
  /* #579: @134 = (@134+@131) */
  w134 += w131;
  /* #580: @2 = (@2+@134) */
  w2 += w134;
  /* #581: @2 = (@190*@2) */
  w2  = (w190*w2);
  /* #582: @21 = (@21+@2) */
  w21 += w2;
  /* #583: @2 = 0.166667 */
  w2 = 1.6666666666666666e-01;
  /* #584: @9 = (2.*@11) */
  for (i=0, rr=w9, cs=w11; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #585: @9 = (@8+@9) */
  for (i=0, rr=w9, cr=w8, cs=w9; i<14; ++i) (*rr++)  = ((*cr++)+(*cs++));
  /* #586: @12 = (2.*@14) */
  for (i=0, rr=w12, cs=w14; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #587: @9 = (@9+@12) */
  for (i=0, rr=w9, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #588: {@12, NULL, NULL} = dae(@15, @16, @17, @6, @7) */
  arg1[0]=0;
  arg1[1]=w16;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  res1[0]=w12;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f6(arg1, res1, iw, w, 0)) return 1;
  /* #589: @9 = (@9+@12) */
  for (i=0, rr=w9, cs=w12; i<14; ++i) (*rr++) += (*cs++);
  /* #590: @134 = dot(@9, @192) */
  w134 = casadi_dot(14, w9, w192);
  /* #591: @135 = (2.*@135) */
  for (i=0, rr=w135, cs=w135; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #592: @83 = (@83+@135) */
  for (i=0, rr=w83, cs=w135; i<14; ++i) (*rr++) += (*cs++);
  /* #593: @162 = (2.*@162) */
  for (i=0, rr=w162, cs=w162; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #594: @83 = (@83+@162) */
  for (i=0, rr=w83, cs=w162; i<14; ++i) (*rr++) += (*cs++);
  /* #595: @0 = zeros(14x1,0nz) */
  /* #596: @10 = 0x1 */
  /* #597: @13 = 0x1 */
  /* #598: @18 = 0x14 */
  /* #599: @82 = horzcat(@34, @176, @177, @178, @179, @180, @181, @182, @183, @184, @185, @186, @187, @188) */
  rr=w82;
  for (i=0, cs=w34; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w176; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w177; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w178; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w179; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w180; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w181; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w182; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w183; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w184; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w185; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w186; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w187; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w188; i<14; ++i) *rr++ = *cs++;
  /* #600: @19 = 0x14 */
  /* #601: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #602: @20 = 0x14 */
  /* #603: {@64, NULL, NULL} = fwd14_dae(@15, @16, @17, @6, @7, @0, @10, @13, @18, @82, @19, @80, @20) */
  arg1[0]=0;
  arg1[1]=w16;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w82;
  arg1[10]=0;
  arg1[11]=w80;
  arg1[12]=0;
  res1[0]=w64;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f22(arg1, res1, iw, w, 0)) return 1;
  /* #604: {@16, @34, @176, @177, @178, @179, @180, @181, @182, @183, @184, @185, @186, @187} = horzsplit(@64) */
  casadi_copy(w64, 14, w16);
  casadi_copy(w64+14, 14, w34);
  casadi_copy(w64+28, 14, w176);
  casadi_copy(w64+42, 14, w177);
  casadi_copy(w64+56, 14, w178);
  casadi_copy(w64+70, 14, w179);
  casadi_copy(w64+84, 14, w180);
  casadi_copy(w64+98, 14, w181);
  casadi_copy(w64+112, 14, w182);
  casadi_copy(w64+126, 14, w183);
  casadi_copy(w64+140, 14, w184);
  casadi_copy(w64+154, 14, w185);
  casadi_copy(w64+168, 14, w186);
  casadi_copy(w64+182, 14, w187);
  /* #605: @83 = (@83+@16) */
  for (i=0, rr=w83, cs=w16; i<14; ++i) (*rr++) += (*cs++);
  /* #606: @131 = dot(@83, @22) */
  w131 = casadi_dot(14, w83, w22);
  /* #607: @134 = (@134+@131) */
  w134 += w131;
  /* #608: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #609: @21 = (@21+@134) */
  w21 += w134;
  /* #610: output[1][0] = @21 */
  if (res[1]) res[1][0] = w21;
  /* #611: @21 = dot(@14, @222) */
  w21 = casadi_dot(14, w14, w222);
  /* #612: @134 = dot(@163, @235) */
  w134 = casadi_dot(14, w163, w235);
  /* #613: @21 = (@21+@134) */
  w21 += w134;
  /* #614: @134 = dot(@11, @149) */
  w134 = casadi_dot(14, w11, w149);
  /* #615: @131 = dot(@136, @237) */
  w131 = casadi_dot(14, w136, w237);
  /* #616: @134 = (@134+@131) */
  w134 += w131;
  /* #617: @131 = dot(@8, @97) */
  w131 = casadi_dot(14, w8, w97);
  /* #618: @128 = dot(@84, @236) */
  w128 = casadi_dot(14, w84, w236);
  /* #619: @131 = (@131+@128) */
  w131 += w128;
  /* #620: @134 = (@134+@131) */
  w134 += w131;
  /* #621: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #622: @21 = (@21+@134) */
  w21 += w134;
  /* #623: @134 = dot(@9, @194) */
  w134 = casadi_dot(14, w9, w194);
  /* #624: @136 = (2.*@136) */
  for (i=0, rr=w136, cs=w136; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #625: @84 = (@84+@136) */
  for (i=0, rr=w84, cs=w136; i<14; ++i) (*rr++) += (*cs++);
  /* #626: @163 = (2.*@163) */
  for (i=0, rr=w163, cs=w163; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #627: @84 = (@84+@163) */
  for (i=0, rr=w84, cs=w163; i<14; ++i) (*rr++) += (*cs++);
  /* #628: @84 = (@84+@34) */
  for (i=0, rr=w84, cs=w34; i<14; ++i) (*rr++) += (*cs++);
  /* #629: @131 = dot(@84, @22) */
  w131 = casadi_dot(14, w84, w22);
  /* #630: @134 = (@134+@131) */
  w134 += w131;
  /* #631: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #632: @21 = (@21+@134) */
  w21 += w134;
  /* #633: output[1][1] = @21 */
  if (res[1]) res[1][1] = w21;
  /* #634: @21 = dot(@14, @223) */
  w21 = casadi_dot(14, w14, w223);
  /* #635: @134 = dot(@164, @235) */
  w134 = casadi_dot(14, w164, w235);
  /* #636: @21 = (@21+@134) */
  w21 += w134;
  /* #637: @134 = dot(@11, @150) */
  w134 = casadi_dot(14, w11, w150);
  /* #638: @131 = dot(@137, @237) */
  w131 = casadi_dot(14, w137, w237);
  /* #639: @134 = (@134+@131) */
  w134 += w131;
  /* #640: @131 = dot(@8, @100) */
  w131 = casadi_dot(14, w8, w100);
  /* #641: @128 = dot(@85, @236) */
  w128 = casadi_dot(14, w85, w236);
  /* #642: @131 = (@131+@128) */
  w131 += w128;
  /* #643: @134 = (@134+@131) */
  w134 += w131;
  /* #644: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #645: @21 = (@21+@134) */
  w21 += w134;
  /* #646: @134 = dot(@9, @196) */
  w134 = casadi_dot(14, w9, w196);
  /* #647: @137 = (2.*@137) */
  for (i=0, rr=w137, cs=w137; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #648: @85 = (@85+@137) */
  for (i=0, rr=w85, cs=w137; i<14; ++i) (*rr++) += (*cs++);
  /* #649: @164 = (2.*@164) */
  for (i=0, rr=w164, cs=w164; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #650: @85 = (@85+@164) */
  for (i=0, rr=w85, cs=w164; i<14; ++i) (*rr++) += (*cs++);
  /* #651: @85 = (@85+@176) */
  for (i=0, rr=w85, cs=w176; i<14; ++i) (*rr++) += (*cs++);
  /* #652: @131 = dot(@85, @22) */
  w131 = casadi_dot(14, w85, w22);
  /* #653: @134 = (@134+@131) */
  w134 += w131;
  /* #654: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #655: @21 = (@21+@134) */
  w21 += w134;
  /* #656: output[1][2] = @21 */
  if (res[1]) res[1][2] = w21;
  /* #657: @21 = dot(@14, @224) */
  w21 = casadi_dot(14, w14, w224);
  /* #658: @134 = dot(@165, @235) */
  w134 = casadi_dot(14, w165, w235);
  /* #659: @21 = (@21+@134) */
  w21 += w134;
  /* #660: @134 = dot(@11, @151) */
  w134 = casadi_dot(14, w11, w151);
  /* #661: @131 = dot(@138, @237) */
  w131 = casadi_dot(14, w138, w237);
  /* #662: @134 = (@134+@131) */
  w134 += w131;
  /* #663: @131 = dot(@8, @103) */
  w131 = casadi_dot(14, w8, w103);
  /* #664: @128 = dot(@86, @236) */
  w128 = casadi_dot(14, w86, w236);
  /* #665: @131 = (@131+@128) */
  w131 += w128;
  /* #666: @134 = (@134+@131) */
  w134 += w131;
  /* #667: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #668: @21 = (@21+@134) */
  w21 += w134;
  /* #669: @134 = dot(@9, @198) */
  w134 = casadi_dot(14, w9, w198);
  /* #670: @138 = (2.*@138) */
  for (i=0, rr=w138, cs=w138; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #671: @86 = (@86+@138) */
  for (i=0, rr=w86, cs=w138; i<14; ++i) (*rr++) += (*cs++);
  /* #672: @165 = (2.*@165) */
  for (i=0, rr=w165, cs=w165; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #673: @86 = (@86+@165) */
  for (i=0, rr=w86, cs=w165; i<14; ++i) (*rr++) += (*cs++);
  /* #674: @86 = (@86+@177) */
  for (i=0, rr=w86, cs=w177; i<14; ++i) (*rr++) += (*cs++);
  /* #675: @131 = dot(@86, @22) */
  w131 = casadi_dot(14, w86, w22);
  /* #676: @134 = (@134+@131) */
  w134 += w131;
  /* #677: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #678: @21 = (@21+@134) */
  w21 += w134;
  /* #679: output[1][3] = @21 */
  if (res[1]) res[1][3] = w21;
  /* #680: @21 = dot(@14, @225) */
  w21 = casadi_dot(14, w14, w225);
  /* #681: @134 = dot(@166, @235) */
  w134 = casadi_dot(14, w166, w235);
  /* #682: @21 = (@21+@134) */
  w21 += w134;
  /* #683: @134 = dot(@11, @152) */
  w134 = casadi_dot(14, w11, w152);
  /* #684: @131 = dot(@139, @237) */
  w131 = casadi_dot(14, w139, w237);
  /* #685: @134 = (@134+@131) */
  w134 += w131;
  /* #686: @131 = dot(@8, @106) */
  w131 = casadi_dot(14, w8, w106);
  /* #687: @128 = dot(@87, @236) */
  w128 = casadi_dot(14, w87, w236);
  /* #688: @131 = (@131+@128) */
  w131 += w128;
  /* #689: @134 = (@134+@131) */
  w134 += w131;
  /* #690: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #691: @21 = (@21+@134) */
  w21 += w134;
  /* #692: @134 = dot(@9, @200) */
  w134 = casadi_dot(14, w9, w200);
  /* #693: @139 = (2.*@139) */
  for (i=0, rr=w139, cs=w139; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #694: @87 = (@87+@139) */
  for (i=0, rr=w87, cs=w139; i<14; ++i) (*rr++) += (*cs++);
  /* #695: @166 = (2.*@166) */
  for (i=0, rr=w166, cs=w166; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #696: @87 = (@87+@166) */
  for (i=0, rr=w87, cs=w166; i<14; ++i) (*rr++) += (*cs++);
  /* #697: @87 = (@87+@178) */
  for (i=0, rr=w87, cs=w178; i<14; ++i) (*rr++) += (*cs++);
  /* #698: @131 = dot(@87, @22) */
  w131 = casadi_dot(14, w87, w22);
  /* #699: @134 = (@134+@131) */
  w134 += w131;
  /* #700: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #701: @21 = (@21+@134) */
  w21 += w134;
  /* #702: output[1][4] = @21 */
  if (res[1]) res[1][4] = w21;
  /* #703: @21 = dot(@14, @226) */
  w21 = casadi_dot(14, w14, w226);
  /* #704: @134 = dot(@167, @235) */
  w134 = casadi_dot(14, w167, w235);
  /* #705: @21 = (@21+@134) */
  w21 += w134;
  /* #706: @134 = dot(@11, @153) */
  w134 = casadi_dot(14, w11, w153);
  /* #707: @131 = dot(@140, @237) */
  w131 = casadi_dot(14, w140, w237);
  /* #708: @134 = (@134+@131) */
  w134 += w131;
  /* #709: @131 = dot(@8, @109) */
  w131 = casadi_dot(14, w8, w109);
  /* #710: @128 = dot(@88, @236) */
  w128 = casadi_dot(14, w88, w236);
  /* #711: @131 = (@131+@128) */
  w131 += w128;
  /* #712: @134 = (@134+@131) */
  w134 += w131;
  /* #713: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #714: @21 = (@21+@134) */
  w21 += w134;
  /* #715: @134 = dot(@9, @202) */
  w134 = casadi_dot(14, w9, w202);
  /* #716: @140 = (2.*@140) */
  for (i=0, rr=w140, cs=w140; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #717: @88 = (@88+@140) */
  for (i=0, rr=w88, cs=w140; i<14; ++i) (*rr++) += (*cs++);
  /* #718: @167 = (2.*@167) */
  for (i=0, rr=w167, cs=w167; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #719: @88 = (@88+@167) */
  for (i=0, rr=w88, cs=w167; i<14; ++i) (*rr++) += (*cs++);
  /* #720: @88 = (@88+@179) */
  for (i=0, rr=w88, cs=w179; i<14; ++i) (*rr++) += (*cs++);
  /* #721: @131 = dot(@88, @22) */
  w131 = casadi_dot(14, w88, w22);
  /* #722: @134 = (@134+@131) */
  w134 += w131;
  /* #723: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #724: @21 = (@21+@134) */
  w21 += w134;
  /* #725: output[1][5] = @21 */
  if (res[1]) res[1][5] = w21;
  /* #726: @21 = dot(@14, @227) */
  w21 = casadi_dot(14, w14, w227);
  /* #727: @134 = dot(@168, @235) */
  w134 = casadi_dot(14, w168, w235);
  /* #728: @21 = (@21+@134) */
  w21 += w134;
  /* #729: @134 = dot(@11, @154) */
  w134 = casadi_dot(14, w11, w154);
  /* #730: @131 = dot(@141, @237) */
  w131 = casadi_dot(14, w141, w237);
  /* #731: @134 = (@134+@131) */
  w134 += w131;
  /* #732: @131 = dot(@8, @112) */
  w131 = casadi_dot(14, w8, w112);
  /* #733: @128 = dot(@89, @236) */
  w128 = casadi_dot(14, w89, w236);
  /* #734: @131 = (@131+@128) */
  w131 += w128;
  /* #735: @134 = (@134+@131) */
  w134 += w131;
  /* #736: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #737: @21 = (@21+@134) */
  w21 += w134;
  /* #738: @134 = dot(@9, @204) */
  w134 = casadi_dot(14, w9, w204);
  /* #739: @141 = (2.*@141) */
  for (i=0, rr=w141, cs=w141; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #740: @89 = (@89+@141) */
  for (i=0, rr=w89, cs=w141; i<14; ++i) (*rr++) += (*cs++);
  /* #741: @168 = (2.*@168) */
  for (i=0, rr=w168, cs=w168; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #742: @89 = (@89+@168) */
  for (i=0, rr=w89, cs=w168; i<14; ++i) (*rr++) += (*cs++);
  /* #743: @89 = (@89+@180) */
  for (i=0, rr=w89, cs=w180; i<14; ++i) (*rr++) += (*cs++);
  /* #744: @131 = dot(@89, @22) */
  w131 = casadi_dot(14, w89, w22);
  /* #745: @134 = (@134+@131) */
  w134 += w131;
  /* #746: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #747: @21 = (@21+@134) */
  w21 += w134;
  /* #748: output[1][6] = @21 */
  if (res[1]) res[1][6] = w21;
  /* #749: @21 = dot(@14, @228) */
  w21 = casadi_dot(14, w14, w228);
  /* #750: @134 = dot(@169, @235) */
  w134 = casadi_dot(14, w169, w235);
  /* #751: @21 = (@21+@134) */
  w21 += w134;
  /* #752: @134 = dot(@11, @155) */
  w134 = casadi_dot(14, w11, w155);
  /* #753: @131 = dot(@142, @237) */
  w131 = casadi_dot(14, w142, w237);
  /* #754: @134 = (@134+@131) */
  w134 += w131;
  /* #755: @131 = dot(@8, @115) */
  w131 = casadi_dot(14, w8, w115);
  /* #756: @128 = dot(@90, @236) */
  w128 = casadi_dot(14, w90, w236);
  /* #757: @131 = (@131+@128) */
  w131 += w128;
  /* #758: @134 = (@134+@131) */
  w134 += w131;
  /* #759: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #760: @21 = (@21+@134) */
  w21 += w134;
  /* #761: @134 = dot(@9, @206) */
  w134 = casadi_dot(14, w9, w206);
  /* #762: @142 = (2.*@142) */
  for (i=0, rr=w142, cs=w142; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #763: @90 = (@90+@142) */
  for (i=0, rr=w90, cs=w142; i<14; ++i) (*rr++) += (*cs++);
  /* #764: @169 = (2.*@169) */
  for (i=0, rr=w169, cs=w169; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #765: @90 = (@90+@169) */
  for (i=0, rr=w90, cs=w169; i<14; ++i) (*rr++) += (*cs++);
  /* #766: @90 = (@90+@181) */
  for (i=0, rr=w90, cs=w181; i<14; ++i) (*rr++) += (*cs++);
  /* #767: @131 = dot(@90, @22) */
  w131 = casadi_dot(14, w90, w22);
  /* #768: @134 = (@134+@131) */
  w134 += w131;
  /* #769: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #770: @21 = (@21+@134) */
  w21 += w134;
  /* #771: output[1][7] = @21 */
  if (res[1]) res[1][7] = w21;
  /* #772: @21 = dot(@14, @229) */
  w21 = casadi_dot(14, w14, w229);
  /* #773: @134 = dot(@170, @235) */
  w134 = casadi_dot(14, w170, w235);
  /* #774: @21 = (@21+@134) */
  w21 += w134;
  /* #775: @134 = dot(@11, @156) */
  w134 = casadi_dot(14, w11, w156);
  /* #776: @131 = dot(@143, @237) */
  w131 = casadi_dot(14, w143, w237);
  /* #777: @134 = (@134+@131) */
  w134 += w131;
  /* #778: @131 = dot(@8, @118) */
  w131 = casadi_dot(14, w8, w118);
  /* #779: @128 = dot(@91, @236) */
  w128 = casadi_dot(14, w91, w236);
  /* #780: @131 = (@131+@128) */
  w131 += w128;
  /* #781: @134 = (@134+@131) */
  w134 += w131;
  /* #782: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #783: @21 = (@21+@134) */
  w21 += w134;
  /* #784: @134 = dot(@9, @208) */
  w134 = casadi_dot(14, w9, w208);
  /* #785: @143 = (2.*@143) */
  for (i=0, rr=w143, cs=w143; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #786: @91 = (@91+@143) */
  for (i=0, rr=w91, cs=w143; i<14; ++i) (*rr++) += (*cs++);
  /* #787: @170 = (2.*@170) */
  for (i=0, rr=w170, cs=w170; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #788: @91 = (@91+@170) */
  for (i=0, rr=w91, cs=w170; i<14; ++i) (*rr++) += (*cs++);
  /* #789: @91 = (@91+@182) */
  for (i=0, rr=w91, cs=w182; i<14; ++i) (*rr++) += (*cs++);
  /* #790: @131 = dot(@91, @22) */
  w131 = casadi_dot(14, w91, w22);
  /* #791: @134 = (@134+@131) */
  w134 += w131;
  /* #792: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #793: @21 = (@21+@134) */
  w21 += w134;
  /* #794: output[1][8] = @21 */
  if (res[1]) res[1][8] = w21;
  /* #795: @21 = dot(@14, @230) */
  w21 = casadi_dot(14, w14, w230);
  /* #796: @134 = dot(@171, @235) */
  w134 = casadi_dot(14, w171, w235);
  /* #797: @21 = (@21+@134) */
  w21 += w134;
  /* #798: @134 = dot(@11, @157) */
  w134 = casadi_dot(14, w11, w157);
  /* #799: @131 = dot(@144, @237) */
  w131 = casadi_dot(14, w144, w237);
  /* #800: @134 = (@134+@131) */
  w134 += w131;
  /* #801: @131 = dot(@8, @121) */
  w131 = casadi_dot(14, w8, w121);
  /* #802: @128 = dot(@92, @236) */
  w128 = casadi_dot(14, w92, w236);
  /* #803: @131 = (@131+@128) */
  w131 += w128;
  /* #804: @134 = (@134+@131) */
  w134 += w131;
  /* #805: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #806: @21 = (@21+@134) */
  w21 += w134;
  /* #807: @134 = dot(@9, @210) */
  w134 = casadi_dot(14, w9, w210);
  /* #808: @144 = (2.*@144) */
  for (i=0, rr=w144, cs=w144; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #809: @92 = (@92+@144) */
  for (i=0, rr=w92, cs=w144; i<14; ++i) (*rr++) += (*cs++);
  /* #810: @171 = (2.*@171) */
  for (i=0, rr=w171, cs=w171; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #811: @92 = (@92+@171) */
  for (i=0, rr=w92, cs=w171; i<14; ++i) (*rr++) += (*cs++);
  /* #812: @92 = (@92+@183) */
  for (i=0, rr=w92, cs=w183; i<14; ++i) (*rr++) += (*cs++);
  /* #813: @131 = dot(@92, @22) */
  w131 = casadi_dot(14, w92, w22);
  /* #814: @134 = (@134+@131) */
  w134 += w131;
  /* #815: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #816: @21 = (@21+@134) */
  w21 += w134;
  /* #817: output[1][9] = @21 */
  if (res[1]) res[1][9] = w21;
  /* #818: @21 = dot(@14, @231) */
  w21 = casadi_dot(14, w14, w231);
  /* #819: @134 = dot(@172, @235) */
  w134 = casadi_dot(14, w172, w235);
  /* #820: @21 = (@21+@134) */
  w21 += w134;
  /* #821: @134 = dot(@11, @158) */
  w134 = casadi_dot(14, w11, w158);
  /* #822: @131 = dot(@145, @237) */
  w131 = casadi_dot(14, w145, w237);
  /* #823: @134 = (@134+@131) */
  w134 += w131;
  /* #824: @131 = dot(@8, @124) */
  w131 = casadi_dot(14, w8, w124);
  /* #825: @128 = dot(@93, @236) */
  w128 = casadi_dot(14, w93, w236);
  /* #826: @131 = (@131+@128) */
  w131 += w128;
  /* #827: @134 = (@134+@131) */
  w134 += w131;
  /* #828: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #829: @21 = (@21+@134) */
  w21 += w134;
  /* #830: @134 = dot(@9, @212) */
  w134 = casadi_dot(14, w9, w212);
  /* #831: @145 = (2.*@145) */
  for (i=0, rr=w145, cs=w145; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #832: @93 = (@93+@145) */
  for (i=0, rr=w93, cs=w145; i<14; ++i) (*rr++) += (*cs++);
  /* #833: @172 = (2.*@172) */
  for (i=0, rr=w172, cs=w172; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #834: @93 = (@93+@172) */
  for (i=0, rr=w93, cs=w172; i<14; ++i) (*rr++) += (*cs++);
  /* #835: @93 = (@93+@184) */
  for (i=0, rr=w93, cs=w184; i<14; ++i) (*rr++) += (*cs++);
  /* #836: @131 = dot(@93, @22) */
  w131 = casadi_dot(14, w93, w22);
  /* #837: @134 = (@134+@131) */
  w134 += w131;
  /* #838: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #839: @21 = (@21+@134) */
  w21 += w134;
  /* #840: output[1][10] = @21 */
  if (res[1]) res[1][10] = w21;
  /* #841: @21 = dot(@14, @232) */
  w21 = casadi_dot(14, w14, w232);
  /* #842: @134 = dot(@173, @235) */
  w134 = casadi_dot(14, w173, w235);
  /* #843: @21 = (@21+@134) */
  w21 += w134;
  /* #844: @134 = dot(@11, @159) */
  w134 = casadi_dot(14, w11, w159);
  /* #845: @131 = dot(@146, @237) */
  w131 = casadi_dot(14, w146, w237);
  /* #846: @134 = (@134+@131) */
  w134 += w131;
  /* #847: @131 = dot(@8, @127) */
  w131 = casadi_dot(14, w8, w127);
  /* #848: @128 = dot(@94, @236) */
  w128 = casadi_dot(14, w94, w236);
  /* #849: @131 = (@131+@128) */
  w131 += w128;
  /* #850: @134 = (@134+@131) */
  w134 += w131;
  /* #851: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #852: @21 = (@21+@134) */
  w21 += w134;
  /* #853: @134 = dot(@9, @214) */
  w134 = casadi_dot(14, w9, w214);
  /* #854: @146 = (2.*@146) */
  for (i=0, rr=w146, cs=w146; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #855: @94 = (@94+@146) */
  for (i=0, rr=w94, cs=w146; i<14; ++i) (*rr++) += (*cs++);
  /* #856: @173 = (2.*@173) */
  for (i=0, rr=w173, cs=w173; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #857: @94 = (@94+@173) */
  for (i=0, rr=w94, cs=w173; i<14; ++i) (*rr++) += (*cs++);
  /* #858: @94 = (@94+@185) */
  for (i=0, rr=w94, cs=w185; i<14; ++i) (*rr++) += (*cs++);
  /* #859: @131 = dot(@94, @22) */
  w131 = casadi_dot(14, w94, w22);
  /* #860: @134 = (@134+@131) */
  w134 += w131;
  /* #861: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #862: @21 = (@21+@134) */
  w21 += w134;
  /* #863: output[1][11] = @21 */
  if (res[1]) res[1][11] = w21;
  /* #864: @21 = dot(@14, @233) */
  w21 = casadi_dot(14, w14, w233);
  /* #865: @134 = dot(@174, @235) */
  w134 = casadi_dot(14, w174, w235);
  /* #866: @21 = (@21+@134) */
  w21 += w134;
  /* #867: @134 = dot(@11, @160) */
  w134 = casadi_dot(14, w11, w160);
  /* #868: @131 = dot(@147, @237) */
  w131 = casadi_dot(14, w147, w237);
  /* #869: @134 = (@134+@131) */
  w134 += w131;
  /* #870: @131 = dot(@8, @130) */
  w131 = casadi_dot(14, w8, w130);
  /* #871: @128 = dot(@95, @236) */
  w128 = casadi_dot(14, w95, w236);
  /* #872: @131 = (@131+@128) */
  w131 += w128;
  /* #873: @134 = (@134+@131) */
  w134 += w131;
  /* #874: @134 = (@190*@134) */
  w134  = (w190*w134);
  /* #875: @21 = (@21+@134) */
  w21 += w134;
  /* #876: @134 = dot(@9, @216) */
  w134 = casadi_dot(14, w9, w216);
  /* #877: @147 = (2.*@147) */
  for (i=0, rr=w147, cs=w147; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #878: @95 = (@95+@147) */
  for (i=0, rr=w95, cs=w147; i<14; ++i) (*rr++) += (*cs++);
  /* #879: @174 = (2.*@174) */
  for (i=0, rr=w174, cs=w174; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #880: @95 = (@95+@174) */
  for (i=0, rr=w95, cs=w174; i<14; ++i) (*rr++) += (*cs++);
  /* #881: @95 = (@95+@186) */
  for (i=0, rr=w95, cs=w186; i<14; ++i) (*rr++) += (*cs++);
  /* #882: @131 = dot(@95, @22) */
  w131 = casadi_dot(14, w95, w22);
  /* #883: @134 = (@134+@131) */
  w134 += w131;
  /* #884: @134 = (@2*@134) */
  w134  = (w2*w134);
  /* #885: @21 = (@21+@134) */
  w21 += w134;
  /* #886: output[1][12] = @21 */
  if (res[1]) res[1][12] = w21;
  /* #887: @21 = dot(@14, @234) */
  w21 = casadi_dot(14, w14, w234);
  /* #888: @134 = dot(@175, @235) */
  w134 = casadi_dot(14, w175, w235);
  /* #889: @21 = (@21+@134) */
  w21 += w134;
  /* #890: @134 = dot(@11, @161) */
  w134 = casadi_dot(14, w11, w161);
  /* #891: @131 = dot(@148, @237) */
  w131 = casadi_dot(14, w148, w237);
  /* #892: @134 = (@134+@131) */
  w134 += w131;
  /* #893: @131 = dot(@8, @133) */
  w131 = casadi_dot(14, w8, w133);
  /* #894: @128 = dot(@96, @236) */
  w128 = casadi_dot(14, w96, w236);
  /* #895: @131 = (@131+@128) */
  w131 += w128;
  /* #896: @134 = (@134+@131) */
  w134 += w131;
  /* #897: @190 = (@190*@134) */
  w190 *= w134;
  /* #898: @21 = (@21+@190) */
  w21 += w190;
  /* #899: @190 = dot(@9, @218) */
  w190 = casadi_dot(14, w9, w218);
  /* #900: @148 = (2.*@148) */
  for (i=0, rr=w148, cs=w148; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #901: @96 = (@96+@148) */
  for (i=0, rr=w96, cs=w148; i<14; ++i) (*rr++) += (*cs++);
  /* #902: @175 = (2.*@175) */
  for (i=0, rr=w175, cs=w175; i<14; ++i) *rr++ = (2.* *cs++ );
  /* #903: @96 = (@96+@175) */
  for (i=0, rr=w96, cs=w175; i<14; ++i) (*rr++) += (*cs++);
  /* #904: @96 = (@96+@187) */
  for (i=0, rr=w96, cs=w187; i<14; ++i) (*rr++) += (*cs++);
  /* #905: @134 = dot(@96, @22) */
  w134 = casadi_dot(14, w96, w22);
  /* #906: @190 = (@190+@134) */
  w190 += w134;
  /* #907: @2 = (@2*@190) */
  w2 *= w190;
  /* #908: @21 = (@21+@2) */
  w21 += w2;
  /* #909: output[1][13] = @21 */
  if (res[1]) res[1][13] = w21;
  /* #910: @192 = (@192+@219) */
  for (i=0, rr=w192, cs=w219; i<14; ++i) (*rr++) += (*cs++);
  /* #911: @192 = (@192+@41) */
  for (i=0, rr=w192, cs=w41; i<14; ++i) (*rr++) += (*cs++);
  /* #912: @192 = (@192+@46) */
  for (i=0, rr=w192, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #913: @15 = zeros(14x1,0nz) */
  /* #914: @17 = 0x1 */
  /* #915: @0 = 0x1 */
  /* #916: @41 = (@3*@236) */
  for (i=0, rr=w41, cs=w236; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #917: @23 = (@23+@41) */
  for (i=0, rr=w23, cs=w41; i<14; ++i) (*rr++) += (*cs++);
  /* #918: @10 = 0x1 */
  /* #919: @13 = 0x1 */
  /* #920: @18 = 0x1 */
  /* #921: @19 = zeros(14x1,0nz) */
  /* #922: @20 = 0x1 */
  /* #923: @24 = zeros(4x1,0nz) */
  /* #924: @25 = 0x1 */
  /* #925: @26 = 0x14 */
  /* #926: @64 = horzcat(@32, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60, @61, @62, @63) */
  rr=w64;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w57; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w59; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w61; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w62; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w63; i<14; ++i) *rr++ = *cs++;
  /* #927: @27 = 0x14 */
  /* #928: @80 = horzcat(@66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79) */
  rr=w80;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w77; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w78; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w79; i<4; ++i) *rr++ = *cs++;
  /* #929: @28 = 0x14 */
  /* #930: @29 = zeros(14x14,0nz) */
  /* #931: @30 = 0x14 */
  /* #932: @31 = 0x14 */
  /* #933: @32 = (@236*@40) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w40);
  /* #934: @46 = (@3*@46) */
  for (i=0, rr=w46, cs=w46; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #935: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #936: @189 = (@189+@32) */
  for (i=0, rr=w189, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #937: @32 = (@236*@99) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w99);
  /* #938: @46 = (@3*@97) */
  for (i=0, rr=w46, cs=w97; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #939: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #940: @193 = (@193+@32) */
  for (i=0, rr=w193, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #941: @32 = (@236*@102) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w102);
  /* #942: @46 = (@3*@100) */
  for (i=0, rr=w46, cs=w100; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #943: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #944: @195 = (@195+@32) */
  for (i=0, rr=w195, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #945: @32 = (@236*@105) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w105);
  /* #946: @46 = (@3*@103) */
  for (i=0, rr=w46, cs=w103; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #947: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #948: @197 = (@197+@32) */
  for (i=0, rr=w197, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #949: @32 = (@236*@108) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w108);
  /* #950: @46 = (@3*@106) */
  for (i=0, rr=w46, cs=w106; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #951: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #952: @199 = (@199+@32) */
  for (i=0, rr=w199, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #953: @32 = (@236*@111) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w111);
  /* #954: @46 = (@3*@109) */
  for (i=0, rr=w46, cs=w109; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #955: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #956: @201 = (@201+@32) */
  for (i=0, rr=w201, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #957: @32 = (@236*@114) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w114);
  /* #958: @46 = (@3*@112) */
  for (i=0, rr=w46, cs=w112; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #959: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #960: @203 = (@203+@32) */
  for (i=0, rr=w203, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #961: @32 = (@236*@117) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w117);
  /* #962: @46 = (@3*@115) */
  for (i=0, rr=w46, cs=w115; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #963: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #964: @205 = (@205+@32) */
  for (i=0, rr=w205, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #965: @32 = (@236*@120) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w120);
  /* #966: @46 = (@3*@118) */
  for (i=0, rr=w46, cs=w118; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #967: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #968: @207 = (@207+@32) */
  for (i=0, rr=w207, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #969: @32 = (@236*@123) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w123);
  /* #970: @46 = (@3*@121) */
  for (i=0, rr=w46, cs=w121; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #971: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #972: @209 = (@209+@32) */
  for (i=0, rr=w209, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #973: @32 = (@236*@126) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w126);
  /* #974: @46 = (@3*@124) */
  for (i=0, rr=w46, cs=w124; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #975: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #976: @211 = (@211+@32) */
  for (i=0, rr=w211, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #977: @32 = (@236*@129) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w129);
  /* #978: @46 = (@3*@127) */
  for (i=0, rr=w46, cs=w127; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #979: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #980: @213 = (@213+@32) */
  for (i=0, rr=w213, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #981: @32 = (@236*@132) */
  for (i=0, rr=w32, cr=w236; i<14; ++i) (*rr++)  = ((*cr++)*w132);
  /* #982: @46 = (@3*@130) */
  for (i=0, rr=w46, cs=w130; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #983: @32 = (@32+@46) */
  for (i=0, rr=w32, cs=w46; i<14; ++i) (*rr++) += (*cs++);
  /* #984: @215 = (@215+@32) */
  for (i=0, rr=w215, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #985: @236 = (@236*@39) */
  for (i=0, rr=w236; i<14; ++i) (*rr++) *= w39;
  /* #986: @32 = (@3*@133) */
  for (i=0, rr=w32, cs=w133; i<14; ++i) (*rr++)  = (w3*(*cs++));
  /* #987: @236 = (@236+@32) */
  for (i=0, rr=w236, cs=w32; i<14; ++i) (*rr++) += (*cs++);
  /* #988: @217 = (@217+@236) */
  for (i=0, rr=w217, cs=w236; i<14; ++i) (*rr++) += (*cs++);
  /* #989: @82 = horzcat(@189, @193, @195, @197, @199, @201, @203, @205, @207, @209, @211, @213, @215, @217) */
  rr=w82;
  for (i=0, cs=w189; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w193; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w195; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w197; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w199; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w201; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w203; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w205; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w207; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w209; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w211; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w213; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w215; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w217; i<14; ++i) *rr++ = *cs++;
  /* #990: @35 = 0x14 */
  /* #991: @36 = 0x14 */
  /* #992: {NULL, @220, NULL, @240, NULL} = fwd14_adj1_dae(@4, @1, @5, @6, @7, @15, @17, @0, @23, @10, @13, @18, @19, @20, @24, @25, @26, @64, @27, @80, @28, @29, @30, @31, @82, @35, @36) */
  arg1[0]=0;
  arg1[1]=w1;
  arg1[2]=0;
  arg1[3]=w6;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=w23;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=w64;
  arg1[18]=0;
  arg1[19]=w80;
  arg1[20]=0;
  arg1[21]=0;
  arg1[22]=0;
  arg1[23]=0;
  arg1[24]=w82;
  arg1[25]=0;
  arg1[26]=0;
  res1[0]=0;
  res1[1]=w220;
  res1[2]=0;
  res1[3]=w240;
  res1[4]=0;
  if (casadi_f24(arg1, res1, iw, w, 0)) return 1;
  /* #993: {@1, @23, @189, @193, @195, @197, @199, @201, @203, @205, @207, @209, @211, @213} = horzsplit(@220) */
  casadi_copy(w220, 14, w1);
  casadi_copy(w220+14, 14, w23);
  casadi_copy(w220+28, 14, w189);
  casadi_copy(w220+42, 14, w193);
  casadi_copy(w220+56, 14, w195);
  casadi_copy(w220+70, 14, w197);
  casadi_copy(w220+84, 14, w199);
  casadi_copy(w220+98, 14, w201);
  casadi_copy(w220+112, 14, w203);
  casadi_copy(w220+126, 14, w205);
  casadi_copy(w220+140, 14, w207);
  casadi_copy(w220+154, 14, w209);
  casadi_copy(w220+168, 14, w211);
  casadi_copy(w220+182, 14, w213);
  /* #994: @192 = (@192+@1) */
  for (i=0, rr=w192, cs=w1; i<14; ++i) (*rr++) += (*cs++);
  /* #995: output[2][0] = @192 */
  casadi_copy(w192, 14, res[2]);
  /* #996: @194 = (@194+@222) */
  for (i=0, rr=w194, cs=w222; i<14; ++i) (*rr++) += (*cs++);
  /* #997: @194 = (@194+@149) */
  for (i=0, rr=w194, cs=w149; i<14; ++i) (*rr++) += (*cs++);
  /* #998: @194 = (@194+@97) */
  for (i=0, rr=w194, cs=w97; i<14; ++i) (*rr++) += (*cs++);
  /* #999: @194 = (@194+@23) */
  for (i=0, rr=w194, cs=w23; i<14; ++i) (*rr++) += (*cs++);
  /* #1000: output[2][1] = @194 */
  if (res[2]) casadi_copy(w194, 14, res[2]+14);
  /* #1001: @196 = (@196+@223) */
  for (i=0, rr=w196, cs=w223; i<14; ++i) (*rr++) += (*cs++);
  /* #1002: @196 = (@196+@150) */
  for (i=0, rr=w196, cs=w150; i<14; ++i) (*rr++) += (*cs++);
  /* #1003: @196 = (@196+@100) */
  for (i=0, rr=w196, cs=w100; i<14; ++i) (*rr++) += (*cs++);
  /* #1004: @196 = (@196+@189) */
  for (i=0, rr=w196, cs=w189; i<14; ++i) (*rr++) += (*cs++);
  /* #1005: output[2][2] = @196 */
  if (res[2]) casadi_copy(w196, 14, res[2]+28);
  /* #1006: @198 = (@198+@224) */
  for (i=0, rr=w198, cs=w224; i<14; ++i) (*rr++) += (*cs++);
  /* #1007: @198 = (@198+@151) */
  for (i=0, rr=w198, cs=w151; i<14; ++i) (*rr++) += (*cs++);
  /* #1008: @198 = (@198+@103) */
  for (i=0, rr=w198, cs=w103; i<14; ++i) (*rr++) += (*cs++);
  /* #1009: @198 = (@198+@193) */
  for (i=0, rr=w198, cs=w193; i<14; ++i) (*rr++) += (*cs++);
  /* #1010: output[2][3] = @198 */
  if (res[2]) casadi_copy(w198, 14, res[2]+42);
  /* #1011: @200 = (@200+@225) */
  for (i=0, rr=w200, cs=w225; i<14; ++i) (*rr++) += (*cs++);
  /* #1012: @200 = (@200+@152) */
  for (i=0, rr=w200, cs=w152; i<14; ++i) (*rr++) += (*cs++);
  /* #1013: @200 = (@200+@106) */
  for (i=0, rr=w200, cs=w106; i<14; ++i) (*rr++) += (*cs++);
  /* #1014: @200 = (@200+@195) */
  for (i=0, rr=w200, cs=w195; i<14; ++i) (*rr++) += (*cs++);
  /* #1015: output[2][4] = @200 */
  if (res[2]) casadi_copy(w200, 14, res[2]+56);
  /* #1016: @202 = (@202+@226) */
  for (i=0, rr=w202, cs=w226; i<14; ++i) (*rr++) += (*cs++);
  /* #1017: @202 = (@202+@153) */
  for (i=0, rr=w202, cs=w153; i<14; ++i) (*rr++) += (*cs++);
  /* #1018: @202 = (@202+@109) */
  for (i=0, rr=w202, cs=w109; i<14; ++i) (*rr++) += (*cs++);
  /* #1019: @202 = (@202+@197) */
  for (i=0, rr=w202, cs=w197; i<14; ++i) (*rr++) += (*cs++);
  /* #1020: output[2][5] = @202 */
  if (res[2]) casadi_copy(w202, 14, res[2]+70);
  /* #1021: @204 = (@204+@227) */
  for (i=0, rr=w204, cs=w227; i<14; ++i) (*rr++) += (*cs++);
  /* #1022: @204 = (@204+@154) */
  for (i=0, rr=w204, cs=w154; i<14; ++i) (*rr++) += (*cs++);
  /* #1023: @204 = (@204+@112) */
  for (i=0, rr=w204, cs=w112; i<14; ++i) (*rr++) += (*cs++);
  /* #1024: @204 = (@204+@199) */
  for (i=0, rr=w204, cs=w199; i<14; ++i) (*rr++) += (*cs++);
  /* #1025: output[2][6] = @204 */
  if (res[2]) casadi_copy(w204, 14, res[2]+84);
  /* #1026: @206 = (@206+@228) */
  for (i=0, rr=w206, cs=w228; i<14; ++i) (*rr++) += (*cs++);
  /* #1027: @206 = (@206+@155) */
  for (i=0, rr=w206, cs=w155; i<14; ++i) (*rr++) += (*cs++);
  /* #1028: @206 = (@206+@115) */
  for (i=0, rr=w206, cs=w115; i<14; ++i) (*rr++) += (*cs++);
  /* #1029: @206 = (@206+@201) */
  for (i=0, rr=w206, cs=w201; i<14; ++i) (*rr++) += (*cs++);
  /* #1030: output[2][7] = @206 */
  if (res[2]) casadi_copy(w206, 14, res[2]+98);
  /* #1031: @208 = (@208+@229) */
  for (i=0, rr=w208, cs=w229; i<14; ++i) (*rr++) += (*cs++);
  /* #1032: @208 = (@208+@156) */
  for (i=0, rr=w208, cs=w156; i<14; ++i) (*rr++) += (*cs++);
  /* #1033: @208 = (@208+@118) */
  for (i=0, rr=w208, cs=w118; i<14; ++i) (*rr++) += (*cs++);
  /* #1034: @208 = (@208+@203) */
  for (i=0, rr=w208, cs=w203; i<14; ++i) (*rr++) += (*cs++);
  /* #1035: output[2][8] = @208 */
  if (res[2]) casadi_copy(w208, 14, res[2]+112);
  /* #1036: @210 = (@210+@230) */
  for (i=0, rr=w210, cs=w230; i<14; ++i) (*rr++) += (*cs++);
  /* #1037: @210 = (@210+@157) */
  for (i=0, rr=w210, cs=w157; i<14; ++i) (*rr++) += (*cs++);
  /* #1038: @210 = (@210+@121) */
  for (i=0, rr=w210, cs=w121; i<14; ++i) (*rr++) += (*cs++);
  /* #1039: @210 = (@210+@205) */
  for (i=0, rr=w210, cs=w205; i<14; ++i) (*rr++) += (*cs++);
  /* #1040: output[2][9] = @210 */
  if (res[2]) casadi_copy(w210, 14, res[2]+126);
  /* #1041: @212 = (@212+@231) */
  for (i=0, rr=w212, cs=w231; i<14; ++i) (*rr++) += (*cs++);
  /* #1042: @212 = (@212+@158) */
  for (i=0, rr=w212, cs=w158; i<14; ++i) (*rr++) += (*cs++);
  /* #1043: @212 = (@212+@124) */
  for (i=0, rr=w212, cs=w124; i<14; ++i) (*rr++) += (*cs++);
  /* #1044: @212 = (@212+@207) */
  for (i=0, rr=w212, cs=w207; i<14; ++i) (*rr++) += (*cs++);
  /* #1045: output[2][10] = @212 */
  if (res[2]) casadi_copy(w212, 14, res[2]+140);
  /* #1046: @214 = (@214+@232) */
  for (i=0, rr=w214, cs=w232; i<14; ++i) (*rr++) += (*cs++);
  /* #1047: @214 = (@214+@159) */
  for (i=0, rr=w214, cs=w159; i<14; ++i) (*rr++) += (*cs++);
  /* #1048: @214 = (@214+@127) */
  for (i=0, rr=w214, cs=w127; i<14; ++i) (*rr++) += (*cs++);
  /* #1049: @214 = (@214+@209) */
  for (i=0, rr=w214, cs=w209; i<14; ++i) (*rr++) += (*cs++);
  /* #1050: output[2][11] = @214 */
  if (res[2]) casadi_copy(w214, 14, res[2]+154);
  /* #1051: @216 = (@216+@233) */
  for (i=0, rr=w216, cs=w233; i<14; ++i) (*rr++) += (*cs++);
  /* #1052: @216 = (@216+@160) */
  for (i=0, rr=w216, cs=w160; i<14; ++i) (*rr++) += (*cs++);
  /* #1053: @216 = (@216+@130) */
  for (i=0, rr=w216, cs=w130; i<14; ++i) (*rr++) += (*cs++);
  /* #1054: @216 = (@216+@211) */
  for (i=0, rr=w216, cs=w211; i<14; ++i) (*rr++) += (*cs++);
  /* #1055: output[2][12] = @216 */
  if (res[2]) casadi_copy(w216, 14, res[2]+168);
  /* #1056: @218 = (@218+@234) */
  for (i=0, rr=w218, cs=w234; i<14; ++i) (*rr++) += (*cs++);
  /* #1057: @218 = (@218+@161) */
  for (i=0, rr=w218, cs=w161; i<14; ++i) (*rr++) += (*cs++);
  /* #1058: @218 = (@218+@133) */
  for (i=0, rr=w218, cs=w133; i<14; ++i) (*rr++) += (*cs++);
  /* #1059: @218 = (@218+@213) */
  for (i=0, rr=w218, cs=w213; i<14; ++i) (*rr++) += (*cs++);
  /* #1060: output[2][13] = @218 */
  if (res[2]) casadi_copy(w218, 14, res[2]+182);
  /* #1061: {@6, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78} = horzsplit(@221) */
  casadi_copy(w221, 4, w6);
  casadi_copy(w221+4, 4, w66);
  casadi_copy(w221+8, 4, w67);
  casadi_copy(w221+12, 4, w68);
  casadi_copy(w221+16, 4, w69);
  casadi_copy(w221+20, 4, w70);
  casadi_copy(w221+24, 4, w71);
  casadi_copy(w221+28, 4, w72);
  casadi_copy(w221+32, 4, w73);
  casadi_copy(w221+36, 4, w74);
  casadi_copy(w221+40, 4, w75);
  casadi_copy(w221+44, 4, w76);
  casadi_copy(w221+48, 4, w77);
  casadi_copy(w221+52, 4, w78);
  /* #1062: {@79, @241, @242, @243, @244, @245, @246, @247, @248, @249, @250, @251, @252, @253} = horzsplit(@238) */
  casadi_copy(w238, 4, w79);
  casadi_copy(w238+4, 4, w241);
  casadi_copy(w238+8, 4, w242);
  casadi_copy(w238+12, 4, w243);
  casadi_copy(w238+16, 4, w244);
  casadi_copy(w238+20, 4, w245);
  casadi_copy(w238+24, 4, w246);
  casadi_copy(w238+28, 4, w247);
  casadi_copy(w238+32, 4, w248);
  casadi_copy(w238+36, 4, w249);
  casadi_copy(w238+40, 4, w250);
  casadi_copy(w238+44, 4, w251);
  casadi_copy(w238+48, 4, w252);
  casadi_copy(w238+52, 4, w253);
  /* #1063: @6 = (@6+@79) */
  for (i=0, rr=w6, cs=w79; i<4; ++i) (*rr++) += (*cs++);
  /* #1064: {@79, @254, @255, @256, @257, @258, @259, @260, @261, @262, @263, @264, @265, @266} = horzsplit(@239) */
  casadi_copy(w239, 4, w79);
  casadi_copy(w239+4, 4, w254);
  casadi_copy(w239+8, 4, w255);
  casadi_copy(w239+12, 4, w256);
  casadi_copy(w239+16, 4, w257);
  casadi_copy(w239+20, 4, w258);
  casadi_copy(w239+24, 4, w259);
  casadi_copy(w239+28, 4, w260);
  casadi_copy(w239+32, 4, w261);
  casadi_copy(w239+36, 4, w262);
  casadi_copy(w239+40, 4, w263);
  casadi_copy(w239+44, 4, w264);
  casadi_copy(w239+48, 4, w265);
  casadi_copy(w239+52, 4, w266);
  /* #1065: @6 = (@6+@79) */
  for (i=0, rr=w6, cs=w79; i<4; ++i) (*rr++) += (*cs++);
  /* #1066: {@79, @267, @268, @269, @270, @271, @272, @273, @274, @275, @276, @277, @278, @279} = horzsplit(@240) */
  casadi_copy(w240, 4, w79);
  casadi_copy(w240+4, 4, w267);
  casadi_copy(w240+8, 4, w268);
  casadi_copy(w240+12, 4, w269);
  casadi_copy(w240+16, 4, w270);
  casadi_copy(w240+20, 4, w271);
  casadi_copy(w240+24, 4, w272);
  casadi_copy(w240+28, 4, w273);
  casadi_copy(w240+32, 4, w274);
  casadi_copy(w240+36, 4, w275);
  casadi_copy(w240+40, 4, w276);
  casadi_copy(w240+44, 4, w277);
  casadi_copy(w240+48, 4, w278);
  casadi_copy(w240+52, 4, w279);
  /* #1067: @6 = (@6+@79) */
  for (i=0, rr=w6, cs=w79; i<4; ++i) (*rr++) += (*cs++);
  /* #1068: output[4][0] = @6 */
  casadi_copy(w6, 4, res[4]);
  /* #1069: @66 = (@66+@241) */
  for (i=0, rr=w66, cs=w241; i<4; ++i) (*rr++) += (*cs++);
  /* #1070: @66 = (@66+@254) */
  for (i=0, rr=w66, cs=w254; i<4; ++i) (*rr++) += (*cs++);
  /* #1071: @66 = (@66+@267) */
  for (i=0, rr=w66, cs=w267; i<4; ++i) (*rr++) += (*cs++);
  /* #1072: output[4][1] = @66 */
  if (res[4]) casadi_copy(w66, 4, res[4]+4);
  /* #1073: @67 = (@67+@242) */
  for (i=0, rr=w67, cs=w242; i<4; ++i) (*rr++) += (*cs++);
  /* #1074: @67 = (@67+@255) */
  for (i=0, rr=w67, cs=w255; i<4; ++i) (*rr++) += (*cs++);
  /* #1075: @67 = (@67+@268) */
  for (i=0, rr=w67, cs=w268; i<4; ++i) (*rr++) += (*cs++);
  /* #1076: output[4][2] = @67 */
  if (res[4]) casadi_copy(w67, 4, res[4]+8);
  /* #1077: @68 = (@68+@243) */
  for (i=0, rr=w68, cs=w243; i<4; ++i) (*rr++) += (*cs++);
  /* #1078: @68 = (@68+@256) */
  for (i=0, rr=w68, cs=w256; i<4; ++i) (*rr++) += (*cs++);
  /* #1079: @68 = (@68+@269) */
  for (i=0, rr=w68, cs=w269; i<4; ++i) (*rr++) += (*cs++);
  /* #1080: output[4][3] = @68 */
  if (res[4]) casadi_copy(w68, 4, res[4]+12);
  /* #1081: @69 = (@69+@244) */
  for (i=0, rr=w69, cs=w244; i<4; ++i) (*rr++) += (*cs++);
  /* #1082: @69 = (@69+@257) */
  for (i=0, rr=w69, cs=w257; i<4; ++i) (*rr++) += (*cs++);
  /* #1083: @69 = (@69+@270) */
  for (i=0, rr=w69, cs=w270; i<4; ++i) (*rr++) += (*cs++);
  /* #1084: output[4][4] = @69 */
  if (res[4]) casadi_copy(w69, 4, res[4]+16);
  /* #1085: @70 = (@70+@245) */
  for (i=0, rr=w70, cs=w245; i<4; ++i) (*rr++) += (*cs++);
  /* #1086: @70 = (@70+@258) */
  for (i=0, rr=w70, cs=w258; i<4; ++i) (*rr++) += (*cs++);
  /* #1087: @70 = (@70+@271) */
  for (i=0, rr=w70, cs=w271; i<4; ++i) (*rr++) += (*cs++);
  /* #1088: output[4][5] = @70 */
  if (res[4]) casadi_copy(w70, 4, res[4]+20);
  /* #1089: @71 = (@71+@246) */
  for (i=0, rr=w71, cs=w246; i<4; ++i) (*rr++) += (*cs++);
  /* #1090: @71 = (@71+@259) */
  for (i=0, rr=w71, cs=w259; i<4; ++i) (*rr++) += (*cs++);
  /* #1091: @71 = (@71+@272) */
  for (i=0, rr=w71, cs=w272; i<4; ++i) (*rr++) += (*cs++);
  /* #1092: output[4][6] = @71 */
  if (res[4]) casadi_copy(w71, 4, res[4]+24);
  /* #1093: @72 = (@72+@247) */
  for (i=0, rr=w72, cs=w247; i<4; ++i) (*rr++) += (*cs++);
  /* #1094: @72 = (@72+@260) */
  for (i=0, rr=w72, cs=w260; i<4; ++i) (*rr++) += (*cs++);
  /* #1095: @72 = (@72+@273) */
  for (i=0, rr=w72, cs=w273; i<4; ++i) (*rr++) += (*cs++);
  /* #1096: output[4][7] = @72 */
  if (res[4]) casadi_copy(w72, 4, res[4]+28);
  /* #1097: @73 = (@73+@248) */
  for (i=0, rr=w73, cs=w248; i<4; ++i) (*rr++) += (*cs++);
  /* #1098: @73 = (@73+@261) */
  for (i=0, rr=w73, cs=w261; i<4; ++i) (*rr++) += (*cs++);
  /* #1099: @73 = (@73+@274) */
  for (i=0, rr=w73, cs=w274; i<4; ++i) (*rr++) += (*cs++);
  /* #1100: output[4][8] = @73 */
  if (res[4]) casadi_copy(w73, 4, res[4]+32);
  /* #1101: @74 = (@74+@249) */
  for (i=0, rr=w74, cs=w249; i<4; ++i) (*rr++) += (*cs++);
  /* #1102: @74 = (@74+@262) */
  for (i=0, rr=w74, cs=w262; i<4; ++i) (*rr++) += (*cs++);
  /* #1103: @74 = (@74+@275) */
  for (i=0, rr=w74, cs=w275; i<4; ++i) (*rr++) += (*cs++);
  /* #1104: output[4][9] = @74 */
  if (res[4]) casadi_copy(w74, 4, res[4]+36);
  /* #1105: @75 = (@75+@250) */
  for (i=0, rr=w75, cs=w250; i<4; ++i) (*rr++) += (*cs++);
  /* #1106: @75 = (@75+@263) */
  for (i=0, rr=w75, cs=w263; i<4; ++i) (*rr++) += (*cs++);
  /* #1107: @75 = (@75+@276) */
  for (i=0, rr=w75, cs=w276; i<4; ++i) (*rr++) += (*cs++);
  /* #1108: output[4][10] = @75 */
  if (res[4]) casadi_copy(w75, 4, res[4]+40);
  /* #1109: @76 = (@76+@251) */
  for (i=0, rr=w76, cs=w251; i<4; ++i) (*rr++) += (*cs++);
  /* #1110: @76 = (@76+@264) */
  for (i=0, rr=w76, cs=w264; i<4; ++i) (*rr++) += (*cs++);
  /* #1111: @76 = (@76+@277) */
  for (i=0, rr=w76, cs=w277; i<4; ++i) (*rr++) += (*cs++);
  /* #1112: output[4][11] = @76 */
  if (res[4]) casadi_copy(w76, 4, res[4]+44);
  /* #1113: @77 = (@77+@252) */
  for (i=0, rr=w77, cs=w252; i<4; ++i) (*rr++) += (*cs++);
  /* #1114: @77 = (@77+@265) */
  for (i=0, rr=w77, cs=w265; i<4; ++i) (*rr++) += (*cs++);
  /* #1115: @77 = (@77+@278) */
  for (i=0, rr=w77, cs=w278; i<4; ++i) (*rr++) += (*cs++);
  /* #1116: output[4][12] = @77 */
  if (res[4]) casadi_copy(w77, 4, res[4]+48);
  /* #1117: @78 = (@78+@253) */
  for (i=0, rr=w78, cs=w253; i<4; ++i) (*rr++) += (*cs++);
  /* #1118: @78 = (@78+@266) */
  for (i=0, rr=w78, cs=w266; i<4; ++i) (*rr++) += (*cs++);
  /* #1119: @78 = (@78+@279) */
  for (i=0, rr=w78, cs=w279; i<4; ++i) (*rr++) += (*cs++);
  /* #1120: output[4][13] = @78 */
  if (res[4]) casadi_copy(w78, 4, res[4]+52);
  return 0;
}

/* fwd14_adj1_intg:(x0[14],z0[0],p[4],u[0],adj_xf[],adj_zf[],adj_qf[],out_xf[14x1,0nz],out_zf[],out_qf[0],out_adj_x0[],out_adj_z0[],out_adj_p[],out_adj_u[],adj2_xf[14],adj2_zf[],adj2_qf[0],adj2_adj_x0[],adj2_adj_z0[],adj2_adj_p[],adj2_adj_u[],out_adj2_x0[14x1,0nz],out_adj2_z0[0],out_adj2_p[4x1,0nz],out_adj2_u[0],out_adj2_adj_xf[],out_adj2_adj_zf[],out_adj2_adj_qf[],fwd_x0[14x14],fwd_z0[0x14],fwd_p[4x14],fwd_u[0x14],fwd_adj_xf[],fwd_adj_zf[],fwd_adj_qf[],fwd_out_xf[14x14,0nz],fwd_out_zf[],fwd_out_qf[0x14],fwd_out_adj_x0[],fwd_out_adj_z0[],fwd_out_adj_p[],fwd_out_adj_u[],fwd_adj2_xf[14x14],fwd_adj2_zf[],fwd_adj2_qf[0x14],fwd_adj2_adj_x0[],fwd_adj2_adj_z0[],fwd_adj2_adj_p[],fwd_adj2_adj_u[])->(fwd_adj2_x0[14x14],fwd_adj2_z0[0x14],fwd_adj2_p[4x14],fwd_adj2_u[0x14],fwd_adj2_adj_xf[],fwd_adj2_adj_zf[],fwd_adj2_adj_qf[]) */
static int casadi_f18(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+7, *rr;
  const casadi_real **arg1=arg+49, *cs;
  casadi_real w1, *w2=w+3750, *w4=w+3764, *w10=w+3768, *w16=w+3782, *w22=w+3796, *w27=w+3810, *w30=w+3824, *w33=w+3838, *w36=w+3852, *w46=w+3866, *w47=w+3880, *w48=w+3894, *w49=w+3908, *w50=w+3922, *w51=w+3936, *w52=w+3950, *w53=w+3964, *w54=w+3978, *w55=w+3992, *w56=w+4006, *w57=w+4020, *w58=w+4034, *w59=w+4048, *w60=w+4062, *w61=w+4076, *w63=w+4272, *w64=w+4276, *w65=w+4280, *w66=w+4284, *w67=w+4288, *w68=w+4292, *w69=w+4296, *w70=w+4300, *w71=w+4304, *w72=w+4308, *w73=w+4312, *w74=w+4316, *w75=w+4320, *w76=w+4324, *w77=w+4328, *w89=w+4384, *w94=w+4398, *w95=w+4412, *w97=w+4608, *w99=w+4664, *w111=w+4860, *w124=w+4916, *w126=w+4972, *w127=w+5168, *w128=w+5182, *w130=w+5378, *w131=w+5574, *w132=w+5630, *w133=w+5634, *w134=w+5638, *w135=w+5642, *w136=w+5646, *w137=w+5650, *w138=w+5654, *w139=w+5658, *w140=w+5662, *w141=w+5666, *w142=w+5670, *w143=w+5674, *w144=w+5678, *w145=w+5682, *w146=w+5686, *w147=w+5690, *w148=w+5694, *w149=w+5698, *w150=w+5702, *w151=w+5706, *w152=w+5710, *w153=w+5714, *w154=w+5718, *w155=w+5722, *w156=w+5726, *w157=w+5730, *w158=w+5734, *w159=w+5738, *w160=w+5742, *w161=w+5746, *w162=w+5750, *w163=w+5754, *w164=w+5758, *w165=w+5762, *w166=w+5766, *w167=w+5770, *w168=w+5774, *w169=w+5778, *w170=w+5782;
  /* #0: @0 = 0x1 */
  /* #1: @1 = 0.05 */
  w1 = 5.0000000000000003e-02;
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 14, w2);
  /* #3: @3 = 0x1 */
  /* #4: @4 = input[2][0] */
  casadi_copy(arg[2], 4, w4);
  /* #5: @5 = 0x1 */
  /* #6: @6 = zeros(14x1,0nz) */
  /* #7: @7 = 0x1 */
  /* #8: @8 = 0x1 */
  /* #9: @9 = 0x1 */
  /* #10: {@10, NULL, NULL} = step(@0, @1, @2, @3, @4, @5) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w2;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  res1[0]=w10;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #11: @11 = 0x1 */
  /* #12: @12 = zeros(14x1,0nz) */
  /* #13: @13 = 0x1 */
  /* #14: @14 = 0x1 */
  /* #15: @15 = 0x1 */
  /* #16: {@16, NULL, NULL} = step(@9, @1, @10, @11, @4, @5) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w10;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  res1[0]=w16;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #17: @17 = 0x1 */
  /* #18: @18 = zeros(14x1,0nz) */
  /* #19: @19 = 0x1 */
  /* #20: @20 = 0x1 */
  /* #21: @21 = 0x1 */
  /* #22: {@22, NULL, NULL} = step(@15, @1, @16, @17, @4, @5) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w16;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  res1[0]=w22;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #23: @23 = 0x1 */
  /* #24: @24 = zeros(14x1,0nz) */
  /* #25: @25 = 0x1 */
  /* #26: @26 = 0x1 */
  /* #27: @27 = input[14][0] */
  casadi_copy(arg[14], 14, w27);
  /* #28: @28 = 0x1 */
  /* #29: @29 = 0x1 */
  /* #30: {NULL, NULL, @30, NULL, NULL, NULL} = adj1_step(@21, @1, @22, @23, @4, @5, @24, @25, @26, @27, @28, @29) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w22;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w27;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w30;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #31: @31 = 0x1 */
  /* #32: @32 = 0x1 */
  /* #33: {NULL, NULL, @33, NULL, NULL, NULL} = adj1_step(@15, @1, @16, @17, @4, @5, @18, @19, @20, @30, @31, @32) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w16;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w30;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w33;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #34: @34 = 0x1 */
  /* #35: @35 = 0x1 */
  /* #36: {NULL, NULL, @36, NULL, NULL, NULL} = adj1_step(@9, @1, @10, @11, @4, @5, @12, @13, @14, @33, @34, @35) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w10;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w33;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w36;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #37: @37 = 0x1 */
  /* #38: @38 = 0x1 */
  /* #39: @39 = 0x1 */
  /* #40: @40 = 00 */
  /* #41: @41 = zeros(14x1,0nz) */
  /* #42: @42 = 0x1 */
  /* #43: @43 = zeros(4x1,0nz) */
  /* #44: @44 = 0x1 */
  /* #45: @45 = 0x14 */
  /* #46: @46 = zeros(1x14) */
  casadi_clear(w46, 14);
  /* #47: @47 = input[28][0] */
  casadi_copy(arg[28], 14, w47);
  /* #48: @48 = input[28][1] */
  casadi_copy(arg[28] ? arg[28]+14 : 0, 14, w48);
  /* #49: @49 = input[28][2] */
  casadi_copy(arg[28] ? arg[28]+28 : 0, 14, w49);
  /* #50: @50 = input[28][3] */
  casadi_copy(arg[28] ? arg[28]+42 : 0, 14, w50);
  /* #51: @51 = input[28][4] */
  casadi_copy(arg[28] ? arg[28]+56 : 0, 14, w51);
  /* #52: @52 = input[28][5] */
  casadi_copy(arg[28] ? arg[28]+70 : 0, 14, w52);
  /* #53: @53 = input[28][6] */
  casadi_copy(arg[28] ? arg[28]+84 : 0, 14, w53);
  /* #54: @54 = input[28][7] */
  casadi_copy(arg[28] ? arg[28]+98 : 0, 14, w54);
  /* #55: @55 = input[28][8] */
  casadi_copy(arg[28] ? arg[28]+112 : 0, 14, w55);
  /* #56: @56 = input[28][9] */
  casadi_copy(arg[28] ? arg[28]+126 : 0, 14, w56);
  /* #57: @57 = input[28][10] */
  casadi_copy(arg[28] ? arg[28]+140 : 0, 14, w57);
  /* #58: @58 = input[28][11] */
  casadi_copy(arg[28] ? arg[28]+154 : 0, 14, w58);
  /* #59: @59 = input[28][12] */
  casadi_copy(arg[28] ? arg[28]+168 : 0, 14, w59);
  /* #60: @60 = input[28][13] */
  casadi_copy(arg[28] ? arg[28]+182 : 0, 14, w60);
  /* #61: @61 = horzcat(@47, @48, @49, @50, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60) */
  rr=w61;
  for (i=0, cs=w47; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w57; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w59; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<14; ++i) *rr++ = *cs++;
  /* #62: @62 = 0x14 */
  /* #63: @63 = input[30][0] */
  casadi_copy(arg[30], 4, w63);
  /* #64: @64 = input[30][1] */
  casadi_copy(arg[30] ? arg[30]+4 : 0, 4, w64);
  /* #65: @65 = input[30][2] */
  casadi_copy(arg[30] ? arg[30]+8 : 0, 4, w65);
  /* #66: @66 = input[30][3] */
  casadi_copy(arg[30] ? arg[30]+12 : 0, 4, w66);
  /* #67: @67 = input[30][4] */
  casadi_copy(arg[30] ? arg[30]+16 : 0, 4, w67);
  /* #68: @68 = input[30][5] */
  casadi_copy(arg[30] ? arg[30]+20 : 0, 4, w68);
  /* #69: @69 = input[30][6] */
  casadi_copy(arg[30] ? arg[30]+24 : 0, 4, w69);
  /* #70: @70 = input[30][7] */
  casadi_copy(arg[30] ? arg[30]+28 : 0, 4, w70);
  /* #71: @71 = input[30][8] */
  casadi_copy(arg[30] ? arg[30]+32 : 0, 4, w71);
  /* #72: @72 = input[30][9] */
  casadi_copy(arg[30] ? arg[30]+36 : 0, 4, w72);
  /* #73: @73 = input[30][10] */
  casadi_copy(arg[30] ? arg[30]+40 : 0, 4, w73);
  /* #74: @74 = input[30][11] */
  casadi_copy(arg[30] ? arg[30]+44 : 0, 4, w74);
  /* #75: @75 = input[30][12] */
  casadi_copy(arg[30] ? arg[30]+48 : 0, 4, w75);
  /* #76: @76 = input[30][13] */
  casadi_copy(arg[30] ? arg[30]+52 : 0, 4, w76);
  /* #77: @77 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w77;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #78: @78 = 0x14 */
  /* #79: @79 = zeros(14x14,0nz) */
  /* #80: @80 = 0x14 */
  /* #81: @81 = 0x14 */
  /* #82: @82 = 0x1 */
  /* #83: @83 = 00 */
  /* #84: @84 = zeros(14x1,0nz) */
  /* #85: @85 = 0x1 */
  /* #86: @86 = zeros(4x1,0nz) */
  /* #87: @87 = 0x1 */
  /* #88: @88 = 0x14 */
  /* #89: @89 = zeros(1x14) */
  casadi_clear(w89, 14);
  /* #90: @90 = zeros(14x1,0nz) */
  /* #91: @91 = 0x1 */
  /* #92: @92 = 0x1 */
  /* #93: @93 = 0x14 */
  /* #94: @94 = zeros(1x14) */
  casadi_clear(w94, 14);
  /* #95: @95 = horzcat(@47, @48, @49, @50, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60) */
  rr=w95;
  for (i=0, cs=w47; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w57; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w59; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<14; ++i) *rr++ = *cs++;
  /* #96: @96 = 0x14 */
  /* #97: @97 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w97;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #98: @98 = 0x14 */
  /* #99: {@99, NULL, NULL} = fwd14_step(@0, @1, @2, @3, @4, @5, @90, @91, @92, @93, @94, @95, @96, @97, @98) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w2;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w94;
  arg1[11]=w95;
  arg1[12]=0;
  arg1[13]=w97;
  arg1[14]=0;
  res1[0]=w99;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f21(arg1, res1, iw, w, 0)) return 1;
  /* #100: @90 = 0x14 */
  /* #101: @97 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w97;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #102: @91 = 0x14 */
  /* #103: @92 = zeros(14x14,0nz) */
  /* #104: @93 = 0x14 */
  /* #105: @96 = 0x14 */
  /* #106: @98 = 0x1 */
  /* #107: @100 = 00 */
  /* #108: @101 = zeros(14x1,0nz) */
  /* #109: @102 = 0x1 */
  /* #110: @103 = zeros(4x1,0nz) */
  /* #111: @104 = 0x1 */
  /* #112: @105 = 0x14 */
  /* #113: @94 = zeros(1x14) */
  casadi_clear(w94, 14);
  /* #114: @106 = zeros(14x1,0nz) */
  /* #115: @107 = 0x1 */
  /* #116: @108 = 0x1 */
  /* #117: @109 = 0x14 */
  /* #118: @47 = zeros(1x14) */
  casadi_clear(w47, 14);
  /* #119: @110 = 0x14 */
  /* #120: @111 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w111;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #121: @112 = 0x14 */
  /* #122: {@95, NULL, NULL} = fwd14_step(@9, @1, @10, @11, @4, @5, @106, @107, @108, @109, @47, @99, @110, @111, @112) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w10;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w47;
  arg1[11]=w99;
  arg1[12]=0;
  arg1[13]=w111;
  arg1[14]=0;
  res1[0]=w95;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f21(arg1, res1, iw, w, 0)) return 1;
  /* #123: @106 = 0x14 */
  /* #124: @111 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w111;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #125: @107 = 0x14 */
  /* #126: @108 = zeros(14x14,0nz) */
  /* #127: @109 = 0x14 */
  /* #128: @110 = 0x14 */
  /* #129: @112 = 0x1 */
  /* #130: @113 = 00 */
  /* #131: @114 = zeros(14x1,0nz) */
  /* #132: @115 = 0x1 */
  /* #133: @116 = zeros(4x1,0nz) */
  /* #134: @117 = 0x1 */
  /* #135: @118 = 0x14 */
  /* #136: @47 = zeros(1x14) */
  casadi_clear(w47, 14);
  /* #137: @119 = zeros(14x1,0nz) */
  /* #138: @120 = 0x1 */
  /* #139: @121 = 0x1 */
  /* #140: @122 = 0x14 */
  /* #141: @48 = zeros(1x14) */
  casadi_clear(w48, 14);
  /* #142: @123 = 0x14 */
  /* #143: @124 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w124;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #144: @125 = 0x14 */
  /* #145: {@126, NULL, NULL} = fwd14_step(@15, @1, @16, @17, @4, @5, @119, @120, @121, @122, @48, @95, @123, @124, @125) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w16;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=w48;
  arg1[11]=w95;
  arg1[12]=0;
  arg1[13]=w124;
  arg1[14]=0;
  res1[0]=w126;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f21(arg1, res1, iw, w, 0)) return 1;
  /* #146: @119 = 0x14 */
  /* #147: @124 = horzcat(@63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76) */
  rr=w124;
  for (i=0, cs=w63; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w64; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w67; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w68; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w69; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w72; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w73; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w74; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<4; ++i) *rr++ = *cs++;
  /* #148: @120 = 0x14 */
  /* #149: @121 = zeros(14x14,0nz) */
  /* #150: @122 = 0x14 */
  /* #151: @123 = 0x14 */
  /* #152: @48 = input[42][0] */
  casadi_copy(arg[42], 14, w48);
  /* #153: @49 = input[42][1] */
  casadi_copy(arg[42] ? arg[42]+14 : 0, 14, w49);
  /* #154: @50 = input[42][2] */
  casadi_copy(arg[42] ? arg[42]+28 : 0, 14, w50);
  /* #155: @51 = input[42][3] */
  casadi_copy(arg[42] ? arg[42]+42 : 0, 14, w51);
  /* #156: @52 = input[42][4] */
  casadi_copy(arg[42] ? arg[42]+56 : 0, 14, w52);
  /* #157: @53 = input[42][5] */
  casadi_copy(arg[42] ? arg[42]+70 : 0, 14, w53);
  /* #158: @54 = input[42][6] */
  casadi_copy(arg[42] ? arg[42]+84 : 0, 14, w54);
  /* #159: @55 = input[42][7] */
  casadi_copy(arg[42] ? arg[42]+98 : 0, 14, w55);
  /* #160: @56 = input[42][8] */
  casadi_copy(arg[42] ? arg[42]+112 : 0, 14, w56);
  /* #161: @57 = input[42][9] */
  casadi_copy(arg[42] ? arg[42]+126 : 0, 14, w57);
  /* #162: @58 = input[42][10] */
  casadi_copy(arg[42] ? arg[42]+140 : 0, 14, w58);
  /* #163: @59 = input[42][11] */
  casadi_copy(arg[42] ? arg[42]+154 : 0, 14, w59);
  /* #164: @60 = input[42][12] */
  casadi_copy(arg[42] ? arg[42]+168 : 0, 14, w60);
  /* #165: @127 = input[42][13] */
  casadi_copy(arg[42] ? arg[42]+182 : 0, 14, w127);
  /* #166: @128 = horzcat(@48, @49, @50, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60, @127) */
  rr=w128;
  for (i=0, cs=w48; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w49; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w52; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w53; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w54; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w57; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w58; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w59; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w127; i<14; ++i) *rr++ = *cs++;
  /* #167: @125 = 0x14 */
  /* #168: @129 = 0x14 */
  /* #169: {NULL, NULL, @130, NULL, @131, NULL} = fwd14_adj1_step(@21, @1, @22, @23, @4, @5, @24, @25, @26, @27, @28, @29, @112, @113, @114, @115, @116, @117, @118, @47, @126, @119, @124, @120, @121, @122, @123, @128, @125, @129) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w22;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w27;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=w47;
  arg1[20]=w126;
  arg1[21]=0;
  arg1[22]=w124;
  arg1[23]=0;
  arg1[24]=0;
  arg1[25]=0;
  arg1[26]=0;
  arg1[27]=w128;
  arg1[28]=0;
  arg1[29]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w130;
  res1[3]=0;
  res1[4]=w131;
  res1[5]=0;
  if (casadi_f23(arg1, res1, iw, w, 0)) return 1;
  /* #170: @21 = 0x14 */
  /* #171: @23 = 0x14 */
  /* #172: {NULL, NULL, @126, NULL, @124, NULL} = fwd14_adj1_step(@15, @1, @16, @17, @4, @5, @18, @19, @20, @30, @31, @32, @98, @100, @101, @102, @103, @104, @105, @94, @95, @106, @111, @107, @108, @109, @110, @130, @21, @23) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w16;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w30;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=w94;
  arg1[20]=w95;
  arg1[21]=0;
  arg1[22]=w111;
  arg1[23]=0;
  arg1[24]=0;
  arg1[25]=0;
  arg1[26]=0;
  arg1[27]=w130;
  arg1[28]=0;
  arg1[29]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w126;
  res1[3]=0;
  res1[4]=w124;
  res1[5]=0;
  if (casadi_f23(arg1, res1, iw, w, 0)) return 1;
  /* #173: @15 = 0x14 */
  /* #174: @17 = 0x14 */
  /* #175: {NULL, NULL, @95, NULL, @111, NULL} = fwd14_adj1_step(@9, @1, @10, @11, @4, @5, @12, @13, @14, @33, @34, @35, @82, @83, @84, @85, @86, @87, @88, @89, @99, @90, @97, @91, @92, @93, @96, @126, @15, @17) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w10;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w33;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=w89;
  arg1[20]=w99;
  arg1[21]=0;
  arg1[22]=w97;
  arg1[23]=0;
  arg1[24]=0;
  arg1[25]=0;
  arg1[26]=0;
  arg1[27]=w126;
  arg1[28]=0;
  arg1[29]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w95;
  res1[3]=0;
  res1[4]=w111;
  res1[5]=0;
  if (casadi_f23(arg1, res1, iw, w, 0)) return 1;
  /* #176: @9 = 0x14 */
  /* #177: @11 = 0x14 */
  /* #178: {NULL, NULL, @99, NULL, @97, NULL} = fwd14_adj1_step(@0, @1, @2, @3, @4, @5, @6, @7, @8, @36, @37, @38, @39, @40, @41, @42, @43, @44, @45, @46, @61, @62, @77, @78, @79, @80, @81, @95, @9, @11) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w2;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w36;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=0;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=w46;
  arg1[20]=w61;
  arg1[21]=0;
  arg1[22]=w77;
  arg1[23]=0;
  arg1[24]=0;
  arg1[25]=0;
  arg1[26]=0;
  arg1[27]=w95;
  arg1[28]=0;
  arg1[29]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w99;
  res1[3]=0;
  res1[4]=w97;
  res1[5]=0;
  if (casadi_f23(arg1, res1, iw, w, 0)) return 1;
  /* #179: output[0][0] = @99 */
  casadi_copy(w99, 196, res[0]);
  /* #180: {@4, @63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75} = horzsplit(@131) */
  casadi_copy(w131, 4, w4);
  casadi_copy(w131+4, 4, w63);
  casadi_copy(w131+8, 4, w64);
  casadi_copy(w131+12, 4, w65);
  casadi_copy(w131+16, 4, w66);
  casadi_copy(w131+20, 4, w67);
  casadi_copy(w131+24, 4, w68);
  casadi_copy(w131+28, 4, w69);
  casadi_copy(w131+32, 4, w70);
  casadi_copy(w131+36, 4, w71);
  casadi_copy(w131+40, 4, w72);
  casadi_copy(w131+44, 4, w73);
  casadi_copy(w131+48, 4, w74);
  casadi_copy(w131+52, 4, w75);
  /* #181: {@76, @132, @133, @134, @135, @136, @137, @138, @139, @140, @141, @142, @143, @144} = horzsplit(@124) */
  casadi_copy(w124, 4, w76);
  casadi_copy(w124+4, 4, w132);
  casadi_copy(w124+8, 4, w133);
  casadi_copy(w124+12, 4, w134);
  casadi_copy(w124+16, 4, w135);
  casadi_copy(w124+20, 4, w136);
  casadi_copy(w124+24, 4, w137);
  casadi_copy(w124+28, 4, w138);
  casadi_copy(w124+32, 4, w139);
  casadi_copy(w124+36, 4, w140);
  casadi_copy(w124+40, 4, w141);
  casadi_copy(w124+44, 4, w142);
  casadi_copy(w124+48, 4, w143);
  casadi_copy(w124+52, 4, w144);
  /* #182: @4 = (@4+@76) */
  for (i=0, rr=w4, cs=w76; i<4; ++i) (*rr++) += (*cs++);
  /* #183: {@76, @145, @146, @147, @148, @149, @150, @151, @152, @153, @154, @155, @156, @157} = horzsplit(@111) */
  casadi_copy(w111, 4, w76);
  casadi_copy(w111+4, 4, w145);
  casadi_copy(w111+8, 4, w146);
  casadi_copy(w111+12, 4, w147);
  casadi_copy(w111+16, 4, w148);
  casadi_copy(w111+20, 4, w149);
  casadi_copy(w111+24, 4, w150);
  casadi_copy(w111+28, 4, w151);
  casadi_copy(w111+32, 4, w152);
  casadi_copy(w111+36, 4, w153);
  casadi_copy(w111+40, 4, w154);
  casadi_copy(w111+44, 4, w155);
  casadi_copy(w111+48, 4, w156);
  casadi_copy(w111+52, 4, w157);
  /* #184: @4 = (@4+@76) */
  for (i=0, rr=w4, cs=w76; i<4; ++i) (*rr++) += (*cs++);
  /* #185: {@76, @158, @159, @160, @161, @162, @163, @164, @165, @166, @167, @168, @169, @170} = horzsplit(@97) */
  casadi_copy(w97, 4, w76);
  casadi_copy(w97+4, 4, w158);
  casadi_copy(w97+8, 4, w159);
  casadi_copy(w97+12, 4, w160);
  casadi_copy(w97+16, 4, w161);
  casadi_copy(w97+20, 4, w162);
  casadi_copy(w97+24, 4, w163);
  casadi_copy(w97+28, 4, w164);
  casadi_copy(w97+32, 4, w165);
  casadi_copy(w97+36, 4, w166);
  casadi_copy(w97+40, 4, w167);
  casadi_copy(w97+44, 4, w168);
  casadi_copy(w97+48, 4, w169);
  casadi_copy(w97+52, 4, w170);
  /* #186: @4 = (@4+@76) */
  for (i=0, rr=w4, cs=w76; i<4; ++i) (*rr++) += (*cs++);
  /* #187: output[2][0] = @4 */
  casadi_copy(w4, 4, res[2]);
  /* #188: @63 = (@63+@132) */
  for (i=0, rr=w63, cs=w132; i<4; ++i) (*rr++) += (*cs++);
  /* #189: @63 = (@63+@145) */
  for (i=0, rr=w63, cs=w145; i<4; ++i) (*rr++) += (*cs++);
  /* #190: @63 = (@63+@158) */
  for (i=0, rr=w63, cs=w158; i<4; ++i) (*rr++) += (*cs++);
  /* #191: output[2][1] = @63 */
  if (res[2]) casadi_copy(w63, 4, res[2]+4);
  /* #192: @64 = (@64+@133) */
  for (i=0, rr=w64, cs=w133; i<4; ++i) (*rr++) += (*cs++);
  /* #193: @64 = (@64+@146) */
  for (i=0, rr=w64, cs=w146; i<4; ++i) (*rr++) += (*cs++);
  /* #194: @64 = (@64+@159) */
  for (i=0, rr=w64, cs=w159; i<4; ++i) (*rr++) += (*cs++);
  /* #195: output[2][2] = @64 */
  if (res[2]) casadi_copy(w64, 4, res[2]+8);
  /* #196: @65 = (@65+@134) */
  for (i=0, rr=w65, cs=w134; i<4; ++i) (*rr++) += (*cs++);
  /* #197: @65 = (@65+@147) */
  for (i=0, rr=w65, cs=w147; i<4; ++i) (*rr++) += (*cs++);
  /* #198: @65 = (@65+@160) */
  for (i=0, rr=w65, cs=w160; i<4; ++i) (*rr++) += (*cs++);
  /* #199: output[2][3] = @65 */
  if (res[2]) casadi_copy(w65, 4, res[2]+12);
  /* #200: @66 = (@66+@135) */
  for (i=0, rr=w66, cs=w135; i<4; ++i) (*rr++) += (*cs++);
  /* #201: @66 = (@66+@148) */
  for (i=0, rr=w66, cs=w148; i<4; ++i) (*rr++) += (*cs++);
  /* #202: @66 = (@66+@161) */
  for (i=0, rr=w66, cs=w161; i<4; ++i) (*rr++) += (*cs++);
  /* #203: output[2][4] = @66 */
  if (res[2]) casadi_copy(w66, 4, res[2]+16);
  /* #204: @67 = (@67+@136) */
  for (i=0, rr=w67, cs=w136; i<4; ++i) (*rr++) += (*cs++);
  /* #205: @67 = (@67+@149) */
  for (i=0, rr=w67, cs=w149; i<4; ++i) (*rr++) += (*cs++);
  /* #206: @67 = (@67+@162) */
  for (i=0, rr=w67, cs=w162; i<4; ++i) (*rr++) += (*cs++);
  /* #207: output[2][5] = @67 */
  if (res[2]) casadi_copy(w67, 4, res[2]+20);
  /* #208: @68 = (@68+@137) */
  for (i=0, rr=w68, cs=w137; i<4; ++i) (*rr++) += (*cs++);
  /* #209: @68 = (@68+@150) */
  for (i=0, rr=w68, cs=w150; i<4; ++i) (*rr++) += (*cs++);
  /* #210: @68 = (@68+@163) */
  for (i=0, rr=w68, cs=w163; i<4; ++i) (*rr++) += (*cs++);
  /* #211: output[2][6] = @68 */
  if (res[2]) casadi_copy(w68, 4, res[2]+24);
  /* #212: @69 = (@69+@138) */
  for (i=0, rr=w69, cs=w138; i<4; ++i) (*rr++) += (*cs++);
  /* #213: @69 = (@69+@151) */
  for (i=0, rr=w69, cs=w151; i<4; ++i) (*rr++) += (*cs++);
  /* #214: @69 = (@69+@164) */
  for (i=0, rr=w69, cs=w164; i<4; ++i) (*rr++) += (*cs++);
  /* #215: output[2][7] = @69 */
  if (res[2]) casadi_copy(w69, 4, res[2]+28);
  /* #216: @70 = (@70+@139) */
  for (i=0, rr=w70, cs=w139; i<4; ++i) (*rr++) += (*cs++);
  /* #217: @70 = (@70+@152) */
  for (i=0, rr=w70, cs=w152; i<4; ++i) (*rr++) += (*cs++);
  /* #218: @70 = (@70+@165) */
  for (i=0, rr=w70, cs=w165; i<4; ++i) (*rr++) += (*cs++);
  /* #219: output[2][8] = @70 */
  if (res[2]) casadi_copy(w70, 4, res[2]+32);
  /* #220: @71 = (@71+@140) */
  for (i=0, rr=w71, cs=w140; i<4; ++i) (*rr++) += (*cs++);
  /* #221: @71 = (@71+@153) */
  for (i=0, rr=w71, cs=w153; i<4; ++i) (*rr++) += (*cs++);
  /* #222: @71 = (@71+@166) */
  for (i=0, rr=w71, cs=w166; i<4; ++i) (*rr++) += (*cs++);
  /* #223: output[2][9] = @71 */
  if (res[2]) casadi_copy(w71, 4, res[2]+36);
  /* #224: @72 = (@72+@141) */
  for (i=0, rr=w72, cs=w141; i<4; ++i) (*rr++) += (*cs++);
  /* #225: @72 = (@72+@154) */
  for (i=0, rr=w72, cs=w154; i<4; ++i) (*rr++) += (*cs++);
  /* #226: @72 = (@72+@167) */
  for (i=0, rr=w72, cs=w167; i<4; ++i) (*rr++) += (*cs++);
  /* #227: output[2][10] = @72 */
  if (res[2]) casadi_copy(w72, 4, res[2]+40);
  /* #228: @73 = (@73+@142) */
  for (i=0, rr=w73, cs=w142; i<4; ++i) (*rr++) += (*cs++);
  /* #229: @73 = (@73+@155) */
  for (i=0, rr=w73, cs=w155; i<4; ++i) (*rr++) += (*cs++);
  /* #230: @73 = (@73+@168) */
  for (i=0, rr=w73, cs=w168; i<4; ++i) (*rr++) += (*cs++);
  /* #231: output[2][11] = @73 */
  if (res[2]) casadi_copy(w73, 4, res[2]+44);
  /* #232: @74 = (@74+@143) */
  for (i=0, rr=w74, cs=w143; i<4; ++i) (*rr++) += (*cs++);
  /* #233: @74 = (@74+@156) */
  for (i=0, rr=w74, cs=w156; i<4; ++i) (*rr++) += (*cs++);
  /* #234: @74 = (@74+@169) */
  for (i=0, rr=w74, cs=w169; i<4; ++i) (*rr++) += (*cs++);
  /* #235: output[2][12] = @74 */
  if (res[2]) casadi_copy(w74, 4, res[2]+48);
  /* #236: @75 = (@75+@144) */
  for (i=0, rr=w75, cs=w144; i<4; ++i) (*rr++) += (*cs++);
  /* #237: @75 = (@75+@157) */
  for (i=0, rr=w75, cs=w157; i<4; ++i) (*rr++) += (*cs++);
  /* #238: @75 = (@75+@170) */
  for (i=0, rr=w75, cs=w170; i<4; ++i) (*rr++) += (*cs++);
  /* #239: output[2][13] = @75 */
  if (res[2]) casadi_copy(w75, 4, res[2]+52);
  return 0;
}

/* fwd14_adj1_f_disc:(x[14],u[4],out_x_next[14x1,0nz],adj_x_next[14],out_adj_x[14x1,0nz],out_adj_u[4x1,0nz],fwd_x[14x14],fwd_u[4x14],fwd_out_x_next[14x14,0nz],fwd_adj_x_next[14x14])->(fwd_adj_x[14x14],fwd_adj_u[4x14]) */
static int casadi_f17(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+2, *rr;
  const casadi_real **arg1=arg+10, *cs;
  casadi_real *w0=w+5786, *w1=w+5789, w2, *w3=w+5793, *w4=w+5796, w5, *w6=w+5800, *w8=w+5814, *w13=w+5818, *w19=w+5832, *w20=w+5846, *w21=w+5860, *w22=w+5874, *w23=w+5888, *w24=w+5902, *w25=w+5916, *w26=w+5930, *w27=w+5944, *w28=w+5958, *w29=w+5972, *w30=w+5986, *w31=w+6000, *w32=w+6014, *w33=w+6028, *w35=w+6224, *w36=w+6228, *w37=w+6232, *w38=w+6236, *w39=w+6240, *w40=w+6244, *w41=w+6248, *w42=w+6252, *w43=w+6256, *w44=w+6260, *w45=w+6264, *w46=w+6268, *w47=w+6272, *w48=w+6276, *w49=w+6280, *w53=w+6336, *w55=w+6532, *w56=w+6728;
  /* #0: @0 = input[0][0] */
  casadi_copy(arg[0], 3, w0);
  /* #1: @1 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+3 : 0, 3, w1);
  /* #2: @2 = input[0][2] */
  w2 = arg[0] ? arg[0][6] : 0;
  /* #3: @3 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+7 : 0, 3, w3);
  /* #4: @4 = input[0][4] */
  casadi_copy(arg[0] ? arg[0]+10 : 0, 3, w4);
  /* #5: @5 = input[0][5] */
  w5 = arg[0] ? arg[0][13] : 0;
  /* #6: @6 = vertcat(@0, @1, @2, @3, @4, @5) */
  rr=w6;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  for (i=0, cs=w3; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  /* #7: @7 = 0x1 */
  /* #8: @0 = input[1][0] */
  casadi_copy(arg[1], 3, w0);
  /* #9: @2 = input[1][1] */
  w2 = arg[1] ? arg[1][3] : 0;
  /* #10: @8 = vertcat(@0, @2) */
  rr=w8;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  /* #11: @9 = 0x1 */
  /* #12: @10 = 0x0 */
  /* #13: @11 = zeros(14x1,0nz) */
  /* #14: @12 = 0x1 */
  /* #15: @13 = input[3][0] */
  casadi_copy(arg[3], 14, w13);
  /* #16: @14 = 0x1 */
  /* #17: @15 = zeros(14x1,0nz) */
  /* #18: @16 = 0x1 */
  /* #19: @17 = zeros(4x1,0nz) */
  /* #20: @18 = 0x1 */
  /* #21: @19 = input[6][0] */
  casadi_copy(arg[6], 14, w19);
  /* #22: @20 = input[6][1] */
  casadi_copy(arg[6] ? arg[6]+14 : 0, 14, w20);
  /* #23: @21 = input[6][2] */
  casadi_copy(arg[6] ? arg[6]+28 : 0, 14, w21);
  /* #24: @22 = input[6][3] */
  casadi_copy(arg[6] ? arg[6]+42 : 0, 14, w22);
  /* #25: @23 = input[6][4] */
  casadi_copy(arg[6] ? arg[6]+56 : 0, 14, w23);
  /* #26: @24 = input[6][5] */
  casadi_copy(arg[6] ? arg[6]+70 : 0, 14, w24);
  /* #27: @25 = input[6][6] */
  casadi_copy(arg[6] ? arg[6]+84 : 0, 14, w25);
  /* #28: @26 = input[6][7] */
  casadi_copy(arg[6] ? arg[6]+98 : 0, 14, w26);
  /* #29: @27 = input[6][8] */
  casadi_copy(arg[6] ? arg[6]+112 : 0, 14, w27);
  /* #30: @28 = input[6][9] */
  casadi_copy(arg[6] ? arg[6]+126 : 0, 14, w28);
  /* #31: @29 = input[6][10] */
  casadi_copy(arg[6] ? arg[6]+140 : 0, 14, w29);
  /* #32: @30 = input[6][11] */
  casadi_copy(arg[6] ? arg[6]+154 : 0, 14, w30);
  /* #33: @31 = input[6][12] */
  casadi_copy(arg[6] ? arg[6]+168 : 0, 14, w31);
  /* #34: @32 = input[6][13] */
  casadi_copy(arg[6] ? arg[6]+182 : 0, 14, w32);
  /* #35: @33 = horzcat(@19, @20, @21, @22, @23, @24, @25, @26, @27, @28, @29, @30, @31, @32) */
  rr=w33;
  for (i=0, cs=w19; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w20; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w21; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w22; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w23; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w24; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w25; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w27; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w28; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w29; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  /* #36: @34 = 0x14 */
  /* #37: @35 = input[7][0] */
  casadi_copy(arg[7], 4, w35);
  /* #38: @36 = input[7][1] */
  casadi_copy(arg[7] ? arg[7]+4 : 0, 4, w36);
  /* #39: @37 = input[7][2] */
  casadi_copy(arg[7] ? arg[7]+8 : 0, 4, w37);
  /* #40: @38 = input[7][3] */
  casadi_copy(arg[7] ? arg[7]+12 : 0, 4, w38);
  /* #41: @39 = input[7][4] */
  casadi_copy(arg[7] ? arg[7]+16 : 0, 4, w39);
  /* #42: @40 = input[7][5] */
  casadi_copy(arg[7] ? arg[7]+20 : 0, 4, w40);
  /* #43: @41 = input[7][6] */
  casadi_copy(arg[7] ? arg[7]+24 : 0, 4, w41);
  /* #44: @42 = input[7][7] */
  casadi_copy(arg[7] ? arg[7]+28 : 0, 4, w42);
  /* #45: @43 = input[7][8] */
  casadi_copy(arg[7] ? arg[7]+32 : 0, 4, w43);
  /* #46: @44 = input[7][9] */
  casadi_copy(arg[7] ? arg[7]+36 : 0, 4, w44);
  /* #47: @45 = input[7][10] */
  casadi_copy(arg[7] ? arg[7]+40 : 0, 4, w45);
  /* #48: @46 = input[7][11] */
  casadi_copy(arg[7] ? arg[7]+44 : 0, 4, w46);
  /* #49: @47 = input[7][12] */
  casadi_copy(arg[7] ? arg[7]+48 : 0, 4, w47);
  /* #50: @48 = input[7][13] */
  casadi_copy(arg[7] ? arg[7]+52 : 0, 4, w48);
  /* #51: @49 = horzcat(@35, @36, @37, @38, @39, @40, @41, @42, @43, @44, @45, @46, @47, @48) */
  rr=w49;
  for (i=0, cs=w35; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w37; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w38; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w39; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w42; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w43; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w44; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w47; i<4; ++i) *rr++ = *cs++;
  for (i=0, cs=w48; i<4; ++i) *rr++ = *cs++;
  /* #52: @50 = 0x14 */
  /* #53: @51 = zeros(14x14,0nz) */
  /* #54: @52 = 0x14 */
  /* #55: @19 = input[9][0] */
  casadi_copy(arg[9], 14, w19);
  /* #56: @20 = input[9][1] */
  casadi_copy(arg[9] ? arg[9]+14 : 0, 14, w20);
  /* #57: @21 = input[9][2] */
  casadi_copy(arg[9] ? arg[9]+28 : 0, 14, w21);
  /* #58: @22 = input[9][3] */
  casadi_copy(arg[9] ? arg[9]+42 : 0, 14, w22);
  /* #59: @23 = input[9][4] */
  casadi_copy(arg[9] ? arg[9]+56 : 0, 14, w23);
  /* #60: @24 = input[9][5] */
  casadi_copy(arg[9] ? arg[9]+70 : 0, 14, w24);
  /* #61: @25 = input[9][6] */
  casadi_copy(arg[9] ? arg[9]+84 : 0, 14, w25);
  /* #62: @26 = input[9][7] */
  casadi_copy(arg[9] ? arg[9]+98 : 0, 14, w26);
  /* #63: @27 = input[9][8] */
  casadi_copy(arg[9] ? arg[9]+112 : 0, 14, w27);
  /* #64: @28 = input[9][9] */
  casadi_copy(arg[9] ? arg[9]+126 : 0, 14, w28);
  /* #65: @29 = input[9][10] */
  casadi_copy(arg[9] ? arg[9]+140 : 0, 14, w29);
  /* #66: @30 = input[9][11] */
  casadi_copy(arg[9] ? arg[9]+154 : 0, 14, w30);
  /* #67: @31 = input[9][12] */
  casadi_copy(arg[9] ? arg[9]+168 : 0, 14, w31);
  /* #68: @32 = input[9][13] */
  casadi_copy(arg[9] ? arg[9]+182 : 0, 14, w32);
  /* #69: @53 = horzcat(@19, @20, @21, @22, @23, @24, @25, @26, @27, @28, @29, @30, @31, @32) */
  rr=w53;
  for (i=0, cs=w19; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w20; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w21; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w22; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w23; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w24; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w25; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w27; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w28; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w29; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  for (i=0, cs=w32; i<14; ++i) *rr++ = *cs++;
  /* #70: @54 = 0x14 */
  /* #71: {@55, NULL, @56, NULL, NULL, NULL, NULL} = fwd14_adj1_intg(@6, @7, @8, @9, @10, @10, @10, @11, @10, @12, @10, @10, @10, @10, @13, @10, @14, @10, @10, @10, @10, @15, @16, @17, @18, @10, @10, @10, @33, @34, @49, @50, @10, @10, @10, @51, @10, @52, @10, @10, @10, @10, @53, @10, @54, @10, @10, @10, @10) */
  arg1[0]=w6;
  arg1[1]=0;
  arg1[2]=w8;
  arg1[3]=0;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=w13;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=0;
  arg1[20]=0;
  arg1[21]=0;
  arg1[22]=0;
  arg1[23]=0;
  arg1[24]=0;
  arg1[25]=0;
  arg1[26]=0;
  arg1[27]=0;
  arg1[28]=w33;
  arg1[29]=0;
  arg1[30]=w49;
  arg1[31]=0;
  arg1[32]=0;
  arg1[33]=0;
  arg1[34]=0;
  arg1[35]=0;
  arg1[36]=0;
  arg1[37]=0;
  arg1[38]=0;
  arg1[39]=0;
  arg1[40]=0;
  arg1[41]=0;
  arg1[42]=w53;
  arg1[43]=0;
  arg1[44]=0;
  arg1[45]=0;
  arg1[46]=0;
  arg1[47]=0;
  arg1[48]=0;
  res1[0]=w55;
  res1[1]=0;
  res1[2]=w56;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  res1[6]=0;
  if (casadi_f18(arg1, res1, iw, w, 0)) return 1;
  /* #72: output[0][0] = @55 */
  casadi_copy(w55, 196, res[0]);
  /* #73: output[1][0] = @56 */
  casadi_copy(w56, 56, res[1]);
  return 0;
}

/* nlp_hess_l:(x[464],p[14],lam_f,lam_g[564])->(hess_gamma_x_x[464x464,5496nz]) */
static int casadi_f16(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j;
  casadi_real **res1=res+1, *rr, *ss, *tt;
  const casadi_int *cii;
  const casadi_real **arg1=arg+4, *cs;
  casadi_real *w0=w+6784, *w1=w+12280, *w2=w+12644, *w3=w+13008, *w4=w+13022, *w5=w+13122, *w7=w+13126, *w8=w+13690, w9, *w10=w+13705, w11, *w12=w+13720, w13, *w14=w+13735, w15, *w16=w+13750, w17, *w18=w+13765, w19, *w20=w+13780, w21, *w22=w+13795, w23, *w24=w+13810, w25, *w26=w+13825, w27, *w28=w+13840, w29, *w30=w+13855, w31, *w32=w+13870, w33, *w34=w+13885, w35, *w36=w+13900, w37, *w38=w+13915, w39, *w40=w+13930, w41, *w42=w+13945, w43, *w44=w+13960, w45, *w46=w+13975, w47, *w48=w+13990, w49, *w50=w+14005, w51, *w52=w+14020, w53, *w54=w+14035, w55, *w56=w+14050, w57, *w60=w+14065, *w61=w+14116, *w62=w+14142, w63, *w64=w+14168, *w65=w+14194, w66, *w67=w+14220, *w68=w+14246, w69, *w70=w+14272, *w71=w+14298, w72, *w73=w+14324, *w74=w+14350, w75, *w76=w+14377, w77, *w78=w+14404, w79, *w80=w+14431, w81, *w82=w+14458, w83, *w84=w+14485, w85, *w86=w+14512, w87, *w88=w+14539, w89, *w90=w+14566, w91, *w92=w+14593, w93, *w94=w+14620, *w95=w+14634, *w106=w+14830, *w107=w+14834, *w108=w+14890, *w109=w+15086, *w110=w+15282, *w111=w+15338, *w112=w+15352, *w113=w+15366, *w114=w+15380, *w115=w+15394, *w116=w+15408, *w117=w+15422, *w118=w+15436, *w119=w+15450, *w120=w+15464, *w121=w+15478, *w122=w+15492, *w123=w+15506, *w124=w+15562, *w125=w+15576, *w126=w+15590, *w127=w+15604, *w128=w+15618, *w129=w+15632, *w130=w+15646, *w131=w+15660, *w132=w+15674, *w133=w+15688, *w134=w+15702, *w135=w+15716, *w136=w+15730, *w137=w+15786, *w138=w+15800, *w139=w+15814, *w140=w+15828, *w141=w+15842, *w142=w+15856, *w143=w+15870, *w144=w+15884, *w145=w+15898, *w146=w+15912, *w147=w+15926, *w148=w+15940, *w149=w+15954, *w150=w+16010, *w151=w+16024, *w152=w+16038, *w153=w+16052, *w154=w+16066, *w155=w+16080, *w156=w+16094, *w157=w+16108, *w158=w+16122, *w159=w+16136, *w160=w+16150, *w161=w+16164, *w162=w+16178, *w163=w+16234, *w164=w+16248, *w165=w+16262, *w166=w+16276, *w167=w+16290, *w168=w+16304, *w169=w+16318, *w170=w+16332, *w171=w+16346, *w172=w+16360, *w173=w+16374, *w174=w+16388, *w175=w+16402, *w176=w+16458, *w177=w+16472, *w178=w+16486, *w179=w+16500, *w180=w+16514, *w181=w+16528, *w182=w+16542, *w183=w+16556, *w184=w+16570, *w185=w+16584, *w186=w+16598, *w187=w+16612, *w188=w+16626, *w189=w+16682, *w190=w+16696, *w191=w+16710, *w192=w+16724, *w193=w+16738, *w194=w+16752, *w195=w+16766, *w196=w+16780, *w197=w+16794, *w198=w+16808, *w199=w+16822, *w200=w+16836, *w201=w+16850, *w202=w+16906, *w203=w+16920, *w204=w+16934, *w205=w+16948, *w206=w+16962, *w207=w+16976, *w208=w+16990, *w209=w+17004, *w210=w+17018, *w211=w+17032, *w212=w+17046, *w213=w+17060, *w214=w+17074, *w215=w+17130, *w216=w+17144, *w217=w+17158, *w218=w+17172, *w219=w+17186, *w220=w+17200, *w221=w+17214, *w222=w+17228, *w223=w+17242, *w224=w+17256, *w225=w+17270, *w226=w+17284, *w227=w+17298, *w228=w+17354, *w229=w+17368, *w230=w+17382, *w231=w+17396, *w232=w+17410, *w233=w+17424, *w234=w+17438, *w235=w+17452, *w236=w+17466, *w237=w+17480, *w238=w+17494, *w239=w+17508, *w240=w+17522, *w241=w+17578, *w242=w+17592, *w243=w+17606, *w244=w+17620, *w245=w+17634, *w246=w+17648, *w247=w+17662, *w248=w+17676, *w249=w+17690, *w250=w+17704, *w251=w+17718, *w252=w+17732, *w253=w+17746, *w254=w+17802, *w255=w+17816, *w256=w+17830, *w257=w+17844, *w258=w+17858, *w259=w+17872, *w260=w+17886, *w261=w+17900, *w262=w+17914, *w263=w+17928, *w264=w+17942, *w265=w+17956, *w266=w+17970, *w267=w+18026, *w268=w+18040, *w269=w+18054, *w270=w+18068, *w271=w+18082, *w272=w+18096, *w273=w+18110, *w274=w+18124, *w275=w+18138, *w276=w+18152, *w277=w+18166, *w278=w+18180, *w279=w+18194, *w280=w+18250, *w281=w+18264, *w282=w+18278, *w283=w+18292, *w284=w+18306, *w285=w+18320, *w286=w+18334, *w287=w+18348, *w288=w+18362, *w289=w+18376, *w290=w+18390, *w291=w+18404, *w292=w+18418, *w293=w+18474, *w294=w+18488, *w295=w+18502, *w296=w+18516, *w297=w+18530, *w298=w+18544, *w299=w+18558, *w300=w+18572, *w301=w+18586, *w302=w+18600, *w303=w+18614, *w304=w+18628, *w305=w+18642, *w306=w+18698, *w307=w+18712, *w308=w+18726, *w309=w+18740, *w310=w+18754, *w311=w+18768, *w312=w+18782, *w313=w+18796, *w314=w+18810, *w315=w+18824, *w316=w+18838, *w317=w+18852, *w318=w+18866, *w319=w+18922, *w320=w+18936, *w321=w+18950, *w322=w+18964, *w323=w+18978, *w324=w+18992, *w325=w+19006, *w326=w+19020, *w327=w+19034, *w328=w+19048, *w329=w+19062, *w330=w+19076, *w331=w+19090, *w332=w+19146, *w333=w+19160, *w334=w+19174, *w335=w+19188, *w336=w+19202, *w337=w+19216, *w338=w+19230, *w339=w+19244, *w340=w+19258, *w341=w+19272, *w342=w+19286, *w343=w+19300, *w344=w+19314, *w345=w+19370, *w346=w+19384, *w347=w+19398, *w348=w+19412, *w349=w+19426, *w350=w+19440, *w351=w+19454, *w352=w+19468, *w353=w+19482, *w354=w+19496, *w355=w+19510, *w356=w+19524, *w357=w+19538, *w358=w+19594, *w359=w+19608, *w360=w+19622, *w361=w+19636, *w362=w+19650, *w363=w+19664, *w364=w+19678, *w365=w+19692, *w366=w+19706, *w367=w+19720, *w368=w+19734, *w369=w+19748, *w370=w+19762, *w371=w+19818, *w372=w+19832, *w373=w+19846, *w374=w+19860, *w375=w+19874, *w376=w+19888, *w377=w+19902, *w378=w+19916, *w379=w+19930, *w380=w+19944, *w381=w+19958, *w382=w+19972, *w383=w+19986, *w384=w+20042, *w385=w+20056, *w386=w+20070, *w387=w+20084, *w388=w+20098, *w389=w+20112, *w390=w+20126, *w391=w+20140, *w392=w+20154, *w393=w+20168, *w394=w+20182, *w395=w+20196, *w396=w+20210, *w397=w+20266, *w398=w+20280, *w399=w+20294, *w400=w+20308, *w401=w+20322, *w402=w+20336, *w403=w+20350, *w404=w+20364, *w405=w+20378, *w406=w+20392, *w407=w+20406, *w408=w+20420, *w409=w+20434, *w410=w+20490, *w411=w+20504, *w412=w+20518, *w413=w+20532, *w414=w+20546, *w415=w+20560, *w416=w+20574, *w417=w+20588, *w418=w+20602, *w419=w+20616, *w420=w+20630, *w421=w+20644, *w422=w+20658, *w423=w+20714, *w424=w+20728, *w425=w+20742, *w426=w+20756, *w427=w+20770, *w428=w+20784, *w429=w+20798, *w430=w+20812, *w431=w+20826, *w432=w+20840, *w433=w+20854, *w434=w+20868, *w435=w+20875, *w436=w+20924, *w437=w+20931, *w438=w+20980, *w439=w+21029, *w440=w+21078, *w441=w+21127, *w442=w+21176, *w443=w+21225, *w444=w+21274, *w445=w+21323, *w446=w+21372, *w447=w+21421, *w448=w+21470, *w449=w+21519, *w450=w+21568, *w451=w+21617, *w452=w+21666, *w453=w+21715, *w454=w+21764, *w455=w+21813, *w456=w+21862, *w457=w+21911, *w458=w+21960, *w459=w+22009, *w460=w+22058, *w461=w+22107, *w462=w+22156, *w463=w+22205, *w464=w+22254, *w465=w+22303, *w466=w+22352, *w467=w+22401, *w468=w+22450, *w469=w+22499, *w470=w+22548, *w471=w+22597, *w472=w+22646, *w473=w+22695, *w474=w+22744, *w475=w+22793, *w476=w+22842, *w477=w+22891, *w478=w+22940, *w479=w+22989, *w480=w+23038, *w481=w+23087, *w482=w+23136, *w483=w+23185, *w484=w+23234, *w485=w+23283, *w486=w+23332, *w487=w+23381, *w488=w+23430, *w489=w+23434, *w490=w+23438, *w491=w+23442, *w492=w+23446, *w493=w+23450, *w494=w+23454, *w495=w+23458, *w496=w+23462, *w497=w+23466, *w498=w+23470, *w499=w+23474, *w500=w+23478, *w501=w+23482, *w502=w+23486, *w503=w+23490, *w504=w+23494, *w505=w+23498, *w506=w+23502, *w507=w+23506, *w508=w+23510, *w509=w+23514, *w510=w+23518, *w511=w+23522, *w512=w+23526, *w513=w+23530, *w514=w+23534, *w515=w+23538, *w516=w+23542, *w517=w+23546, *w518=w+23550, *w519=w+23554, *w520=w+23558, *w521=w+23562, *w522=w+23566, *w523=w+23570, *w524=w+23574, *w525=w+23578, *w526=w+23582, *w527=w+23586, *w528=w+23590, *w529=w+23594, *w530=w+23598, *w531=w+23602, *w532=w+23606, *w533=w+23610, *w534=w+23614, *w535=w+23618, *w536=w+23622, *w537=w+23626, *w538=w+23630, *w539=w+23634, *w540=w+23638, *w541=w+23642, *w542=w+23646, *w543=w+23650, *w544=w+23654, *w545=w+23658, *w546=w+23662, *w547=w+23666, *w548=w+23670, *w549=w+23674, *w550=w+23678, *w551=w+23682, *w552=w+23686, *w553=w+23690, *w554=w+23694, *w555=w+23698, *w556=w+23702, *w557=w+23706, *w558=w+23710, *w559=w+23714, *w560=w+23718, *w561=w+23722, *w562=w+23726, *w563=w+23742, *w564=w+23758, *w565=w+23774, *w566=w+23790, *w567=w+23806, *w568=w+23822, *w569=w+23838, *w570=w+23854, *w571=w+23870, *w572=w+23886, *w573=w+23902, *w574=w+23918, *w575=w+23934, *w576=w+23950, *w577=w+23966, *w578=w+23982, *w579=w+23998, *w580=w+24014, *w581=w+24030, *w582=w+24046, *w583=w+24062, *w584=w+24078, *w585=w+24094, *w586=w+24110, *w587=w+24126, *w588=w+24142, *w589=w+24158, *w590=w+24174, *w591=w+24190, *w592=w+24206, *w593=w+24222, *w594=w+24238, *w595=w+24254, *w596=w+24270, *w597=w+24286, *w598=w+24302, *w599=w+24318, *w600=w+24334, *w601=w+24350, *w602=w+24366, *w603=w+24382, *w604=w+24398, *w605=w+24414, *w606=w+24430, *w607=w+24446, *w608=w+24462, *w609=w+24478, *w610=w+24494, *w611=w+24510, *w612=w+24526, *w613=w+24990;
  /* #0: @0 = zeros(464x464,5496nz) */
  casadi_clear(w0, 5496);
  /* #1: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 364, w2);
  /* #3: @3 = @2[336:350] */
  for (rr=w3, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #4: @4 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+364 : 0, 100, w4);
  /* #5: @5 = @4[96:100] */
  for (rr=w5, ss=w4+96; ss!=w4+100; ss+=1) *rr++ = *ss;
  /* #6: @6 = zeros(14x1,0nz) */
  /* #7: @7 = input[3][0] */
  casadi_copy(arg[3], 564, w7);
  /* #8: {@8, @9, NULL, NULL, NULL, @10, @11, NULL, NULL, NULL, @12, @13, NULL, NULL, NULL, @14, @15, NULL, NULL, NULL, @16, @17, NULL, NULL, NULL, @18, @19, NULL, NULL, NULL, @20, @21, NULL, NULL, NULL, @22, @23, NULL, NULL, NULL, @24, @25, NULL, NULL, NULL, @26, @27, NULL, NULL, NULL, @28, @29, NULL, NULL, NULL, @30, @31, NULL, NULL, NULL, @32, @33, NULL, NULL, NULL, @34, @35, NULL, NULL, NULL, @36, @37, NULL, NULL, NULL, @38, @39, NULL, NULL, NULL, @40, @41, NULL, NULL, NULL, @42, @43, NULL, NULL, NULL, @44, @45, NULL, NULL, NULL, @46, @47, NULL, NULL, NULL, @48, @49, NULL, NULL, NULL, @50, @51, NULL, NULL, NULL, @52, @53, NULL, NULL, NULL, @54, @55, NULL, NULL, NULL, @56, @57, NULL, NULL, NULL, NULL} = vertsplit(@7) */
  casadi_copy(w7, 14, w8);
  w9 = w7[14];
  casadi_copy(w7+22, 14, w10);
  w11 = w7[36];
  casadi_copy(w7+44, 14, w12);
  w13 = w7[58];
  casadi_copy(w7+66, 14, w14);
  w15 = w7[80];
  casadi_copy(w7+88, 14, w16);
  w17 = w7[102];
  casadi_copy(w7+110, 14, w18);
  w19 = w7[124];
  casadi_copy(w7+132, 14, w20);
  w21 = w7[146];
  casadi_copy(w7+154, 14, w22);
  w23 = w7[168];
  casadi_copy(w7+176, 14, w24);
  w25 = w7[190];
  casadi_copy(w7+198, 14, w26);
  w27 = w7[212];
  casadi_copy(w7+220, 14, w28);
  w29 = w7[234];
  casadi_copy(w7+242, 14, w30);
  w31 = w7[256];
  casadi_copy(w7+264, 14, w32);
  w33 = w7[278];
  casadi_copy(w7+286, 14, w34);
  w35 = w7[300];
  casadi_copy(w7+308, 14, w36);
  w37 = w7[322];
  casadi_copy(w7+330, 14, w38);
  w39 = w7[344];
  casadi_copy(w7+352, 14, w40);
  w41 = w7[366];
  casadi_copy(w7+374, 14, w42);
  w43 = w7[388];
  casadi_copy(w7+396, 14, w44);
  w45 = w7[410];
  casadi_copy(w7+418, 14, w46);
  w47 = w7[432];
  casadi_copy(w7+440, 14, w48);
  w49 = w7[454];
  casadi_copy(w7+462, 14, w50);
  w51 = w7[476];
  casadi_copy(w7+484, 14, w52);
  w53 = w7[498];
  casadi_copy(w7+506, 14, w54);
  w55 = w7[520];
  casadi_copy(w7+528, 14, w56);
  w57 = w7[542];
  /* #9: @56 = (-@56) */
  for (i=0, rr=w56, cs=w56; i<14; ++i) *rr++ = (- *cs++ );
  /* #10: @58 = zeros(14x1,0nz) */
  /* #11: @59 = zeros(4x1,0nz) */
  /* #12: @60 = ones(464x1,51nz) */
  casadi_fill(w60, 51, 1.);
  /* #13: {@61, @62} = vertsplit(@60) */
  casadi_copy(w60, 26, w61);
  casadi_copy(w60+26, 25, w62);
  /* #14: @61 = reshape(@61) */
  /* #15: @63 = @61[24] */
  for (rr=(&w63), ss=w61+24; ss!=w61+25; ss+=1) *rr++ = *ss;
  /* #16: @60 = ones(464x1,51nz) */
  casadi_fill(w60, 51, 1.);
  /* #17: {@64, @65} = vertsplit(@60) */
  casadi_copy(w60, 26, w64);
  casadi_copy(w60+26, 25, w65);
  /* #18: @64 = reshape(@64) */
  /* #19: @66 = @64[24] */
  for (rr=(&w66), ss=w64+24; ss!=w64+25; ss+=1) *rr++ = *ss;
  /* #20: @60 = ones(464x1,51nz) */
  casadi_fill(w60, 51, 1.);
  /* #21: {@67, @68} = vertsplit(@60) */
  casadi_copy(w60, 26, w67);
  casadi_copy(w60+26, 25, w68);
  /* #22: @67 = reshape(@67) */
  /* #23: @69 = @67[24] */
  for (rr=(&w69), ss=w67+24; ss!=w67+25; ss+=1) *rr++ = *ss;
  /* #24: @60 = ones(464x1,51nz) */
  casadi_fill(w60, 51, 1.);
  /* #25: {@70, @71} = vertsplit(@60) */
  casadi_copy(w60, 26, w70);
  casadi_copy(w60+26, 25, w71);
  /* #26: @70 = reshape(@70) */
  /* #27: @72 = @70[24] */
  for (rr=(&w72), ss=w70+24; ss!=w70+25; ss+=1) *rr++ = *ss;
  /* #28: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #29: {@74, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w74);
  /* #30: @74 = reshape(@74) */
  /* #31: @75 = @74[24] */
  for (rr=(&w75), ss=w74+24; ss!=w74+25; ss+=1) *rr++ = *ss;
  /* #32: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #33: {@76, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w76);
  /* #34: @76 = reshape(@76) */
  /* #35: @77 = @76[24] */
  for (rr=(&w77), ss=w76+24; ss!=w76+25; ss+=1) *rr++ = *ss;
  /* #36: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #37: {@78, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w78);
  /* #38: @78 = reshape(@78) */
  /* #39: @79 = @78[24] */
  for (rr=(&w79), ss=w78+24; ss!=w78+25; ss+=1) *rr++ = *ss;
  /* #40: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #41: {@80, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w80);
  /* #42: @80 = reshape(@80) */
  /* #43: @81 = @80[24] */
  for (rr=(&w81), ss=w80+24; ss!=w80+25; ss+=1) *rr++ = *ss;
  /* #44: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #45: {@82, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w82);
  /* #46: @82 = reshape(@82) */
  /* #47: @83 = @82[24] */
  for (rr=(&w83), ss=w82+24; ss!=w82+25; ss+=1) *rr++ = *ss;
  /* #48: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #49: {@84, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w84);
  /* #50: @84 = reshape(@84) */
  /* #51: @85 = @84[24] */
  for (rr=(&w85), ss=w84+24; ss!=w84+25; ss+=1) *rr++ = *ss;
  /* #52: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #53: {@86, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w86);
  /* #54: @86 = reshape(@86) */
  /* #55: @87 = @86[24] */
  for (rr=(&w87), ss=w86+24; ss!=w86+25; ss+=1) *rr++ = *ss;
  /* #56: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #57: {@88, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w88);
  /* #58: @88 = reshape(@88) */
  /* #59: @89 = @88[24] */
  for (rr=(&w89), ss=w88+24; ss!=w88+25; ss+=1) *rr++ = *ss;
  /* #60: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #61: {@90, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w90);
  /* #62: @90 = reshape(@90) */
  /* #63: @91 = @90[24] */
  for (rr=(&w91), ss=w90+24; ss!=w90+25; ss+=1) *rr++ = *ss;
  /* #64: @73 = ones(464x1,26nz) */
  casadi_fill(w73, 26, 1.);
  /* #65: {@92, NULL} = vertsplit(@73) */
  casadi_copy(w73, 26, w92);
  /* #66: @92 = reshape(@92) */
  /* #67: @93 = @92[24] */
  for (rr=(&w93), ss=w92+24; ss!=w92+25; ss+=1) *rr++ = *ss;
  /* #68: @94 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w94;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #69: @95 = dense(@94) */
  casadi_densify(w94, casadi_s66, w95, 0);
  /* #70: @62 = reshape(@62) */
  /* #71: @63 = @62[24] */
  for (rr=(&w63), ss=w62+24; ss!=w62+25; ss+=1) *rr++ = *ss;
  /* #72: @65 = reshape(@65) */
  /* #73: @66 = @65[24] */
  for (rr=(&w66), ss=w65+24; ss!=w65+25; ss+=1) *rr++ = *ss;
  /* #74: @68 = reshape(@68) */
  /* #75: @69 = @68[24] */
  for (rr=(&w69), ss=w68+24; ss!=w68+25; ss+=1) *rr++ = *ss;
  /* #76: @71 = reshape(@71) */
  /* #77: @72 = @71[24] */
  for (rr=(&w72), ss=w71+24; ss!=w71+25; ss+=1) *rr++ = *ss;
  /* #78: @96 = zeros(4x1,0nz) */
  /* #79: @97 = zeros(4x1,0nz) */
  /* #80: @98 = zeros(4x1,0nz) */
  /* #81: @99 = zeros(4x1,0nz) */
  /* #82: @100 = zeros(4x1,0nz) */
  /* #83: @101 = zeros(4x1,0nz) */
  /* #84: @102 = zeros(4x1,0nz) */
  /* #85: @103 = zeros(4x1,0nz) */
  /* #86: @104 = zeros(4x1,0nz) */
  /* #87: @105 = zeros(4x1,0nz) */
  /* #88: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #89: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #90: @96 = zeros(14x14,0nz) */
  /* #91: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #92: {@109, @110} = fwd14_adj1_f_disc(@3, @5, @6, @56, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w56;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w110;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #93: {@3, @56, @94, @111, @112, @113, @114, @115, @116, @117, @118, @119, @120, @121} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w56);
  casadi_copy(w109+28, 14, w94);
  casadi_copy(w109+42, 14, w111);
  casadi_copy(w109+56, 14, w112);
  casadi_copy(w109+70, 14, w113);
  casadi_copy(w109+84, 14, w114);
  casadi_copy(w109+98, 14, w115);
  casadi_copy(w109+112, 14, w116);
  casadi_copy(w109+126, 14, w117);
  casadi_copy(w109+140, 14, w118);
  casadi_copy(w109+154, 14, w119);
  casadi_copy(w109+168, 14, w120);
  casadi_copy(w109+182, 14, w121);
  /* #94: (@1[336:350] += @3) */
  for (rr=w1+336, ss=w3; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #95: @3 = @2[322:336] */
  for (rr=w3, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #96: @5 = @4[92:96] */
  for (rr=w5, ss=w4+92; ss!=w4+96; ss+=1) *rr++ = *ss;
  /* #97: @6 = zeros(14x1,0nz) */
  /* #98: @54 = (-@54) */
  for (i=0, rr=w54, cs=w54; i<14; ++i) *rr++ = (- *cs++ );
  /* #99: @58 = zeros(14x1,0nz) */
  /* #100: @59 = zeros(4x1,0nz) */
  /* #101: @63 = @61[23] */
  for (rr=(&w63), ss=w61+23; ss!=w61+24; ss+=1) *rr++ = *ss;
  /* #102: @66 = @64[23] */
  for (rr=(&w66), ss=w64+23; ss!=w64+24; ss+=1) *rr++ = *ss;
  /* #103: @69 = @67[23] */
  for (rr=(&w69), ss=w67+23; ss!=w67+24; ss+=1) *rr++ = *ss;
  /* #104: @72 = @70[23] */
  for (rr=(&w72), ss=w70+23; ss!=w70+24; ss+=1) *rr++ = *ss;
  /* #105: @75 = @74[23] */
  for (rr=(&w75), ss=w74+23; ss!=w74+24; ss+=1) *rr++ = *ss;
  /* #106: @77 = @76[23] */
  for (rr=(&w77), ss=w76+23; ss!=w76+24; ss+=1) *rr++ = *ss;
  /* #107: @79 = @78[23] */
  for (rr=(&w79), ss=w78+23; ss!=w78+24; ss+=1) *rr++ = *ss;
  /* #108: @81 = @80[23] */
  for (rr=(&w81), ss=w80+23; ss!=w80+24; ss+=1) *rr++ = *ss;
  /* #109: @83 = @82[23] */
  for (rr=(&w83), ss=w82+23; ss!=w82+24; ss+=1) *rr++ = *ss;
  /* #110: @85 = @84[23] */
  for (rr=(&w85), ss=w84+23; ss!=w84+24; ss+=1) *rr++ = *ss;
  /* #111: @87 = @86[23] */
  for (rr=(&w87), ss=w86+23; ss!=w86+24; ss+=1) *rr++ = *ss;
  /* #112: @89 = @88[23] */
  for (rr=(&w89), ss=w88+23; ss!=w88+24; ss+=1) *rr++ = *ss;
  /* #113: @91 = @90[23] */
  for (rr=(&w91), ss=w90+23; ss!=w90+24; ss+=1) *rr++ = *ss;
  /* #114: @93 = @92[23] */
  for (rr=(&w93), ss=w92+23; ss!=w92+24; ss+=1) *rr++ = *ss;
  /* #115: @122 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w122;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #116: @109 = dense(@122) */
  casadi_densify(w122, casadi_s66, w109, 0);
  /* #117: @63 = @62[23] */
  for (rr=(&w63), ss=w62+23; ss!=w62+24; ss+=1) *rr++ = *ss;
  /* #118: @66 = @65[23] */
  for (rr=(&w66), ss=w65+23; ss!=w65+24; ss+=1) *rr++ = *ss;
  /* #119: @69 = @68[23] */
  for (rr=(&w69), ss=w68+23; ss!=w68+24; ss+=1) *rr++ = *ss;
  /* #120: @72 = @71[23] */
  for (rr=(&w72), ss=w71+23; ss!=w71+24; ss+=1) *rr++ = *ss;
  /* #121: @96 = zeros(4x1,0nz) */
  /* #122: @97 = zeros(4x1,0nz) */
  /* #123: @98 = zeros(4x1,0nz) */
  /* #124: @99 = zeros(4x1,0nz) */
  /* #125: @100 = zeros(4x1,0nz) */
  /* #126: @101 = zeros(4x1,0nz) */
  /* #127: @102 = zeros(4x1,0nz) */
  /* #128: @103 = zeros(4x1,0nz) */
  /* #129: @104 = zeros(4x1,0nz) */
  /* #130: @105 = zeros(4x1,0nz) */
  /* #131: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #132: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #133: @96 = zeros(14x14,0nz) */
  /* #134: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #135: {@108, @123} = fwd14_adj1_f_disc(@3, @5, @6, @54, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w54;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w123;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #136: {@3, @54, @122, @124, @125, @126, @127, @128, @129, @130, @131, @132, @133, @134} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w54);
  casadi_copy(w108+28, 14, w122);
  casadi_copy(w108+42, 14, w124);
  casadi_copy(w108+56, 14, w125);
  casadi_copy(w108+70, 14, w126);
  casadi_copy(w108+84, 14, w127);
  casadi_copy(w108+98, 14, w128);
  casadi_copy(w108+112, 14, w129);
  casadi_copy(w108+126, 14, w130);
  casadi_copy(w108+140, 14, w131);
  casadi_copy(w108+154, 14, w132);
  casadi_copy(w108+168, 14, w133);
  casadi_copy(w108+182, 14, w134);
  /* #137: (@1[322:336] += @3) */
  for (rr=w1+322, ss=w3; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #138: @3 = @2[308:322] */
  for (rr=w3, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #139: @5 = @4[88:92] */
  for (rr=w5, ss=w4+88; ss!=w4+92; ss+=1) *rr++ = *ss;
  /* #140: @6 = zeros(14x1,0nz) */
  /* #141: @52 = (-@52) */
  for (i=0, rr=w52, cs=w52; i<14; ++i) *rr++ = (- *cs++ );
  /* #142: @58 = zeros(14x1,0nz) */
  /* #143: @59 = zeros(4x1,0nz) */
  /* #144: @63 = @61[22] */
  for (rr=(&w63), ss=w61+22; ss!=w61+23; ss+=1) *rr++ = *ss;
  /* #145: @66 = @64[22] */
  for (rr=(&w66), ss=w64+22; ss!=w64+23; ss+=1) *rr++ = *ss;
  /* #146: @69 = @67[22] */
  for (rr=(&w69), ss=w67+22; ss!=w67+23; ss+=1) *rr++ = *ss;
  /* #147: @72 = @70[22] */
  for (rr=(&w72), ss=w70+22; ss!=w70+23; ss+=1) *rr++ = *ss;
  /* #148: @75 = @74[22] */
  for (rr=(&w75), ss=w74+22; ss!=w74+23; ss+=1) *rr++ = *ss;
  /* #149: @77 = @76[22] */
  for (rr=(&w77), ss=w76+22; ss!=w76+23; ss+=1) *rr++ = *ss;
  /* #150: @79 = @78[22] */
  for (rr=(&w79), ss=w78+22; ss!=w78+23; ss+=1) *rr++ = *ss;
  /* #151: @81 = @80[22] */
  for (rr=(&w81), ss=w80+22; ss!=w80+23; ss+=1) *rr++ = *ss;
  /* #152: @83 = @82[22] */
  for (rr=(&w83), ss=w82+22; ss!=w82+23; ss+=1) *rr++ = *ss;
  /* #153: @85 = @84[22] */
  for (rr=(&w85), ss=w84+22; ss!=w84+23; ss+=1) *rr++ = *ss;
  /* #154: @87 = @86[22] */
  for (rr=(&w87), ss=w86+22; ss!=w86+23; ss+=1) *rr++ = *ss;
  /* #155: @89 = @88[22] */
  for (rr=(&w89), ss=w88+22; ss!=w88+23; ss+=1) *rr++ = *ss;
  /* #156: @91 = @90[22] */
  for (rr=(&w91), ss=w90+22; ss!=w90+23; ss+=1) *rr++ = *ss;
  /* #157: @93 = @92[22] */
  for (rr=(&w93), ss=w92+22; ss!=w92+23; ss+=1) *rr++ = *ss;
  /* #158: @135 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w135;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #159: @108 = dense(@135) */
  casadi_densify(w135, casadi_s66, w108, 0);
  /* #160: @63 = @62[22] */
  for (rr=(&w63), ss=w62+22; ss!=w62+23; ss+=1) *rr++ = *ss;
  /* #161: @66 = @65[22] */
  for (rr=(&w66), ss=w65+22; ss!=w65+23; ss+=1) *rr++ = *ss;
  /* #162: @69 = @68[22] */
  for (rr=(&w69), ss=w68+22; ss!=w68+23; ss+=1) *rr++ = *ss;
  /* #163: @72 = @71[22] */
  for (rr=(&w72), ss=w71+22; ss!=w71+23; ss+=1) *rr++ = *ss;
  /* #164: @96 = zeros(4x1,0nz) */
  /* #165: @97 = zeros(4x1,0nz) */
  /* #166: @98 = zeros(4x1,0nz) */
  /* #167: @99 = zeros(4x1,0nz) */
  /* #168: @100 = zeros(4x1,0nz) */
  /* #169: @101 = zeros(4x1,0nz) */
  /* #170: @102 = zeros(4x1,0nz) */
  /* #171: @103 = zeros(4x1,0nz) */
  /* #172: @104 = zeros(4x1,0nz) */
  /* #173: @105 = zeros(4x1,0nz) */
  /* #174: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #175: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #176: @96 = zeros(14x14,0nz) */
  /* #177: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #178: {@95, @136} = fwd14_adj1_f_disc(@3, @5, @6, @52, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w52;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w136;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #179: {@3, @52, @135, @137, @138, @139, @140, @141, @142, @143, @144, @145, @146, @147} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w52);
  casadi_copy(w95+28, 14, w135);
  casadi_copy(w95+42, 14, w137);
  casadi_copy(w95+56, 14, w138);
  casadi_copy(w95+70, 14, w139);
  casadi_copy(w95+84, 14, w140);
  casadi_copy(w95+98, 14, w141);
  casadi_copy(w95+112, 14, w142);
  casadi_copy(w95+126, 14, w143);
  casadi_copy(w95+140, 14, w144);
  casadi_copy(w95+154, 14, w145);
  casadi_copy(w95+168, 14, w146);
  casadi_copy(w95+182, 14, w147);
  /* #180: (@1[308:322] += @3) */
  for (rr=w1+308, ss=w3; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #181: @3 = @2[294:308] */
  for (rr=w3, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #182: @5 = @4[84:88] */
  for (rr=w5, ss=w4+84; ss!=w4+88; ss+=1) *rr++ = *ss;
  /* #183: @6 = zeros(14x1,0nz) */
  /* #184: @50 = (-@50) */
  for (i=0, rr=w50, cs=w50; i<14; ++i) *rr++ = (- *cs++ );
  /* #185: @58 = zeros(14x1,0nz) */
  /* #186: @59 = zeros(4x1,0nz) */
  /* #187: @63 = @61[21] */
  for (rr=(&w63), ss=w61+21; ss!=w61+22; ss+=1) *rr++ = *ss;
  /* #188: @66 = @64[21] */
  for (rr=(&w66), ss=w64+21; ss!=w64+22; ss+=1) *rr++ = *ss;
  /* #189: @69 = @67[21] */
  for (rr=(&w69), ss=w67+21; ss!=w67+22; ss+=1) *rr++ = *ss;
  /* #190: @72 = @70[21] */
  for (rr=(&w72), ss=w70+21; ss!=w70+22; ss+=1) *rr++ = *ss;
  /* #191: @75 = @74[21] */
  for (rr=(&w75), ss=w74+21; ss!=w74+22; ss+=1) *rr++ = *ss;
  /* #192: @77 = @76[21] */
  for (rr=(&w77), ss=w76+21; ss!=w76+22; ss+=1) *rr++ = *ss;
  /* #193: @79 = @78[21] */
  for (rr=(&w79), ss=w78+21; ss!=w78+22; ss+=1) *rr++ = *ss;
  /* #194: @81 = @80[21] */
  for (rr=(&w81), ss=w80+21; ss!=w80+22; ss+=1) *rr++ = *ss;
  /* #195: @83 = @82[21] */
  for (rr=(&w83), ss=w82+21; ss!=w82+22; ss+=1) *rr++ = *ss;
  /* #196: @85 = @84[21] */
  for (rr=(&w85), ss=w84+21; ss!=w84+22; ss+=1) *rr++ = *ss;
  /* #197: @87 = @86[21] */
  for (rr=(&w87), ss=w86+21; ss!=w86+22; ss+=1) *rr++ = *ss;
  /* #198: @89 = @88[21] */
  for (rr=(&w89), ss=w88+21; ss!=w88+22; ss+=1) *rr++ = *ss;
  /* #199: @91 = @90[21] */
  for (rr=(&w91), ss=w90+21; ss!=w90+22; ss+=1) *rr++ = *ss;
  /* #200: @93 = @92[21] */
  for (rr=(&w93), ss=w92+21; ss!=w92+22; ss+=1) *rr++ = *ss;
  /* #201: @148 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w148;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #202: @95 = dense(@148) */
  casadi_densify(w148, casadi_s66, w95, 0);
  /* #203: @63 = @62[21] */
  for (rr=(&w63), ss=w62+21; ss!=w62+22; ss+=1) *rr++ = *ss;
  /* #204: @66 = @65[21] */
  for (rr=(&w66), ss=w65+21; ss!=w65+22; ss+=1) *rr++ = *ss;
  /* #205: @69 = @68[21] */
  for (rr=(&w69), ss=w68+21; ss!=w68+22; ss+=1) *rr++ = *ss;
  /* #206: @72 = @71[21] */
  for (rr=(&w72), ss=w71+21; ss!=w71+22; ss+=1) *rr++ = *ss;
  /* #207: @96 = zeros(4x1,0nz) */
  /* #208: @97 = zeros(4x1,0nz) */
  /* #209: @98 = zeros(4x1,0nz) */
  /* #210: @99 = zeros(4x1,0nz) */
  /* #211: @100 = zeros(4x1,0nz) */
  /* #212: @101 = zeros(4x1,0nz) */
  /* #213: @102 = zeros(4x1,0nz) */
  /* #214: @103 = zeros(4x1,0nz) */
  /* #215: @104 = zeros(4x1,0nz) */
  /* #216: @105 = zeros(4x1,0nz) */
  /* #217: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #218: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #219: @96 = zeros(14x14,0nz) */
  /* #220: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #221: {@109, @149} = fwd14_adj1_f_disc(@3, @5, @6, @50, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w50;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w149;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #222: {@3, @50, @148, @150, @151, @152, @153, @154, @155, @156, @157, @158, @159, @160} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w50);
  casadi_copy(w109+28, 14, w148);
  casadi_copy(w109+42, 14, w150);
  casadi_copy(w109+56, 14, w151);
  casadi_copy(w109+70, 14, w152);
  casadi_copy(w109+84, 14, w153);
  casadi_copy(w109+98, 14, w154);
  casadi_copy(w109+112, 14, w155);
  casadi_copy(w109+126, 14, w156);
  casadi_copy(w109+140, 14, w157);
  casadi_copy(w109+154, 14, w158);
  casadi_copy(w109+168, 14, w159);
  casadi_copy(w109+182, 14, w160);
  /* #223: (@1[294:308] += @3) */
  for (rr=w1+294, ss=w3; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #224: @3 = @2[280:294] */
  for (rr=w3, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #225: @5 = @4[80:84] */
  for (rr=w5, ss=w4+80; ss!=w4+84; ss+=1) *rr++ = *ss;
  /* #226: @6 = zeros(14x1,0nz) */
  /* #227: @48 = (-@48) */
  for (i=0, rr=w48, cs=w48; i<14; ++i) *rr++ = (- *cs++ );
  /* #228: @58 = zeros(14x1,0nz) */
  /* #229: @59 = zeros(4x1,0nz) */
  /* #230: @63 = @61[20] */
  for (rr=(&w63), ss=w61+20; ss!=w61+21; ss+=1) *rr++ = *ss;
  /* #231: @66 = @64[20] */
  for (rr=(&w66), ss=w64+20; ss!=w64+21; ss+=1) *rr++ = *ss;
  /* #232: @69 = @67[20] */
  for (rr=(&w69), ss=w67+20; ss!=w67+21; ss+=1) *rr++ = *ss;
  /* #233: @72 = @70[20] */
  for (rr=(&w72), ss=w70+20; ss!=w70+21; ss+=1) *rr++ = *ss;
  /* #234: @75 = @74[20] */
  for (rr=(&w75), ss=w74+20; ss!=w74+21; ss+=1) *rr++ = *ss;
  /* #235: @77 = @76[20] */
  for (rr=(&w77), ss=w76+20; ss!=w76+21; ss+=1) *rr++ = *ss;
  /* #236: @79 = @78[20] */
  for (rr=(&w79), ss=w78+20; ss!=w78+21; ss+=1) *rr++ = *ss;
  /* #237: @81 = @80[20] */
  for (rr=(&w81), ss=w80+20; ss!=w80+21; ss+=1) *rr++ = *ss;
  /* #238: @83 = @82[20] */
  for (rr=(&w83), ss=w82+20; ss!=w82+21; ss+=1) *rr++ = *ss;
  /* #239: @85 = @84[20] */
  for (rr=(&w85), ss=w84+20; ss!=w84+21; ss+=1) *rr++ = *ss;
  /* #240: @87 = @86[20] */
  for (rr=(&w87), ss=w86+20; ss!=w86+21; ss+=1) *rr++ = *ss;
  /* #241: @89 = @88[20] */
  for (rr=(&w89), ss=w88+20; ss!=w88+21; ss+=1) *rr++ = *ss;
  /* #242: @91 = @90[20] */
  for (rr=(&w91), ss=w90+20; ss!=w90+21; ss+=1) *rr++ = *ss;
  /* #243: @93 = @92[20] */
  for (rr=(&w93), ss=w92+20; ss!=w92+21; ss+=1) *rr++ = *ss;
  /* #244: @161 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w161;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #245: @109 = dense(@161) */
  casadi_densify(w161, casadi_s66, w109, 0);
  /* #246: @63 = @62[20] */
  for (rr=(&w63), ss=w62+20; ss!=w62+21; ss+=1) *rr++ = *ss;
  /* #247: @66 = @65[20] */
  for (rr=(&w66), ss=w65+20; ss!=w65+21; ss+=1) *rr++ = *ss;
  /* #248: @69 = @68[20] */
  for (rr=(&w69), ss=w68+20; ss!=w68+21; ss+=1) *rr++ = *ss;
  /* #249: @72 = @71[20] */
  for (rr=(&w72), ss=w71+20; ss!=w71+21; ss+=1) *rr++ = *ss;
  /* #250: @96 = zeros(4x1,0nz) */
  /* #251: @97 = zeros(4x1,0nz) */
  /* #252: @98 = zeros(4x1,0nz) */
  /* #253: @99 = zeros(4x1,0nz) */
  /* #254: @100 = zeros(4x1,0nz) */
  /* #255: @101 = zeros(4x1,0nz) */
  /* #256: @102 = zeros(4x1,0nz) */
  /* #257: @103 = zeros(4x1,0nz) */
  /* #258: @104 = zeros(4x1,0nz) */
  /* #259: @105 = zeros(4x1,0nz) */
  /* #260: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #261: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #262: @96 = zeros(14x14,0nz) */
  /* #263: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #264: {@108, @162} = fwd14_adj1_f_disc(@3, @5, @6, @48, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w48;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w162;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #265: {@3, @48, @161, @163, @164, @165, @166, @167, @168, @169, @170, @171, @172, @173} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w48);
  casadi_copy(w108+28, 14, w161);
  casadi_copy(w108+42, 14, w163);
  casadi_copy(w108+56, 14, w164);
  casadi_copy(w108+70, 14, w165);
  casadi_copy(w108+84, 14, w166);
  casadi_copy(w108+98, 14, w167);
  casadi_copy(w108+112, 14, w168);
  casadi_copy(w108+126, 14, w169);
  casadi_copy(w108+140, 14, w170);
  casadi_copy(w108+154, 14, w171);
  casadi_copy(w108+168, 14, w172);
  casadi_copy(w108+182, 14, w173);
  /* #266: (@1[280:294] += @3) */
  for (rr=w1+280, ss=w3; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #267: @3 = @2[266:280] */
  for (rr=w3, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #268: @5 = @4[76:80] */
  for (rr=w5, ss=w4+76; ss!=w4+80; ss+=1) *rr++ = *ss;
  /* #269: @6 = zeros(14x1,0nz) */
  /* #270: @46 = (-@46) */
  for (i=0, rr=w46, cs=w46; i<14; ++i) *rr++ = (- *cs++ );
  /* #271: @58 = zeros(14x1,0nz) */
  /* #272: @59 = zeros(4x1,0nz) */
  /* #273: @63 = @61[19] */
  for (rr=(&w63), ss=w61+19; ss!=w61+20; ss+=1) *rr++ = *ss;
  /* #274: @66 = @64[19] */
  for (rr=(&w66), ss=w64+19; ss!=w64+20; ss+=1) *rr++ = *ss;
  /* #275: @69 = @67[19] */
  for (rr=(&w69), ss=w67+19; ss!=w67+20; ss+=1) *rr++ = *ss;
  /* #276: @72 = @70[19] */
  for (rr=(&w72), ss=w70+19; ss!=w70+20; ss+=1) *rr++ = *ss;
  /* #277: @75 = @74[19] */
  for (rr=(&w75), ss=w74+19; ss!=w74+20; ss+=1) *rr++ = *ss;
  /* #278: @77 = @76[19] */
  for (rr=(&w77), ss=w76+19; ss!=w76+20; ss+=1) *rr++ = *ss;
  /* #279: @79 = @78[19] */
  for (rr=(&w79), ss=w78+19; ss!=w78+20; ss+=1) *rr++ = *ss;
  /* #280: @81 = @80[19] */
  for (rr=(&w81), ss=w80+19; ss!=w80+20; ss+=1) *rr++ = *ss;
  /* #281: @83 = @82[19] */
  for (rr=(&w83), ss=w82+19; ss!=w82+20; ss+=1) *rr++ = *ss;
  /* #282: @85 = @84[19] */
  for (rr=(&w85), ss=w84+19; ss!=w84+20; ss+=1) *rr++ = *ss;
  /* #283: @87 = @86[19] */
  for (rr=(&w87), ss=w86+19; ss!=w86+20; ss+=1) *rr++ = *ss;
  /* #284: @89 = @88[19] */
  for (rr=(&w89), ss=w88+19; ss!=w88+20; ss+=1) *rr++ = *ss;
  /* #285: @91 = @90[19] */
  for (rr=(&w91), ss=w90+19; ss!=w90+20; ss+=1) *rr++ = *ss;
  /* #286: @93 = @92[19] */
  for (rr=(&w93), ss=w92+19; ss!=w92+20; ss+=1) *rr++ = *ss;
  /* #287: @174 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w174;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #288: @108 = dense(@174) */
  casadi_densify(w174, casadi_s66, w108, 0);
  /* #289: @63 = @62[19] */
  for (rr=(&w63), ss=w62+19; ss!=w62+20; ss+=1) *rr++ = *ss;
  /* #290: @66 = @65[19] */
  for (rr=(&w66), ss=w65+19; ss!=w65+20; ss+=1) *rr++ = *ss;
  /* #291: @69 = @68[19] */
  for (rr=(&w69), ss=w68+19; ss!=w68+20; ss+=1) *rr++ = *ss;
  /* #292: @72 = @71[19] */
  for (rr=(&w72), ss=w71+19; ss!=w71+20; ss+=1) *rr++ = *ss;
  /* #293: @96 = zeros(4x1,0nz) */
  /* #294: @97 = zeros(4x1,0nz) */
  /* #295: @98 = zeros(4x1,0nz) */
  /* #296: @99 = zeros(4x1,0nz) */
  /* #297: @100 = zeros(4x1,0nz) */
  /* #298: @101 = zeros(4x1,0nz) */
  /* #299: @102 = zeros(4x1,0nz) */
  /* #300: @103 = zeros(4x1,0nz) */
  /* #301: @104 = zeros(4x1,0nz) */
  /* #302: @105 = zeros(4x1,0nz) */
  /* #303: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #304: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #305: @96 = zeros(14x14,0nz) */
  /* #306: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #307: {@95, @175} = fwd14_adj1_f_disc(@3, @5, @6, @46, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w46;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w175;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #308: {@3, @46, @174, @176, @177, @178, @179, @180, @181, @182, @183, @184, @185, @186} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w46);
  casadi_copy(w95+28, 14, w174);
  casadi_copy(w95+42, 14, w176);
  casadi_copy(w95+56, 14, w177);
  casadi_copy(w95+70, 14, w178);
  casadi_copy(w95+84, 14, w179);
  casadi_copy(w95+98, 14, w180);
  casadi_copy(w95+112, 14, w181);
  casadi_copy(w95+126, 14, w182);
  casadi_copy(w95+140, 14, w183);
  casadi_copy(w95+154, 14, w184);
  casadi_copy(w95+168, 14, w185);
  casadi_copy(w95+182, 14, w186);
  /* #309: (@1[266:280] += @3) */
  for (rr=w1+266, ss=w3; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #310: @3 = @2[252:266] */
  for (rr=w3, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #311: @5 = @4[72:76] */
  for (rr=w5, ss=w4+72; ss!=w4+76; ss+=1) *rr++ = *ss;
  /* #312: @6 = zeros(14x1,0nz) */
  /* #313: @44 = (-@44) */
  for (i=0, rr=w44, cs=w44; i<14; ++i) *rr++ = (- *cs++ );
  /* #314: @58 = zeros(14x1,0nz) */
  /* #315: @59 = zeros(4x1,0nz) */
  /* #316: @63 = @61[18] */
  for (rr=(&w63), ss=w61+18; ss!=w61+19; ss+=1) *rr++ = *ss;
  /* #317: @66 = @64[18] */
  for (rr=(&w66), ss=w64+18; ss!=w64+19; ss+=1) *rr++ = *ss;
  /* #318: @69 = @67[18] */
  for (rr=(&w69), ss=w67+18; ss!=w67+19; ss+=1) *rr++ = *ss;
  /* #319: @72 = @70[18] */
  for (rr=(&w72), ss=w70+18; ss!=w70+19; ss+=1) *rr++ = *ss;
  /* #320: @75 = @74[18] */
  for (rr=(&w75), ss=w74+18; ss!=w74+19; ss+=1) *rr++ = *ss;
  /* #321: @77 = @76[18] */
  for (rr=(&w77), ss=w76+18; ss!=w76+19; ss+=1) *rr++ = *ss;
  /* #322: @79 = @78[18] */
  for (rr=(&w79), ss=w78+18; ss!=w78+19; ss+=1) *rr++ = *ss;
  /* #323: @81 = @80[18] */
  for (rr=(&w81), ss=w80+18; ss!=w80+19; ss+=1) *rr++ = *ss;
  /* #324: @83 = @82[18] */
  for (rr=(&w83), ss=w82+18; ss!=w82+19; ss+=1) *rr++ = *ss;
  /* #325: @85 = @84[18] */
  for (rr=(&w85), ss=w84+18; ss!=w84+19; ss+=1) *rr++ = *ss;
  /* #326: @87 = @86[18] */
  for (rr=(&w87), ss=w86+18; ss!=w86+19; ss+=1) *rr++ = *ss;
  /* #327: @89 = @88[18] */
  for (rr=(&w89), ss=w88+18; ss!=w88+19; ss+=1) *rr++ = *ss;
  /* #328: @91 = @90[18] */
  for (rr=(&w91), ss=w90+18; ss!=w90+19; ss+=1) *rr++ = *ss;
  /* #329: @93 = @92[18] */
  for (rr=(&w93), ss=w92+18; ss!=w92+19; ss+=1) *rr++ = *ss;
  /* #330: @187 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w187;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #331: @95 = dense(@187) */
  casadi_densify(w187, casadi_s66, w95, 0);
  /* #332: @63 = @62[18] */
  for (rr=(&w63), ss=w62+18; ss!=w62+19; ss+=1) *rr++ = *ss;
  /* #333: @66 = @65[18] */
  for (rr=(&w66), ss=w65+18; ss!=w65+19; ss+=1) *rr++ = *ss;
  /* #334: @69 = @68[18] */
  for (rr=(&w69), ss=w68+18; ss!=w68+19; ss+=1) *rr++ = *ss;
  /* #335: @72 = @71[18] */
  for (rr=(&w72), ss=w71+18; ss!=w71+19; ss+=1) *rr++ = *ss;
  /* #336: @96 = zeros(4x1,0nz) */
  /* #337: @97 = zeros(4x1,0nz) */
  /* #338: @98 = zeros(4x1,0nz) */
  /* #339: @99 = zeros(4x1,0nz) */
  /* #340: @100 = zeros(4x1,0nz) */
  /* #341: @101 = zeros(4x1,0nz) */
  /* #342: @102 = zeros(4x1,0nz) */
  /* #343: @103 = zeros(4x1,0nz) */
  /* #344: @104 = zeros(4x1,0nz) */
  /* #345: @105 = zeros(4x1,0nz) */
  /* #346: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #347: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #348: @96 = zeros(14x14,0nz) */
  /* #349: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #350: {@109, @188} = fwd14_adj1_f_disc(@3, @5, @6, @44, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w44;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w188;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #351: {@3, @44, @187, @189, @190, @191, @192, @193, @194, @195, @196, @197, @198, @199} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w44);
  casadi_copy(w109+28, 14, w187);
  casadi_copy(w109+42, 14, w189);
  casadi_copy(w109+56, 14, w190);
  casadi_copy(w109+70, 14, w191);
  casadi_copy(w109+84, 14, w192);
  casadi_copy(w109+98, 14, w193);
  casadi_copy(w109+112, 14, w194);
  casadi_copy(w109+126, 14, w195);
  casadi_copy(w109+140, 14, w196);
  casadi_copy(w109+154, 14, w197);
  casadi_copy(w109+168, 14, w198);
  casadi_copy(w109+182, 14, w199);
  /* #352: (@1[252:266] += @3) */
  for (rr=w1+252, ss=w3; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #353: @3 = @2[238:252] */
  for (rr=w3, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #354: @5 = @4[68:72] */
  for (rr=w5, ss=w4+68; ss!=w4+72; ss+=1) *rr++ = *ss;
  /* #355: @6 = zeros(14x1,0nz) */
  /* #356: @42 = (-@42) */
  for (i=0, rr=w42, cs=w42; i<14; ++i) *rr++ = (- *cs++ );
  /* #357: @58 = zeros(14x1,0nz) */
  /* #358: @59 = zeros(4x1,0nz) */
  /* #359: @63 = @61[17] */
  for (rr=(&w63), ss=w61+17; ss!=w61+18; ss+=1) *rr++ = *ss;
  /* #360: @66 = @64[17] */
  for (rr=(&w66), ss=w64+17; ss!=w64+18; ss+=1) *rr++ = *ss;
  /* #361: @69 = @67[17] */
  for (rr=(&w69), ss=w67+17; ss!=w67+18; ss+=1) *rr++ = *ss;
  /* #362: @72 = @70[17] */
  for (rr=(&w72), ss=w70+17; ss!=w70+18; ss+=1) *rr++ = *ss;
  /* #363: @75 = @74[17] */
  for (rr=(&w75), ss=w74+17; ss!=w74+18; ss+=1) *rr++ = *ss;
  /* #364: @77 = @76[17] */
  for (rr=(&w77), ss=w76+17; ss!=w76+18; ss+=1) *rr++ = *ss;
  /* #365: @79 = @78[17] */
  for (rr=(&w79), ss=w78+17; ss!=w78+18; ss+=1) *rr++ = *ss;
  /* #366: @81 = @80[17] */
  for (rr=(&w81), ss=w80+17; ss!=w80+18; ss+=1) *rr++ = *ss;
  /* #367: @83 = @82[17] */
  for (rr=(&w83), ss=w82+17; ss!=w82+18; ss+=1) *rr++ = *ss;
  /* #368: @85 = @84[17] */
  for (rr=(&w85), ss=w84+17; ss!=w84+18; ss+=1) *rr++ = *ss;
  /* #369: @87 = @86[17] */
  for (rr=(&w87), ss=w86+17; ss!=w86+18; ss+=1) *rr++ = *ss;
  /* #370: @89 = @88[17] */
  for (rr=(&w89), ss=w88+17; ss!=w88+18; ss+=1) *rr++ = *ss;
  /* #371: @91 = @90[17] */
  for (rr=(&w91), ss=w90+17; ss!=w90+18; ss+=1) *rr++ = *ss;
  /* #372: @93 = @92[17] */
  for (rr=(&w93), ss=w92+17; ss!=w92+18; ss+=1) *rr++ = *ss;
  /* #373: @200 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w200;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #374: @109 = dense(@200) */
  casadi_densify(w200, casadi_s66, w109, 0);
  /* #375: @63 = @62[17] */
  for (rr=(&w63), ss=w62+17; ss!=w62+18; ss+=1) *rr++ = *ss;
  /* #376: @66 = @65[17] */
  for (rr=(&w66), ss=w65+17; ss!=w65+18; ss+=1) *rr++ = *ss;
  /* #377: @69 = @68[17] */
  for (rr=(&w69), ss=w68+17; ss!=w68+18; ss+=1) *rr++ = *ss;
  /* #378: @72 = @71[17] */
  for (rr=(&w72), ss=w71+17; ss!=w71+18; ss+=1) *rr++ = *ss;
  /* #379: @96 = zeros(4x1,0nz) */
  /* #380: @97 = zeros(4x1,0nz) */
  /* #381: @98 = zeros(4x1,0nz) */
  /* #382: @99 = zeros(4x1,0nz) */
  /* #383: @100 = zeros(4x1,0nz) */
  /* #384: @101 = zeros(4x1,0nz) */
  /* #385: @102 = zeros(4x1,0nz) */
  /* #386: @103 = zeros(4x1,0nz) */
  /* #387: @104 = zeros(4x1,0nz) */
  /* #388: @105 = zeros(4x1,0nz) */
  /* #389: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #390: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #391: @96 = zeros(14x14,0nz) */
  /* #392: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #393: {@108, @201} = fwd14_adj1_f_disc(@3, @5, @6, @42, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w42;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w201;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #394: {@3, @42, @200, @202, @203, @204, @205, @206, @207, @208, @209, @210, @211, @212} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w42);
  casadi_copy(w108+28, 14, w200);
  casadi_copy(w108+42, 14, w202);
  casadi_copy(w108+56, 14, w203);
  casadi_copy(w108+70, 14, w204);
  casadi_copy(w108+84, 14, w205);
  casadi_copy(w108+98, 14, w206);
  casadi_copy(w108+112, 14, w207);
  casadi_copy(w108+126, 14, w208);
  casadi_copy(w108+140, 14, w209);
  casadi_copy(w108+154, 14, w210);
  casadi_copy(w108+168, 14, w211);
  casadi_copy(w108+182, 14, w212);
  /* #395: (@1[238:252] += @3) */
  for (rr=w1+238, ss=w3; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #396: @3 = @2[224:238] */
  for (rr=w3, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #397: @5 = @4[64:68] */
  for (rr=w5, ss=w4+64; ss!=w4+68; ss+=1) *rr++ = *ss;
  /* #398: @6 = zeros(14x1,0nz) */
  /* #399: @40 = (-@40) */
  for (i=0, rr=w40, cs=w40; i<14; ++i) *rr++ = (- *cs++ );
  /* #400: @58 = zeros(14x1,0nz) */
  /* #401: @59 = zeros(4x1,0nz) */
  /* #402: @63 = @61[16] */
  for (rr=(&w63), ss=w61+16; ss!=w61+17; ss+=1) *rr++ = *ss;
  /* #403: @66 = @64[16] */
  for (rr=(&w66), ss=w64+16; ss!=w64+17; ss+=1) *rr++ = *ss;
  /* #404: @69 = @67[16] */
  for (rr=(&w69), ss=w67+16; ss!=w67+17; ss+=1) *rr++ = *ss;
  /* #405: @72 = @70[16] */
  for (rr=(&w72), ss=w70+16; ss!=w70+17; ss+=1) *rr++ = *ss;
  /* #406: @75 = @74[16] */
  for (rr=(&w75), ss=w74+16; ss!=w74+17; ss+=1) *rr++ = *ss;
  /* #407: @77 = @76[16] */
  for (rr=(&w77), ss=w76+16; ss!=w76+17; ss+=1) *rr++ = *ss;
  /* #408: @79 = @78[16] */
  for (rr=(&w79), ss=w78+16; ss!=w78+17; ss+=1) *rr++ = *ss;
  /* #409: @81 = @80[16] */
  for (rr=(&w81), ss=w80+16; ss!=w80+17; ss+=1) *rr++ = *ss;
  /* #410: @83 = @82[16] */
  for (rr=(&w83), ss=w82+16; ss!=w82+17; ss+=1) *rr++ = *ss;
  /* #411: @85 = @84[16] */
  for (rr=(&w85), ss=w84+16; ss!=w84+17; ss+=1) *rr++ = *ss;
  /* #412: @87 = @86[16] */
  for (rr=(&w87), ss=w86+16; ss!=w86+17; ss+=1) *rr++ = *ss;
  /* #413: @89 = @88[16] */
  for (rr=(&w89), ss=w88+16; ss!=w88+17; ss+=1) *rr++ = *ss;
  /* #414: @91 = @90[16] */
  for (rr=(&w91), ss=w90+16; ss!=w90+17; ss+=1) *rr++ = *ss;
  /* #415: @93 = @92[16] */
  for (rr=(&w93), ss=w92+16; ss!=w92+17; ss+=1) *rr++ = *ss;
  /* #416: @213 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w213;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #417: @108 = dense(@213) */
  casadi_densify(w213, casadi_s66, w108, 0);
  /* #418: @63 = @62[16] */
  for (rr=(&w63), ss=w62+16; ss!=w62+17; ss+=1) *rr++ = *ss;
  /* #419: @66 = @65[16] */
  for (rr=(&w66), ss=w65+16; ss!=w65+17; ss+=1) *rr++ = *ss;
  /* #420: @69 = @68[16] */
  for (rr=(&w69), ss=w68+16; ss!=w68+17; ss+=1) *rr++ = *ss;
  /* #421: @72 = @71[16] */
  for (rr=(&w72), ss=w71+16; ss!=w71+17; ss+=1) *rr++ = *ss;
  /* #422: @96 = zeros(4x1,0nz) */
  /* #423: @97 = zeros(4x1,0nz) */
  /* #424: @98 = zeros(4x1,0nz) */
  /* #425: @99 = zeros(4x1,0nz) */
  /* #426: @100 = zeros(4x1,0nz) */
  /* #427: @101 = zeros(4x1,0nz) */
  /* #428: @102 = zeros(4x1,0nz) */
  /* #429: @103 = zeros(4x1,0nz) */
  /* #430: @104 = zeros(4x1,0nz) */
  /* #431: @105 = zeros(4x1,0nz) */
  /* #432: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #433: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #434: @96 = zeros(14x14,0nz) */
  /* #435: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #436: {@95, @214} = fwd14_adj1_f_disc(@3, @5, @6, @40, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w40;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w214;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #437: {@3, @40, @213, @215, @216, @217, @218, @219, @220, @221, @222, @223, @224, @225} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w40);
  casadi_copy(w95+28, 14, w213);
  casadi_copy(w95+42, 14, w215);
  casadi_copy(w95+56, 14, w216);
  casadi_copy(w95+70, 14, w217);
  casadi_copy(w95+84, 14, w218);
  casadi_copy(w95+98, 14, w219);
  casadi_copy(w95+112, 14, w220);
  casadi_copy(w95+126, 14, w221);
  casadi_copy(w95+140, 14, w222);
  casadi_copy(w95+154, 14, w223);
  casadi_copy(w95+168, 14, w224);
  casadi_copy(w95+182, 14, w225);
  /* #438: (@1[224:238] += @3) */
  for (rr=w1+224, ss=w3; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #439: @3 = @2[210:224] */
  for (rr=w3, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #440: @5 = @4[60:64] */
  for (rr=w5, ss=w4+60; ss!=w4+64; ss+=1) *rr++ = *ss;
  /* #441: @6 = zeros(14x1,0nz) */
  /* #442: @38 = (-@38) */
  for (i=0, rr=w38, cs=w38; i<14; ++i) *rr++ = (- *cs++ );
  /* #443: @58 = zeros(14x1,0nz) */
  /* #444: @59 = zeros(4x1,0nz) */
  /* #445: @63 = @61[15] */
  for (rr=(&w63), ss=w61+15; ss!=w61+16; ss+=1) *rr++ = *ss;
  /* #446: @66 = @64[15] */
  for (rr=(&w66), ss=w64+15; ss!=w64+16; ss+=1) *rr++ = *ss;
  /* #447: @69 = @67[15] */
  for (rr=(&w69), ss=w67+15; ss!=w67+16; ss+=1) *rr++ = *ss;
  /* #448: @72 = @70[15] */
  for (rr=(&w72), ss=w70+15; ss!=w70+16; ss+=1) *rr++ = *ss;
  /* #449: @75 = @74[15] */
  for (rr=(&w75), ss=w74+15; ss!=w74+16; ss+=1) *rr++ = *ss;
  /* #450: @77 = @76[15] */
  for (rr=(&w77), ss=w76+15; ss!=w76+16; ss+=1) *rr++ = *ss;
  /* #451: @79 = @78[15] */
  for (rr=(&w79), ss=w78+15; ss!=w78+16; ss+=1) *rr++ = *ss;
  /* #452: @81 = @80[15] */
  for (rr=(&w81), ss=w80+15; ss!=w80+16; ss+=1) *rr++ = *ss;
  /* #453: @83 = @82[15] */
  for (rr=(&w83), ss=w82+15; ss!=w82+16; ss+=1) *rr++ = *ss;
  /* #454: @85 = @84[15] */
  for (rr=(&w85), ss=w84+15; ss!=w84+16; ss+=1) *rr++ = *ss;
  /* #455: @87 = @86[15] */
  for (rr=(&w87), ss=w86+15; ss!=w86+16; ss+=1) *rr++ = *ss;
  /* #456: @89 = @88[15] */
  for (rr=(&w89), ss=w88+15; ss!=w88+16; ss+=1) *rr++ = *ss;
  /* #457: @91 = @90[15] */
  for (rr=(&w91), ss=w90+15; ss!=w90+16; ss+=1) *rr++ = *ss;
  /* #458: @93 = @92[15] */
  for (rr=(&w93), ss=w92+15; ss!=w92+16; ss+=1) *rr++ = *ss;
  /* #459: @226 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w226;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #460: @95 = dense(@226) */
  casadi_densify(w226, casadi_s66, w95, 0);
  /* #461: @63 = @62[15] */
  for (rr=(&w63), ss=w62+15; ss!=w62+16; ss+=1) *rr++ = *ss;
  /* #462: @66 = @65[15] */
  for (rr=(&w66), ss=w65+15; ss!=w65+16; ss+=1) *rr++ = *ss;
  /* #463: @69 = @68[15] */
  for (rr=(&w69), ss=w68+15; ss!=w68+16; ss+=1) *rr++ = *ss;
  /* #464: @72 = @71[15] */
  for (rr=(&w72), ss=w71+15; ss!=w71+16; ss+=1) *rr++ = *ss;
  /* #465: @96 = zeros(4x1,0nz) */
  /* #466: @97 = zeros(4x1,0nz) */
  /* #467: @98 = zeros(4x1,0nz) */
  /* #468: @99 = zeros(4x1,0nz) */
  /* #469: @100 = zeros(4x1,0nz) */
  /* #470: @101 = zeros(4x1,0nz) */
  /* #471: @102 = zeros(4x1,0nz) */
  /* #472: @103 = zeros(4x1,0nz) */
  /* #473: @104 = zeros(4x1,0nz) */
  /* #474: @105 = zeros(4x1,0nz) */
  /* #475: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #476: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #477: @96 = zeros(14x14,0nz) */
  /* #478: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #479: {@109, @227} = fwd14_adj1_f_disc(@3, @5, @6, @38, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w38;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w227;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #480: {@3, @38, @226, @228, @229, @230, @231, @232, @233, @234, @235, @236, @237, @238} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w38);
  casadi_copy(w109+28, 14, w226);
  casadi_copy(w109+42, 14, w228);
  casadi_copy(w109+56, 14, w229);
  casadi_copy(w109+70, 14, w230);
  casadi_copy(w109+84, 14, w231);
  casadi_copy(w109+98, 14, w232);
  casadi_copy(w109+112, 14, w233);
  casadi_copy(w109+126, 14, w234);
  casadi_copy(w109+140, 14, w235);
  casadi_copy(w109+154, 14, w236);
  casadi_copy(w109+168, 14, w237);
  casadi_copy(w109+182, 14, w238);
  /* #481: (@1[210:224] += @3) */
  for (rr=w1+210, ss=w3; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #482: @3 = @2[196:210] */
  for (rr=w3, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #483: @5 = @4[56:60] */
  for (rr=w5, ss=w4+56; ss!=w4+60; ss+=1) *rr++ = *ss;
  /* #484: @6 = zeros(14x1,0nz) */
  /* #485: @36 = (-@36) */
  for (i=0, rr=w36, cs=w36; i<14; ++i) *rr++ = (- *cs++ );
  /* #486: @58 = zeros(14x1,0nz) */
  /* #487: @59 = zeros(4x1,0nz) */
  /* #488: @63 = @61[14] */
  for (rr=(&w63), ss=w61+14; ss!=w61+15; ss+=1) *rr++ = *ss;
  /* #489: @66 = @64[14] */
  for (rr=(&w66), ss=w64+14; ss!=w64+15; ss+=1) *rr++ = *ss;
  /* #490: @69 = @67[14] */
  for (rr=(&w69), ss=w67+14; ss!=w67+15; ss+=1) *rr++ = *ss;
  /* #491: @72 = @70[14] */
  for (rr=(&w72), ss=w70+14; ss!=w70+15; ss+=1) *rr++ = *ss;
  /* #492: @75 = @74[14] */
  for (rr=(&w75), ss=w74+14; ss!=w74+15; ss+=1) *rr++ = *ss;
  /* #493: @77 = @76[14] */
  for (rr=(&w77), ss=w76+14; ss!=w76+15; ss+=1) *rr++ = *ss;
  /* #494: @79 = @78[14] */
  for (rr=(&w79), ss=w78+14; ss!=w78+15; ss+=1) *rr++ = *ss;
  /* #495: @81 = @80[14] */
  for (rr=(&w81), ss=w80+14; ss!=w80+15; ss+=1) *rr++ = *ss;
  /* #496: @83 = @82[14] */
  for (rr=(&w83), ss=w82+14; ss!=w82+15; ss+=1) *rr++ = *ss;
  /* #497: @85 = @84[14] */
  for (rr=(&w85), ss=w84+14; ss!=w84+15; ss+=1) *rr++ = *ss;
  /* #498: @87 = @86[14] */
  for (rr=(&w87), ss=w86+14; ss!=w86+15; ss+=1) *rr++ = *ss;
  /* #499: @89 = @88[14] */
  for (rr=(&w89), ss=w88+14; ss!=w88+15; ss+=1) *rr++ = *ss;
  /* #500: @91 = @90[14] */
  for (rr=(&w91), ss=w90+14; ss!=w90+15; ss+=1) *rr++ = *ss;
  /* #501: @93 = @92[14] */
  for (rr=(&w93), ss=w92+14; ss!=w92+15; ss+=1) *rr++ = *ss;
  /* #502: @239 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w239;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #503: @109 = dense(@239) */
  casadi_densify(w239, casadi_s66, w109, 0);
  /* #504: @63 = @62[14] */
  for (rr=(&w63), ss=w62+14; ss!=w62+15; ss+=1) *rr++ = *ss;
  /* #505: @66 = @65[14] */
  for (rr=(&w66), ss=w65+14; ss!=w65+15; ss+=1) *rr++ = *ss;
  /* #506: @69 = @68[14] */
  for (rr=(&w69), ss=w68+14; ss!=w68+15; ss+=1) *rr++ = *ss;
  /* #507: @72 = @71[14] */
  for (rr=(&w72), ss=w71+14; ss!=w71+15; ss+=1) *rr++ = *ss;
  /* #508: @96 = zeros(4x1,0nz) */
  /* #509: @97 = zeros(4x1,0nz) */
  /* #510: @98 = zeros(4x1,0nz) */
  /* #511: @99 = zeros(4x1,0nz) */
  /* #512: @100 = zeros(4x1,0nz) */
  /* #513: @101 = zeros(4x1,0nz) */
  /* #514: @102 = zeros(4x1,0nz) */
  /* #515: @103 = zeros(4x1,0nz) */
  /* #516: @104 = zeros(4x1,0nz) */
  /* #517: @105 = zeros(4x1,0nz) */
  /* #518: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #519: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #520: @96 = zeros(14x14,0nz) */
  /* #521: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #522: {@108, @240} = fwd14_adj1_f_disc(@3, @5, @6, @36, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w36;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w240;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #523: {@3, @36, @239, @241, @242, @243, @244, @245, @246, @247, @248, @249, @250, @251} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w36);
  casadi_copy(w108+28, 14, w239);
  casadi_copy(w108+42, 14, w241);
  casadi_copy(w108+56, 14, w242);
  casadi_copy(w108+70, 14, w243);
  casadi_copy(w108+84, 14, w244);
  casadi_copy(w108+98, 14, w245);
  casadi_copy(w108+112, 14, w246);
  casadi_copy(w108+126, 14, w247);
  casadi_copy(w108+140, 14, w248);
  casadi_copy(w108+154, 14, w249);
  casadi_copy(w108+168, 14, w250);
  casadi_copy(w108+182, 14, w251);
  /* #524: (@1[196:210] += @3) */
  for (rr=w1+196, ss=w3; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #525: @3 = @2[182:196] */
  for (rr=w3, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #526: @5 = @4[52:56] */
  for (rr=w5, ss=w4+52; ss!=w4+56; ss+=1) *rr++ = *ss;
  /* #527: @6 = zeros(14x1,0nz) */
  /* #528: @34 = (-@34) */
  for (i=0, rr=w34, cs=w34; i<14; ++i) *rr++ = (- *cs++ );
  /* #529: @58 = zeros(14x1,0nz) */
  /* #530: @59 = zeros(4x1,0nz) */
  /* #531: @63 = @61[13] */
  for (rr=(&w63), ss=w61+13; ss!=w61+14; ss+=1) *rr++ = *ss;
  /* #532: @66 = @64[13] */
  for (rr=(&w66), ss=w64+13; ss!=w64+14; ss+=1) *rr++ = *ss;
  /* #533: @69 = @67[13] */
  for (rr=(&w69), ss=w67+13; ss!=w67+14; ss+=1) *rr++ = *ss;
  /* #534: @72 = @70[13] */
  for (rr=(&w72), ss=w70+13; ss!=w70+14; ss+=1) *rr++ = *ss;
  /* #535: @75 = @74[13] */
  for (rr=(&w75), ss=w74+13; ss!=w74+14; ss+=1) *rr++ = *ss;
  /* #536: @77 = @76[13] */
  for (rr=(&w77), ss=w76+13; ss!=w76+14; ss+=1) *rr++ = *ss;
  /* #537: @79 = @78[13] */
  for (rr=(&w79), ss=w78+13; ss!=w78+14; ss+=1) *rr++ = *ss;
  /* #538: @81 = @80[13] */
  for (rr=(&w81), ss=w80+13; ss!=w80+14; ss+=1) *rr++ = *ss;
  /* #539: @83 = @82[13] */
  for (rr=(&w83), ss=w82+13; ss!=w82+14; ss+=1) *rr++ = *ss;
  /* #540: @85 = @84[13] */
  for (rr=(&w85), ss=w84+13; ss!=w84+14; ss+=1) *rr++ = *ss;
  /* #541: @87 = @86[13] */
  for (rr=(&w87), ss=w86+13; ss!=w86+14; ss+=1) *rr++ = *ss;
  /* #542: @89 = @88[13] */
  for (rr=(&w89), ss=w88+13; ss!=w88+14; ss+=1) *rr++ = *ss;
  /* #543: @91 = @90[13] */
  for (rr=(&w91), ss=w90+13; ss!=w90+14; ss+=1) *rr++ = *ss;
  /* #544: @93 = @92[13] */
  for (rr=(&w93), ss=w92+13; ss!=w92+14; ss+=1) *rr++ = *ss;
  /* #545: @252 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w252;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #546: @108 = dense(@252) */
  casadi_densify(w252, casadi_s66, w108, 0);
  /* #547: @63 = @62[13] */
  for (rr=(&w63), ss=w62+13; ss!=w62+14; ss+=1) *rr++ = *ss;
  /* #548: @66 = @65[13] */
  for (rr=(&w66), ss=w65+13; ss!=w65+14; ss+=1) *rr++ = *ss;
  /* #549: @69 = @68[13] */
  for (rr=(&w69), ss=w68+13; ss!=w68+14; ss+=1) *rr++ = *ss;
  /* #550: @72 = @71[13] */
  for (rr=(&w72), ss=w71+13; ss!=w71+14; ss+=1) *rr++ = *ss;
  /* #551: @96 = zeros(4x1,0nz) */
  /* #552: @97 = zeros(4x1,0nz) */
  /* #553: @98 = zeros(4x1,0nz) */
  /* #554: @99 = zeros(4x1,0nz) */
  /* #555: @100 = zeros(4x1,0nz) */
  /* #556: @101 = zeros(4x1,0nz) */
  /* #557: @102 = zeros(4x1,0nz) */
  /* #558: @103 = zeros(4x1,0nz) */
  /* #559: @104 = zeros(4x1,0nz) */
  /* #560: @105 = zeros(4x1,0nz) */
  /* #561: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #562: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #563: @96 = zeros(14x14,0nz) */
  /* #564: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #565: {@95, @253} = fwd14_adj1_f_disc(@3, @5, @6, @34, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w34;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w253;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #566: {@3, @34, @252, @254, @255, @256, @257, @258, @259, @260, @261, @262, @263, @264} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w34);
  casadi_copy(w95+28, 14, w252);
  casadi_copy(w95+42, 14, w254);
  casadi_copy(w95+56, 14, w255);
  casadi_copy(w95+70, 14, w256);
  casadi_copy(w95+84, 14, w257);
  casadi_copy(w95+98, 14, w258);
  casadi_copy(w95+112, 14, w259);
  casadi_copy(w95+126, 14, w260);
  casadi_copy(w95+140, 14, w261);
  casadi_copy(w95+154, 14, w262);
  casadi_copy(w95+168, 14, w263);
  casadi_copy(w95+182, 14, w264);
  /* #567: (@1[182:196] += @3) */
  for (rr=w1+182, ss=w3; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #568: @3 = @2[168:182] */
  for (rr=w3, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #569: @5 = @4[48:52] */
  for (rr=w5, ss=w4+48; ss!=w4+52; ss+=1) *rr++ = *ss;
  /* #570: @6 = zeros(14x1,0nz) */
  /* #571: @32 = (-@32) */
  for (i=0, rr=w32, cs=w32; i<14; ++i) *rr++ = (- *cs++ );
  /* #572: @58 = zeros(14x1,0nz) */
  /* #573: @59 = zeros(4x1,0nz) */
  /* #574: @63 = @61[12] */
  for (rr=(&w63), ss=w61+12; ss!=w61+13; ss+=1) *rr++ = *ss;
  /* #575: @66 = @64[12] */
  for (rr=(&w66), ss=w64+12; ss!=w64+13; ss+=1) *rr++ = *ss;
  /* #576: @69 = @67[12] */
  for (rr=(&w69), ss=w67+12; ss!=w67+13; ss+=1) *rr++ = *ss;
  /* #577: @72 = @70[12] */
  for (rr=(&w72), ss=w70+12; ss!=w70+13; ss+=1) *rr++ = *ss;
  /* #578: @75 = @74[12] */
  for (rr=(&w75), ss=w74+12; ss!=w74+13; ss+=1) *rr++ = *ss;
  /* #579: @77 = @76[12] */
  for (rr=(&w77), ss=w76+12; ss!=w76+13; ss+=1) *rr++ = *ss;
  /* #580: @79 = @78[12] */
  for (rr=(&w79), ss=w78+12; ss!=w78+13; ss+=1) *rr++ = *ss;
  /* #581: @81 = @80[12] */
  for (rr=(&w81), ss=w80+12; ss!=w80+13; ss+=1) *rr++ = *ss;
  /* #582: @83 = @82[12] */
  for (rr=(&w83), ss=w82+12; ss!=w82+13; ss+=1) *rr++ = *ss;
  /* #583: @85 = @84[12] */
  for (rr=(&w85), ss=w84+12; ss!=w84+13; ss+=1) *rr++ = *ss;
  /* #584: @87 = @86[12] */
  for (rr=(&w87), ss=w86+12; ss!=w86+13; ss+=1) *rr++ = *ss;
  /* #585: @89 = @88[12] */
  for (rr=(&w89), ss=w88+12; ss!=w88+13; ss+=1) *rr++ = *ss;
  /* #586: @91 = @90[12] */
  for (rr=(&w91), ss=w90+12; ss!=w90+13; ss+=1) *rr++ = *ss;
  /* #587: @93 = @92[12] */
  for (rr=(&w93), ss=w92+12; ss!=w92+13; ss+=1) *rr++ = *ss;
  /* #588: @265 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w265;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #589: @95 = dense(@265) */
  casadi_densify(w265, casadi_s66, w95, 0);
  /* #590: @63 = @62[12] */
  for (rr=(&w63), ss=w62+12; ss!=w62+13; ss+=1) *rr++ = *ss;
  /* #591: @66 = @65[12] */
  for (rr=(&w66), ss=w65+12; ss!=w65+13; ss+=1) *rr++ = *ss;
  /* #592: @69 = @68[12] */
  for (rr=(&w69), ss=w68+12; ss!=w68+13; ss+=1) *rr++ = *ss;
  /* #593: @72 = @71[12] */
  for (rr=(&w72), ss=w71+12; ss!=w71+13; ss+=1) *rr++ = *ss;
  /* #594: @96 = zeros(4x1,0nz) */
  /* #595: @97 = zeros(4x1,0nz) */
  /* #596: @98 = zeros(4x1,0nz) */
  /* #597: @99 = zeros(4x1,0nz) */
  /* #598: @100 = zeros(4x1,0nz) */
  /* #599: @101 = zeros(4x1,0nz) */
  /* #600: @102 = zeros(4x1,0nz) */
  /* #601: @103 = zeros(4x1,0nz) */
  /* #602: @104 = zeros(4x1,0nz) */
  /* #603: @105 = zeros(4x1,0nz) */
  /* #604: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #605: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #606: @96 = zeros(14x14,0nz) */
  /* #607: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #608: {@109, @266} = fwd14_adj1_f_disc(@3, @5, @6, @32, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w32;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w266;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #609: {@3, @32, @265, @267, @268, @269, @270, @271, @272, @273, @274, @275, @276, @277} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w32);
  casadi_copy(w109+28, 14, w265);
  casadi_copy(w109+42, 14, w267);
  casadi_copy(w109+56, 14, w268);
  casadi_copy(w109+70, 14, w269);
  casadi_copy(w109+84, 14, w270);
  casadi_copy(w109+98, 14, w271);
  casadi_copy(w109+112, 14, w272);
  casadi_copy(w109+126, 14, w273);
  casadi_copy(w109+140, 14, w274);
  casadi_copy(w109+154, 14, w275);
  casadi_copy(w109+168, 14, w276);
  casadi_copy(w109+182, 14, w277);
  /* #610: (@1[168:182] += @3) */
  for (rr=w1+168, ss=w3; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #611: @3 = @2[154:168] */
  for (rr=w3, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #612: @5 = @4[44:48] */
  for (rr=w5, ss=w4+44; ss!=w4+48; ss+=1) *rr++ = *ss;
  /* #613: @6 = zeros(14x1,0nz) */
  /* #614: @30 = (-@30) */
  for (i=0, rr=w30, cs=w30; i<14; ++i) *rr++ = (- *cs++ );
  /* #615: @58 = zeros(14x1,0nz) */
  /* #616: @59 = zeros(4x1,0nz) */
  /* #617: @63 = @61[11] */
  for (rr=(&w63), ss=w61+11; ss!=w61+12; ss+=1) *rr++ = *ss;
  /* #618: @66 = @64[11] */
  for (rr=(&w66), ss=w64+11; ss!=w64+12; ss+=1) *rr++ = *ss;
  /* #619: @69 = @67[11] */
  for (rr=(&w69), ss=w67+11; ss!=w67+12; ss+=1) *rr++ = *ss;
  /* #620: @72 = @70[11] */
  for (rr=(&w72), ss=w70+11; ss!=w70+12; ss+=1) *rr++ = *ss;
  /* #621: @75 = @74[11] */
  for (rr=(&w75), ss=w74+11; ss!=w74+12; ss+=1) *rr++ = *ss;
  /* #622: @77 = @76[11] */
  for (rr=(&w77), ss=w76+11; ss!=w76+12; ss+=1) *rr++ = *ss;
  /* #623: @79 = @78[11] */
  for (rr=(&w79), ss=w78+11; ss!=w78+12; ss+=1) *rr++ = *ss;
  /* #624: @81 = @80[11] */
  for (rr=(&w81), ss=w80+11; ss!=w80+12; ss+=1) *rr++ = *ss;
  /* #625: @83 = @82[11] */
  for (rr=(&w83), ss=w82+11; ss!=w82+12; ss+=1) *rr++ = *ss;
  /* #626: @85 = @84[11] */
  for (rr=(&w85), ss=w84+11; ss!=w84+12; ss+=1) *rr++ = *ss;
  /* #627: @87 = @86[11] */
  for (rr=(&w87), ss=w86+11; ss!=w86+12; ss+=1) *rr++ = *ss;
  /* #628: @89 = @88[11] */
  for (rr=(&w89), ss=w88+11; ss!=w88+12; ss+=1) *rr++ = *ss;
  /* #629: @91 = @90[11] */
  for (rr=(&w91), ss=w90+11; ss!=w90+12; ss+=1) *rr++ = *ss;
  /* #630: @93 = @92[11] */
  for (rr=(&w93), ss=w92+11; ss!=w92+12; ss+=1) *rr++ = *ss;
  /* #631: @278 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w278;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #632: @109 = dense(@278) */
  casadi_densify(w278, casadi_s66, w109, 0);
  /* #633: @63 = @62[11] */
  for (rr=(&w63), ss=w62+11; ss!=w62+12; ss+=1) *rr++ = *ss;
  /* #634: @66 = @65[11] */
  for (rr=(&w66), ss=w65+11; ss!=w65+12; ss+=1) *rr++ = *ss;
  /* #635: @69 = @68[11] */
  for (rr=(&w69), ss=w68+11; ss!=w68+12; ss+=1) *rr++ = *ss;
  /* #636: @72 = @71[11] */
  for (rr=(&w72), ss=w71+11; ss!=w71+12; ss+=1) *rr++ = *ss;
  /* #637: @96 = zeros(4x1,0nz) */
  /* #638: @97 = zeros(4x1,0nz) */
  /* #639: @98 = zeros(4x1,0nz) */
  /* #640: @99 = zeros(4x1,0nz) */
  /* #641: @100 = zeros(4x1,0nz) */
  /* #642: @101 = zeros(4x1,0nz) */
  /* #643: @102 = zeros(4x1,0nz) */
  /* #644: @103 = zeros(4x1,0nz) */
  /* #645: @104 = zeros(4x1,0nz) */
  /* #646: @105 = zeros(4x1,0nz) */
  /* #647: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #648: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #649: @96 = zeros(14x14,0nz) */
  /* #650: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #651: {@108, @279} = fwd14_adj1_f_disc(@3, @5, @6, @30, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w30;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w279;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #652: {@3, @30, @278, @280, @281, @282, @283, @284, @285, @286, @287, @288, @289, @290} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w30);
  casadi_copy(w108+28, 14, w278);
  casadi_copy(w108+42, 14, w280);
  casadi_copy(w108+56, 14, w281);
  casadi_copy(w108+70, 14, w282);
  casadi_copy(w108+84, 14, w283);
  casadi_copy(w108+98, 14, w284);
  casadi_copy(w108+112, 14, w285);
  casadi_copy(w108+126, 14, w286);
  casadi_copy(w108+140, 14, w287);
  casadi_copy(w108+154, 14, w288);
  casadi_copy(w108+168, 14, w289);
  casadi_copy(w108+182, 14, w290);
  /* #653: (@1[154:168] += @3) */
  for (rr=w1+154, ss=w3; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #654: @3 = @2[140:154] */
  for (rr=w3, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #655: @5 = @4[40:44] */
  for (rr=w5, ss=w4+40; ss!=w4+44; ss+=1) *rr++ = *ss;
  /* #656: @6 = zeros(14x1,0nz) */
  /* #657: @28 = (-@28) */
  for (i=0, rr=w28, cs=w28; i<14; ++i) *rr++ = (- *cs++ );
  /* #658: @58 = zeros(14x1,0nz) */
  /* #659: @59 = zeros(4x1,0nz) */
  /* #660: @63 = @61[10] */
  for (rr=(&w63), ss=w61+10; ss!=w61+11; ss+=1) *rr++ = *ss;
  /* #661: @66 = @64[10] */
  for (rr=(&w66), ss=w64+10; ss!=w64+11; ss+=1) *rr++ = *ss;
  /* #662: @69 = @67[10] */
  for (rr=(&w69), ss=w67+10; ss!=w67+11; ss+=1) *rr++ = *ss;
  /* #663: @72 = @70[10] */
  for (rr=(&w72), ss=w70+10; ss!=w70+11; ss+=1) *rr++ = *ss;
  /* #664: @75 = @74[10] */
  for (rr=(&w75), ss=w74+10; ss!=w74+11; ss+=1) *rr++ = *ss;
  /* #665: @77 = @76[10] */
  for (rr=(&w77), ss=w76+10; ss!=w76+11; ss+=1) *rr++ = *ss;
  /* #666: @79 = @78[10] */
  for (rr=(&w79), ss=w78+10; ss!=w78+11; ss+=1) *rr++ = *ss;
  /* #667: @81 = @80[10] */
  for (rr=(&w81), ss=w80+10; ss!=w80+11; ss+=1) *rr++ = *ss;
  /* #668: @83 = @82[10] */
  for (rr=(&w83), ss=w82+10; ss!=w82+11; ss+=1) *rr++ = *ss;
  /* #669: @85 = @84[10] */
  for (rr=(&w85), ss=w84+10; ss!=w84+11; ss+=1) *rr++ = *ss;
  /* #670: @87 = @86[10] */
  for (rr=(&w87), ss=w86+10; ss!=w86+11; ss+=1) *rr++ = *ss;
  /* #671: @89 = @88[10] */
  for (rr=(&w89), ss=w88+10; ss!=w88+11; ss+=1) *rr++ = *ss;
  /* #672: @91 = @90[10] */
  for (rr=(&w91), ss=w90+10; ss!=w90+11; ss+=1) *rr++ = *ss;
  /* #673: @93 = @92[10] */
  for (rr=(&w93), ss=w92+10; ss!=w92+11; ss+=1) *rr++ = *ss;
  /* #674: @291 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w291;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #675: @108 = dense(@291) */
  casadi_densify(w291, casadi_s66, w108, 0);
  /* #676: @63 = @62[10] */
  for (rr=(&w63), ss=w62+10; ss!=w62+11; ss+=1) *rr++ = *ss;
  /* #677: @66 = @65[10] */
  for (rr=(&w66), ss=w65+10; ss!=w65+11; ss+=1) *rr++ = *ss;
  /* #678: @69 = @68[10] */
  for (rr=(&w69), ss=w68+10; ss!=w68+11; ss+=1) *rr++ = *ss;
  /* #679: @72 = @71[10] */
  for (rr=(&w72), ss=w71+10; ss!=w71+11; ss+=1) *rr++ = *ss;
  /* #680: @96 = zeros(4x1,0nz) */
  /* #681: @97 = zeros(4x1,0nz) */
  /* #682: @98 = zeros(4x1,0nz) */
  /* #683: @99 = zeros(4x1,0nz) */
  /* #684: @100 = zeros(4x1,0nz) */
  /* #685: @101 = zeros(4x1,0nz) */
  /* #686: @102 = zeros(4x1,0nz) */
  /* #687: @103 = zeros(4x1,0nz) */
  /* #688: @104 = zeros(4x1,0nz) */
  /* #689: @105 = zeros(4x1,0nz) */
  /* #690: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #691: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #692: @96 = zeros(14x14,0nz) */
  /* #693: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #694: {@95, @292} = fwd14_adj1_f_disc(@3, @5, @6, @28, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w28;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w292;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #695: {@3, @28, @291, @293, @294, @295, @296, @297, @298, @299, @300, @301, @302, @303} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w28);
  casadi_copy(w95+28, 14, w291);
  casadi_copy(w95+42, 14, w293);
  casadi_copy(w95+56, 14, w294);
  casadi_copy(w95+70, 14, w295);
  casadi_copy(w95+84, 14, w296);
  casadi_copy(w95+98, 14, w297);
  casadi_copy(w95+112, 14, w298);
  casadi_copy(w95+126, 14, w299);
  casadi_copy(w95+140, 14, w300);
  casadi_copy(w95+154, 14, w301);
  casadi_copy(w95+168, 14, w302);
  casadi_copy(w95+182, 14, w303);
  /* #696: (@1[140:154] += @3) */
  for (rr=w1+140, ss=w3; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #697: @3 = @2[126:140] */
  for (rr=w3, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #698: @5 = @4[36:40] */
  for (rr=w5, ss=w4+36; ss!=w4+40; ss+=1) *rr++ = *ss;
  /* #699: @6 = zeros(14x1,0nz) */
  /* #700: @26 = (-@26) */
  for (i=0, rr=w26, cs=w26; i<14; ++i) *rr++ = (- *cs++ );
  /* #701: @58 = zeros(14x1,0nz) */
  /* #702: @59 = zeros(4x1,0nz) */
  /* #703: @63 = @61[9] */
  for (rr=(&w63), ss=w61+9; ss!=w61+10; ss+=1) *rr++ = *ss;
  /* #704: @66 = @64[9] */
  for (rr=(&w66), ss=w64+9; ss!=w64+10; ss+=1) *rr++ = *ss;
  /* #705: @69 = @67[9] */
  for (rr=(&w69), ss=w67+9; ss!=w67+10; ss+=1) *rr++ = *ss;
  /* #706: @72 = @70[9] */
  for (rr=(&w72), ss=w70+9; ss!=w70+10; ss+=1) *rr++ = *ss;
  /* #707: @75 = @74[9] */
  for (rr=(&w75), ss=w74+9; ss!=w74+10; ss+=1) *rr++ = *ss;
  /* #708: @77 = @76[9] */
  for (rr=(&w77), ss=w76+9; ss!=w76+10; ss+=1) *rr++ = *ss;
  /* #709: @79 = @78[9] */
  for (rr=(&w79), ss=w78+9; ss!=w78+10; ss+=1) *rr++ = *ss;
  /* #710: @81 = @80[9] */
  for (rr=(&w81), ss=w80+9; ss!=w80+10; ss+=1) *rr++ = *ss;
  /* #711: @83 = @82[9] */
  for (rr=(&w83), ss=w82+9; ss!=w82+10; ss+=1) *rr++ = *ss;
  /* #712: @85 = @84[9] */
  for (rr=(&w85), ss=w84+9; ss!=w84+10; ss+=1) *rr++ = *ss;
  /* #713: @87 = @86[9] */
  for (rr=(&w87), ss=w86+9; ss!=w86+10; ss+=1) *rr++ = *ss;
  /* #714: @89 = @88[9] */
  for (rr=(&w89), ss=w88+9; ss!=w88+10; ss+=1) *rr++ = *ss;
  /* #715: @91 = @90[9] */
  for (rr=(&w91), ss=w90+9; ss!=w90+10; ss+=1) *rr++ = *ss;
  /* #716: @93 = @92[9] */
  for (rr=(&w93), ss=w92+9; ss!=w92+10; ss+=1) *rr++ = *ss;
  /* #717: @304 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w304;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #718: @95 = dense(@304) */
  casadi_densify(w304, casadi_s66, w95, 0);
  /* #719: @63 = @62[9] */
  for (rr=(&w63), ss=w62+9; ss!=w62+10; ss+=1) *rr++ = *ss;
  /* #720: @66 = @65[9] */
  for (rr=(&w66), ss=w65+9; ss!=w65+10; ss+=1) *rr++ = *ss;
  /* #721: @69 = @68[9] */
  for (rr=(&w69), ss=w68+9; ss!=w68+10; ss+=1) *rr++ = *ss;
  /* #722: @72 = @71[9] */
  for (rr=(&w72), ss=w71+9; ss!=w71+10; ss+=1) *rr++ = *ss;
  /* #723: @96 = zeros(4x1,0nz) */
  /* #724: @97 = zeros(4x1,0nz) */
  /* #725: @98 = zeros(4x1,0nz) */
  /* #726: @99 = zeros(4x1,0nz) */
  /* #727: @100 = zeros(4x1,0nz) */
  /* #728: @101 = zeros(4x1,0nz) */
  /* #729: @102 = zeros(4x1,0nz) */
  /* #730: @103 = zeros(4x1,0nz) */
  /* #731: @104 = zeros(4x1,0nz) */
  /* #732: @105 = zeros(4x1,0nz) */
  /* #733: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #734: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #735: @96 = zeros(14x14,0nz) */
  /* #736: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #737: {@109, @305} = fwd14_adj1_f_disc(@3, @5, @6, @26, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w26;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w305;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #738: {@3, @26, @304, @306, @307, @308, @309, @310, @311, @312, @313, @314, @315, @316} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w26);
  casadi_copy(w109+28, 14, w304);
  casadi_copy(w109+42, 14, w306);
  casadi_copy(w109+56, 14, w307);
  casadi_copy(w109+70, 14, w308);
  casadi_copy(w109+84, 14, w309);
  casadi_copy(w109+98, 14, w310);
  casadi_copy(w109+112, 14, w311);
  casadi_copy(w109+126, 14, w312);
  casadi_copy(w109+140, 14, w313);
  casadi_copy(w109+154, 14, w314);
  casadi_copy(w109+168, 14, w315);
  casadi_copy(w109+182, 14, w316);
  /* #739: (@1[126:140] += @3) */
  for (rr=w1+126, ss=w3; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #740: @3 = @2[112:126] */
  for (rr=w3, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #741: @5 = @4[32:36] */
  for (rr=w5, ss=w4+32; ss!=w4+36; ss+=1) *rr++ = *ss;
  /* #742: @6 = zeros(14x1,0nz) */
  /* #743: @24 = (-@24) */
  for (i=0, rr=w24, cs=w24; i<14; ++i) *rr++ = (- *cs++ );
  /* #744: @58 = zeros(14x1,0nz) */
  /* #745: @59 = zeros(4x1,0nz) */
  /* #746: @63 = @61[8] */
  for (rr=(&w63), ss=w61+8; ss!=w61+9; ss+=1) *rr++ = *ss;
  /* #747: @66 = @64[8] */
  for (rr=(&w66), ss=w64+8; ss!=w64+9; ss+=1) *rr++ = *ss;
  /* #748: @69 = @67[8] */
  for (rr=(&w69), ss=w67+8; ss!=w67+9; ss+=1) *rr++ = *ss;
  /* #749: @72 = @70[8] */
  for (rr=(&w72), ss=w70+8; ss!=w70+9; ss+=1) *rr++ = *ss;
  /* #750: @75 = @74[8] */
  for (rr=(&w75), ss=w74+8; ss!=w74+9; ss+=1) *rr++ = *ss;
  /* #751: @77 = @76[8] */
  for (rr=(&w77), ss=w76+8; ss!=w76+9; ss+=1) *rr++ = *ss;
  /* #752: @79 = @78[8] */
  for (rr=(&w79), ss=w78+8; ss!=w78+9; ss+=1) *rr++ = *ss;
  /* #753: @81 = @80[8] */
  for (rr=(&w81), ss=w80+8; ss!=w80+9; ss+=1) *rr++ = *ss;
  /* #754: @83 = @82[8] */
  for (rr=(&w83), ss=w82+8; ss!=w82+9; ss+=1) *rr++ = *ss;
  /* #755: @85 = @84[8] */
  for (rr=(&w85), ss=w84+8; ss!=w84+9; ss+=1) *rr++ = *ss;
  /* #756: @87 = @86[8] */
  for (rr=(&w87), ss=w86+8; ss!=w86+9; ss+=1) *rr++ = *ss;
  /* #757: @89 = @88[8] */
  for (rr=(&w89), ss=w88+8; ss!=w88+9; ss+=1) *rr++ = *ss;
  /* #758: @91 = @90[8] */
  for (rr=(&w91), ss=w90+8; ss!=w90+9; ss+=1) *rr++ = *ss;
  /* #759: @93 = @92[8] */
  for (rr=(&w93), ss=w92+8; ss!=w92+9; ss+=1) *rr++ = *ss;
  /* #760: @317 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w317;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #761: @109 = dense(@317) */
  casadi_densify(w317, casadi_s66, w109, 0);
  /* #762: @63 = @62[8] */
  for (rr=(&w63), ss=w62+8; ss!=w62+9; ss+=1) *rr++ = *ss;
  /* #763: @66 = @65[8] */
  for (rr=(&w66), ss=w65+8; ss!=w65+9; ss+=1) *rr++ = *ss;
  /* #764: @69 = @68[8] */
  for (rr=(&w69), ss=w68+8; ss!=w68+9; ss+=1) *rr++ = *ss;
  /* #765: @72 = @71[8] */
  for (rr=(&w72), ss=w71+8; ss!=w71+9; ss+=1) *rr++ = *ss;
  /* #766: @96 = zeros(4x1,0nz) */
  /* #767: @97 = zeros(4x1,0nz) */
  /* #768: @98 = zeros(4x1,0nz) */
  /* #769: @99 = zeros(4x1,0nz) */
  /* #770: @100 = zeros(4x1,0nz) */
  /* #771: @101 = zeros(4x1,0nz) */
  /* #772: @102 = zeros(4x1,0nz) */
  /* #773: @103 = zeros(4x1,0nz) */
  /* #774: @104 = zeros(4x1,0nz) */
  /* #775: @105 = zeros(4x1,0nz) */
  /* #776: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #777: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #778: @96 = zeros(14x14,0nz) */
  /* #779: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #780: {@108, @318} = fwd14_adj1_f_disc(@3, @5, @6, @24, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w24;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w318;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #781: {@3, @24, @317, @319, @320, @321, @322, @323, @324, @325, @326, @327, @328, @329} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w24);
  casadi_copy(w108+28, 14, w317);
  casadi_copy(w108+42, 14, w319);
  casadi_copy(w108+56, 14, w320);
  casadi_copy(w108+70, 14, w321);
  casadi_copy(w108+84, 14, w322);
  casadi_copy(w108+98, 14, w323);
  casadi_copy(w108+112, 14, w324);
  casadi_copy(w108+126, 14, w325);
  casadi_copy(w108+140, 14, w326);
  casadi_copy(w108+154, 14, w327);
  casadi_copy(w108+168, 14, w328);
  casadi_copy(w108+182, 14, w329);
  /* #782: (@1[112:126] += @3) */
  for (rr=w1+112, ss=w3; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #783: @3 = @2[98:112] */
  for (rr=w3, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #784: @5 = @4[28:32] */
  for (rr=w5, ss=w4+28; ss!=w4+32; ss+=1) *rr++ = *ss;
  /* #785: @6 = zeros(14x1,0nz) */
  /* #786: @22 = (-@22) */
  for (i=0, rr=w22, cs=w22; i<14; ++i) *rr++ = (- *cs++ );
  /* #787: @58 = zeros(14x1,0nz) */
  /* #788: @59 = zeros(4x1,0nz) */
  /* #789: @63 = @61[7] */
  for (rr=(&w63), ss=w61+7; ss!=w61+8; ss+=1) *rr++ = *ss;
  /* #790: @66 = @64[7] */
  for (rr=(&w66), ss=w64+7; ss!=w64+8; ss+=1) *rr++ = *ss;
  /* #791: @69 = @67[7] */
  for (rr=(&w69), ss=w67+7; ss!=w67+8; ss+=1) *rr++ = *ss;
  /* #792: @72 = @70[7] */
  for (rr=(&w72), ss=w70+7; ss!=w70+8; ss+=1) *rr++ = *ss;
  /* #793: @75 = @74[7] */
  for (rr=(&w75), ss=w74+7; ss!=w74+8; ss+=1) *rr++ = *ss;
  /* #794: @77 = @76[7] */
  for (rr=(&w77), ss=w76+7; ss!=w76+8; ss+=1) *rr++ = *ss;
  /* #795: @79 = @78[7] */
  for (rr=(&w79), ss=w78+7; ss!=w78+8; ss+=1) *rr++ = *ss;
  /* #796: @81 = @80[7] */
  for (rr=(&w81), ss=w80+7; ss!=w80+8; ss+=1) *rr++ = *ss;
  /* #797: @83 = @82[7] */
  for (rr=(&w83), ss=w82+7; ss!=w82+8; ss+=1) *rr++ = *ss;
  /* #798: @85 = @84[7] */
  for (rr=(&w85), ss=w84+7; ss!=w84+8; ss+=1) *rr++ = *ss;
  /* #799: @87 = @86[7] */
  for (rr=(&w87), ss=w86+7; ss!=w86+8; ss+=1) *rr++ = *ss;
  /* #800: @89 = @88[7] */
  for (rr=(&w89), ss=w88+7; ss!=w88+8; ss+=1) *rr++ = *ss;
  /* #801: @91 = @90[7] */
  for (rr=(&w91), ss=w90+7; ss!=w90+8; ss+=1) *rr++ = *ss;
  /* #802: @93 = @92[7] */
  for (rr=(&w93), ss=w92+7; ss!=w92+8; ss+=1) *rr++ = *ss;
  /* #803: @330 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w330;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #804: @108 = dense(@330) */
  casadi_densify(w330, casadi_s66, w108, 0);
  /* #805: @63 = @62[7] */
  for (rr=(&w63), ss=w62+7; ss!=w62+8; ss+=1) *rr++ = *ss;
  /* #806: @66 = @65[7] */
  for (rr=(&w66), ss=w65+7; ss!=w65+8; ss+=1) *rr++ = *ss;
  /* #807: @69 = @68[7] */
  for (rr=(&w69), ss=w68+7; ss!=w68+8; ss+=1) *rr++ = *ss;
  /* #808: @72 = @71[7] */
  for (rr=(&w72), ss=w71+7; ss!=w71+8; ss+=1) *rr++ = *ss;
  /* #809: @96 = zeros(4x1,0nz) */
  /* #810: @97 = zeros(4x1,0nz) */
  /* #811: @98 = zeros(4x1,0nz) */
  /* #812: @99 = zeros(4x1,0nz) */
  /* #813: @100 = zeros(4x1,0nz) */
  /* #814: @101 = zeros(4x1,0nz) */
  /* #815: @102 = zeros(4x1,0nz) */
  /* #816: @103 = zeros(4x1,0nz) */
  /* #817: @104 = zeros(4x1,0nz) */
  /* #818: @105 = zeros(4x1,0nz) */
  /* #819: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #820: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #821: @96 = zeros(14x14,0nz) */
  /* #822: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #823: {@95, @331} = fwd14_adj1_f_disc(@3, @5, @6, @22, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w22;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w331;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #824: {@3, @22, @330, @332, @333, @334, @335, @336, @337, @338, @339, @340, @341, @342} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w22);
  casadi_copy(w95+28, 14, w330);
  casadi_copy(w95+42, 14, w332);
  casadi_copy(w95+56, 14, w333);
  casadi_copy(w95+70, 14, w334);
  casadi_copy(w95+84, 14, w335);
  casadi_copy(w95+98, 14, w336);
  casadi_copy(w95+112, 14, w337);
  casadi_copy(w95+126, 14, w338);
  casadi_copy(w95+140, 14, w339);
  casadi_copy(w95+154, 14, w340);
  casadi_copy(w95+168, 14, w341);
  casadi_copy(w95+182, 14, w342);
  /* #825: (@1[98:112] += @3) */
  for (rr=w1+98, ss=w3; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #826: @3 = @2[84:98] */
  for (rr=w3, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #827: @5 = @4[24:28] */
  for (rr=w5, ss=w4+24; ss!=w4+28; ss+=1) *rr++ = *ss;
  /* #828: @6 = zeros(14x1,0nz) */
  /* #829: @20 = (-@20) */
  for (i=0, rr=w20, cs=w20; i<14; ++i) *rr++ = (- *cs++ );
  /* #830: @58 = zeros(14x1,0nz) */
  /* #831: @59 = zeros(4x1,0nz) */
  /* #832: @63 = @61[6] */
  for (rr=(&w63), ss=w61+6; ss!=w61+7; ss+=1) *rr++ = *ss;
  /* #833: @66 = @64[6] */
  for (rr=(&w66), ss=w64+6; ss!=w64+7; ss+=1) *rr++ = *ss;
  /* #834: @69 = @67[6] */
  for (rr=(&w69), ss=w67+6; ss!=w67+7; ss+=1) *rr++ = *ss;
  /* #835: @72 = @70[6] */
  for (rr=(&w72), ss=w70+6; ss!=w70+7; ss+=1) *rr++ = *ss;
  /* #836: @75 = @74[6] */
  for (rr=(&w75), ss=w74+6; ss!=w74+7; ss+=1) *rr++ = *ss;
  /* #837: @77 = @76[6] */
  for (rr=(&w77), ss=w76+6; ss!=w76+7; ss+=1) *rr++ = *ss;
  /* #838: @79 = @78[6] */
  for (rr=(&w79), ss=w78+6; ss!=w78+7; ss+=1) *rr++ = *ss;
  /* #839: @81 = @80[6] */
  for (rr=(&w81), ss=w80+6; ss!=w80+7; ss+=1) *rr++ = *ss;
  /* #840: @83 = @82[6] */
  for (rr=(&w83), ss=w82+6; ss!=w82+7; ss+=1) *rr++ = *ss;
  /* #841: @85 = @84[6] */
  for (rr=(&w85), ss=w84+6; ss!=w84+7; ss+=1) *rr++ = *ss;
  /* #842: @87 = @86[6] */
  for (rr=(&w87), ss=w86+6; ss!=w86+7; ss+=1) *rr++ = *ss;
  /* #843: @89 = @88[6] */
  for (rr=(&w89), ss=w88+6; ss!=w88+7; ss+=1) *rr++ = *ss;
  /* #844: @91 = @90[6] */
  for (rr=(&w91), ss=w90+6; ss!=w90+7; ss+=1) *rr++ = *ss;
  /* #845: @93 = @92[6] */
  for (rr=(&w93), ss=w92+6; ss!=w92+7; ss+=1) *rr++ = *ss;
  /* #846: @343 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w343;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #847: @95 = dense(@343) */
  casadi_densify(w343, casadi_s66, w95, 0);
  /* #848: @63 = @62[6] */
  for (rr=(&w63), ss=w62+6; ss!=w62+7; ss+=1) *rr++ = *ss;
  /* #849: @66 = @65[6] */
  for (rr=(&w66), ss=w65+6; ss!=w65+7; ss+=1) *rr++ = *ss;
  /* #850: @69 = @68[6] */
  for (rr=(&w69), ss=w68+6; ss!=w68+7; ss+=1) *rr++ = *ss;
  /* #851: @72 = @71[6] */
  for (rr=(&w72), ss=w71+6; ss!=w71+7; ss+=1) *rr++ = *ss;
  /* #852: @96 = zeros(4x1,0nz) */
  /* #853: @97 = zeros(4x1,0nz) */
  /* #854: @98 = zeros(4x1,0nz) */
  /* #855: @99 = zeros(4x1,0nz) */
  /* #856: @100 = zeros(4x1,0nz) */
  /* #857: @101 = zeros(4x1,0nz) */
  /* #858: @102 = zeros(4x1,0nz) */
  /* #859: @103 = zeros(4x1,0nz) */
  /* #860: @104 = zeros(4x1,0nz) */
  /* #861: @105 = zeros(4x1,0nz) */
  /* #862: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #863: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #864: @96 = zeros(14x14,0nz) */
  /* #865: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #866: {@109, @344} = fwd14_adj1_f_disc(@3, @5, @6, @20, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w20;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w344;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #867: {@3, @20, @343, @345, @346, @347, @348, @349, @350, @351, @352, @353, @354, @355} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w20);
  casadi_copy(w109+28, 14, w343);
  casadi_copy(w109+42, 14, w345);
  casadi_copy(w109+56, 14, w346);
  casadi_copy(w109+70, 14, w347);
  casadi_copy(w109+84, 14, w348);
  casadi_copy(w109+98, 14, w349);
  casadi_copy(w109+112, 14, w350);
  casadi_copy(w109+126, 14, w351);
  casadi_copy(w109+140, 14, w352);
  casadi_copy(w109+154, 14, w353);
  casadi_copy(w109+168, 14, w354);
  casadi_copy(w109+182, 14, w355);
  /* #868: (@1[84:98] += @3) */
  for (rr=w1+84, ss=w3; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #869: @3 = @2[70:84] */
  for (rr=w3, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #870: @5 = @4[20:24] */
  for (rr=w5, ss=w4+20; ss!=w4+24; ss+=1) *rr++ = *ss;
  /* #871: @6 = zeros(14x1,0nz) */
  /* #872: @18 = (-@18) */
  for (i=0, rr=w18, cs=w18; i<14; ++i) *rr++ = (- *cs++ );
  /* #873: @58 = zeros(14x1,0nz) */
  /* #874: @59 = zeros(4x1,0nz) */
  /* #875: @63 = @61[5] */
  for (rr=(&w63), ss=w61+5; ss!=w61+6; ss+=1) *rr++ = *ss;
  /* #876: @66 = @64[5] */
  for (rr=(&w66), ss=w64+5; ss!=w64+6; ss+=1) *rr++ = *ss;
  /* #877: @69 = @67[5] */
  for (rr=(&w69), ss=w67+5; ss!=w67+6; ss+=1) *rr++ = *ss;
  /* #878: @72 = @70[5] */
  for (rr=(&w72), ss=w70+5; ss!=w70+6; ss+=1) *rr++ = *ss;
  /* #879: @75 = @74[5] */
  for (rr=(&w75), ss=w74+5; ss!=w74+6; ss+=1) *rr++ = *ss;
  /* #880: @77 = @76[5] */
  for (rr=(&w77), ss=w76+5; ss!=w76+6; ss+=1) *rr++ = *ss;
  /* #881: @79 = @78[5] */
  for (rr=(&w79), ss=w78+5; ss!=w78+6; ss+=1) *rr++ = *ss;
  /* #882: @81 = @80[5] */
  for (rr=(&w81), ss=w80+5; ss!=w80+6; ss+=1) *rr++ = *ss;
  /* #883: @83 = @82[5] */
  for (rr=(&w83), ss=w82+5; ss!=w82+6; ss+=1) *rr++ = *ss;
  /* #884: @85 = @84[5] */
  for (rr=(&w85), ss=w84+5; ss!=w84+6; ss+=1) *rr++ = *ss;
  /* #885: @87 = @86[5] */
  for (rr=(&w87), ss=w86+5; ss!=w86+6; ss+=1) *rr++ = *ss;
  /* #886: @89 = @88[5] */
  for (rr=(&w89), ss=w88+5; ss!=w88+6; ss+=1) *rr++ = *ss;
  /* #887: @91 = @90[5] */
  for (rr=(&w91), ss=w90+5; ss!=w90+6; ss+=1) *rr++ = *ss;
  /* #888: @93 = @92[5] */
  for (rr=(&w93), ss=w92+5; ss!=w92+6; ss+=1) *rr++ = *ss;
  /* #889: @356 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w356;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #890: @109 = dense(@356) */
  casadi_densify(w356, casadi_s66, w109, 0);
  /* #891: @63 = @62[5] */
  for (rr=(&w63), ss=w62+5; ss!=w62+6; ss+=1) *rr++ = *ss;
  /* #892: @66 = @65[5] */
  for (rr=(&w66), ss=w65+5; ss!=w65+6; ss+=1) *rr++ = *ss;
  /* #893: @69 = @68[5] */
  for (rr=(&w69), ss=w68+5; ss!=w68+6; ss+=1) *rr++ = *ss;
  /* #894: @72 = @71[5] */
  for (rr=(&w72), ss=w71+5; ss!=w71+6; ss+=1) *rr++ = *ss;
  /* #895: @96 = zeros(4x1,0nz) */
  /* #896: @97 = zeros(4x1,0nz) */
  /* #897: @98 = zeros(4x1,0nz) */
  /* #898: @99 = zeros(4x1,0nz) */
  /* #899: @100 = zeros(4x1,0nz) */
  /* #900: @101 = zeros(4x1,0nz) */
  /* #901: @102 = zeros(4x1,0nz) */
  /* #902: @103 = zeros(4x1,0nz) */
  /* #903: @104 = zeros(4x1,0nz) */
  /* #904: @105 = zeros(4x1,0nz) */
  /* #905: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #906: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #907: @96 = zeros(14x14,0nz) */
  /* #908: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #909: {@108, @357} = fwd14_adj1_f_disc(@3, @5, @6, @18, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w18;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w357;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #910: {@3, @18, @356, @358, @359, @360, @361, @362, @363, @364, @365, @366, @367, @368} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w18);
  casadi_copy(w108+28, 14, w356);
  casadi_copy(w108+42, 14, w358);
  casadi_copy(w108+56, 14, w359);
  casadi_copy(w108+70, 14, w360);
  casadi_copy(w108+84, 14, w361);
  casadi_copy(w108+98, 14, w362);
  casadi_copy(w108+112, 14, w363);
  casadi_copy(w108+126, 14, w364);
  casadi_copy(w108+140, 14, w365);
  casadi_copy(w108+154, 14, w366);
  casadi_copy(w108+168, 14, w367);
  casadi_copy(w108+182, 14, w368);
  /* #911: (@1[70:84] += @3) */
  for (rr=w1+70, ss=w3; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #912: @3 = @2[56:70] */
  for (rr=w3, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #913: @5 = @4[16:20] */
  for (rr=w5, ss=w4+16; ss!=w4+20; ss+=1) *rr++ = *ss;
  /* #914: @6 = zeros(14x1,0nz) */
  /* #915: @16 = (-@16) */
  for (i=0, rr=w16, cs=w16; i<14; ++i) *rr++ = (- *cs++ );
  /* #916: @58 = zeros(14x1,0nz) */
  /* #917: @59 = zeros(4x1,0nz) */
  /* #918: @63 = @61[4] */
  for (rr=(&w63), ss=w61+4; ss!=w61+5; ss+=1) *rr++ = *ss;
  /* #919: @66 = @64[4] */
  for (rr=(&w66), ss=w64+4; ss!=w64+5; ss+=1) *rr++ = *ss;
  /* #920: @69 = @67[4] */
  for (rr=(&w69), ss=w67+4; ss!=w67+5; ss+=1) *rr++ = *ss;
  /* #921: @72 = @70[4] */
  for (rr=(&w72), ss=w70+4; ss!=w70+5; ss+=1) *rr++ = *ss;
  /* #922: @75 = @74[4] */
  for (rr=(&w75), ss=w74+4; ss!=w74+5; ss+=1) *rr++ = *ss;
  /* #923: @77 = @76[4] */
  for (rr=(&w77), ss=w76+4; ss!=w76+5; ss+=1) *rr++ = *ss;
  /* #924: @79 = @78[4] */
  for (rr=(&w79), ss=w78+4; ss!=w78+5; ss+=1) *rr++ = *ss;
  /* #925: @81 = @80[4] */
  for (rr=(&w81), ss=w80+4; ss!=w80+5; ss+=1) *rr++ = *ss;
  /* #926: @83 = @82[4] */
  for (rr=(&w83), ss=w82+4; ss!=w82+5; ss+=1) *rr++ = *ss;
  /* #927: @85 = @84[4] */
  for (rr=(&w85), ss=w84+4; ss!=w84+5; ss+=1) *rr++ = *ss;
  /* #928: @87 = @86[4] */
  for (rr=(&w87), ss=w86+4; ss!=w86+5; ss+=1) *rr++ = *ss;
  /* #929: @89 = @88[4] */
  for (rr=(&w89), ss=w88+4; ss!=w88+5; ss+=1) *rr++ = *ss;
  /* #930: @91 = @90[4] */
  for (rr=(&w91), ss=w90+4; ss!=w90+5; ss+=1) *rr++ = *ss;
  /* #931: @93 = @92[4] */
  for (rr=(&w93), ss=w92+4; ss!=w92+5; ss+=1) *rr++ = *ss;
  /* #932: @369 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w369;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #933: @108 = dense(@369) */
  casadi_densify(w369, casadi_s66, w108, 0);
  /* #934: @63 = @62[4] */
  for (rr=(&w63), ss=w62+4; ss!=w62+5; ss+=1) *rr++ = *ss;
  /* #935: @66 = @65[4] */
  for (rr=(&w66), ss=w65+4; ss!=w65+5; ss+=1) *rr++ = *ss;
  /* #936: @69 = @68[4] */
  for (rr=(&w69), ss=w68+4; ss!=w68+5; ss+=1) *rr++ = *ss;
  /* #937: @72 = @71[4] */
  for (rr=(&w72), ss=w71+4; ss!=w71+5; ss+=1) *rr++ = *ss;
  /* #938: @96 = zeros(4x1,0nz) */
  /* #939: @97 = zeros(4x1,0nz) */
  /* #940: @98 = zeros(4x1,0nz) */
  /* #941: @99 = zeros(4x1,0nz) */
  /* #942: @100 = zeros(4x1,0nz) */
  /* #943: @101 = zeros(4x1,0nz) */
  /* #944: @102 = zeros(4x1,0nz) */
  /* #945: @103 = zeros(4x1,0nz) */
  /* #946: @104 = zeros(4x1,0nz) */
  /* #947: @105 = zeros(4x1,0nz) */
  /* #948: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #949: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #950: @96 = zeros(14x14,0nz) */
  /* #951: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #952: {@95, @370} = fwd14_adj1_f_disc(@3, @5, @6, @16, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w16;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w370;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #953: {@3, @16, @369, @371, @372, @373, @374, @375, @376, @377, @378, @379, @380, @381} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w16);
  casadi_copy(w95+28, 14, w369);
  casadi_copy(w95+42, 14, w371);
  casadi_copy(w95+56, 14, w372);
  casadi_copy(w95+70, 14, w373);
  casadi_copy(w95+84, 14, w374);
  casadi_copy(w95+98, 14, w375);
  casadi_copy(w95+112, 14, w376);
  casadi_copy(w95+126, 14, w377);
  casadi_copy(w95+140, 14, w378);
  casadi_copy(w95+154, 14, w379);
  casadi_copy(w95+168, 14, w380);
  casadi_copy(w95+182, 14, w381);
  /* #954: (@1[56:70] += @3) */
  for (rr=w1+56, ss=w3; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #955: @3 = @2[42:56] */
  for (rr=w3, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #956: @5 = @4[12:16] */
  for (rr=w5, ss=w4+12; ss!=w4+16; ss+=1) *rr++ = *ss;
  /* #957: @6 = zeros(14x1,0nz) */
  /* #958: @14 = (-@14) */
  for (i=0, rr=w14, cs=w14; i<14; ++i) *rr++ = (- *cs++ );
  /* #959: @58 = zeros(14x1,0nz) */
  /* #960: @59 = zeros(4x1,0nz) */
  /* #961: @63 = @61[3] */
  for (rr=(&w63), ss=w61+3; ss!=w61+4; ss+=1) *rr++ = *ss;
  /* #962: @66 = @64[3] */
  for (rr=(&w66), ss=w64+3; ss!=w64+4; ss+=1) *rr++ = *ss;
  /* #963: @69 = @67[3] */
  for (rr=(&w69), ss=w67+3; ss!=w67+4; ss+=1) *rr++ = *ss;
  /* #964: @72 = @70[3] */
  for (rr=(&w72), ss=w70+3; ss!=w70+4; ss+=1) *rr++ = *ss;
  /* #965: @75 = @74[3] */
  for (rr=(&w75), ss=w74+3; ss!=w74+4; ss+=1) *rr++ = *ss;
  /* #966: @77 = @76[3] */
  for (rr=(&w77), ss=w76+3; ss!=w76+4; ss+=1) *rr++ = *ss;
  /* #967: @79 = @78[3] */
  for (rr=(&w79), ss=w78+3; ss!=w78+4; ss+=1) *rr++ = *ss;
  /* #968: @81 = @80[3] */
  for (rr=(&w81), ss=w80+3; ss!=w80+4; ss+=1) *rr++ = *ss;
  /* #969: @83 = @82[3] */
  for (rr=(&w83), ss=w82+3; ss!=w82+4; ss+=1) *rr++ = *ss;
  /* #970: @85 = @84[3] */
  for (rr=(&w85), ss=w84+3; ss!=w84+4; ss+=1) *rr++ = *ss;
  /* #971: @87 = @86[3] */
  for (rr=(&w87), ss=w86+3; ss!=w86+4; ss+=1) *rr++ = *ss;
  /* #972: @89 = @88[3] */
  for (rr=(&w89), ss=w88+3; ss!=w88+4; ss+=1) *rr++ = *ss;
  /* #973: @91 = @90[3] */
  for (rr=(&w91), ss=w90+3; ss!=w90+4; ss+=1) *rr++ = *ss;
  /* #974: @93 = @92[3] */
  for (rr=(&w93), ss=w92+3; ss!=w92+4; ss+=1) *rr++ = *ss;
  /* #975: @382 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w382;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #976: @95 = dense(@382) */
  casadi_densify(w382, casadi_s66, w95, 0);
  /* #977: @63 = @62[3] */
  for (rr=(&w63), ss=w62+3; ss!=w62+4; ss+=1) *rr++ = *ss;
  /* #978: @66 = @65[3] */
  for (rr=(&w66), ss=w65+3; ss!=w65+4; ss+=1) *rr++ = *ss;
  /* #979: @69 = @68[3] */
  for (rr=(&w69), ss=w68+3; ss!=w68+4; ss+=1) *rr++ = *ss;
  /* #980: @72 = @71[3] */
  for (rr=(&w72), ss=w71+3; ss!=w71+4; ss+=1) *rr++ = *ss;
  /* #981: @96 = zeros(4x1,0nz) */
  /* #982: @97 = zeros(4x1,0nz) */
  /* #983: @98 = zeros(4x1,0nz) */
  /* #984: @99 = zeros(4x1,0nz) */
  /* #985: @100 = zeros(4x1,0nz) */
  /* #986: @101 = zeros(4x1,0nz) */
  /* #987: @102 = zeros(4x1,0nz) */
  /* #988: @103 = zeros(4x1,0nz) */
  /* #989: @104 = zeros(4x1,0nz) */
  /* #990: @105 = zeros(4x1,0nz) */
  /* #991: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #992: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #993: @96 = zeros(14x14,0nz) */
  /* #994: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #995: {@109, @383} = fwd14_adj1_f_disc(@3, @5, @6, @14, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w14;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w383;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #996: {@3, @14, @382, @384, @385, @386, @387, @388, @389, @390, @391, @392, @393, @394} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w14);
  casadi_copy(w109+28, 14, w382);
  casadi_copy(w109+42, 14, w384);
  casadi_copy(w109+56, 14, w385);
  casadi_copy(w109+70, 14, w386);
  casadi_copy(w109+84, 14, w387);
  casadi_copy(w109+98, 14, w388);
  casadi_copy(w109+112, 14, w389);
  casadi_copy(w109+126, 14, w390);
  casadi_copy(w109+140, 14, w391);
  casadi_copy(w109+154, 14, w392);
  casadi_copy(w109+168, 14, w393);
  casadi_copy(w109+182, 14, w394);
  /* #997: (@1[42:56] += @3) */
  for (rr=w1+42, ss=w3; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #998: @3 = @2[28:42] */
  for (rr=w3, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #999: @5 = @4[8:12] */
  for (rr=w5, ss=w4+8; ss!=w4+12; ss+=1) *rr++ = *ss;
  /* #1000: @6 = zeros(14x1,0nz) */
  /* #1001: @12 = (-@12) */
  for (i=0, rr=w12, cs=w12; i<14; ++i) *rr++ = (- *cs++ );
  /* #1002: @58 = zeros(14x1,0nz) */
  /* #1003: @59 = zeros(4x1,0nz) */
  /* #1004: @63 = @61[2] */
  for (rr=(&w63), ss=w61+2; ss!=w61+3; ss+=1) *rr++ = *ss;
  /* #1005: @66 = @64[2] */
  for (rr=(&w66), ss=w64+2; ss!=w64+3; ss+=1) *rr++ = *ss;
  /* #1006: @69 = @67[2] */
  for (rr=(&w69), ss=w67+2; ss!=w67+3; ss+=1) *rr++ = *ss;
  /* #1007: @72 = @70[2] */
  for (rr=(&w72), ss=w70+2; ss!=w70+3; ss+=1) *rr++ = *ss;
  /* #1008: @75 = @74[2] */
  for (rr=(&w75), ss=w74+2; ss!=w74+3; ss+=1) *rr++ = *ss;
  /* #1009: @77 = @76[2] */
  for (rr=(&w77), ss=w76+2; ss!=w76+3; ss+=1) *rr++ = *ss;
  /* #1010: @79 = @78[2] */
  for (rr=(&w79), ss=w78+2; ss!=w78+3; ss+=1) *rr++ = *ss;
  /* #1011: @81 = @80[2] */
  for (rr=(&w81), ss=w80+2; ss!=w80+3; ss+=1) *rr++ = *ss;
  /* #1012: @83 = @82[2] */
  for (rr=(&w83), ss=w82+2; ss!=w82+3; ss+=1) *rr++ = *ss;
  /* #1013: @85 = @84[2] */
  for (rr=(&w85), ss=w84+2; ss!=w84+3; ss+=1) *rr++ = *ss;
  /* #1014: @87 = @86[2] */
  for (rr=(&w87), ss=w86+2; ss!=w86+3; ss+=1) *rr++ = *ss;
  /* #1015: @89 = @88[2] */
  for (rr=(&w89), ss=w88+2; ss!=w88+3; ss+=1) *rr++ = *ss;
  /* #1016: @91 = @90[2] */
  for (rr=(&w91), ss=w90+2; ss!=w90+3; ss+=1) *rr++ = *ss;
  /* #1017: @93 = @92[2] */
  for (rr=(&w93), ss=w92+2; ss!=w92+3; ss+=1) *rr++ = *ss;
  /* #1018: @395 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w395;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #1019: @109 = dense(@395) */
  casadi_densify(w395, casadi_s66, w109, 0);
  /* #1020: @63 = @62[2] */
  for (rr=(&w63), ss=w62+2; ss!=w62+3; ss+=1) *rr++ = *ss;
  /* #1021: @66 = @65[2] */
  for (rr=(&w66), ss=w65+2; ss!=w65+3; ss+=1) *rr++ = *ss;
  /* #1022: @69 = @68[2] */
  for (rr=(&w69), ss=w68+2; ss!=w68+3; ss+=1) *rr++ = *ss;
  /* #1023: @72 = @71[2] */
  for (rr=(&w72), ss=w71+2; ss!=w71+3; ss+=1) *rr++ = *ss;
  /* #1024: @96 = zeros(4x1,0nz) */
  /* #1025: @97 = zeros(4x1,0nz) */
  /* #1026: @98 = zeros(4x1,0nz) */
  /* #1027: @99 = zeros(4x1,0nz) */
  /* #1028: @100 = zeros(4x1,0nz) */
  /* #1029: @101 = zeros(4x1,0nz) */
  /* #1030: @102 = zeros(4x1,0nz) */
  /* #1031: @103 = zeros(4x1,0nz) */
  /* #1032: @104 = zeros(4x1,0nz) */
  /* #1033: @105 = zeros(4x1,0nz) */
  /* #1034: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #1035: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #1036: @96 = zeros(14x14,0nz) */
  /* #1037: @95 = zeros(14x14) */
  casadi_clear(w95, 196);
  /* #1038: {@108, @396} = fwd14_adj1_f_disc(@3, @5, @6, @12, @58, @59, @109, @107, @96, @95) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w12;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w109;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w95;
  res1[0]=w108;
  res1[1]=w396;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #1039: {@3, @12, @395, @397, @398, @399, @400, @401, @402, @403, @404, @405, @406, @407} = horzsplit(@108) */
  casadi_copy(w108, 14, w3);
  casadi_copy(w108+14, 14, w12);
  casadi_copy(w108+28, 14, w395);
  casadi_copy(w108+42, 14, w397);
  casadi_copy(w108+56, 14, w398);
  casadi_copy(w108+70, 14, w399);
  casadi_copy(w108+84, 14, w400);
  casadi_copy(w108+98, 14, w401);
  casadi_copy(w108+112, 14, w402);
  casadi_copy(w108+126, 14, w403);
  casadi_copy(w108+140, 14, w404);
  casadi_copy(w108+154, 14, w405);
  casadi_copy(w108+168, 14, w406);
  casadi_copy(w108+182, 14, w407);
  /* #1040: (@1[28:42] += @3) */
  for (rr=w1+28, ss=w3; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #1041: @3 = @2[14:28] */
  for (rr=w3, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #1042: @5 = @4[4:8] */
  for (rr=w5, ss=w4+4; ss!=w4+8; ss+=1) *rr++ = *ss;
  /* #1043: @6 = zeros(14x1,0nz) */
  /* #1044: @10 = (-@10) */
  for (i=0, rr=w10, cs=w10; i<14; ++i) *rr++ = (- *cs++ );
  /* #1045: @58 = zeros(14x1,0nz) */
  /* #1046: @59 = zeros(4x1,0nz) */
  /* #1047: @63 = @61[1] */
  for (rr=(&w63), ss=w61+1; ss!=w61+2; ss+=1) *rr++ = *ss;
  /* #1048: @66 = @64[1] */
  for (rr=(&w66), ss=w64+1; ss!=w64+2; ss+=1) *rr++ = *ss;
  /* #1049: @69 = @67[1] */
  for (rr=(&w69), ss=w67+1; ss!=w67+2; ss+=1) *rr++ = *ss;
  /* #1050: @72 = @70[1] */
  for (rr=(&w72), ss=w70+1; ss!=w70+2; ss+=1) *rr++ = *ss;
  /* #1051: @75 = @74[1] */
  for (rr=(&w75), ss=w74+1; ss!=w74+2; ss+=1) *rr++ = *ss;
  /* #1052: @77 = @76[1] */
  for (rr=(&w77), ss=w76+1; ss!=w76+2; ss+=1) *rr++ = *ss;
  /* #1053: @79 = @78[1] */
  for (rr=(&w79), ss=w78+1; ss!=w78+2; ss+=1) *rr++ = *ss;
  /* #1054: @81 = @80[1] */
  for (rr=(&w81), ss=w80+1; ss!=w80+2; ss+=1) *rr++ = *ss;
  /* #1055: @83 = @82[1] */
  for (rr=(&w83), ss=w82+1; ss!=w82+2; ss+=1) *rr++ = *ss;
  /* #1056: @85 = @84[1] */
  for (rr=(&w85), ss=w84+1; ss!=w84+2; ss+=1) *rr++ = *ss;
  /* #1057: @87 = @86[1] */
  for (rr=(&w87), ss=w86+1; ss!=w86+2; ss+=1) *rr++ = *ss;
  /* #1058: @89 = @88[1] */
  for (rr=(&w89), ss=w88+1; ss!=w88+2; ss+=1) *rr++ = *ss;
  /* #1059: @91 = @90[1] */
  for (rr=(&w91), ss=w90+1; ss!=w90+2; ss+=1) *rr++ = *ss;
  /* #1060: @93 = @92[1] */
  for (rr=(&w93), ss=w92+1; ss!=w92+2; ss+=1) *rr++ = *ss;
  /* #1061: @408 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w408;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #1062: @108 = dense(@408) */
  casadi_densify(w408, casadi_s66, w108, 0);
  /* #1063: @63 = @62[1] */
  for (rr=(&w63), ss=w62+1; ss!=w62+2; ss+=1) *rr++ = *ss;
  /* #1064: @66 = @65[1] */
  for (rr=(&w66), ss=w65+1; ss!=w65+2; ss+=1) *rr++ = *ss;
  /* #1065: @69 = @68[1] */
  for (rr=(&w69), ss=w68+1; ss!=w68+2; ss+=1) *rr++ = *ss;
  /* #1066: @72 = @71[1] */
  for (rr=(&w72), ss=w71+1; ss!=w71+2; ss+=1) *rr++ = *ss;
  /* #1067: @96 = zeros(4x1,0nz) */
  /* #1068: @97 = zeros(4x1,0nz) */
  /* #1069: @98 = zeros(4x1,0nz) */
  /* #1070: @99 = zeros(4x1,0nz) */
  /* #1071: @100 = zeros(4x1,0nz) */
  /* #1072: @101 = zeros(4x1,0nz) */
  /* #1073: @102 = zeros(4x1,0nz) */
  /* #1074: @103 = zeros(4x1,0nz) */
  /* #1075: @104 = zeros(4x1,0nz) */
  /* #1076: @105 = zeros(4x1,0nz) */
  /* #1077: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #1078: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #1079: @96 = zeros(14x14,0nz) */
  /* #1080: @109 = zeros(14x14) */
  casadi_clear(w109, 196);
  /* #1081: {@95, @409} = fwd14_adj1_f_disc(@3, @5, @6, @10, @58, @59, @108, @107, @96, @109) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w10;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w108;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w109;
  res1[0]=w95;
  res1[1]=w409;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #1082: {@3, @10, @408, @410, @411, @412, @413, @414, @415, @416, @417, @418, @419, @420} = horzsplit(@95) */
  casadi_copy(w95, 14, w3);
  casadi_copy(w95+14, 14, w10);
  casadi_copy(w95+28, 14, w408);
  casadi_copy(w95+42, 14, w410);
  casadi_copy(w95+56, 14, w411);
  casadi_copy(w95+70, 14, w412);
  casadi_copy(w95+84, 14, w413);
  casadi_copy(w95+98, 14, w414);
  casadi_copy(w95+112, 14, w415);
  casadi_copy(w95+126, 14, w416);
  casadi_copy(w95+140, 14, w417);
  casadi_copy(w95+154, 14, w418);
  casadi_copy(w95+168, 14, w419);
  casadi_copy(w95+182, 14, w420);
  /* #1083: (@1[14:28] += @3) */
  for (rr=w1+14, ss=w3; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #1084: @3 = @2[:14] */
  for (rr=w3, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #1085: @5 = @4[:4] */
  for (rr=w5, ss=w4+0; ss!=w4+4; ss+=1) *rr++ = *ss;
  /* #1086: @6 = zeros(14x1,0nz) */
  /* #1087: @8 = (-@8) */
  for (i=0, rr=w8, cs=w8; i<14; ++i) *rr++ = (- *cs++ );
  /* #1088: @58 = zeros(14x1,0nz) */
  /* #1089: @59 = zeros(4x1,0nz) */
  /* #1090: @63 = @61[0] */
  for (rr=(&w63), ss=w61+0; ss!=w61+1; ss+=1) *rr++ = *ss;
  /* #1091: @66 = @64[0] */
  for (rr=(&w66), ss=w64+0; ss!=w64+1; ss+=1) *rr++ = *ss;
  /* #1092: @69 = @67[0] */
  for (rr=(&w69), ss=w67+0; ss!=w67+1; ss+=1) *rr++ = *ss;
  /* #1093: @72 = @70[0] */
  for (rr=(&w72), ss=w70+0; ss!=w70+1; ss+=1) *rr++ = *ss;
  /* #1094: @75 = @74[0] */
  for (rr=(&w75), ss=w74+0; ss!=w74+1; ss+=1) *rr++ = *ss;
  /* #1095: @77 = @76[0] */
  for (rr=(&w77), ss=w76+0; ss!=w76+1; ss+=1) *rr++ = *ss;
  /* #1096: @79 = @78[0] */
  for (rr=(&w79), ss=w78+0; ss!=w78+1; ss+=1) *rr++ = *ss;
  /* #1097: @81 = @80[0] */
  for (rr=(&w81), ss=w80+0; ss!=w80+1; ss+=1) *rr++ = *ss;
  /* #1098: @83 = @82[0] */
  for (rr=(&w83), ss=w82+0; ss!=w82+1; ss+=1) *rr++ = *ss;
  /* #1099: @85 = @84[0] */
  for (rr=(&w85), ss=w84+0; ss!=w84+1; ss+=1) *rr++ = *ss;
  /* #1100: @87 = @86[0] */
  for (rr=(&w87), ss=w86+0; ss!=w86+1; ss+=1) *rr++ = *ss;
  /* #1101: @89 = @88[0] */
  for (rr=(&w89), ss=w88+0; ss!=w88+1; ss+=1) *rr++ = *ss;
  /* #1102: @91 = @90[0] */
  for (rr=(&w91), ss=w90+0; ss!=w90+1; ss+=1) *rr++ = *ss;
  /* #1103: @93 = @92[0] */
  for (rr=(&w93), ss=w92+0; ss!=w92+1; ss+=1) *rr++ = *ss;
  /* #1104: @421 = horzcat(@63, @66, @69, @72, @75, @77, @79, @81, @83, @85, @87, @89, @91, @93) */
  rr=w421;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  *rr++ = w75;
  *rr++ = w77;
  *rr++ = w79;
  *rr++ = w81;
  *rr++ = w83;
  *rr++ = w85;
  *rr++ = w87;
  *rr++ = w89;
  *rr++ = w91;
  *rr++ = w93;
  /* #1105: @95 = dense(@421) */
  casadi_densify(w421, casadi_s66, w95, 0);
  /* #1106: @63 = @62[0] */
  for (rr=(&w63), ss=w62+0; ss!=w62+1; ss+=1) *rr++ = *ss;
  /* #1107: @66 = @65[0] */
  for (rr=(&w66), ss=w65+0; ss!=w65+1; ss+=1) *rr++ = *ss;
  /* #1108: @69 = @68[0] */
  for (rr=(&w69), ss=w68+0; ss!=w68+1; ss+=1) *rr++ = *ss;
  /* #1109: @72 = @71[0] */
  for (rr=(&w72), ss=w71+0; ss!=w71+1; ss+=1) *rr++ = *ss;
  /* #1110: @96 = zeros(4x1,0nz) */
  /* #1111: @97 = zeros(4x1,0nz) */
  /* #1112: @98 = zeros(4x1,0nz) */
  /* #1113: @99 = zeros(4x1,0nz) */
  /* #1114: @100 = zeros(4x1,0nz) */
  /* #1115: @101 = zeros(4x1,0nz) */
  /* #1116: @102 = zeros(4x1,0nz) */
  /* #1117: @103 = zeros(4x1,0nz) */
  /* #1118: @104 = zeros(4x1,0nz) */
  /* #1119: @105 = zeros(4x1,0nz) */
  /* #1120: @106 = horzcat(@63, @66, @69, @72, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105) */
  rr=w106;
  *rr++ = w63;
  *rr++ = w66;
  *rr++ = w69;
  *rr++ = w72;
  /* #1121: @107 = dense(@106) */
  casadi_densify(w106, casadi_s67, w107, 0);
  /* #1122: @96 = zeros(14x14,0nz) */
  /* #1123: @108 = zeros(14x14) */
  casadi_clear(w108, 196);
  /* #1124: {@109, @422} = fwd14_adj1_f_disc(@3, @5, @6, @8, @58, @59, @95, @107, @96, @108) */
  arg1[0]=w3;
  arg1[1]=w5;
  arg1[2]=0;
  arg1[3]=w8;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=w95;
  arg1[7]=w107;
  arg1[8]=0;
  arg1[9]=w108;
  res1[0]=w109;
  res1[1]=w422;
  if (casadi_f17(arg1, res1, iw, w, 0)) return 1;
  /* #1125: {@3, @8, @421, @423, @424, @425, @426, @427, @428, @429, @430, @431, @432, @433} = horzsplit(@109) */
  casadi_copy(w109, 14, w3);
  casadi_copy(w109+14, 14, w8);
  casadi_copy(w109+28, 14, w421);
  casadi_copy(w109+42, 14, w423);
  casadi_copy(w109+56, 14, w424);
  casadi_copy(w109+70, 14, w425);
  casadi_copy(w109+84, 14, w426);
  casadi_copy(w109+98, 14, w427);
  casadi_copy(w109+112, 14, w428);
  casadi_copy(w109+126, 14, w429);
  casadi_copy(w109+140, 14, w430);
  casadi_copy(w109+154, 14, w431);
  casadi_copy(w109+168, 14, w432);
  casadi_copy(w109+182, 14, w433);
  /* #1126: (@1[:14] += @3) */
  for (rr=w1+0, ss=w3; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #1127: @63 = input[2][0] */
  w63 = arg[2] ? arg[2][0] : 0;
  /* #1128: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1129: @66 = @61[25] */
  for (rr=(&w66), ss=w61+25; ss!=w61+26; ss+=1) *rr++ = *ss;
  /* #1130: @66 = @66' */
  /* #1131: @435 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w435);
  /* #1132: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s70, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #1133: @434 = @434' */
  /* #1134: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1135: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1136: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #1137: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #1138: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1139: @66 = @61[25] */
  for (rr=(&w66), ss=w61+25; ss!=w61+26; ss+=1) *rr++ = *ss;
  /* #1140: @66 = @66' */
  /* #1141: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1142: @437 = @435' */
  for (i=0, rr=w437, cs=w435; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1143: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s70, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #1144: @434 = @434' */
  /* #1145: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1146: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #1147: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #1148: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1149: @66 = @61[24] */
  for (rr=(&w66), ss=w61+24; ss!=w61+25; ss+=1) *rr++ = *ss;
  /* #1150: @66 = @66' */
  /* #1151: @438 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w438);
  /* #1152: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s70, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #1153: @434 = @434' */
  /* #1154: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1155: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1156: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #1157: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #1158: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1159: @66 = @61[24] */
  for (rr=(&w66), ss=w61+24; ss!=w61+25; ss+=1) *rr++ = *ss;
  /* #1160: @66 = @66' */
  /* #1161: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1162: @439 = @438' */
  for (i=0, rr=w439, cs=w438; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1163: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s70, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #1164: @434 = @434' */
  /* #1165: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1166: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #1167: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #1168: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1169: @66 = @61[23] */
  for (rr=(&w66), ss=w61+23; ss!=w61+24; ss+=1) *rr++ = *ss;
  /* #1170: @66 = @66' */
  /* #1171: @440 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w440);
  /* #1172: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s70, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #1173: @434 = @434' */
  /* #1174: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1175: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1176: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #1177: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #1178: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1179: @66 = @61[23] */
  for (rr=(&w66), ss=w61+23; ss!=w61+24; ss+=1) *rr++ = *ss;
  /* #1180: @66 = @66' */
  /* #1181: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1182: @441 = @440' */
  for (i=0, rr=w441, cs=w440; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1183: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s70, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #1184: @434 = @434' */
  /* #1185: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1186: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #1187: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #1188: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1189: @66 = @61[22] */
  for (rr=(&w66), ss=w61+22; ss!=w61+23; ss+=1) *rr++ = *ss;
  /* #1190: @66 = @66' */
  /* #1191: @442 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w442);
  /* #1192: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s70, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #1193: @434 = @434' */
  /* #1194: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1195: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1196: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #1197: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #1198: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1199: @66 = @61[22] */
  for (rr=(&w66), ss=w61+22; ss!=w61+23; ss+=1) *rr++ = *ss;
  /* #1200: @66 = @66' */
  /* #1201: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1202: @443 = @442' */
  for (i=0, rr=w443, cs=w442; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1203: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s70, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #1204: @434 = @434' */
  /* #1205: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1206: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #1207: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #1208: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1209: @66 = @61[21] */
  for (rr=(&w66), ss=w61+21; ss!=w61+22; ss+=1) *rr++ = *ss;
  /* #1210: @66 = @66' */
  /* #1211: @444 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w444);
  /* #1212: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s70, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #1213: @434 = @434' */
  /* #1214: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1215: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1216: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #1217: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #1218: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1219: @66 = @61[21] */
  for (rr=(&w66), ss=w61+21; ss!=w61+22; ss+=1) *rr++ = *ss;
  /* #1220: @66 = @66' */
  /* #1221: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1222: @445 = @444' */
  for (i=0, rr=w445, cs=w444; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1223: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s70, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #1224: @434 = @434' */
  /* #1225: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1226: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #1227: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #1228: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1229: @66 = @61[20] */
  for (rr=(&w66), ss=w61+20; ss!=w61+21; ss+=1) *rr++ = *ss;
  /* #1230: @66 = @66' */
  /* #1231: @446 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w446);
  /* #1232: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s70, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #1233: @434 = @434' */
  /* #1234: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1235: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1236: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #1237: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #1238: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1239: @66 = @61[20] */
  for (rr=(&w66), ss=w61+20; ss!=w61+21; ss+=1) *rr++ = *ss;
  /* #1240: @66 = @66' */
  /* #1241: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1242: @447 = @446' */
  for (i=0, rr=w447, cs=w446; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1243: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s70, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #1244: @434 = @434' */
  /* #1245: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1246: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #1247: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #1248: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1249: @66 = @61[19] */
  for (rr=(&w66), ss=w61+19; ss!=w61+20; ss+=1) *rr++ = *ss;
  /* #1250: @66 = @66' */
  /* #1251: @448 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w448);
  /* #1252: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s70, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #1253: @434 = @434' */
  /* #1254: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1255: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1256: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #1257: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #1258: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1259: @66 = @61[19] */
  for (rr=(&w66), ss=w61+19; ss!=w61+20; ss+=1) *rr++ = *ss;
  /* #1260: @66 = @66' */
  /* #1261: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1262: @449 = @448' */
  for (i=0, rr=w449, cs=w448; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1263: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s70, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #1264: @434 = @434' */
  /* #1265: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1266: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #1267: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #1268: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1269: @66 = @61[18] */
  for (rr=(&w66), ss=w61+18; ss!=w61+19; ss+=1) *rr++ = *ss;
  /* #1270: @66 = @66' */
  /* #1271: @450 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w450);
  /* #1272: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s70, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #1273: @434 = @434' */
  /* #1274: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1275: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1276: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #1277: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #1278: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1279: @66 = @61[18] */
  for (rr=(&w66), ss=w61+18; ss!=w61+19; ss+=1) *rr++ = *ss;
  /* #1280: @66 = @66' */
  /* #1281: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1282: @451 = @450' */
  for (i=0, rr=w451, cs=w450; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1283: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s70, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #1284: @434 = @434' */
  /* #1285: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1286: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #1287: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #1288: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1289: @66 = @61[17] */
  for (rr=(&w66), ss=w61+17; ss!=w61+18; ss+=1) *rr++ = *ss;
  /* #1290: @66 = @66' */
  /* #1291: @452 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w452);
  /* #1292: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s70, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #1293: @434 = @434' */
  /* #1294: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1295: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1296: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #1297: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #1298: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1299: @66 = @61[17] */
  for (rr=(&w66), ss=w61+17; ss!=w61+18; ss+=1) *rr++ = *ss;
  /* #1300: @66 = @66' */
  /* #1301: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1302: @453 = @452' */
  for (i=0, rr=w453, cs=w452; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1303: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s70, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #1304: @434 = @434' */
  /* #1305: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1306: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #1307: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #1308: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1309: @66 = @61[16] */
  for (rr=(&w66), ss=w61+16; ss!=w61+17; ss+=1) *rr++ = *ss;
  /* #1310: @66 = @66' */
  /* #1311: @454 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w454);
  /* #1312: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s70, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #1313: @434 = @434' */
  /* #1314: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1315: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1316: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #1317: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #1318: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1319: @66 = @61[16] */
  for (rr=(&w66), ss=w61+16; ss!=w61+17; ss+=1) *rr++ = *ss;
  /* #1320: @66 = @66' */
  /* #1321: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1322: @455 = @454' */
  for (i=0, rr=w455, cs=w454; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1323: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s70, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #1324: @434 = @434' */
  /* #1325: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1326: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #1327: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #1328: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1329: @66 = @61[15] */
  for (rr=(&w66), ss=w61+15; ss!=w61+16; ss+=1) *rr++ = *ss;
  /* #1330: @66 = @66' */
  /* #1331: @456 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w456);
  /* #1332: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s70, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #1333: @434 = @434' */
  /* #1334: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1335: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1336: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #1337: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #1338: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1339: @66 = @61[15] */
  for (rr=(&w66), ss=w61+15; ss!=w61+16; ss+=1) *rr++ = *ss;
  /* #1340: @66 = @66' */
  /* #1341: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1342: @457 = @456' */
  for (i=0, rr=w457, cs=w456; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1343: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s70, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #1344: @434 = @434' */
  /* #1345: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1346: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #1347: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #1348: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1349: @66 = @61[14] */
  for (rr=(&w66), ss=w61+14; ss!=w61+15; ss+=1) *rr++ = *ss;
  /* #1350: @66 = @66' */
  /* #1351: @458 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w458);
  /* #1352: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s70, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #1353: @434 = @434' */
  /* #1354: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1355: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1356: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #1357: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #1358: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1359: @66 = @61[14] */
  for (rr=(&w66), ss=w61+14; ss!=w61+15; ss+=1) *rr++ = *ss;
  /* #1360: @66 = @66' */
  /* #1361: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1362: @459 = @458' */
  for (i=0, rr=w459, cs=w458; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1363: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s70, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #1364: @434 = @434' */
  /* #1365: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1366: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #1367: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #1368: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1369: @66 = @61[13] */
  for (rr=(&w66), ss=w61+13; ss!=w61+14; ss+=1) *rr++ = *ss;
  /* #1370: @66 = @66' */
  /* #1371: @460 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w460);
  /* #1372: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s70, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #1373: @434 = @434' */
  /* #1374: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1375: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1376: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #1377: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #1378: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1379: @66 = @61[13] */
  for (rr=(&w66), ss=w61+13; ss!=w61+14; ss+=1) *rr++ = *ss;
  /* #1380: @66 = @66' */
  /* #1381: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1382: @461 = @460' */
  for (i=0, rr=w461, cs=w460; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1383: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s70, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #1384: @434 = @434' */
  /* #1385: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1386: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #1387: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #1388: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1389: @66 = @61[12] */
  for (rr=(&w66), ss=w61+12; ss!=w61+13; ss+=1) *rr++ = *ss;
  /* #1390: @66 = @66' */
  /* #1391: @462 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w462);
  /* #1392: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s70, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #1393: @434 = @434' */
  /* #1394: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1395: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1396: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #1397: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #1398: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1399: @66 = @61[12] */
  for (rr=(&w66), ss=w61+12; ss!=w61+13; ss+=1) *rr++ = *ss;
  /* #1400: @66 = @66' */
  /* #1401: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1402: @463 = @462' */
  for (i=0, rr=w463, cs=w462; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1403: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s70, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #1404: @434 = @434' */
  /* #1405: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1406: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #1407: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #1408: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1409: @66 = @61[11] */
  for (rr=(&w66), ss=w61+11; ss!=w61+12; ss+=1) *rr++ = *ss;
  /* #1410: @66 = @66' */
  /* #1411: @464 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w464);
  /* #1412: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s70, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #1413: @434 = @434' */
  /* #1414: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1415: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1416: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #1417: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #1418: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1419: @66 = @61[11] */
  for (rr=(&w66), ss=w61+11; ss!=w61+12; ss+=1) *rr++ = *ss;
  /* #1420: @66 = @66' */
  /* #1421: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1422: @465 = @464' */
  for (i=0, rr=w465, cs=w464; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1423: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s70, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #1424: @434 = @434' */
  /* #1425: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1426: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #1427: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #1428: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1429: @66 = @61[10] */
  for (rr=(&w66), ss=w61+10; ss!=w61+11; ss+=1) *rr++ = *ss;
  /* #1430: @66 = @66' */
  /* #1431: @466 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w466);
  /* #1432: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s70, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #1433: @434 = @434' */
  /* #1434: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1435: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1436: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #1437: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #1438: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1439: @66 = @61[10] */
  for (rr=(&w66), ss=w61+10; ss!=w61+11; ss+=1) *rr++ = *ss;
  /* #1440: @66 = @66' */
  /* #1441: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1442: @467 = @466' */
  for (i=0, rr=w467, cs=w466; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1443: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s70, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #1444: @434 = @434' */
  /* #1445: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1446: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #1447: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #1448: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1449: @66 = @61[9] */
  for (rr=(&w66), ss=w61+9; ss!=w61+10; ss+=1) *rr++ = *ss;
  /* #1450: @66 = @66' */
  /* #1451: @468 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w468);
  /* #1452: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s70, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #1453: @434 = @434' */
  /* #1454: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1455: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1456: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #1457: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #1458: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1459: @66 = @61[9] */
  for (rr=(&w66), ss=w61+9; ss!=w61+10; ss+=1) *rr++ = *ss;
  /* #1460: @66 = @66' */
  /* #1461: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1462: @469 = @468' */
  for (i=0, rr=w469, cs=w468; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1463: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s70, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #1464: @434 = @434' */
  /* #1465: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1466: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #1467: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #1468: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1469: @66 = @61[8] */
  for (rr=(&w66), ss=w61+8; ss!=w61+9; ss+=1) *rr++ = *ss;
  /* #1470: @66 = @66' */
  /* #1471: @470 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w470);
  /* #1472: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s70, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #1473: @434 = @434' */
  /* #1474: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1475: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1476: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #1477: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #1478: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1479: @66 = @61[8] */
  for (rr=(&w66), ss=w61+8; ss!=w61+9; ss+=1) *rr++ = *ss;
  /* #1480: @66 = @66' */
  /* #1481: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1482: @471 = @470' */
  for (i=0, rr=w471, cs=w470; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1483: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s70, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #1484: @434 = @434' */
  /* #1485: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1486: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #1487: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #1488: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1489: @66 = @61[7] */
  for (rr=(&w66), ss=w61+7; ss!=w61+8; ss+=1) *rr++ = *ss;
  /* #1490: @66 = @66' */
  /* #1491: @472 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w472);
  /* #1492: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s70, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #1493: @434 = @434' */
  /* #1494: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1495: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1496: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #1497: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #1498: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1499: @66 = @61[7] */
  for (rr=(&w66), ss=w61+7; ss!=w61+8; ss+=1) *rr++ = *ss;
  /* #1500: @66 = @66' */
  /* #1501: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1502: @473 = @472' */
  for (i=0, rr=w473, cs=w472; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1503: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s70, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #1504: @434 = @434' */
  /* #1505: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1506: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #1507: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #1508: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1509: @66 = @61[6] */
  for (rr=(&w66), ss=w61+6; ss!=w61+7; ss+=1) *rr++ = *ss;
  /* #1510: @66 = @66' */
  /* #1511: @474 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w474);
  /* #1512: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s70, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #1513: @434 = @434' */
  /* #1514: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1515: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1516: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #1517: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #1518: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1519: @66 = @61[6] */
  for (rr=(&w66), ss=w61+6; ss!=w61+7; ss+=1) *rr++ = *ss;
  /* #1520: @66 = @66' */
  /* #1521: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1522: @475 = @474' */
  for (i=0, rr=w475, cs=w474; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1523: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s70, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #1524: @434 = @434' */
  /* #1525: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1526: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #1527: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #1528: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1529: @66 = @61[5] */
  for (rr=(&w66), ss=w61+5; ss!=w61+6; ss+=1) *rr++ = *ss;
  /* #1530: @66 = @66' */
  /* #1531: @476 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w476);
  /* #1532: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s70, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #1533: @434 = @434' */
  /* #1534: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1535: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1536: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #1537: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #1538: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1539: @66 = @61[5] */
  for (rr=(&w66), ss=w61+5; ss!=w61+6; ss+=1) *rr++ = *ss;
  /* #1540: @66 = @66' */
  /* #1541: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1542: @477 = @476' */
  for (i=0, rr=w477, cs=w476; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1543: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s70, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #1544: @434 = @434' */
  /* #1545: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1546: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #1547: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #1548: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1549: @66 = @61[4] */
  for (rr=(&w66), ss=w61+4; ss!=w61+5; ss+=1) *rr++ = *ss;
  /* #1550: @66 = @66' */
  /* #1551: @478 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w478);
  /* #1552: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s70, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #1553: @434 = @434' */
  /* #1554: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1555: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1556: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #1557: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #1558: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1559: @66 = @61[4] */
  for (rr=(&w66), ss=w61+4; ss!=w61+5; ss+=1) *rr++ = *ss;
  /* #1560: @66 = @66' */
  /* #1561: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1562: @479 = @478' */
  for (i=0, rr=w479, cs=w478; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1563: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s70, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #1564: @434 = @434' */
  /* #1565: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1566: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #1567: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #1568: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1569: @66 = @61[3] */
  for (rr=(&w66), ss=w61+3; ss!=w61+4; ss+=1) *rr++ = *ss;
  /* #1570: @66 = @66' */
  /* #1571: @480 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w480);
  /* #1572: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s70, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #1573: @434 = @434' */
  /* #1574: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1575: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1576: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #1577: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #1578: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1579: @66 = @61[3] */
  for (rr=(&w66), ss=w61+3; ss!=w61+4; ss+=1) *rr++ = *ss;
  /* #1580: @66 = @66' */
  /* #1581: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1582: @481 = @480' */
  for (i=0, rr=w481, cs=w480; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1583: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s70, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #1584: @434 = @434' */
  /* #1585: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1586: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #1587: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #1588: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1589: @66 = @61[2] */
  for (rr=(&w66), ss=w61+2; ss!=w61+3; ss+=1) *rr++ = *ss;
  /* #1590: @66 = @66' */
  /* #1591: @482 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w482);
  /* #1592: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s70, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #1593: @434 = @434' */
  /* #1594: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1595: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1596: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #1597: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #1598: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1599: @66 = @61[2] */
  for (rr=(&w66), ss=w61+2; ss!=w61+3; ss+=1) *rr++ = *ss;
  /* #1600: @66 = @66' */
  /* #1601: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1602: @483 = @482' */
  for (i=0, rr=w483, cs=w482; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1603: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s70, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #1604: @434 = @434' */
  /* #1605: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1606: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #1607: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #1608: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1609: @66 = @61[1] */
  for (rr=(&w66), ss=w61+1; ss!=w61+2; ss+=1) *rr++ = *ss;
  /* #1610: @66 = @66' */
  /* #1611: @484 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w484);
  /* #1612: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s70, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #1613: @434 = @434' */
  /* #1614: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1615: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1616: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #1617: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #1618: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1619: @66 = @61[1] */
  for (rr=(&w66), ss=w61+1; ss!=w61+2; ss+=1) *rr++ = *ss;
  /* #1620: @66 = @66' */
  /* #1621: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1622: @485 = @484' */
  for (i=0, rr=w485, cs=w484; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1623: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s70, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #1624: @434 = @434' */
  /* #1625: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1626: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #1627: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #1628: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1629: @66 = @61[0] */
  for (rr=(&w66), ss=w61+0; ss!=w61+1; ss+=1) *rr++ = *ss;
  /* #1630: @66 = @66' */
  /* #1631: @486 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w486);
  /* #1632: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s70, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #1633: @434 = @434' */
  /* #1634: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #1635: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1636: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #1637: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #1638: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #1639: @66 = @61[0] */
  for (rr=(&w66), ss=w61+0; ss!=w61+1; ss+=1) *rr++ = *ss;
  /* #1640: @66 = @66' */
  /* #1641: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1642: @487 = @486' */
  for (i=0, rr=w487, cs=w486; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1643: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s70, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #1644: @434 = @434' */
  /* #1645: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #1646: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #1647: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #1648: @1 = vec(@1) */
  /* #1649: @4 = zeros(4x25) */
  casadi_clear(w4, 100);
  /* #1650: {@5, @106, @488, @489, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@110) */
  casadi_copy(w110, 4, w5);
  casadi_copy(w110+4, 4, w106);
  casadi_copy(w110+8, 4, w488);
  casadi_copy(w110+12, 4, w489);
  /* #1651: (@4[96:100] += @5) */
  for (rr=w4+96, ss=w5; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #1652: {@5, @490, @491, @492, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@123) */
  casadi_copy(w123, 4, w5);
  casadi_copy(w123+4, 4, w490);
  casadi_copy(w123+8, 4, w491);
  casadi_copy(w123+12, 4, w492);
  /* #1653: (@4[92:96] += @5) */
  for (rr=w4+92, ss=w5; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #1654: {@5, @493, @494, @495, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@136) */
  casadi_copy(w136, 4, w5);
  casadi_copy(w136+4, 4, w493);
  casadi_copy(w136+8, 4, w494);
  casadi_copy(w136+12, 4, w495);
  /* #1655: (@4[88:92] += @5) */
  for (rr=w4+88, ss=w5; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #1656: {@5, @496, @497, @498, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@149) */
  casadi_copy(w149, 4, w5);
  casadi_copy(w149+4, 4, w496);
  casadi_copy(w149+8, 4, w497);
  casadi_copy(w149+12, 4, w498);
  /* #1657: (@4[84:88] += @5) */
  for (rr=w4+84, ss=w5; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #1658: {@5, @499, @500, @501, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@162) */
  casadi_copy(w162, 4, w5);
  casadi_copy(w162+4, 4, w499);
  casadi_copy(w162+8, 4, w500);
  casadi_copy(w162+12, 4, w501);
  /* #1659: (@4[80:84] += @5) */
  for (rr=w4+80, ss=w5; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #1660: {@5, @502, @503, @504, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@175) */
  casadi_copy(w175, 4, w5);
  casadi_copy(w175+4, 4, w502);
  casadi_copy(w175+8, 4, w503);
  casadi_copy(w175+12, 4, w504);
  /* #1661: (@4[76:80] += @5) */
  for (rr=w4+76, ss=w5; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #1662: {@5, @505, @506, @507, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@188) */
  casadi_copy(w188, 4, w5);
  casadi_copy(w188+4, 4, w505);
  casadi_copy(w188+8, 4, w506);
  casadi_copy(w188+12, 4, w507);
  /* #1663: (@4[72:76] += @5) */
  for (rr=w4+72, ss=w5; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #1664: {@5, @508, @509, @510, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@201) */
  casadi_copy(w201, 4, w5);
  casadi_copy(w201+4, 4, w508);
  casadi_copy(w201+8, 4, w509);
  casadi_copy(w201+12, 4, w510);
  /* #1665: (@4[68:72] += @5) */
  for (rr=w4+68, ss=w5; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #1666: {@5, @511, @512, @513, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@214) */
  casadi_copy(w214, 4, w5);
  casadi_copy(w214+4, 4, w511);
  casadi_copy(w214+8, 4, w512);
  casadi_copy(w214+12, 4, w513);
  /* #1667: (@4[64:68] += @5) */
  for (rr=w4+64, ss=w5; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #1668: {@5, @514, @515, @516, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@227) */
  casadi_copy(w227, 4, w5);
  casadi_copy(w227+4, 4, w514);
  casadi_copy(w227+8, 4, w515);
  casadi_copy(w227+12, 4, w516);
  /* #1669: (@4[60:64] += @5) */
  for (rr=w4+60, ss=w5; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #1670: {@5, @517, @518, @519, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@240) */
  casadi_copy(w240, 4, w5);
  casadi_copy(w240+4, 4, w517);
  casadi_copy(w240+8, 4, w518);
  casadi_copy(w240+12, 4, w519);
  /* #1671: (@4[56:60] += @5) */
  for (rr=w4+56, ss=w5; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #1672: {@5, @520, @521, @522, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@253) */
  casadi_copy(w253, 4, w5);
  casadi_copy(w253+4, 4, w520);
  casadi_copy(w253+8, 4, w521);
  casadi_copy(w253+12, 4, w522);
  /* #1673: (@4[52:56] += @5) */
  for (rr=w4+52, ss=w5; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #1674: {@5, @523, @524, @525, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@266) */
  casadi_copy(w266, 4, w5);
  casadi_copy(w266+4, 4, w523);
  casadi_copy(w266+8, 4, w524);
  casadi_copy(w266+12, 4, w525);
  /* #1675: (@4[48:52] += @5) */
  for (rr=w4+48, ss=w5; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #1676: {@5, @526, @527, @528, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@279) */
  casadi_copy(w279, 4, w5);
  casadi_copy(w279+4, 4, w526);
  casadi_copy(w279+8, 4, w527);
  casadi_copy(w279+12, 4, w528);
  /* #1677: (@4[44:48] += @5) */
  for (rr=w4+44, ss=w5; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #1678: {@5, @529, @530, @531, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@292) */
  casadi_copy(w292, 4, w5);
  casadi_copy(w292+4, 4, w529);
  casadi_copy(w292+8, 4, w530);
  casadi_copy(w292+12, 4, w531);
  /* #1679: (@4[40:44] += @5) */
  for (rr=w4+40, ss=w5; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #1680: {@5, @532, @533, @534, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@305) */
  casadi_copy(w305, 4, w5);
  casadi_copy(w305+4, 4, w532);
  casadi_copy(w305+8, 4, w533);
  casadi_copy(w305+12, 4, w534);
  /* #1681: (@4[36:40] += @5) */
  for (rr=w4+36, ss=w5; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #1682: {@5, @535, @536, @537, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@318) */
  casadi_copy(w318, 4, w5);
  casadi_copy(w318+4, 4, w535);
  casadi_copy(w318+8, 4, w536);
  casadi_copy(w318+12, 4, w537);
  /* #1683: (@4[32:36] += @5) */
  for (rr=w4+32, ss=w5; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #1684: {@5, @538, @539, @540, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@331) */
  casadi_copy(w331, 4, w5);
  casadi_copy(w331+4, 4, w538);
  casadi_copy(w331+8, 4, w539);
  casadi_copy(w331+12, 4, w540);
  /* #1685: (@4[28:32] += @5) */
  for (rr=w4+28, ss=w5; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #1686: {@5, @541, @542, @543, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@344) */
  casadi_copy(w344, 4, w5);
  casadi_copy(w344+4, 4, w541);
  casadi_copy(w344+8, 4, w542);
  casadi_copy(w344+12, 4, w543);
  /* #1687: (@4[24:28] += @5) */
  for (rr=w4+24, ss=w5; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #1688: {@5, @544, @545, @546, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@357) */
  casadi_copy(w357, 4, w5);
  casadi_copy(w357+4, 4, w544);
  casadi_copy(w357+8, 4, w545);
  casadi_copy(w357+12, 4, w546);
  /* #1689: (@4[20:24] += @5) */
  for (rr=w4+20, ss=w5; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #1690: {@5, @547, @548, @549, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@370) */
  casadi_copy(w370, 4, w5);
  casadi_copy(w370+4, 4, w547);
  casadi_copy(w370+8, 4, w548);
  casadi_copy(w370+12, 4, w549);
  /* #1691: (@4[16:20] += @5) */
  for (rr=w4+16, ss=w5; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #1692: {@5, @550, @551, @552, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@383) */
  casadi_copy(w383, 4, w5);
  casadi_copy(w383+4, 4, w550);
  casadi_copy(w383+8, 4, w551);
  casadi_copy(w383+12, 4, w552);
  /* #1693: (@4[12:16] += @5) */
  for (rr=w4+12, ss=w5; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #1694: {@5, @553, @554, @555, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@396) */
  casadi_copy(w396, 4, w5);
  casadi_copy(w396+4, 4, w553);
  casadi_copy(w396+8, 4, w554);
  casadi_copy(w396+12, 4, w555);
  /* #1695: (@4[8:12] += @5) */
  for (rr=w4+8, ss=w5; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #1696: {@5, @556, @557, @558, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@409) */
  casadi_copy(w409, 4, w5);
  casadi_copy(w409+4, 4, w556);
  casadi_copy(w409+8, 4, w557);
  casadi_copy(w409+12, 4, w558);
  /* #1697: (@4[4:8] += @5) */
  for (rr=w4+4, ss=w5; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #1698: {@5, @559, @560, @561, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL} = horzsplit(@422) */
  casadi_copy(w422, 4, w5);
  casadi_copy(w422+4, 4, w559);
  casadi_copy(w422+8, 4, w560);
  casadi_copy(w422+12, 4, w561);
  /* #1699: (@4[:4] += @5) */
  for (rr=w4+0, ss=w5; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #1700: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1701: @66 = @62[24] */
  for (rr=(&w66), ss=w62+24; ss!=w62+25; ss+=1) *rr++ = *ss;
  /* #1702: @66 = @66' */
  /* #1703: @562 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w562);
  /* #1704: @5 = mac(@66,@562,@5) */
  casadi_mtimes((&w66), casadi_s73, w562, casadi_s72, w5, casadi_s71, w, 0);
  /* #1705: @5 = @5' */
  /* #1706: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1707: (@4[96:100] += @5) */
  for (rr=w4+96, ss=w5; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #1708: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1709: @66 = @62[24] */
  for (rr=(&w66), ss=w62+24; ss!=w62+25; ss+=1) *rr++ = *ss;
  /* #1710: @66 = @66' */
  /* #1711: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1712: @563 = @562' */
  for (i=0, rr=w563, cs=w562; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1713: @5 = mac(@66,@563,@5) */
  casadi_mtimes((&w66), casadi_s73, w563, casadi_s72, w5, casadi_s71, w, 0);
  /* #1714: @5 = @5' */
  /* #1715: (@4[96:100] += @5) */
  for (rr=w4+96, ss=w5; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #1716: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1717: @66 = @62[23] */
  for (rr=(&w66), ss=w62+23; ss!=w62+24; ss+=1) *rr++ = *ss;
  /* #1718: @66 = @66' */
  /* #1719: @564 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w564);
  /* #1720: @5 = mac(@66,@564,@5) */
  casadi_mtimes((&w66), casadi_s73, w564, casadi_s72, w5, casadi_s71, w, 0);
  /* #1721: @5 = @5' */
  /* #1722: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1723: (@4[92:96] += @5) */
  for (rr=w4+92, ss=w5; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #1724: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1725: @66 = @62[23] */
  for (rr=(&w66), ss=w62+23; ss!=w62+24; ss+=1) *rr++ = *ss;
  /* #1726: @66 = @66' */
  /* #1727: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1728: @565 = @564' */
  for (i=0, rr=w565, cs=w564; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1729: @5 = mac(@66,@565,@5) */
  casadi_mtimes((&w66), casadi_s73, w565, casadi_s72, w5, casadi_s71, w, 0);
  /* #1730: @5 = @5' */
  /* #1731: (@4[92:96] += @5) */
  for (rr=w4+92, ss=w5; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #1732: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1733: @66 = @62[22] */
  for (rr=(&w66), ss=w62+22; ss!=w62+23; ss+=1) *rr++ = *ss;
  /* #1734: @66 = @66' */
  /* #1735: @566 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w566);
  /* #1736: @5 = mac(@66,@566,@5) */
  casadi_mtimes((&w66), casadi_s73, w566, casadi_s72, w5, casadi_s71, w, 0);
  /* #1737: @5 = @5' */
  /* #1738: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1739: (@4[88:92] += @5) */
  for (rr=w4+88, ss=w5; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #1740: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1741: @66 = @62[22] */
  for (rr=(&w66), ss=w62+22; ss!=w62+23; ss+=1) *rr++ = *ss;
  /* #1742: @66 = @66' */
  /* #1743: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1744: @567 = @566' */
  for (i=0, rr=w567, cs=w566; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1745: @5 = mac(@66,@567,@5) */
  casadi_mtimes((&w66), casadi_s73, w567, casadi_s72, w5, casadi_s71, w, 0);
  /* #1746: @5 = @5' */
  /* #1747: (@4[88:92] += @5) */
  for (rr=w4+88, ss=w5; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #1748: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1749: @66 = @62[21] */
  for (rr=(&w66), ss=w62+21; ss!=w62+22; ss+=1) *rr++ = *ss;
  /* #1750: @66 = @66' */
  /* #1751: @568 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w568);
  /* #1752: @5 = mac(@66,@568,@5) */
  casadi_mtimes((&w66), casadi_s73, w568, casadi_s72, w5, casadi_s71, w, 0);
  /* #1753: @5 = @5' */
  /* #1754: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1755: (@4[84:88] += @5) */
  for (rr=w4+84, ss=w5; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #1756: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1757: @66 = @62[21] */
  for (rr=(&w66), ss=w62+21; ss!=w62+22; ss+=1) *rr++ = *ss;
  /* #1758: @66 = @66' */
  /* #1759: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1760: @569 = @568' */
  for (i=0, rr=w569, cs=w568; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1761: @5 = mac(@66,@569,@5) */
  casadi_mtimes((&w66), casadi_s73, w569, casadi_s72, w5, casadi_s71, w, 0);
  /* #1762: @5 = @5' */
  /* #1763: (@4[84:88] += @5) */
  for (rr=w4+84, ss=w5; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #1764: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1765: @66 = @62[20] */
  for (rr=(&w66), ss=w62+20; ss!=w62+21; ss+=1) *rr++ = *ss;
  /* #1766: @66 = @66' */
  /* #1767: @570 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w570);
  /* #1768: @5 = mac(@66,@570,@5) */
  casadi_mtimes((&w66), casadi_s73, w570, casadi_s72, w5, casadi_s71, w, 0);
  /* #1769: @5 = @5' */
  /* #1770: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1771: (@4[80:84] += @5) */
  for (rr=w4+80, ss=w5; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #1772: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1773: @66 = @62[20] */
  for (rr=(&w66), ss=w62+20; ss!=w62+21; ss+=1) *rr++ = *ss;
  /* #1774: @66 = @66' */
  /* #1775: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1776: @571 = @570' */
  for (i=0, rr=w571, cs=w570; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1777: @5 = mac(@66,@571,@5) */
  casadi_mtimes((&w66), casadi_s73, w571, casadi_s72, w5, casadi_s71, w, 0);
  /* #1778: @5 = @5' */
  /* #1779: (@4[80:84] += @5) */
  for (rr=w4+80, ss=w5; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #1780: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1781: @66 = @62[19] */
  for (rr=(&w66), ss=w62+19; ss!=w62+20; ss+=1) *rr++ = *ss;
  /* #1782: @66 = @66' */
  /* #1783: @572 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w572);
  /* #1784: @5 = mac(@66,@572,@5) */
  casadi_mtimes((&w66), casadi_s73, w572, casadi_s72, w5, casadi_s71, w, 0);
  /* #1785: @5 = @5' */
  /* #1786: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1787: (@4[76:80] += @5) */
  for (rr=w4+76, ss=w5; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #1788: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1789: @66 = @62[19] */
  for (rr=(&w66), ss=w62+19; ss!=w62+20; ss+=1) *rr++ = *ss;
  /* #1790: @66 = @66' */
  /* #1791: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1792: @573 = @572' */
  for (i=0, rr=w573, cs=w572; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1793: @5 = mac(@66,@573,@5) */
  casadi_mtimes((&w66), casadi_s73, w573, casadi_s72, w5, casadi_s71, w, 0);
  /* #1794: @5 = @5' */
  /* #1795: (@4[76:80] += @5) */
  for (rr=w4+76, ss=w5; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #1796: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1797: @66 = @62[18] */
  for (rr=(&w66), ss=w62+18; ss!=w62+19; ss+=1) *rr++ = *ss;
  /* #1798: @66 = @66' */
  /* #1799: @574 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w574);
  /* #1800: @5 = mac(@66,@574,@5) */
  casadi_mtimes((&w66), casadi_s73, w574, casadi_s72, w5, casadi_s71, w, 0);
  /* #1801: @5 = @5' */
  /* #1802: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1803: (@4[72:76] += @5) */
  for (rr=w4+72, ss=w5; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #1804: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1805: @66 = @62[18] */
  for (rr=(&w66), ss=w62+18; ss!=w62+19; ss+=1) *rr++ = *ss;
  /* #1806: @66 = @66' */
  /* #1807: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1808: @575 = @574' */
  for (i=0, rr=w575, cs=w574; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1809: @5 = mac(@66,@575,@5) */
  casadi_mtimes((&w66), casadi_s73, w575, casadi_s72, w5, casadi_s71, w, 0);
  /* #1810: @5 = @5' */
  /* #1811: (@4[72:76] += @5) */
  for (rr=w4+72, ss=w5; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #1812: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1813: @66 = @62[17] */
  for (rr=(&w66), ss=w62+17; ss!=w62+18; ss+=1) *rr++ = *ss;
  /* #1814: @66 = @66' */
  /* #1815: @576 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w576);
  /* #1816: @5 = mac(@66,@576,@5) */
  casadi_mtimes((&w66), casadi_s73, w576, casadi_s72, w5, casadi_s71, w, 0);
  /* #1817: @5 = @5' */
  /* #1818: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1819: (@4[68:72] += @5) */
  for (rr=w4+68, ss=w5; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #1820: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1821: @66 = @62[17] */
  for (rr=(&w66), ss=w62+17; ss!=w62+18; ss+=1) *rr++ = *ss;
  /* #1822: @66 = @66' */
  /* #1823: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1824: @577 = @576' */
  for (i=0, rr=w577, cs=w576; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1825: @5 = mac(@66,@577,@5) */
  casadi_mtimes((&w66), casadi_s73, w577, casadi_s72, w5, casadi_s71, w, 0);
  /* #1826: @5 = @5' */
  /* #1827: (@4[68:72] += @5) */
  for (rr=w4+68, ss=w5; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #1828: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1829: @66 = @62[16] */
  for (rr=(&w66), ss=w62+16; ss!=w62+17; ss+=1) *rr++ = *ss;
  /* #1830: @66 = @66' */
  /* #1831: @578 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w578);
  /* #1832: @5 = mac(@66,@578,@5) */
  casadi_mtimes((&w66), casadi_s73, w578, casadi_s72, w5, casadi_s71, w, 0);
  /* #1833: @5 = @5' */
  /* #1834: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1835: (@4[64:68] += @5) */
  for (rr=w4+64, ss=w5; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #1836: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1837: @66 = @62[16] */
  for (rr=(&w66), ss=w62+16; ss!=w62+17; ss+=1) *rr++ = *ss;
  /* #1838: @66 = @66' */
  /* #1839: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1840: @579 = @578' */
  for (i=0, rr=w579, cs=w578; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1841: @5 = mac(@66,@579,@5) */
  casadi_mtimes((&w66), casadi_s73, w579, casadi_s72, w5, casadi_s71, w, 0);
  /* #1842: @5 = @5' */
  /* #1843: (@4[64:68] += @5) */
  for (rr=w4+64, ss=w5; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #1844: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1845: @66 = @62[15] */
  for (rr=(&w66), ss=w62+15; ss!=w62+16; ss+=1) *rr++ = *ss;
  /* #1846: @66 = @66' */
  /* #1847: @580 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w580);
  /* #1848: @5 = mac(@66,@580,@5) */
  casadi_mtimes((&w66), casadi_s73, w580, casadi_s72, w5, casadi_s71, w, 0);
  /* #1849: @5 = @5' */
  /* #1850: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1851: (@4[60:64] += @5) */
  for (rr=w4+60, ss=w5; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #1852: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1853: @66 = @62[15] */
  for (rr=(&w66), ss=w62+15; ss!=w62+16; ss+=1) *rr++ = *ss;
  /* #1854: @66 = @66' */
  /* #1855: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1856: @581 = @580' */
  for (i=0, rr=w581, cs=w580; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1857: @5 = mac(@66,@581,@5) */
  casadi_mtimes((&w66), casadi_s73, w581, casadi_s72, w5, casadi_s71, w, 0);
  /* #1858: @5 = @5' */
  /* #1859: (@4[60:64] += @5) */
  for (rr=w4+60, ss=w5; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #1860: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1861: @66 = @62[14] */
  for (rr=(&w66), ss=w62+14; ss!=w62+15; ss+=1) *rr++ = *ss;
  /* #1862: @66 = @66' */
  /* #1863: @582 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w582);
  /* #1864: @5 = mac(@66,@582,@5) */
  casadi_mtimes((&w66), casadi_s73, w582, casadi_s72, w5, casadi_s71, w, 0);
  /* #1865: @5 = @5' */
  /* #1866: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1867: (@4[56:60] += @5) */
  for (rr=w4+56, ss=w5; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #1868: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1869: @66 = @62[14] */
  for (rr=(&w66), ss=w62+14; ss!=w62+15; ss+=1) *rr++ = *ss;
  /* #1870: @66 = @66' */
  /* #1871: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1872: @583 = @582' */
  for (i=0, rr=w583, cs=w582; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1873: @5 = mac(@66,@583,@5) */
  casadi_mtimes((&w66), casadi_s73, w583, casadi_s72, w5, casadi_s71, w, 0);
  /* #1874: @5 = @5' */
  /* #1875: (@4[56:60] += @5) */
  for (rr=w4+56, ss=w5; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #1876: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1877: @66 = @62[13] */
  for (rr=(&w66), ss=w62+13; ss!=w62+14; ss+=1) *rr++ = *ss;
  /* #1878: @66 = @66' */
  /* #1879: @584 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w584);
  /* #1880: @5 = mac(@66,@584,@5) */
  casadi_mtimes((&w66), casadi_s73, w584, casadi_s72, w5, casadi_s71, w, 0);
  /* #1881: @5 = @5' */
  /* #1882: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1883: (@4[52:56] += @5) */
  for (rr=w4+52, ss=w5; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #1884: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1885: @66 = @62[13] */
  for (rr=(&w66), ss=w62+13; ss!=w62+14; ss+=1) *rr++ = *ss;
  /* #1886: @66 = @66' */
  /* #1887: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1888: @585 = @584' */
  for (i=0, rr=w585, cs=w584; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1889: @5 = mac(@66,@585,@5) */
  casadi_mtimes((&w66), casadi_s73, w585, casadi_s72, w5, casadi_s71, w, 0);
  /* #1890: @5 = @5' */
  /* #1891: (@4[52:56] += @5) */
  for (rr=w4+52, ss=w5; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #1892: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1893: @66 = @62[12] */
  for (rr=(&w66), ss=w62+12; ss!=w62+13; ss+=1) *rr++ = *ss;
  /* #1894: @66 = @66' */
  /* #1895: @586 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w586);
  /* #1896: @5 = mac(@66,@586,@5) */
  casadi_mtimes((&w66), casadi_s73, w586, casadi_s72, w5, casadi_s71, w, 0);
  /* #1897: @5 = @5' */
  /* #1898: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1899: (@4[48:52] += @5) */
  for (rr=w4+48, ss=w5; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #1900: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1901: @66 = @62[12] */
  for (rr=(&w66), ss=w62+12; ss!=w62+13; ss+=1) *rr++ = *ss;
  /* #1902: @66 = @66' */
  /* #1903: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1904: @587 = @586' */
  for (i=0, rr=w587, cs=w586; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1905: @5 = mac(@66,@587,@5) */
  casadi_mtimes((&w66), casadi_s73, w587, casadi_s72, w5, casadi_s71, w, 0);
  /* #1906: @5 = @5' */
  /* #1907: (@4[48:52] += @5) */
  for (rr=w4+48, ss=w5; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #1908: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1909: @66 = @62[11] */
  for (rr=(&w66), ss=w62+11; ss!=w62+12; ss+=1) *rr++ = *ss;
  /* #1910: @66 = @66' */
  /* #1911: @588 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w588);
  /* #1912: @5 = mac(@66,@588,@5) */
  casadi_mtimes((&w66), casadi_s73, w588, casadi_s72, w5, casadi_s71, w, 0);
  /* #1913: @5 = @5' */
  /* #1914: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1915: (@4[44:48] += @5) */
  for (rr=w4+44, ss=w5; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #1916: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1917: @66 = @62[11] */
  for (rr=(&w66), ss=w62+11; ss!=w62+12; ss+=1) *rr++ = *ss;
  /* #1918: @66 = @66' */
  /* #1919: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1920: @589 = @588' */
  for (i=0, rr=w589, cs=w588; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1921: @5 = mac(@66,@589,@5) */
  casadi_mtimes((&w66), casadi_s73, w589, casadi_s72, w5, casadi_s71, w, 0);
  /* #1922: @5 = @5' */
  /* #1923: (@4[44:48] += @5) */
  for (rr=w4+44, ss=w5; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #1924: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1925: @66 = @62[10] */
  for (rr=(&w66), ss=w62+10; ss!=w62+11; ss+=1) *rr++ = *ss;
  /* #1926: @66 = @66' */
  /* #1927: @590 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w590);
  /* #1928: @5 = mac(@66,@590,@5) */
  casadi_mtimes((&w66), casadi_s73, w590, casadi_s72, w5, casadi_s71, w, 0);
  /* #1929: @5 = @5' */
  /* #1930: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1931: (@4[40:44] += @5) */
  for (rr=w4+40, ss=w5; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #1932: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1933: @66 = @62[10] */
  for (rr=(&w66), ss=w62+10; ss!=w62+11; ss+=1) *rr++ = *ss;
  /* #1934: @66 = @66' */
  /* #1935: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1936: @591 = @590' */
  for (i=0, rr=w591, cs=w590; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1937: @5 = mac(@66,@591,@5) */
  casadi_mtimes((&w66), casadi_s73, w591, casadi_s72, w5, casadi_s71, w, 0);
  /* #1938: @5 = @5' */
  /* #1939: (@4[40:44] += @5) */
  for (rr=w4+40, ss=w5; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #1940: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1941: @66 = @62[9] */
  for (rr=(&w66), ss=w62+9; ss!=w62+10; ss+=1) *rr++ = *ss;
  /* #1942: @66 = @66' */
  /* #1943: @592 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w592);
  /* #1944: @5 = mac(@66,@592,@5) */
  casadi_mtimes((&w66), casadi_s73, w592, casadi_s72, w5, casadi_s71, w, 0);
  /* #1945: @5 = @5' */
  /* #1946: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1947: (@4[36:40] += @5) */
  for (rr=w4+36, ss=w5; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #1948: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1949: @66 = @62[9] */
  for (rr=(&w66), ss=w62+9; ss!=w62+10; ss+=1) *rr++ = *ss;
  /* #1950: @66 = @66' */
  /* #1951: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1952: @593 = @592' */
  for (i=0, rr=w593, cs=w592; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1953: @5 = mac(@66,@593,@5) */
  casadi_mtimes((&w66), casadi_s73, w593, casadi_s72, w5, casadi_s71, w, 0);
  /* #1954: @5 = @5' */
  /* #1955: (@4[36:40] += @5) */
  for (rr=w4+36, ss=w5; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #1956: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1957: @66 = @62[8] */
  for (rr=(&w66), ss=w62+8; ss!=w62+9; ss+=1) *rr++ = *ss;
  /* #1958: @66 = @66' */
  /* #1959: @594 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w594);
  /* #1960: @5 = mac(@66,@594,@5) */
  casadi_mtimes((&w66), casadi_s73, w594, casadi_s72, w5, casadi_s71, w, 0);
  /* #1961: @5 = @5' */
  /* #1962: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1963: (@4[32:36] += @5) */
  for (rr=w4+32, ss=w5; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #1964: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1965: @66 = @62[8] */
  for (rr=(&w66), ss=w62+8; ss!=w62+9; ss+=1) *rr++ = *ss;
  /* #1966: @66 = @66' */
  /* #1967: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1968: @595 = @594' */
  for (i=0, rr=w595, cs=w594; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1969: @5 = mac(@66,@595,@5) */
  casadi_mtimes((&w66), casadi_s73, w595, casadi_s72, w5, casadi_s71, w, 0);
  /* #1970: @5 = @5' */
  /* #1971: (@4[32:36] += @5) */
  for (rr=w4+32, ss=w5; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #1972: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1973: @66 = @62[7] */
  for (rr=(&w66), ss=w62+7; ss!=w62+8; ss+=1) *rr++ = *ss;
  /* #1974: @66 = @66' */
  /* #1975: @596 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w596);
  /* #1976: @5 = mac(@66,@596,@5) */
  casadi_mtimes((&w66), casadi_s73, w596, casadi_s72, w5, casadi_s71, w, 0);
  /* #1977: @5 = @5' */
  /* #1978: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1979: (@4[28:32] += @5) */
  for (rr=w4+28, ss=w5; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #1980: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1981: @66 = @62[7] */
  for (rr=(&w66), ss=w62+7; ss!=w62+8; ss+=1) *rr++ = *ss;
  /* #1982: @66 = @66' */
  /* #1983: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #1984: @597 = @596' */
  for (i=0, rr=w597, cs=w596; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1985: @5 = mac(@66,@597,@5) */
  casadi_mtimes((&w66), casadi_s73, w597, casadi_s72, w5, casadi_s71, w, 0);
  /* #1986: @5 = @5' */
  /* #1987: (@4[28:32] += @5) */
  for (rr=w4+28, ss=w5; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #1988: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1989: @66 = @62[6] */
  for (rr=(&w66), ss=w62+6; ss!=w62+7; ss+=1) *rr++ = *ss;
  /* #1990: @66 = @66' */
  /* #1991: @598 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w598);
  /* #1992: @5 = mac(@66,@598,@5) */
  casadi_mtimes((&w66), casadi_s73, w598, casadi_s72, w5, casadi_s71, w, 0);
  /* #1993: @5 = @5' */
  /* #1994: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #1995: (@4[24:28] += @5) */
  for (rr=w4+24, ss=w5; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #1996: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #1997: @66 = @62[6] */
  for (rr=(&w66), ss=w62+6; ss!=w62+7; ss+=1) *rr++ = *ss;
  /* #1998: @66 = @66' */
  /* #1999: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2000: @599 = @598' */
  for (i=0, rr=w599, cs=w598; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2001: @5 = mac(@66,@599,@5) */
  casadi_mtimes((&w66), casadi_s73, w599, casadi_s72, w5, casadi_s71, w, 0);
  /* #2002: @5 = @5' */
  /* #2003: (@4[24:28] += @5) */
  for (rr=w4+24, ss=w5; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #2004: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2005: @66 = @62[5] */
  for (rr=(&w66), ss=w62+5; ss!=w62+6; ss+=1) *rr++ = *ss;
  /* #2006: @66 = @66' */
  /* #2007: @600 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w600);
  /* #2008: @5 = mac(@66,@600,@5) */
  casadi_mtimes((&w66), casadi_s73, w600, casadi_s72, w5, casadi_s71, w, 0);
  /* #2009: @5 = @5' */
  /* #2010: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2011: (@4[20:24] += @5) */
  for (rr=w4+20, ss=w5; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #2012: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2013: @66 = @62[5] */
  for (rr=(&w66), ss=w62+5; ss!=w62+6; ss+=1) *rr++ = *ss;
  /* #2014: @66 = @66' */
  /* #2015: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2016: @601 = @600' */
  for (i=0, rr=w601, cs=w600; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2017: @5 = mac(@66,@601,@5) */
  casadi_mtimes((&w66), casadi_s73, w601, casadi_s72, w5, casadi_s71, w, 0);
  /* #2018: @5 = @5' */
  /* #2019: (@4[20:24] += @5) */
  for (rr=w4+20, ss=w5; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #2020: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2021: @66 = @62[4] */
  for (rr=(&w66), ss=w62+4; ss!=w62+5; ss+=1) *rr++ = *ss;
  /* #2022: @66 = @66' */
  /* #2023: @602 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w602);
  /* #2024: @5 = mac(@66,@602,@5) */
  casadi_mtimes((&w66), casadi_s73, w602, casadi_s72, w5, casadi_s71, w, 0);
  /* #2025: @5 = @5' */
  /* #2026: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2027: (@4[16:20] += @5) */
  for (rr=w4+16, ss=w5; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #2028: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2029: @66 = @62[4] */
  for (rr=(&w66), ss=w62+4; ss!=w62+5; ss+=1) *rr++ = *ss;
  /* #2030: @66 = @66' */
  /* #2031: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2032: @603 = @602' */
  for (i=0, rr=w603, cs=w602; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2033: @5 = mac(@66,@603,@5) */
  casadi_mtimes((&w66), casadi_s73, w603, casadi_s72, w5, casadi_s71, w, 0);
  /* #2034: @5 = @5' */
  /* #2035: (@4[16:20] += @5) */
  for (rr=w4+16, ss=w5; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #2036: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2037: @66 = @62[3] */
  for (rr=(&w66), ss=w62+3; ss!=w62+4; ss+=1) *rr++ = *ss;
  /* #2038: @66 = @66' */
  /* #2039: @604 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w604);
  /* #2040: @5 = mac(@66,@604,@5) */
  casadi_mtimes((&w66), casadi_s73, w604, casadi_s72, w5, casadi_s71, w, 0);
  /* #2041: @5 = @5' */
  /* #2042: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2043: (@4[12:16] += @5) */
  for (rr=w4+12, ss=w5; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #2044: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2045: @66 = @62[3] */
  for (rr=(&w66), ss=w62+3; ss!=w62+4; ss+=1) *rr++ = *ss;
  /* #2046: @66 = @66' */
  /* #2047: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2048: @605 = @604' */
  for (i=0, rr=w605, cs=w604; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2049: @5 = mac(@66,@605,@5) */
  casadi_mtimes((&w66), casadi_s73, w605, casadi_s72, w5, casadi_s71, w, 0);
  /* #2050: @5 = @5' */
  /* #2051: (@4[12:16] += @5) */
  for (rr=w4+12, ss=w5; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #2052: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2053: @66 = @62[2] */
  for (rr=(&w66), ss=w62+2; ss!=w62+3; ss+=1) *rr++ = *ss;
  /* #2054: @66 = @66' */
  /* #2055: @606 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w606);
  /* #2056: @5 = mac(@66,@606,@5) */
  casadi_mtimes((&w66), casadi_s73, w606, casadi_s72, w5, casadi_s71, w, 0);
  /* #2057: @5 = @5' */
  /* #2058: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2059: (@4[8:12] += @5) */
  for (rr=w4+8, ss=w5; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #2060: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2061: @66 = @62[2] */
  for (rr=(&w66), ss=w62+2; ss!=w62+3; ss+=1) *rr++ = *ss;
  /* #2062: @66 = @66' */
  /* #2063: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2064: @607 = @606' */
  for (i=0, rr=w607, cs=w606; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2065: @5 = mac(@66,@607,@5) */
  casadi_mtimes((&w66), casadi_s73, w607, casadi_s72, w5, casadi_s71, w, 0);
  /* #2066: @5 = @5' */
  /* #2067: (@4[8:12] += @5) */
  for (rr=w4+8, ss=w5; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #2068: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2069: @66 = @62[1] */
  for (rr=(&w66), ss=w62+1; ss!=w62+2; ss+=1) *rr++ = *ss;
  /* #2070: @66 = @66' */
  /* #2071: @608 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w608);
  /* #2072: @5 = mac(@66,@608,@5) */
  casadi_mtimes((&w66), casadi_s73, w608, casadi_s72, w5, casadi_s71, w, 0);
  /* #2073: @5 = @5' */
  /* #2074: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2075: (@4[4:8] += @5) */
  for (rr=w4+4, ss=w5; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #2076: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2077: @66 = @62[1] */
  for (rr=(&w66), ss=w62+1; ss!=w62+2; ss+=1) *rr++ = *ss;
  /* #2078: @66 = @66' */
  /* #2079: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2080: @609 = @608' */
  for (i=0, rr=w609, cs=w608; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2081: @5 = mac(@66,@609,@5) */
  casadi_mtimes((&w66), casadi_s73, w609, casadi_s72, w5, casadi_s71, w, 0);
  /* #2082: @5 = @5' */
  /* #2083: (@4[4:8] += @5) */
  for (rr=w4+4, ss=w5; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #2084: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2085: @66 = @62[0] */
  for (rr=(&w66), ss=w62+0; ss!=w62+1; ss+=1) *rr++ = *ss;
  /* #2086: @66 = @66' */
  /* #2087: @610 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w610);
  /* #2088: @5 = mac(@66,@610,@5) */
  casadi_mtimes((&w66), casadi_s73, w610, casadi_s72, w5, casadi_s71, w, 0);
  /* #2089: @5 = @5' */
  /* #2090: @5 = (@63*@5) */
  for (i=0, rr=w5, cs=w5; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2091: (@4[:4] += @5) */
  for (rr=w4+0, ss=w5; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #2092: @5 = zeros(1x4) */
  casadi_clear(w5, 4);
  /* #2093: @66 = @62[0] */
  for (rr=(&w66), ss=w62+0; ss!=w62+1; ss+=1) *rr++ = *ss;
  /* #2094: @66 = @66' */
  /* #2095: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2096: @611 = @610' */
  for (i=0, rr=w611, cs=w610; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2097: @5 = mac(@66,@611,@5) */
  casadi_mtimes((&w66), casadi_s73, w611, casadi_s72, w5, casadi_s71, w, 0);
  /* #2098: @5 = @5' */
  /* #2099: (@4[:4] += @5) */
  for (rr=w4+0, ss=w5; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #2100: @4 = vec(@4) */
  /* #2101: @612 = vertcat(@1, @4) */
  rr=w612;
  for (i=0, cs=w1; i<364; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<100; ++i) *rr++ = *cs++;
  /* #2102: (@0[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 5096, 5097, 5098, 5099, 5112, 5113, 5114, 5115, 5128, 5129, 5130, 5131, 5144, 5145, 5146, 5147, 5160, 5161, 5162, 5163, 5176, 5177, 5178, 5179, 5192, 5193, 5194, 5195, 5208, 5209, 5210, 5211, 5224, 5225, 5226, 5227, 5240, 5241, 5242, 5243, 5256, 5257, 5258, 5259, 5272, 5273, 5274, 5275, 5288, 5289, 5290, 5291, 5304, 5305, 5306, 5307, 5320, 5321, 5322, 5323, 5336, 5337, 5338, 5339, 5352, 5353, 5354, 5355, 5368, 5369, 5370, 5371, 5384, 5385, 5386, 5387, 5400, 5401, 5402, 5403, 5416, 5417, 5418, 5419, 5432, 5433, 5434, 5435, 5448, 5449, 5450, 5451, 5464, 5465, 5466, 5467, 5480, 5481, 5482, 5483] = @612) */
  for (cii=casadi_s74, rr=w0, ss=w612; cii!=casadi_s74+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #2103: (@0[0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210, 224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 378, 392, 406, 420, 434, 448, 462, 476, 490, 504, 518, 532, 546, 560, 574, 588, 602, 616, 630, 644, 658, 672, 686, 700, 714, 728, 742, 756, 770, 784, 798, 812, 826, 840, 854, 868, 882, 896, 910, 924, 938, 952, 966, 980, 994, 1008, 1022, 1036, 1050, 1064, 1078, 1092, 1106, 1120, 1134, 1148, 1162, 1176, 1190, 1204, 1218, 1232, 1246, 1260, 1274, 1288, 1302, 1316, 1330, 1344, 1358, 1372, 1386, 1400, 1414, 1428, 1442, 1456, 1470, 1484, 1498, 1512, 1526, 1540, 1554, 1568, 1582, 1596, 1610, 1624, 1638, 1652, 1666, 1680, 1694, 1708, 1722, 1736, 1750, 1764, 1778, 1792, 1806, 1820, 1834, 1848, 1862, 1876, 1890, 1904, 1918, 1932, 1946, 1960, 1974, 1988, 2002, 2016, 2030, 2044, 2058, 2072, 2086, 2100, 2114, 2128, 2142, 2156, 2170, 2184, 2198, 2212, 2226, 2240, 2254, 2268, 2282, 2296, 2310, 2324, 2338, 2352, 2366, 2380, 2394, 2408, 2422, 2436, 2450, 2464, 2478, 2492, 2506, 2520, 2534, 2548, 2562, 2576, 2590, 2604, 2618, 2632, 2646, 2660, 2674, 2688, 2702, 2716, 2730, 2744, 2758, 2772, 2786, 2800, 2814, 2828, 2842, 2856, 2870, 2884, 2898, 2912, 2926, 2940, 2954, 2968, 2982, 2996, 3010, 3024, 3038, 3052, 3066, 3080, 3094, 3108, 3122, 3136, 3150, 3164, 3178, 3192, 3206, 3220, 3234, 3248, 3262, 3276, 3290, 3304, 3318, 3332, 3346, 3360, 3374, 3388, 3402, 3416, 3430, 3444, 3458, 3472, 3486, 3500, 3514, 3528, 3542, 3556, 3570, 3584, 3598, 3612, 3626, 3640, 3654, 3668, 3682, 3696, 3710, 3724, 3738, 3752, 3766, 3780, 3794, 3808, 3822, 3836, 3850, 3864, 3878, 3892, 3906, 3920, 3934, 3948, 3962, 3976, 3990, 4004, 4018, 4032, 4046, 4060, 4074, 4088, 4102, 4116, 4130, 4144, 4158, 4172, 4186, 4200, 4214, 4228, 4242, 4256, 4270, 4284, 4298, 4312, 4326, 4340, 4354, 4368, 4382, 4396, 4410, 4424, 4438, 4452, 4466, 4480, 4494, 4508, 4522, 4536, 4550, 4564, 4578, 4592, 4606, 4620, 4634, 4648, 4662, 4676, 4690, 4704, 4718, 4732, 4746, 4760, 4774, 4788, 4802, 4816, 4830, 4844, 4858, 4872, 4886, 4900, 4914, 4928, 4942, 4956, 4970, 4984, 4998, 5012, 5026, 5040, 5054, 5068, 5082, 5096, 5100, 5104, 5108, 5112, 5116, 5120, 5124, 5128, 5132, 5136, 5140, 5144, 5148, 5152, 5156, 5160, 5164, 5168, 5172, 5176, 5180, 5184, 5188, 5192, 5196, 5200, 5204, 5208, 5212, 5216, 5220, 5224, 5228, 5232, 5236, 5240, 5244, 5248, 5252, 5256, 5260, 5264, 5268, 5272, 5276, 5280, 5284, 5288, 5292, 5296, 5300, 5304, 5308, 5312, 5316, 5320, 5324, 5328, 5332, 5336, 5340, 5344, 5348, 5352, 5356, 5360, 5364, 5368, 5372, 5376, 5380, 5384, 5388, 5392, 5396, 5400, 5404, 5408, 5412, 5416, 5420, 5424, 5428, 5432, 5436, 5440, 5444, 5448, 5452, 5456, 5460, 5464, 5468, 5472, 5476, 5480, 5484, 5488, 5492] = @612) */
  for (cii=casadi_s75, rr=w0, ss=w612; cii!=casadi_s75+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #2104: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #2105: (@1[336:350] += @56) */
  for (rr=w1+336, ss=w56; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #2106: (@1[322:336] += @54) */
  for (rr=w1+322, ss=w54; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #2107: (@1[308:322] += @52) */
  for (rr=w1+308, ss=w52; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #2108: (@1[294:308] += @50) */
  for (rr=w1+294, ss=w50; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #2109: (@1[280:294] += @48) */
  for (rr=w1+280, ss=w48; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #2110: (@1[266:280] += @46) */
  for (rr=w1+266, ss=w46; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #2111: (@1[252:266] += @44) */
  for (rr=w1+252, ss=w44; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #2112: (@1[238:252] += @42) */
  for (rr=w1+238, ss=w42; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #2113: (@1[224:238] += @40) */
  for (rr=w1+224, ss=w40; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #2114: (@1[210:224] += @38) */
  for (rr=w1+210, ss=w38; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #2115: (@1[196:210] += @36) */
  for (rr=w1+196, ss=w36; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #2116: (@1[182:196] += @34) */
  for (rr=w1+182, ss=w34; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #2117: (@1[168:182] += @32) */
  for (rr=w1+168, ss=w32; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #2118: (@1[154:168] += @30) */
  for (rr=w1+154, ss=w30; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #2119: (@1[140:154] += @28) */
  for (rr=w1+140, ss=w28; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #2120: (@1[126:140] += @26) */
  for (rr=w1+126, ss=w26; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #2121: (@1[112:126] += @24) */
  for (rr=w1+112, ss=w24; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #2122: (@1[98:112] += @22) */
  for (rr=w1+98, ss=w22; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #2123: (@1[84:98] += @20) */
  for (rr=w1+84, ss=w20; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #2124: (@1[70:84] += @18) */
  for (rr=w1+70, ss=w18; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #2125: (@1[56:70] += @16) */
  for (rr=w1+56, ss=w16; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #2126: (@1[42:56] += @14) */
  for (rr=w1+42, ss=w14; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #2127: (@1[28:42] += @12) */
  for (rr=w1+28, ss=w12; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #2128: (@1[14:28] += @10) */
  for (rr=w1+14, ss=w10; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #2129: (@1[:14] += @8) */
  for (rr=w1+0, ss=w8; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #2130: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2131: @66 = @64[25] */
  for (rr=(&w66), ss=w64+25; ss!=w64+26; ss+=1) *rr++ = *ss;
  /* #2132: @66 = @66' */
  /* #2133: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s76, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #2134: @434 = @434' */
  /* #2135: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2136: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2137: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #2138: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #2139: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2140: @66 = @64[25] */
  for (rr=(&w66), ss=w64+25; ss!=w64+26; ss+=1) *rr++ = *ss;
  /* #2141: @66 = @66' */
  /* #2142: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2143: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s76, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #2144: @434 = @434' */
  /* #2145: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2146: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #2147: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #2148: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2149: @66 = @64[24] */
  for (rr=(&w66), ss=w64+24; ss!=w64+25; ss+=1) *rr++ = *ss;
  /* #2150: @66 = @66' */
  /* #2151: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s76, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #2152: @434 = @434' */
  /* #2153: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2154: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2155: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #2156: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #2157: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2158: @66 = @64[24] */
  for (rr=(&w66), ss=w64+24; ss!=w64+25; ss+=1) *rr++ = *ss;
  /* #2159: @66 = @66' */
  /* #2160: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2161: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s76, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #2162: @434 = @434' */
  /* #2163: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2164: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #2165: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #2166: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2167: @66 = @64[23] */
  for (rr=(&w66), ss=w64+23; ss!=w64+24; ss+=1) *rr++ = *ss;
  /* #2168: @66 = @66' */
  /* #2169: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s76, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #2170: @434 = @434' */
  /* #2171: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2172: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2173: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #2174: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #2175: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2176: @66 = @64[23] */
  for (rr=(&w66), ss=w64+23; ss!=w64+24; ss+=1) *rr++ = *ss;
  /* #2177: @66 = @66' */
  /* #2178: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2179: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s76, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #2180: @434 = @434' */
  /* #2181: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2182: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #2183: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #2184: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2185: @66 = @64[22] */
  for (rr=(&w66), ss=w64+22; ss!=w64+23; ss+=1) *rr++ = *ss;
  /* #2186: @66 = @66' */
  /* #2187: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s76, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #2188: @434 = @434' */
  /* #2189: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2190: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2191: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #2192: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #2193: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2194: @66 = @64[22] */
  for (rr=(&w66), ss=w64+22; ss!=w64+23; ss+=1) *rr++ = *ss;
  /* #2195: @66 = @66' */
  /* #2196: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2197: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s76, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #2198: @434 = @434' */
  /* #2199: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2200: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #2201: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #2202: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2203: @66 = @64[21] */
  for (rr=(&w66), ss=w64+21; ss!=w64+22; ss+=1) *rr++ = *ss;
  /* #2204: @66 = @66' */
  /* #2205: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s76, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #2206: @434 = @434' */
  /* #2207: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2208: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2209: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #2210: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #2211: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2212: @66 = @64[21] */
  for (rr=(&w66), ss=w64+21; ss!=w64+22; ss+=1) *rr++ = *ss;
  /* #2213: @66 = @66' */
  /* #2214: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2215: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s76, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #2216: @434 = @434' */
  /* #2217: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2218: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #2219: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #2220: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2221: @66 = @64[20] */
  for (rr=(&w66), ss=w64+20; ss!=w64+21; ss+=1) *rr++ = *ss;
  /* #2222: @66 = @66' */
  /* #2223: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s76, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #2224: @434 = @434' */
  /* #2225: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2226: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2227: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #2228: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #2229: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2230: @66 = @64[20] */
  for (rr=(&w66), ss=w64+20; ss!=w64+21; ss+=1) *rr++ = *ss;
  /* #2231: @66 = @66' */
  /* #2232: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2233: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s76, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #2234: @434 = @434' */
  /* #2235: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2236: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #2237: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #2238: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2239: @66 = @64[19] */
  for (rr=(&w66), ss=w64+19; ss!=w64+20; ss+=1) *rr++ = *ss;
  /* #2240: @66 = @66' */
  /* #2241: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s76, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #2242: @434 = @434' */
  /* #2243: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2244: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2245: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #2246: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #2247: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2248: @66 = @64[19] */
  for (rr=(&w66), ss=w64+19; ss!=w64+20; ss+=1) *rr++ = *ss;
  /* #2249: @66 = @66' */
  /* #2250: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2251: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s76, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #2252: @434 = @434' */
  /* #2253: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2254: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #2255: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #2256: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2257: @66 = @64[18] */
  for (rr=(&w66), ss=w64+18; ss!=w64+19; ss+=1) *rr++ = *ss;
  /* #2258: @66 = @66' */
  /* #2259: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s76, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #2260: @434 = @434' */
  /* #2261: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2262: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2263: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #2264: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #2265: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2266: @66 = @64[18] */
  for (rr=(&w66), ss=w64+18; ss!=w64+19; ss+=1) *rr++ = *ss;
  /* #2267: @66 = @66' */
  /* #2268: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2269: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s76, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #2270: @434 = @434' */
  /* #2271: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2272: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #2273: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #2274: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2275: @66 = @64[17] */
  for (rr=(&w66), ss=w64+17; ss!=w64+18; ss+=1) *rr++ = *ss;
  /* #2276: @66 = @66' */
  /* #2277: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s76, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #2278: @434 = @434' */
  /* #2279: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2280: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2281: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #2282: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #2283: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2284: @66 = @64[17] */
  for (rr=(&w66), ss=w64+17; ss!=w64+18; ss+=1) *rr++ = *ss;
  /* #2285: @66 = @66' */
  /* #2286: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2287: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s76, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #2288: @434 = @434' */
  /* #2289: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2290: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #2291: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #2292: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2293: @66 = @64[16] */
  for (rr=(&w66), ss=w64+16; ss!=w64+17; ss+=1) *rr++ = *ss;
  /* #2294: @66 = @66' */
  /* #2295: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s76, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #2296: @434 = @434' */
  /* #2297: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2298: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2299: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #2300: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #2301: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2302: @66 = @64[16] */
  for (rr=(&w66), ss=w64+16; ss!=w64+17; ss+=1) *rr++ = *ss;
  /* #2303: @66 = @66' */
  /* #2304: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2305: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s76, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #2306: @434 = @434' */
  /* #2307: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2308: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #2309: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #2310: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2311: @66 = @64[15] */
  for (rr=(&w66), ss=w64+15; ss!=w64+16; ss+=1) *rr++ = *ss;
  /* #2312: @66 = @66' */
  /* #2313: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s76, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #2314: @434 = @434' */
  /* #2315: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2316: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2317: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #2318: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #2319: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2320: @66 = @64[15] */
  for (rr=(&w66), ss=w64+15; ss!=w64+16; ss+=1) *rr++ = *ss;
  /* #2321: @66 = @66' */
  /* #2322: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2323: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s76, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #2324: @434 = @434' */
  /* #2325: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2326: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #2327: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #2328: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2329: @66 = @64[14] */
  for (rr=(&w66), ss=w64+14; ss!=w64+15; ss+=1) *rr++ = *ss;
  /* #2330: @66 = @66' */
  /* #2331: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s76, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #2332: @434 = @434' */
  /* #2333: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2334: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2335: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #2336: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #2337: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2338: @66 = @64[14] */
  for (rr=(&w66), ss=w64+14; ss!=w64+15; ss+=1) *rr++ = *ss;
  /* #2339: @66 = @66' */
  /* #2340: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2341: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s76, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #2342: @434 = @434' */
  /* #2343: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2344: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #2345: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #2346: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2347: @66 = @64[13] */
  for (rr=(&w66), ss=w64+13; ss!=w64+14; ss+=1) *rr++ = *ss;
  /* #2348: @66 = @66' */
  /* #2349: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s76, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #2350: @434 = @434' */
  /* #2351: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2352: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2353: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #2354: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #2355: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2356: @66 = @64[13] */
  for (rr=(&w66), ss=w64+13; ss!=w64+14; ss+=1) *rr++ = *ss;
  /* #2357: @66 = @66' */
  /* #2358: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2359: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s76, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #2360: @434 = @434' */
  /* #2361: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2362: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #2363: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #2364: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2365: @66 = @64[12] */
  for (rr=(&w66), ss=w64+12; ss!=w64+13; ss+=1) *rr++ = *ss;
  /* #2366: @66 = @66' */
  /* #2367: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s76, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #2368: @434 = @434' */
  /* #2369: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2370: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2371: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #2372: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #2373: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2374: @66 = @64[12] */
  for (rr=(&w66), ss=w64+12; ss!=w64+13; ss+=1) *rr++ = *ss;
  /* #2375: @66 = @66' */
  /* #2376: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2377: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s76, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #2378: @434 = @434' */
  /* #2379: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2380: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #2381: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #2382: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2383: @66 = @64[11] */
  for (rr=(&w66), ss=w64+11; ss!=w64+12; ss+=1) *rr++ = *ss;
  /* #2384: @66 = @66' */
  /* #2385: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s76, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #2386: @434 = @434' */
  /* #2387: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2388: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2389: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #2390: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #2391: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2392: @66 = @64[11] */
  for (rr=(&w66), ss=w64+11; ss!=w64+12; ss+=1) *rr++ = *ss;
  /* #2393: @66 = @66' */
  /* #2394: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2395: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s76, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #2396: @434 = @434' */
  /* #2397: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2398: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #2399: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #2400: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2401: @66 = @64[10] */
  for (rr=(&w66), ss=w64+10; ss!=w64+11; ss+=1) *rr++ = *ss;
  /* #2402: @66 = @66' */
  /* #2403: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s76, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #2404: @434 = @434' */
  /* #2405: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2406: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2407: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #2408: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #2409: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2410: @66 = @64[10] */
  for (rr=(&w66), ss=w64+10; ss!=w64+11; ss+=1) *rr++ = *ss;
  /* #2411: @66 = @66' */
  /* #2412: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2413: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s76, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #2414: @434 = @434' */
  /* #2415: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2416: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #2417: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #2418: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2419: @66 = @64[9] */
  for (rr=(&w66), ss=w64+9; ss!=w64+10; ss+=1) *rr++ = *ss;
  /* #2420: @66 = @66' */
  /* #2421: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s76, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #2422: @434 = @434' */
  /* #2423: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2424: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2425: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #2426: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #2427: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2428: @66 = @64[9] */
  for (rr=(&w66), ss=w64+9; ss!=w64+10; ss+=1) *rr++ = *ss;
  /* #2429: @66 = @66' */
  /* #2430: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2431: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s76, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #2432: @434 = @434' */
  /* #2433: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2434: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #2435: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #2436: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2437: @66 = @64[8] */
  for (rr=(&w66), ss=w64+8; ss!=w64+9; ss+=1) *rr++ = *ss;
  /* #2438: @66 = @66' */
  /* #2439: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s76, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #2440: @434 = @434' */
  /* #2441: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2442: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2443: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #2444: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #2445: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2446: @66 = @64[8] */
  for (rr=(&w66), ss=w64+8; ss!=w64+9; ss+=1) *rr++ = *ss;
  /* #2447: @66 = @66' */
  /* #2448: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2449: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s76, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #2450: @434 = @434' */
  /* #2451: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2452: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #2453: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #2454: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2455: @66 = @64[7] */
  for (rr=(&w66), ss=w64+7; ss!=w64+8; ss+=1) *rr++ = *ss;
  /* #2456: @66 = @66' */
  /* #2457: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s76, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #2458: @434 = @434' */
  /* #2459: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2460: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2461: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #2462: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #2463: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2464: @66 = @64[7] */
  for (rr=(&w66), ss=w64+7; ss!=w64+8; ss+=1) *rr++ = *ss;
  /* #2465: @66 = @66' */
  /* #2466: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2467: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s76, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #2468: @434 = @434' */
  /* #2469: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2470: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #2471: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #2472: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2473: @66 = @64[6] */
  for (rr=(&w66), ss=w64+6; ss!=w64+7; ss+=1) *rr++ = *ss;
  /* #2474: @66 = @66' */
  /* #2475: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s76, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #2476: @434 = @434' */
  /* #2477: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2478: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2479: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #2480: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #2481: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2482: @66 = @64[6] */
  for (rr=(&w66), ss=w64+6; ss!=w64+7; ss+=1) *rr++ = *ss;
  /* #2483: @66 = @66' */
  /* #2484: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2485: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s76, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #2486: @434 = @434' */
  /* #2487: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2488: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #2489: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #2490: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2491: @66 = @64[5] */
  for (rr=(&w66), ss=w64+5; ss!=w64+6; ss+=1) *rr++ = *ss;
  /* #2492: @66 = @66' */
  /* #2493: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s76, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #2494: @434 = @434' */
  /* #2495: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2496: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2497: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #2498: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #2499: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2500: @66 = @64[5] */
  for (rr=(&w66), ss=w64+5; ss!=w64+6; ss+=1) *rr++ = *ss;
  /* #2501: @66 = @66' */
  /* #2502: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2503: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s76, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #2504: @434 = @434' */
  /* #2505: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2506: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #2507: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #2508: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2509: @66 = @64[4] */
  for (rr=(&w66), ss=w64+4; ss!=w64+5; ss+=1) *rr++ = *ss;
  /* #2510: @66 = @66' */
  /* #2511: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s76, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #2512: @434 = @434' */
  /* #2513: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2514: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2515: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #2516: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #2517: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2518: @66 = @64[4] */
  for (rr=(&w66), ss=w64+4; ss!=w64+5; ss+=1) *rr++ = *ss;
  /* #2519: @66 = @66' */
  /* #2520: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2521: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s76, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #2522: @434 = @434' */
  /* #2523: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2524: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #2525: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #2526: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2527: @66 = @64[3] */
  for (rr=(&w66), ss=w64+3; ss!=w64+4; ss+=1) *rr++ = *ss;
  /* #2528: @66 = @66' */
  /* #2529: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s76, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #2530: @434 = @434' */
  /* #2531: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2532: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2533: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #2534: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #2535: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2536: @66 = @64[3] */
  for (rr=(&w66), ss=w64+3; ss!=w64+4; ss+=1) *rr++ = *ss;
  /* #2537: @66 = @66' */
  /* #2538: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2539: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s76, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #2540: @434 = @434' */
  /* #2541: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2542: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #2543: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #2544: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2545: @66 = @64[2] */
  for (rr=(&w66), ss=w64+2; ss!=w64+3; ss+=1) *rr++ = *ss;
  /* #2546: @66 = @66' */
  /* #2547: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s76, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #2548: @434 = @434' */
  /* #2549: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2550: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2551: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #2552: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #2553: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2554: @66 = @64[2] */
  for (rr=(&w66), ss=w64+2; ss!=w64+3; ss+=1) *rr++ = *ss;
  /* #2555: @66 = @66' */
  /* #2556: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2557: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s76, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #2558: @434 = @434' */
  /* #2559: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2560: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #2561: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #2562: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2563: @66 = @64[1] */
  for (rr=(&w66), ss=w64+1; ss!=w64+2; ss+=1) *rr++ = *ss;
  /* #2564: @66 = @66' */
  /* #2565: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s76, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #2566: @434 = @434' */
  /* #2567: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2568: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2569: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #2570: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #2571: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2572: @66 = @64[1] */
  for (rr=(&w66), ss=w64+1; ss!=w64+2; ss+=1) *rr++ = *ss;
  /* #2573: @66 = @66' */
  /* #2574: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2575: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s76, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #2576: @434 = @434' */
  /* #2577: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2578: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #2579: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #2580: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2581: @66 = @64[0] */
  for (rr=(&w66), ss=w64+0; ss!=w64+1; ss+=1) *rr++ = *ss;
  /* #2582: @66 = @66' */
  /* #2583: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s76, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #2584: @434 = @434' */
  /* #2585: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #2586: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2587: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #2588: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #2589: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #2590: @66 = @64[0] */
  for (rr=(&w66), ss=w64+0; ss!=w64+1; ss+=1) *rr++ = *ss;
  /* #2591: @66 = @66' */
  /* #2592: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2593: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s76, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #2594: @434 = @434' */
  /* #2595: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #2596: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #2597: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #2598: @1 = vec(@1) */
  /* #2599: @4 = zeros(4x25) */
  casadi_clear(w4, 100);
  /* #2600: (@4[96:100] += @106) */
  for (rr=w4+96, ss=w106; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #2601: (@4[92:96] += @490) */
  for (rr=w4+92, ss=w490; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #2602: (@4[88:92] += @493) */
  for (rr=w4+88, ss=w493; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #2603: (@4[84:88] += @496) */
  for (rr=w4+84, ss=w496; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #2604: (@4[80:84] += @499) */
  for (rr=w4+80, ss=w499; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #2605: (@4[76:80] += @502) */
  for (rr=w4+76, ss=w502; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #2606: (@4[72:76] += @505) */
  for (rr=w4+72, ss=w505; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #2607: (@4[68:72] += @508) */
  for (rr=w4+68, ss=w508; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #2608: (@4[64:68] += @511) */
  for (rr=w4+64, ss=w511; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #2609: (@4[60:64] += @514) */
  for (rr=w4+60, ss=w514; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #2610: (@4[56:60] += @517) */
  for (rr=w4+56, ss=w517; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #2611: (@4[52:56] += @520) */
  for (rr=w4+52, ss=w520; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #2612: (@4[48:52] += @523) */
  for (rr=w4+48, ss=w523; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #2613: (@4[44:48] += @526) */
  for (rr=w4+44, ss=w526; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #2614: (@4[40:44] += @529) */
  for (rr=w4+40, ss=w529; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #2615: (@4[36:40] += @532) */
  for (rr=w4+36, ss=w532; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #2616: (@4[32:36] += @535) */
  for (rr=w4+32, ss=w535; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #2617: (@4[28:32] += @538) */
  for (rr=w4+28, ss=w538; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #2618: (@4[24:28] += @541) */
  for (rr=w4+24, ss=w541; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #2619: (@4[20:24] += @544) */
  for (rr=w4+20, ss=w544; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #2620: (@4[16:20] += @547) */
  for (rr=w4+16, ss=w547; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #2621: (@4[12:16] += @550) */
  for (rr=w4+12, ss=w550; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #2622: (@4[8:12] += @553) */
  for (rr=w4+8, ss=w553; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #2623: (@4[4:8] += @556) */
  for (rr=w4+4, ss=w556; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #2624: (@4[:4] += @559) */
  for (rr=w4+0, ss=w559; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #2625: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2626: @66 = @65[24] */
  for (rr=(&w66), ss=w65+24; ss!=w65+25; ss+=1) *rr++ = *ss;
  /* #2627: @66 = @66' */
  /* #2628: @559 = mac(@66,@562,@559) */
  casadi_mtimes((&w66), casadi_s77, w562, casadi_s72, w559, casadi_s71, w, 0);
  /* #2629: @559 = @559' */
  /* #2630: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2631: (@4[96:100] += @559) */
  for (rr=w4+96, ss=w559; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #2632: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2633: @66 = @65[24] */
  for (rr=(&w66), ss=w65+24; ss!=w65+25; ss+=1) *rr++ = *ss;
  /* #2634: @66 = @66' */
  /* #2635: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2636: @559 = mac(@66,@563,@559) */
  casadi_mtimes((&w66), casadi_s77, w563, casadi_s72, w559, casadi_s71, w, 0);
  /* #2637: @559 = @559' */
  /* #2638: (@4[96:100] += @559) */
  for (rr=w4+96, ss=w559; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #2639: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2640: @66 = @65[23] */
  for (rr=(&w66), ss=w65+23; ss!=w65+24; ss+=1) *rr++ = *ss;
  /* #2641: @66 = @66' */
  /* #2642: @559 = mac(@66,@564,@559) */
  casadi_mtimes((&w66), casadi_s77, w564, casadi_s72, w559, casadi_s71, w, 0);
  /* #2643: @559 = @559' */
  /* #2644: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2645: (@4[92:96] += @559) */
  for (rr=w4+92, ss=w559; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #2646: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2647: @66 = @65[23] */
  for (rr=(&w66), ss=w65+23; ss!=w65+24; ss+=1) *rr++ = *ss;
  /* #2648: @66 = @66' */
  /* #2649: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2650: @559 = mac(@66,@565,@559) */
  casadi_mtimes((&w66), casadi_s77, w565, casadi_s72, w559, casadi_s71, w, 0);
  /* #2651: @559 = @559' */
  /* #2652: (@4[92:96] += @559) */
  for (rr=w4+92, ss=w559; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #2653: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2654: @66 = @65[22] */
  for (rr=(&w66), ss=w65+22; ss!=w65+23; ss+=1) *rr++ = *ss;
  /* #2655: @66 = @66' */
  /* #2656: @559 = mac(@66,@566,@559) */
  casadi_mtimes((&w66), casadi_s77, w566, casadi_s72, w559, casadi_s71, w, 0);
  /* #2657: @559 = @559' */
  /* #2658: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2659: (@4[88:92] += @559) */
  for (rr=w4+88, ss=w559; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #2660: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2661: @66 = @65[22] */
  for (rr=(&w66), ss=w65+22; ss!=w65+23; ss+=1) *rr++ = *ss;
  /* #2662: @66 = @66' */
  /* #2663: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2664: @559 = mac(@66,@567,@559) */
  casadi_mtimes((&w66), casadi_s77, w567, casadi_s72, w559, casadi_s71, w, 0);
  /* #2665: @559 = @559' */
  /* #2666: (@4[88:92] += @559) */
  for (rr=w4+88, ss=w559; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #2667: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2668: @66 = @65[21] */
  for (rr=(&w66), ss=w65+21; ss!=w65+22; ss+=1) *rr++ = *ss;
  /* #2669: @66 = @66' */
  /* #2670: @559 = mac(@66,@568,@559) */
  casadi_mtimes((&w66), casadi_s77, w568, casadi_s72, w559, casadi_s71, w, 0);
  /* #2671: @559 = @559' */
  /* #2672: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2673: (@4[84:88] += @559) */
  for (rr=w4+84, ss=w559; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #2674: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2675: @66 = @65[21] */
  for (rr=(&w66), ss=w65+21; ss!=w65+22; ss+=1) *rr++ = *ss;
  /* #2676: @66 = @66' */
  /* #2677: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2678: @559 = mac(@66,@569,@559) */
  casadi_mtimes((&w66), casadi_s77, w569, casadi_s72, w559, casadi_s71, w, 0);
  /* #2679: @559 = @559' */
  /* #2680: (@4[84:88] += @559) */
  for (rr=w4+84, ss=w559; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #2681: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2682: @66 = @65[20] */
  for (rr=(&w66), ss=w65+20; ss!=w65+21; ss+=1) *rr++ = *ss;
  /* #2683: @66 = @66' */
  /* #2684: @559 = mac(@66,@570,@559) */
  casadi_mtimes((&w66), casadi_s77, w570, casadi_s72, w559, casadi_s71, w, 0);
  /* #2685: @559 = @559' */
  /* #2686: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2687: (@4[80:84] += @559) */
  for (rr=w4+80, ss=w559; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #2688: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2689: @66 = @65[20] */
  for (rr=(&w66), ss=w65+20; ss!=w65+21; ss+=1) *rr++ = *ss;
  /* #2690: @66 = @66' */
  /* #2691: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2692: @559 = mac(@66,@571,@559) */
  casadi_mtimes((&w66), casadi_s77, w571, casadi_s72, w559, casadi_s71, w, 0);
  /* #2693: @559 = @559' */
  /* #2694: (@4[80:84] += @559) */
  for (rr=w4+80, ss=w559; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #2695: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2696: @66 = @65[19] */
  for (rr=(&w66), ss=w65+19; ss!=w65+20; ss+=1) *rr++ = *ss;
  /* #2697: @66 = @66' */
  /* #2698: @559 = mac(@66,@572,@559) */
  casadi_mtimes((&w66), casadi_s77, w572, casadi_s72, w559, casadi_s71, w, 0);
  /* #2699: @559 = @559' */
  /* #2700: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2701: (@4[76:80] += @559) */
  for (rr=w4+76, ss=w559; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #2702: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2703: @66 = @65[19] */
  for (rr=(&w66), ss=w65+19; ss!=w65+20; ss+=1) *rr++ = *ss;
  /* #2704: @66 = @66' */
  /* #2705: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2706: @559 = mac(@66,@573,@559) */
  casadi_mtimes((&w66), casadi_s77, w573, casadi_s72, w559, casadi_s71, w, 0);
  /* #2707: @559 = @559' */
  /* #2708: (@4[76:80] += @559) */
  for (rr=w4+76, ss=w559; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #2709: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2710: @66 = @65[18] */
  for (rr=(&w66), ss=w65+18; ss!=w65+19; ss+=1) *rr++ = *ss;
  /* #2711: @66 = @66' */
  /* #2712: @559 = mac(@66,@574,@559) */
  casadi_mtimes((&w66), casadi_s77, w574, casadi_s72, w559, casadi_s71, w, 0);
  /* #2713: @559 = @559' */
  /* #2714: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2715: (@4[72:76] += @559) */
  for (rr=w4+72, ss=w559; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #2716: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2717: @66 = @65[18] */
  for (rr=(&w66), ss=w65+18; ss!=w65+19; ss+=1) *rr++ = *ss;
  /* #2718: @66 = @66' */
  /* #2719: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2720: @559 = mac(@66,@575,@559) */
  casadi_mtimes((&w66), casadi_s77, w575, casadi_s72, w559, casadi_s71, w, 0);
  /* #2721: @559 = @559' */
  /* #2722: (@4[72:76] += @559) */
  for (rr=w4+72, ss=w559; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #2723: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2724: @66 = @65[17] */
  for (rr=(&w66), ss=w65+17; ss!=w65+18; ss+=1) *rr++ = *ss;
  /* #2725: @66 = @66' */
  /* #2726: @559 = mac(@66,@576,@559) */
  casadi_mtimes((&w66), casadi_s77, w576, casadi_s72, w559, casadi_s71, w, 0);
  /* #2727: @559 = @559' */
  /* #2728: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2729: (@4[68:72] += @559) */
  for (rr=w4+68, ss=w559; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #2730: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2731: @66 = @65[17] */
  for (rr=(&w66), ss=w65+17; ss!=w65+18; ss+=1) *rr++ = *ss;
  /* #2732: @66 = @66' */
  /* #2733: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2734: @559 = mac(@66,@577,@559) */
  casadi_mtimes((&w66), casadi_s77, w577, casadi_s72, w559, casadi_s71, w, 0);
  /* #2735: @559 = @559' */
  /* #2736: (@4[68:72] += @559) */
  for (rr=w4+68, ss=w559; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #2737: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2738: @66 = @65[16] */
  for (rr=(&w66), ss=w65+16; ss!=w65+17; ss+=1) *rr++ = *ss;
  /* #2739: @66 = @66' */
  /* #2740: @559 = mac(@66,@578,@559) */
  casadi_mtimes((&w66), casadi_s77, w578, casadi_s72, w559, casadi_s71, w, 0);
  /* #2741: @559 = @559' */
  /* #2742: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2743: (@4[64:68] += @559) */
  for (rr=w4+64, ss=w559; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #2744: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2745: @66 = @65[16] */
  for (rr=(&w66), ss=w65+16; ss!=w65+17; ss+=1) *rr++ = *ss;
  /* #2746: @66 = @66' */
  /* #2747: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2748: @559 = mac(@66,@579,@559) */
  casadi_mtimes((&w66), casadi_s77, w579, casadi_s72, w559, casadi_s71, w, 0);
  /* #2749: @559 = @559' */
  /* #2750: (@4[64:68] += @559) */
  for (rr=w4+64, ss=w559; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #2751: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2752: @66 = @65[15] */
  for (rr=(&w66), ss=w65+15; ss!=w65+16; ss+=1) *rr++ = *ss;
  /* #2753: @66 = @66' */
  /* #2754: @559 = mac(@66,@580,@559) */
  casadi_mtimes((&w66), casadi_s77, w580, casadi_s72, w559, casadi_s71, w, 0);
  /* #2755: @559 = @559' */
  /* #2756: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2757: (@4[60:64] += @559) */
  for (rr=w4+60, ss=w559; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #2758: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2759: @66 = @65[15] */
  for (rr=(&w66), ss=w65+15; ss!=w65+16; ss+=1) *rr++ = *ss;
  /* #2760: @66 = @66' */
  /* #2761: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2762: @559 = mac(@66,@581,@559) */
  casadi_mtimes((&w66), casadi_s77, w581, casadi_s72, w559, casadi_s71, w, 0);
  /* #2763: @559 = @559' */
  /* #2764: (@4[60:64] += @559) */
  for (rr=w4+60, ss=w559; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #2765: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2766: @66 = @65[14] */
  for (rr=(&w66), ss=w65+14; ss!=w65+15; ss+=1) *rr++ = *ss;
  /* #2767: @66 = @66' */
  /* #2768: @559 = mac(@66,@582,@559) */
  casadi_mtimes((&w66), casadi_s77, w582, casadi_s72, w559, casadi_s71, w, 0);
  /* #2769: @559 = @559' */
  /* #2770: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2771: (@4[56:60] += @559) */
  for (rr=w4+56, ss=w559; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #2772: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2773: @66 = @65[14] */
  for (rr=(&w66), ss=w65+14; ss!=w65+15; ss+=1) *rr++ = *ss;
  /* #2774: @66 = @66' */
  /* #2775: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2776: @559 = mac(@66,@583,@559) */
  casadi_mtimes((&w66), casadi_s77, w583, casadi_s72, w559, casadi_s71, w, 0);
  /* #2777: @559 = @559' */
  /* #2778: (@4[56:60] += @559) */
  for (rr=w4+56, ss=w559; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #2779: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2780: @66 = @65[13] */
  for (rr=(&w66), ss=w65+13; ss!=w65+14; ss+=1) *rr++ = *ss;
  /* #2781: @66 = @66' */
  /* #2782: @559 = mac(@66,@584,@559) */
  casadi_mtimes((&w66), casadi_s77, w584, casadi_s72, w559, casadi_s71, w, 0);
  /* #2783: @559 = @559' */
  /* #2784: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2785: (@4[52:56] += @559) */
  for (rr=w4+52, ss=w559; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #2786: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2787: @66 = @65[13] */
  for (rr=(&w66), ss=w65+13; ss!=w65+14; ss+=1) *rr++ = *ss;
  /* #2788: @66 = @66' */
  /* #2789: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2790: @559 = mac(@66,@585,@559) */
  casadi_mtimes((&w66), casadi_s77, w585, casadi_s72, w559, casadi_s71, w, 0);
  /* #2791: @559 = @559' */
  /* #2792: (@4[52:56] += @559) */
  for (rr=w4+52, ss=w559; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #2793: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2794: @66 = @65[12] */
  for (rr=(&w66), ss=w65+12; ss!=w65+13; ss+=1) *rr++ = *ss;
  /* #2795: @66 = @66' */
  /* #2796: @559 = mac(@66,@586,@559) */
  casadi_mtimes((&w66), casadi_s77, w586, casadi_s72, w559, casadi_s71, w, 0);
  /* #2797: @559 = @559' */
  /* #2798: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2799: (@4[48:52] += @559) */
  for (rr=w4+48, ss=w559; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #2800: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2801: @66 = @65[12] */
  for (rr=(&w66), ss=w65+12; ss!=w65+13; ss+=1) *rr++ = *ss;
  /* #2802: @66 = @66' */
  /* #2803: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2804: @559 = mac(@66,@587,@559) */
  casadi_mtimes((&w66), casadi_s77, w587, casadi_s72, w559, casadi_s71, w, 0);
  /* #2805: @559 = @559' */
  /* #2806: (@4[48:52] += @559) */
  for (rr=w4+48, ss=w559; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #2807: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2808: @66 = @65[11] */
  for (rr=(&w66), ss=w65+11; ss!=w65+12; ss+=1) *rr++ = *ss;
  /* #2809: @66 = @66' */
  /* #2810: @559 = mac(@66,@588,@559) */
  casadi_mtimes((&w66), casadi_s77, w588, casadi_s72, w559, casadi_s71, w, 0);
  /* #2811: @559 = @559' */
  /* #2812: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2813: (@4[44:48] += @559) */
  for (rr=w4+44, ss=w559; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #2814: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2815: @66 = @65[11] */
  for (rr=(&w66), ss=w65+11; ss!=w65+12; ss+=1) *rr++ = *ss;
  /* #2816: @66 = @66' */
  /* #2817: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2818: @559 = mac(@66,@589,@559) */
  casadi_mtimes((&w66), casadi_s77, w589, casadi_s72, w559, casadi_s71, w, 0);
  /* #2819: @559 = @559' */
  /* #2820: (@4[44:48] += @559) */
  for (rr=w4+44, ss=w559; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #2821: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2822: @66 = @65[10] */
  for (rr=(&w66), ss=w65+10; ss!=w65+11; ss+=1) *rr++ = *ss;
  /* #2823: @66 = @66' */
  /* #2824: @559 = mac(@66,@590,@559) */
  casadi_mtimes((&w66), casadi_s77, w590, casadi_s72, w559, casadi_s71, w, 0);
  /* #2825: @559 = @559' */
  /* #2826: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2827: (@4[40:44] += @559) */
  for (rr=w4+40, ss=w559; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #2828: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2829: @66 = @65[10] */
  for (rr=(&w66), ss=w65+10; ss!=w65+11; ss+=1) *rr++ = *ss;
  /* #2830: @66 = @66' */
  /* #2831: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2832: @559 = mac(@66,@591,@559) */
  casadi_mtimes((&w66), casadi_s77, w591, casadi_s72, w559, casadi_s71, w, 0);
  /* #2833: @559 = @559' */
  /* #2834: (@4[40:44] += @559) */
  for (rr=w4+40, ss=w559; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #2835: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2836: @66 = @65[9] */
  for (rr=(&w66), ss=w65+9; ss!=w65+10; ss+=1) *rr++ = *ss;
  /* #2837: @66 = @66' */
  /* #2838: @559 = mac(@66,@592,@559) */
  casadi_mtimes((&w66), casadi_s77, w592, casadi_s72, w559, casadi_s71, w, 0);
  /* #2839: @559 = @559' */
  /* #2840: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2841: (@4[36:40] += @559) */
  for (rr=w4+36, ss=w559; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #2842: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2843: @66 = @65[9] */
  for (rr=(&w66), ss=w65+9; ss!=w65+10; ss+=1) *rr++ = *ss;
  /* #2844: @66 = @66' */
  /* #2845: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2846: @559 = mac(@66,@593,@559) */
  casadi_mtimes((&w66), casadi_s77, w593, casadi_s72, w559, casadi_s71, w, 0);
  /* #2847: @559 = @559' */
  /* #2848: (@4[36:40] += @559) */
  for (rr=w4+36, ss=w559; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #2849: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2850: @66 = @65[8] */
  for (rr=(&w66), ss=w65+8; ss!=w65+9; ss+=1) *rr++ = *ss;
  /* #2851: @66 = @66' */
  /* #2852: @559 = mac(@66,@594,@559) */
  casadi_mtimes((&w66), casadi_s77, w594, casadi_s72, w559, casadi_s71, w, 0);
  /* #2853: @559 = @559' */
  /* #2854: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2855: (@4[32:36] += @559) */
  for (rr=w4+32, ss=w559; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #2856: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2857: @66 = @65[8] */
  for (rr=(&w66), ss=w65+8; ss!=w65+9; ss+=1) *rr++ = *ss;
  /* #2858: @66 = @66' */
  /* #2859: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2860: @559 = mac(@66,@595,@559) */
  casadi_mtimes((&w66), casadi_s77, w595, casadi_s72, w559, casadi_s71, w, 0);
  /* #2861: @559 = @559' */
  /* #2862: (@4[32:36] += @559) */
  for (rr=w4+32, ss=w559; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #2863: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2864: @66 = @65[7] */
  for (rr=(&w66), ss=w65+7; ss!=w65+8; ss+=1) *rr++ = *ss;
  /* #2865: @66 = @66' */
  /* #2866: @559 = mac(@66,@596,@559) */
  casadi_mtimes((&w66), casadi_s77, w596, casadi_s72, w559, casadi_s71, w, 0);
  /* #2867: @559 = @559' */
  /* #2868: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2869: (@4[28:32] += @559) */
  for (rr=w4+28, ss=w559; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #2870: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2871: @66 = @65[7] */
  for (rr=(&w66), ss=w65+7; ss!=w65+8; ss+=1) *rr++ = *ss;
  /* #2872: @66 = @66' */
  /* #2873: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2874: @559 = mac(@66,@597,@559) */
  casadi_mtimes((&w66), casadi_s77, w597, casadi_s72, w559, casadi_s71, w, 0);
  /* #2875: @559 = @559' */
  /* #2876: (@4[28:32] += @559) */
  for (rr=w4+28, ss=w559; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #2877: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2878: @66 = @65[6] */
  for (rr=(&w66), ss=w65+6; ss!=w65+7; ss+=1) *rr++ = *ss;
  /* #2879: @66 = @66' */
  /* #2880: @559 = mac(@66,@598,@559) */
  casadi_mtimes((&w66), casadi_s77, w598, casadi_s72, w559, casadi_s71, w, 0);
  /* #2881: @559 = @559' */
  /* #2882: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2883: (@4[24:28] += @559) */
  for (rr=w4+24, ss=w559; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #2884: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2885: @66 = @65[6] */
  for (rr=(&w66), ss=w65+6; ss!=w65+7; ss+=1) *rr++ = *ss;
  /* #2886: @66 = @66' */
  /* #2887: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2888: @559 = mac(@66,@599,@559) */
  casadi_mtimes((&w66), casadi_s77, w599, casadi_s72, w559, casadi_s71, w, 0);
  /* #2889: @559 = @559' */
  /* #2890: (@4[24:28] += @559) */
  for (rr=w4+24, ss=w559; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #2891: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2892: @66 = @65[5] */
  for (rr=(&w66), ss=w65+5; ss!=w65+6; ss+=1) *rr++ = *ss;
  /* #2893: @66 = @66' */
  /* #2894: @559 = mac(@66,@600,@559) */
  casadi_mtimes((&w66), casadi_s77, w600, casadi_s72, w559, casadi_s71, w, 0);
  /* #2895: @559 = @559' */
  /* #2896: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2897: (@4[20:24] += @559) */
  for (rr=w4+20, ss=w559; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #2898: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2899: @66 = @65[5] */
  for (rr=(&w66), ss=w65+5; ss!=w65+6; ss+=1) *rr++ = *ss;
  /* #2900: @66 = @66' */
  /* #2901: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2902: @559 = mac(@66,@601,@559) */
  casadi_mtimes((&w66), casadi_s77, w601, casadi_s72, w559, casadi_s71, w, 0);
  /* #2903: @559 = @559' */
  /* #2904: (@4[20:24] += @559) */
  for (rr=w4+20, ss=w559; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #2905: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2906: @66 = @65[4] */
  for (rr=(&w66), ss=w65+4; ss!=w65+5; ss+=1) *rr++ = *ss;
  /* #2907: @66 = @66' */
  /* #2908: @559 = mac(@66,@602,@559) */
  casadi_mtimes((&w66), casadi_s77, w602, casadi_s72, w559, casadi_s71, w, 0);
  /* #2909: @559 = @559' */
  /* #2910: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2911: (@4[16:20] += @559) */
  for (rr=w4+16, ss=w559; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #2912: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2913: @66 = @65[4] */
  for (rr=(&w66), ss=w65+4; ss!=w65+5; ss+=1) *rr++ = *ss;
  /* #2914: @66 = @66' */
  /* #2915: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2916: @559 = mac(@66,@603,@559) */
  casadi_mtimes((&w66), casadi_s77, w603, casadi_s72, w559, casadi_s71, w, 0);
  /* #2917: @559 = @559' */
  /* #2918: (@4[16:20] += @559) */
  for (rr=w4+16, ss=w559; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #2919: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2920: @66 = @65[3] */
  for (rr=(&w66), ss=w65+3; ss!=w65+4; ss+=1) *rr++ = *ss;
  /* #2921: @66 = @66' */
  /* #2922: @559 = mac(@66,@604,@559) */
  casadi_mtimes((&w66), casadi_s77, w604, casadi_s72, w559, casadi_s71, w, 0);
  /* #2923: @559 = @559' */
  /* #2924: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2925: (@4[12:16] += @559) */
  for (rr=w4+12, ss=w559; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #2926: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2927: @66 = @65[3] */
  for (rr=(&w66), ss=w65+3; ss!=w65+4; ss+=1) *rr++ = *ss;
  /* #2928: @66 = @66' */
  /* #2929: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2930: @559 = mac(@66,@605,@559) */
  casadi_mtimes((&w66), casadi_s77, w605, casadi_s72, w559, casadi_s71, w, 0);
  /* #2931: @559 = @559' */
  /* #2932: (@4[12:16] += @559) */
  for (rr=w4+12, ss=w559; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #2933: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2934: @66 = @65[2] */
  for (rr=(&w66), ss=w65+2; ss!=w65+3; ss+=1) *rr++ = *ss;
  /* #2935: @66 = @66' */
  /* #2936: @559 = mac(@66,@606,@559) */
  casadi_mtimes((&w66), casadi_s77, w606, casadi_s72, w559, casadi_s71, w, 0);
  /* #2937: @559 = @559' */
  /* #2938: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2939: (@4[8:12] += @559) */
  for (rr=w4+8, ss=w559; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #2940: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2941: @66 = @65[2] */
  for (rr=(&w66), ss=w65+2; ss!=w65+3; ss+=1) *rr++ = *ss;
  /* #2942: @66 = @66' */
  /* #2943: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2944: @559 = mac(@66,@607,@559) */
  casadi_mtimes((&w66), casadi_s77, w607, casadi_s72, w559, casadi_s71, w, 0);
  /* #2945: @559 = @559' */
  /* #2946: (@4[8:12] += @559) */
  for (rr=w4+8, ss=w559; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #2947: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2948: @66 = @65[1] */
  for (rr=(&w66), ss=w65+1; ss!=w65+2; ss+=1) *rr++ = *ss;
  /* #2949: @66 = @66' */
  /* #2950: @559 = mac(@66,@608,@559) */
  casadi_mtimes((&w66), casadi_s77, w608, casadi_s72, w559, casadi_s71, w, 0);
  /* #2951: @559 = @559' */
  /* #2952: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2953: (@4[4:8] += @559) */
  for (rr=w4+4, ss=w559; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #2954: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2955: @66 = @65[1] */
  for (rr=(&w66), ss=w65+1; ss!=w65+2; ss+=1) *rr++ = *ss;
  /* #2956: @66 = @66' */
  /* #2957: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2958: @559 = mac(@66,@609,@559) */
  casadi_mtimes((&w66), casadi_s77, w609, casadi_s72, w559, casadi_s71, w, 0);
  /* #2959: @559 = @559' */
  /* #2960: (@4[4:8] += @559) */
  for (rr=w4+4, ss=w559; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #2961: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2962: @66 = @65[0] */
  for (rr=(&w66), ss=w65+0; ss!=w65+1; ss+=1) *rr++ = *ss;
  /* #2963: @66 = @66' */
  /* #2964: @559 = mac(@66,@610,@559) */
  casadi_mtimes((&w66), casadi_s77, w610, casadi_s72, w559, casadi_s71, w, 0);
  /* #2965: @559 = @559' */
  /* #2966: @559 = (@63*@559) */
  for (i=0, rr=w559, cs=w559; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #2967: (@4[:4] += @559) */
  for (rr=w4+0, ss=w559; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #2968: @559 = zeros(1x4) */
  casadi_clear(w559, 4);
  /* #2969: @66 = @65[0] */
  for (rr=(&w66), ss=w65+0; ss!=w65+1; ss+=1) *rr++ = *ss;
  /* #2970: @66 = @66' */
  /* #2971: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #2972: @559 = mac(@66,@611,@559) */
  casadi_mtimes((&w66), casadi_s77, w611, casadi_s72, w559, casadi_s71, w, 0);
  /* #2973: @559 = @559' */
  /* #2974: (@4[:4] += @559) */
  for (rr=w4+0, ss=w559; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #2975: @4 = vec(@4) */
  /* #2976: @612 = vertcat(@1, @4) */
  rr=w612;
  for (i=0, cs=w1; i<364; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<100; ++i) *rr++ = *cs++;
  /* #2977: (@0[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 5100, 5101, 5102, 5103, 5116, 5117, 5118, 5119, 5132, 5133, 5134, 5135, 5148, 5149, 5150, 5151, 5164, 5165, 5166, 5167, 5180, 5181, 5182, 5183, 5196, 5197, 5198, 5199, 5212, 5213, 5214, 5215, 5228, 5229, 5230, 5231, 5244, 5245, 5246, 5247, 5260, 5261, 5262, 5263, 5276, 5277, 5278, 5279, 5292, 5293, 5294, 5295, 5308, 5309, 5310, 5311, 5324, 5325, 5326, 5327, 5340, 5341, 5342, 5343, 5356, 5357, 5358, 5359, 5372, 5373, 5374, 5375, 5388, 5389, 5390, 5391, 5404, 5405, 5406, 5407, 5420, 5421, 5422, 5423, 5436, 5437, 5438, 5439, 5452, 5453, 5454, 5455, 5468, 5469, 5470, 5471, 5484, 5485, 5486, 5487] = @612) */
  for (cii=casadi_s78, rr=w0, ss=w612; cii!=casadi_s78+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #2978: (@0[1, 15, 29, 43, 57, 71, 85, 99, 113, 127, 141, 155, 169, 183, 197, 211, 225, 239, 253, 267, 281, 295, 309, 323, 337, 351, 365, 379, 393, 407, 421, 435, 449, 463, 477, 491, 505, 519, 533, 547, 561, 575, 589, 603, 617, 631, 645, 659, 673, 687, 701, 715, 729, 743, 757, 771, 785, 799, 813, 827, 841, 855, 869, 883, 897, 911, 925, 939, 953, 967, 981, 995, 1009, 1023, 1037, 1051, 1065, 1079, 1093, 1107, 1121, 1135, 1149, 1163, 1177, 1191, 1205, 1219, 1233, 1247, 1261, 1275, 1289, 1303, 1317, 1331, 1345, 1359, 1373, 1387, 1401, 1415, 1429, 1443, 1457, 1471, 1485, 1499, 1513, 1527, 1541, 1555, 1569, 1583, 1597, 1611, 1625, 1639, 1653, 1667, 1681, 1695, 1709, 1723, 1737, 1751, 1765, 1779, 1793, 1807, 1821, 1835, 1849, 1863, 1877, 1891, 1905, 1919, 1933, 1947, 1961, 1975, 1989, 2003, 2017, 2031, 2045, 2059, 2073, 2087, 2101, 2115, 2129, 2143, 2157, 2171, 2185, 2199, 2213, 2227, 2241, 2255, 2269, 2283, 2297, 2311, 2325, 2339, 2353, 2367, 2381, 2395, 2409, 2423, 2437, 2451, 2465, 2479, 2493, 2507, 2521, 2535, 2549, 2563, 2577, 2591, 2605, 2619, 2633, 2647, 2661, 2675, 2689, 2703, 2717, 2731, 2745, 2759, 2773, 2787, 2801, 2815, 2829, 2843, 2857, 2871, 2885, 2899, 2913, 2927, 2941, 2955, 2969, 2983, 2997, 3011, 3025, 3039, 3053, 3067, 3081, 3095, 3109, 3123, 3137, 3151, 3165, 3179, 3193, 3207, 3221, 3235, 3249, 3263, 3277, 3291, 3305, 3319, 3333, 3347, 3361, 3375, 3389, 3403, 3417, 3431, 3445, 3459, 3473, 3487, 3501, 3515, 3529, 3543, 3557, 3571, 3585, 3599, 3613, 3627, 3641, 3655, 3669, 3683, 3697, 3711, 3725, 3739, 3753, 3767, 3781, 3795, 3809, 3823, 3837, 3851, 3865, 3879, 3893, 3907, 3921, 3935, 3949, 3963, 3977, 3991, 4005, 4019, 4033, 4047, 4061, 4075, 4089, 4103, 4117, 4131, 4145, 4159, 4173, 4187, 4201, 4215, 4229, 4243, 4257, 4271, 4285, 4299, 4313, 4327, 4341, 4355, 4369, 4383, 4397, 4411, 4425, 4439, 4453, 4467, 4481, 4495, 4509, 4523, 4537, 4551, 4565, 4579, 4593, 4607, 4621, 4635, 4649, 4663, 4677, 4691, 4705, 4719, 4733, 4747, 4761, 4775, 4789, 4803, 4817, 4831, 4845, 4859, 4873, 4887, 4901, 4915, 4929, 4943, 4957, 4971, 4985, 4999, 5013, 5027, 5041, 5055, 5069, 5083, 5097, 5101, 5105, 5109, 5113, 5117, 5121, 5125, 5129, 5133, 5137, 5141, 5145, 5149, 5153, 5157, 5161, 5165, 5169, 5173, 5177, 5181, 5185, 5189, 5193, 5197, 5201, 5205, 5209, 5213, 5217, 5221, 5225, 5229, 5233, 5237, 5241, 5245, 5249, 5253, 5257, 5261, 5265, 5269, 5273, 5277, 5281, 5285, 5289, 5293, 5297, 5301, 5305, 5309, 5313, 5317, 5321, 5325, 5329, 5333, 5337, 5341, 5345, 5349, 5353, 5357, 5361, 5365, 5369, 5373, 5377, 5381, 5385, 5389, 5393, 5397, 5401, 5405, 5409, 5413, 5417, 5421, 5425, 5429, 5433, 5437, 5441, 5445, 5449, 5453, 5457, 5461, 5465, 5469, 5473, 5477, 5481, 5485, 5489, 5493] = @612) */
  for (cii=casadi_s79, rr=w0, ss=w612; cii!=casadi_s79+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #2979: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #2980: (@1[336:350] += @94) */
  for (rr=w1+336, ss=w94; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #2981: (@1[322:336] += @122) */
  for (rr=w1+322, ss=w122; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #2982: (@1[308:322] += @135) */
  for (rr=w1+308, ss=w135; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #2983: (@1[294:308] += @148) */
  for (rr=w1+294, ss=w148; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #2984: (@1[280:294] += @161) */
  for (rr=w1+280, ss=w161; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #2985: (@1[266:280] += @174) */
  for (rr=w1+266, ss=w174; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #2986: (@1[252:266] += @187) */
  for (rr=w1+252, ss=w187; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #2987: (@1[238:252] += @200) */
  for (rr=w1+238, ss=w200; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #2988: (@1[224:238] += @213) */
  for (rr=w1+224, ss=w213; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #2989: (@1[210:224] += @226) */
  for (rr=w1+210, ss=w226; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #2990: (@1[196:210] += @239) */
  for (rr=w1+196, ss=w239; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #2991: (@1[182:196] += @252) */
  for (rr=w1+182, ss=w252; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #2992: (@1[168:182] += @265) */
  for (rr=w1+168, ss=w265; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #2993: (@1[154:168] += @278) */
  for (rr=w1+154, ss=w278; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #2994: (@1[140:154] += @291) */
  for (rr=w1+140, ss=w291; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #2995: (@1[126:140] += @304) */
  for (rr=w1+126, ss=w304; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #2996: (@1[112:126] += @317) */
  for (rr=w1+112, ss=w317; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #2997: (@1[98:112] += @330) */
  for (rr=w1+98, ss=w330; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #2998: (@1[84:98] += @343) */
  for (rr=w1+84, ss=w343; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #2999: (@1[70:84] += @356) */
  for (rr=w1+70, ss=w356; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #3000: (@1[56:70] += @369) */
  for (rr=w1+56, ss=w369; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #3001: (@1[42:56] += @382) */
  for (rr=w1+42, ss=w382; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #3002: (@1[28:42] += @395) */
  for (rr=w1+28, ss=w395; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #3003: (@1[14:28] += @408) */
  for (rr=w1+14, ss=w408; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #3004: (@1[:14] += @421) */
  for (rr=w1+0, ss=w421; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #3005: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3006: @66 = @67[25] */
  for (rr=(&w66), ss=w67+25; ss!=w67+26; ss+=1) *rr++ = *ss;
  /* #3007: @66 = @66' */
  /* #3008: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s80, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #3009: @434 = @434' */
  /* #3010: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3011: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3012: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #3013: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #3014: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3015: @66 = @67[25] */
  for (rr=(&w66), ss=w67+25; ss!=w67+26; ss+=1) *rr++ = *ss;
  /* #3016: @66 = @66' */
  /* #3017: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3018: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s80, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #3019: @434 = @434' */
  /* #3020: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3021: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #3022: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #3023: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3024: @66 = @67[24] */
  for (rr=(&w66), ss=w67+24; ss!=w67+25; ss+=1) *rr++ = *ss;
  /* #3025: @66 = @66' */
  /* #3026: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s80, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #3027: @434 = @434' */
  /* #3028: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3029: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3030: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #3031: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #3032: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3033: @66 = @67[24] */
  for (rr=(&w66), ss=w67+24; ss!=w67+25; ss+=1) *rr++ = *ss;
  /* #3034: @66 = @66' */
  /* #3035: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3036: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s80, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #3037: @434 = @434' */
  /* #3038: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3039: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #3040: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #3041: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3042: @66 = @67[23] */
  for (rr=(&w66), ss=w67+23; ss!=w67+24; ss+=1) *rr++ = *ss;
  /* #3043: @66 = @66' */
  /* #3044: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s80, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #3045: @434 = @434' */
  /* #3046: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3047: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3048: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #3049: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #3050: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3051: @66 = @67[23] */
  for (rr=(&w66), ss=w67+23; ss!=w67+24; ss+=1) *rr++ = *ss;
  /* #3052: @66 = @66' */
  /* #3053: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3054: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s80, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #3055: @434 = @434' */
  /* #3056: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3057: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #3058: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #3059: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3060: @66 = @67[22] */
  for (rr=(&w66), ss=w67+22; ss!=w67+23; ss+=1) *rr++ = *ss;
  /* #3061: @66 = @66' */
  /* #3062: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s80, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #3063: @434 = @434' */
  /* #3064: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3065: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3066: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #3067: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #3068: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3069: @66 = @67[22] */
  for (rr=(&w66), ss=w67+22; ss!=w67+23; ss+=1) *rr++ = *ss;
  /* #3070: @66 = @66' */
  /* #3071: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3072: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s80, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #3073: @434 = @434' */
  /* #3074: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3075: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #3076: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #3077: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3078: @66 = @67[21] */
  for (rr=(&w66), ss=w67+21; ss!=w67+22; ss+=1) *rr++ = *ss;
  /* #3079: @66 = @66' */
  /* #3080: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s80, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #3081: @434 = @434' */
  /* #3082: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3083: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3084: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #3085: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #3086: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3087: @66 = @67[21] */
  for (rr=(&w66), ss=w67+21; ss!=w67+22; ss+=1) *rr++ = *ss;
  /* #3088: @66 = @66' */
  /* #3089: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3090: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s80, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #3091: @434 = @434' */
  /* #3092: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3093: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #3094: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #3095: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3096: @66 = @67[20] */
  for (rr=(&w66), ss=w67+20; ss!=w67+21; ss+=1) *rr++ = *ss;
  /* #3097: @66 = @66' */
  /* #3098: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s80, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #3099: @434 = @434' */
  /* #3100: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3101: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3102: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #3103: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #3104: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3105: @66 = @67[20] */
  for (rr=(&w66), ss=w67+20; ss!=w67+21; ss+=1) *rr++ = *ss;
  /* #3106: @66 = @66' */
  /* #3107: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3108: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s80, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #3109: @434 = @434' */
  /* #3110: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3111: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #3112: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #3113: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3114: @66 = @67[19] */
  for (rr=(&w66), ss=w67+19; ss!=w67+20; ss+=1) *rr++ = *ss;
  /* #3115: @66 = @66' */
  /* #3116: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s80, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #3117: @434 = @434' */
  /* #3118: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3119: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3120: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #3121: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #3122: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3123: @66 = @67[19] */
  for (rr=(&w66), ss=w67+19; ss!=w67+20; ss+=1) *rr++ = *ss;
  /* #3124: @66 = @66' */
  /* #3125: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3126: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s80, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #3127: @434 = @434' */
  /* #3128: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3129: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #3130: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #3131: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3132: @66 = @67[18] */
  for (rr=(&w66), ss=w67+18; ss!=w67+19; ss+=1) *rr++ = *ss;
  /* #3133: @66 = @66' */
  /* #3134: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s80, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #3135: @434 = @434' */
  /* #3136: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3137: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3138: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #3139: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #3140: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3141: @66 = @67[18] */
  for (rr=(&w66), ss=w67+18; ss!=w67+19; ss+=1) *rr++ = *ss;
  /* #3142: @66 = @66' */
  /* #3143: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3144: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s80, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #3145: @434 = @434' */
  /* #3146: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3147: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #3148: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #3149: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3150: @66 = @67[17] */
  for (rr=(&w66), ss=w67+17; ss!=w67+18; ss+=1) *rr++ = *ss;
  /* #3151: @66 = @66' */
  /* #3152: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s80, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #3153: @434 = @434' */
  /* #3154: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3155: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3156: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #3157: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #3158: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3159: @66 = @67[17] */
  for (rr=(&w66), ss=w67+17; ss!=w67+18; ss+=1) *rr++ = *ss;
  /* #3160: @66 = @66' */
  /* #3161: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3162: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s80, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #3163: @434 = @434' */
  /* #3164: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3165: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #3166: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #3167: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3168: @66 = @67[16] */
  for (rr=(&w66), ss=w67+16; ss!=w67+17; ss+=1) *rr++ = *ss;
  /* #3169: @66 = @66' */
  /* #3170: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s80, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #3171: @434 = @434' */
  /* #3172: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3173: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3174: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #3175: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #3176: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3177: @66 = @67[16] */
  for (rr=(&w66), ss=w67+16; ss!=w67+17; ss+=1) *rr++ = *ss;
  /* #3178: @66 = @66' */
  /* #3179: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3180: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s80, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #3181: @434 = @434' */
  /* #3182: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3183: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #3184: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #3185: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3186: @66 = @67[15] */
  for (rr=(&w66), ss=w67+15; ss!=w67+16; ss+=1) *rr++ = *ss;
  /* #3187: @66 = @66' */
  /* #3188: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s80, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #3189: @434 = @434' */
  /* #3190: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3191: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3192: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #3193: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #3194: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3195: @66 = @67[15] */
  for (rr=(&w66), ss=w67+15; ss!=w67+16; ss+=1) *rr++ = *ss;
  /* #3196: @66 = @66' */
  /* #3197: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3198: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s80, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #3199: @434 = @434' */
  /* #3200: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3201: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #3202: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #3203: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3204: @66 = @67[14] */
  for (rr=(&w66), ss=w67+14; ss!=w67+15; ss+=1) *rr++ = *ss;
  /* #3205: @66 = @66' */
  /* #3206: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s80, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #3207: @434 = @434' */
  /* #3208: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3209: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3210: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #3211: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #3212: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3213: @66 = @67[14] */
  for (rr=(&w66), ss=w67+14; ss!=w67+15; ss+=1) *rr++ = *ss;
  /* #3214: @66 = @66' */
  /* #3215: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3216: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s80, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #3217: @434 = @434' */
  /* #3218: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3219: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #3220: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #3221: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3222: @66 = @67[13] */
  for (rr=(&w66), ss=w67+13; ss!=w67+14; ss+=1) *rr++ = *ss;
  /* #3223: @66 = @66' */
  /* #3224: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s80, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #3225: @434 = @434' */
  /* #3226: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3227: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3228: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #3229: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #3230: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3231: @66 = @67[13] */
  for (rr=(&w66), ss=w67+13; ss!=w67+14; ss+=1) *rr++ = *ss;
  /* #3232: @66 = @66' */
  /* #3233: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3234: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s80, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #3235: @434 = @434' */
  /* #3236: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3237: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #3238: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #3239: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3240: @66 = @67[12] */
  for (rr=(&w66), ss=w67+12; ss!=w67+13; ss+=1) *rr++ = *ss;
  /* #3241: @66 = @66' */
  /* #3242: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s80, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #3243: @434 = @434' */
  /* #3244: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3245: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3246: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #3247: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #3248: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3249: @66 = @67[12] */
  for (rr=(&w66), ss=w67+12; ss!=w67+13; ss+=1) *rr++ = *ss;
  /* #3250: @66 = @66' */
  /* #3251: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3252: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s80, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #3253: @434 = @434' */
  /* #3254: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3255: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #3256: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #3257: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3258: @66 = @67[11] */
  for (rr=(&w66), ss=w67+11; ss!=w67+12; ss+=1) *rr++ = *ss;
  /* #3259: @66 = @66' */
  /* #3260: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s80, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #3261: @434 = @434' */
  /* #3262: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3263: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3264: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #3265: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #3266: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3267: @66 = @67[11] */
  for (rr=(&w66), ss=w67+11; ss!=w67+12; ss+=1) *rr++ = *ss;
  /* #3268: @66 = @66' */
  /* #3269: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3270: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s80, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #3271: @434 = @434' */
  /* #3272: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3273: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #3274: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #3275: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3276: @66 = @67[10] */
  for (rr=(&w66), ss=w67+10; ss!=w67+11; ss+=1) *rr++ = *ss;
  /* #3277: @66 = @66' */
  /* #3278: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s80, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #3279: @434 = @434' */
  /* #3280: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3281: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3282: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #3283: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #3284: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3285: @66 = @67[10] */
  for (rr=(&w66), ss=w67+10; ss!=w67+11; ss+=1) *rr++ = *ss;
  /* #3286: @66 = @66' */
  /* #3287: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3288: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s80, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #3289: @434 = @434' */
  /* #3290: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3291: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #3292: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #3293: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3294: @66 = @67[9] */
  for (rr=(&w66), ss=w67+9; ss!=w67+10; ss+=1) *rr++ = *ss;
  /* #3295: @66 = @66' */
  /* #3296: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s80, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #3297: @434 = @434' */
  /* #3298: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3299: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3300: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #3301: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #3302: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3303: @66 = @67[9] */
  for (rr=(&w66), ss=w67+9; ss!=w67+10; ss+=1) *rr++ = *ss;
  /* #3304: @66 = @66' */
  /* #3305: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3306: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s80, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #3307: @434 = @434' */
  /* #3308: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3309: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #3310: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #3311: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3312: @66 = @67[8] */
  for (rr=(&w66), ss=w67+8; ss!=w67+9; ss+=1) *rr++ = *ss;
  /* #3313: @66 = @66' */
  /* #3314: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s80, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #3315: @434 = @434' */
  /* #3316: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3317: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3318: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #3319: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #3320: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3321: @66 = @67[8] */
  for (rr=(&w66), ss=w67+8; ss!=w67+9; ss+=1) *rr++ = *ss;
  /* #3322: @66 = @66' */
  /* #3323: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3324: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s80, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #3325: @434 = @434' */
  /* #3326: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3327: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #3328: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #3329: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3330: @66 = @67[7] */
  for (rr=(&w66), ss=w67+7; ss!=w67+8; ss+=1) *rr++ = *ss;
  /* #3331: @66 = @66' */
  /* #3332: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s80, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #3333: @434 = @434' */
  /* #3334: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3335: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3336: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #3337: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #3338: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3339: @66 = @67[7] */
  for (rr=(&w66), ss=w67+7; ss!=w67+8; ss+=1) *rr++ = *ss;
  /* #3340: @66 = @66' */
  /* #3341: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3342: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s80, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #3343: @434 = @434' */
  /* #3344: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3345: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #3346: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #3347: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3348: @66 = @67[6] */
  for (rr=(&w66), ss=w67+6; ss!=w67+7; ss+=1) *rr++ = *ss;
  /* #3349: @66 = @66' */
  /* #3350: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s80, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #3351: @434 = @434' */
  /* #3352: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3353: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3354: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #3355: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #3356: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3357: @66 = @67[6] */
  for (rr=(&w66), ss=w67+6; ss!=w67+7; ss+=1) *rr++ = *ss;
  /* #3358: @66 = @66' */
  /* #3359: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3360: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s80, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #3361: @434 = @434' */
  /* #3362: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3363: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #3364: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #3365: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3366: @66 = @67[5] */
  for (rr=(&w66), ss=w67+5; ss!=w67+6; ss+=1) *rr++ = *ss;
  /* #3367: @66 = @66' */
  /* #3368: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s80, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #3369: @434 = @434' */
  /* #3370: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3371: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3372: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #3373: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #3374: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3375: @66 = @67[5] */
  for (rr=(&w66), ss=w67+5; ss!=w67+6; ss+=1) *rr++ = *ss;
  /* #3376: @66 = @66' */
  /* #3377: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3378: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s80, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #3379: @434 = @434' */
  /* #3380: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3381: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #3382: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #3383: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3384: @66 = @67[4] */
  for (rr=(&w66), ss=w67+4; ss!=w67+5; ss+=1) *rr++ = *ss;
  /* #3385: @66 = @66' */
  /* #3386: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s80, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #3387: @434 = @434' */
  /* #3388: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3389: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3390: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #3391: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #3392: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3393: @66 = @67[4] */
  for (rr=(&w66), ss=w67+4; ss!=w67+5; ss+=1) *rr++ = *ss;
  /* #3394: @66 = @66' */
  /* #3395: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3396: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s80, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #3397: @434 = @434' */
  /* #3398: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3399: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #3400: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #3401: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3402: @66 = @67[3] */
  for (rr=(&w66), ss=w67+3; ss!=w67+4; ss+=1) *rr++ = *ss;
  /* #3403: @66 = @66' */
  /* #3404: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s80, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #3405: @434 = @434' */
  /* #3406: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3407: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3408: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #3409: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #3410: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3411: @66 = @67[3] */
  for (rr=(&w66), ss=w67+3; ss!=w67+4; ss+=1) *rr++ = *ss;
  /* #3412: @66 = @66' */
  /* #3413: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3414: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s80, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #3415: @434 = @434' */
  /* #3416: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3417: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #3418: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #3419: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3420: @66 = @67[2] */
  for (rr=(&w66), ss=w67+2; ss!=w67+3; ss+=1) *rr++ = *ss;
  /* #3421: @66 = @66' */
  /* #3422: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s80, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #3423: @434 = @434' */
  /* #3424: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3425: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3426: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #3427: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #3428: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3429: @66 = @67[2] */
  for (rr=(&w66), ss=w67+2; ss!=w67+3; ss+=1) *rr++ = *ss;
  /* #3430: @66 = @66' */
  /* #3431: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3432: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s80, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #3433: @434 = @434' */
  /* #3434: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3435: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #3436: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #3437: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3438: @66 = @67[1] */
  for (rr=(&w66), ss=w67+1; ss!=w67+2; ss+=1) *rr++ = *ss;
  /* #3439: @66 = @66' */
  /* #3440: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s80, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #3441: @434 = @434' */
  /* #3442: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3443: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3444: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #3445: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #3446: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3447: @66 = @67[1] */
  for (rr=(&w66), ss=w67+1; ss!=w67+2; ss+=1) *rr++ = *ss;
  /* #3448: @66 = @66' */
  /* #3449: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3450: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s80, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #3451: @434 = @434' */
  /* #3452: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3453: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #3454: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #3455: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3456: @66 = @67[0] */
  for (rr=(&w66), ss=w67+0; ss!=w67+1; ss+=1) *rr++ = *ss;
  /* #3457: @66 = @66' */
  /* #3458: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s80, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #3459: @434 = @434' */
  /* #3460: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #3461: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3462: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #3463: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #3464: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #3465: @66 = @67[0] */
  for (rr=(&w66), ss=w67+0; ss!=w67+1; ss+=1) *rr++ = *ss;
  /* #3466: @66 = @66' */
  /* #3467: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3468: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s80, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #3469: @434 = @434' */
  /* #3470: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #3471: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #3472: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #3473: @1 = vec(@1) */
  /* #3474: @4 = zeros(4x25) */
  casadi_clear(w4, 100);
  /* #3475: (@4[96:100] += @488) */
  for (rr=w4+96, ss=w488; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #3476: (@4[92:96] += @491) */
  for (rr=w4+92, ss=w491; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #3477: (@4[88:92] += @494) */
  for (rr=w4+88, ss=w494; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #3478: (@4[84:88] += @497) */
  for (rr=w4+84, ss=w497; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #3479: (@4[80:84] += @500) */
  for (rr=w4+80, ss=w500; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #3480: (@4[76:80] += @503) */
  for (rr=w4+76, ss=w503; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #3481: (@4[72:76] += @506) */
  for (rr=w4+72, ss=w506; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #3482: (@4[68:72] += @509) */
  for (rr=w4+68, ss=w509; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #3483: (@4[64:68] += @512) */
  for (rr=w4+64, ss=w512; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #3484: (@4[60:64] += @515) */
  for (rr=w4+60, ss=w515; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #3485: (@4[56:60] += @518) */
  for (rr=w4+56, ss=w518; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #3486: (@4[52:56] += @521) */
  for (rr=w4+52, ss=w521; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #3487: (@4[48:52] += @524) */
  for (rr=w4+48, ss=w524; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #3488: (@4[44:48] += @527) */
  for (rr=w4+44, ss=w527; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #3489: (@4[40:44] += @530) */
  for (rr=w4+40, ss=w530; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #3490: (@4[36:40] += @533) */
  for (rr=w4+36, ss=w533; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #3491: (@4[32:36] += @536) */
  for (rr=w4+32, ss=w536; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #3492: (@4[28:32] += @539) */
  for (rr=w4+28, ss=w539; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #3493: (@4[24:28] += @542) */
  for (rr=w4+24, ss=w542; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #3494: (@4[20:24] += @545) */
  for (rr=w4+20, ss=w545; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #3495: (@4[16:20] += @548) */
  for (rr=w4+16, ss=w548; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #3496: (@4[12:16] += @551) */
  for (rr=w4+12, ss=w551; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #3497: (@4[8:12] += @554) */
  for (rr=w4+8, ss=w554; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #3498: (@4[4:8] += @557) */
  for (rr=w4+4, ss=w557; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #3499: (@4[:4] += @560) */
  for (rr=w4+0, ss=w560; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #3500: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3501: @66 = @68[24] */
  for (rr=(&w66), ss=w68+24; ss!=w68+25; ss+=1) *rr++ = *ss;
  /* #3502: @66 = @66' */
  /* #3503: @560 = mac(@66,@562,@560) */
  casadi_mtimes((&w66), casadi_s81, w562, casadi_s72, w560, casadi_s71, w, 0);
  /* #3504: @560 = @560' */
  /* #3505: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3506: (@4[96:100] += @560) */
  for (rr=w4+96, ss=w560; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #3507: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3508: @66 = @68[24] */
  for (rr=(&w66), ss=w68+24; ss!=w68+25; ss+=1) *rr++ = *ss;
  /* #3509: @66 = @66' */
  /* #3510: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3511: @560 = mac(@66,@563,@560) */
  casadi_mtimes((&w66), casadi_s81, w563, casadi_s72, w560, casadi_s71, w, 0);
  /* #3512: @560 = @560' */
  /* #3513: (@4[96:100] += @560) */
  for (rr=w4+96, ss=w560; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #3514: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3515: @66 = @68[23] */
  for (rr=(&w66), ss=w68+23; ss!=w68+24; ss+=1) *rr++ = *ss;
  /* #3516: @66 = @66' */
  /* #3517: @560 = mac(@66,@564,@560) */
  casadi_mtimes((&w66), casadi_s81, w564, casadi_s72, w560, casadi_s71, w, 0);
  /* #3518: @560 = @560' */
  /* #3519: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3520: (@4[92:96] += @560) */
  for (rr=w4+92, ss=w560; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #3521: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3522: @66 = @68[23] */
  for (rr=(&w66), ss=w68+23; ss!=w68+24; ss+=1) *rr++ = *ss;
  /* #3523: @66 = @66' */
  /* #3524: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3525: @560 = mac(@66,@565,@560) */
  casadi_mtimes((&w66), casadi_s81, w565, casadi_s72, w560, casadi_s71, w, 0);
  /* #3526: @560 = @560' */
  /* #3527: (@4[92:96] += @560) */
  for (rr=w4+92, ss=w560; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #3528: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3529: @66 = @68[22] */
  for (rr=(&w66), ss=w68+22; ss!=w68+23; ss+=1) *rr++ = *ss;
  /* #3530: @66 = @66' */
  /* #3531: @560 = mac(@66,@566,@560) */
  casadi_mtimes((&w66), casadi_s81, w566, casadi_s72, w560, casadi_s71, w, 0);
  /* #3532: @560 = @560' */
  /* #3533: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3534: (@4[88:92] += @560) */
  for (rr=w4+88, ss=w560; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #3535: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3536: @66 = @68[22] */
  for (rr=(&w66), ss=w68+22; ss!=w68+23; ss+=1) *rr++ = *ss;
  /* #3537: @66 = @66' */
  /* #3538: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3539: @560 = mac(@66,@567,@560) */
  casadi_mtimes((&w66), casadi_s81, w567, casadi_s72, w560, casadi_s71, w, 0);
  /* #3540: @560 = @560' */
  /* #3541: (@4[88:92] += @560) */
  for (rr=w4+88, ss=w560; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #3542: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3543: @66 = @68[21] */
  for (rr=(&w66), ss=w68+21; ss!=w68+22; ss+=1) *rr++ = *ss;
  /* #3544: @66 = @66' */
  /* #3545: @560 = mac(@66,@568,@560) */
  casadi_mtimes((&w66), casadi_s81, w568, casadi_s72, w560, casadi_s71, w, 0);
  /* #3546: @560 = @560' */
  /* #3547: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3548: (@4[84:88] += @560) */
  for (rr=w4+84, ss=w560; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #3549: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3550: @66 = @68[21] */
  for (rr=(&w66), ss=w68+21; ss!=w68+22; ss+=1) *rr++ = *ss;
  /* #3551: @66 = @66' */
  /* #3552: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3553: @560 = mac(@66,@569,@560) */
  casadi_mtimes((&w66), casadi_s81, w569, casadi_s72, w560, casadi_s71, w, 0);
  /* #3554: @560 = @560' */
  /* #3555: (@4[84:88] += @560) */
  for (rr=w4+84, ss=w560; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #3556: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3557: @66 = @68[20] */
  for (rr=(&w66), ss=w68+20; ss!=w68+21; ss+=1) *rr++ = *ss;
  /* #3558: @66 = @66' */
  /* #3559: @560 = mac(@66,@570,@560) */
  casadi_mtimes((&w66), casadi_s81, w570, casadi_s72, w560, casadi_s71, w, 0);
  /* #3560: @560 = @560' */
  /* #3561: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3562: (@4[80:84] += @560) */
  for (rr=w4+80, ss=w560; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #3563: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3564: @66 = @68[20] */
  for (rr=(&w66), ss=w68+20; ss!=w68+21; ss+=1) *rr++ = *ss;
  /* #3565: @66 = @66' */
  /* #3566: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3567: @560 = mac(@66,@571,@560) */
  casadi_mtimes((&w66), casadi_s81, w571, casadi_s72, w560, casadi_s71, w, 0);
  /* #3568: @560 = @560' */
  /* #3569: (@4[80:84] += @560) */
  for (rr=w4+80, ss=w560; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #3570: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3571: @66 = @68[19] */
  for (rr=(&w66), ss=w68+19; ss!=w68+20; ss+=1) *rr++ = *ss;
  /* #3572: @66 = @66' */
  /* #3573: @560 = mac(@66,@572,@560) */
  casadi_mtimes((&w66), casadi_s81, w572, casadi_s72, w560, casadi_s71, w, 0);
  /* #3574: @560 = @560' */
  /* #3575: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3576: (@4[76:80] += @560) */
  for (rr=w4+76, ss=w560; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #3577: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3578: @66 = @68[19] */
  for (rr=(&w66), ss=w68+19; ss!=w68+20; ss+=1) *rr++ = *ss;
  /* #3579: @66 = @66' */
  /* #3580: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3581: @560 = mac(@66,@573,@560) */
  casadi_mtimes((&w66), casadi_s81, w573, casadi_s72, w560, casadi_s71, w, 0);
  /* #3582: @560 = @560' */
  /* #3583: (@4[76:80] += @560) */
  for (rr=w4+76, ss=w560; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #3584: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3585: @66 = @68[18] */
  for (rr=(&w66), ss=w68+18; ss!=w68+19; ss+=1) *rr++ = *ss;
  /* #3586: @66 = @66' */
  /* #3587: @560 = mac(@66,@574,@560) */
  casadi_mtimes((&w66), casadi_s81, w574, casadi_s72, w560, casadi_s71, w, 0);
  /* #3588: @560 = @560' */
  /* #3589: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3590: (@4[72:76] += @560) */
  for (rr=w4+72, ss=w560; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #3591: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3592: @66 = @68[18] */
  for (rr=(&w66), ss=w68+18; ss!=w68+19; ss+=1) *rr++ = *ss;
  /* #3593: @66 = @66' */
  /* #3594: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3595: @560 = mac(@66,@575,@560) */
  casadi_mtimes((&w66), casadi_s81, w575, casadi_s72, w560, casadi_s71, w, 0);
  /* #3596: @560 = @560' */
  /* #3597: (@4[72:76] += @560) */
  for (rr=w4+72, ss=w560; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #3598: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3599: @66 = @68[17] */
  for (rr=(&w66), ss=w68+17; ss!=w68+18; ss+=1) *rr++ = *ss;
  /* #3600: @66 = @66' */
  /* #3601: @560 = mac(@66,@576,@560) */
  casadi_mtimes((&w66), casadi_s81, w576, casadi_s72, w560, casadi_s71, w, 0);
  /* #3602: @560 = @560' */
  /* #3603: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3604: (@4[68:72] += @560) */
  for (rr=w4+68, ss=w560; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #3605: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3606: @66 = @68[17] */
  for (rr=(&w66), ss=w68+17; ss!=w68+18; ss+=1) *rr++ = *ss;
  /* #3607: @66 = @66' */
  /* #3608: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3609: @560 = mac(@66,@577,@560) */
  casadi_mtimes((&w66), casadi_s81, w577, casadi_s72, w560, casadi_s71, w, 0);
  /* #3610: @560 = @560' */
  /* #3611: (@4[68:72] += @560) */
  for (rr=w4+68, ss=w560; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #3612: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3613: @66 = @68[16] */
  for (rr=(&w66), ss=w68+16; ss!=w68+17; ss+=1) *rr++ = *ss;
  /* #3614: @66 = @66' */
  /* #3615: @560 = mac(@66,@578,@560) */
  casadi_mtimes((&w66), casadi_s81, w578, casadi_s72, w560, casadi_s71, w, 0);
  /* #3616: @560 = @560' */
  /* #3617: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3618: (@4[64:68] += @560) */
  for (rr=w4+64, ss=w560; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #3619: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3620: @66 = @68[16] */
  for (rr=(&w66), ss=w68+16; ss!=w68+17; ss+=1) *rr++ = *ss;
  /* #3621: @66 = @66' */
  /* #3622: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3623: @560 = mac(@66,@579,@560) */
  casadi_mtimes((&w66), casadi_s81, w579, casadi_s72, w560, casadi_s71, w, 0);
  /* #3624: @560 = @560' */
  /* #3625: (@4[64:68] += @560) */
  for (rr=w4+64, ss=w560; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #3626: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3627: @66 = @68[15] */
  for (rr=(&w66), ss=w68+15; ss!=w68+16; ss+=1) *rr++ = *ss;
  /* #3628: @66 = @66' */
  /* #3629: @560 = mac(@66,@580,@560) */
  casadi_mtimes((&w66), casadi_s81, w580, casadi_s72, w560, casadi_s71, w, 0);
  /* #3630: @560 = @560' */
  /* #3631: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3632: (@4[60:64] += @560) */
  for (rr=w4+60, ss=w560; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #3633: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3634: @66 = @68[15] */
  for (rr=(&w66), ss=w68+15; ss!=w68+16; ss+=1) *rr++ = *ss;
  /* #3635: @66 = @66' */
  /* #3636: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3637: @560 = mac(@66,@581,@560) */
  casadi_mtimes((&w66), casadi_s81, w581, casadi_s72, w560, casadi_s71, w, 0);
  /* #3638: @560 = @560' */
  /* #3639: (@4[60:64] += @560) */
  for (rr=w4+60, ss=w560; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #3640: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3641: @66 = @68[14] */
  for (rr=(&w66), ss=w68+14; ss!=w68+15; ss+=1) *rr++ = *ss;
  /* #3642: @66 = @66' */
  /* #3643: @560 = mac(@66,@582,@560) */
  casadi_mtimes((&w66), casadi_s81, w582, casadi_s72, w560, casadi_s71, w, 0);
  /* #3644: @560 = @560' */
  /* #3645: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3646: (@4[56:60] += @560) */
  for (rr=w4+56, ss=w560; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #3647: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3648: @66 = @68[14] */
  for (rr=(&w66), ss=w68+14; ss!=w68+15; ss+=1) *rr++ = *ss;
  /* #3649: @66 = @66' */
  /* #3650: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3651: @560 = mac(@66,@583,@560) */
  casadi_mtimes((&w66), casadi_s81, w583, casadi_s72, w560, casadi_s71, w, 0);
  /* #3652: @560 = @560' */
  /* #3653: (@4[56:60] += @560) */
  for (rr=w4+56, ss=w560; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #3654: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3655: @66 = @68[13] */
  for (rr=(&w66), ss=w68+13; ss!=w68+14; ss+=1) *rr++ = *ss;
  /* #3656: @66 = @66' */
  /* #3657: @560 = mac(@66,@584,@560) */
  casadi_mtimes((&w66), casadi_s81, w584, casadi_s72, w560, casadi_s71, w, 0);
  /* #3658: @560 = @560' */
  /* #3659: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3660: (@4[52:56] += @560) */
  for (rr=w4+52, ss=w560; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #3661: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3662: @66 = @68[13] */
  for (rr=(&w66), ss=w68+13; ss!=w68+14; ss+=1) *rr++ = *ss;
  /* #3663: @66 = @66' */
  /* #3664: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3665: @560 = mac(@66,@585,@560) */
  casadi_mtimes((&w66), casadi_s81, w585, casadi_s72, w560, casadi_s71, w, 0);
  /* #3666: @560 = @560' */
  /* #3667: (@4[52:56] += @560) */
  for (rr=w4+52, ss=w560; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #3668: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3669: @66 = @68[12] */
  for (rr=(&w66), ss=w68+12; ss!=w68+13; ss+=1) *rr++ = *ss;
  /* #3670: @66 = @66' */
  /* #3671: @560 = mac(@66,@586,@560) */
  casadi_mtimes((&w66), casadi_s81, w586, casadi_s72, w560, casadi_s71, w, 0);
  /* #3672: @560 = @560' */
  /* #3673: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3674: (@4[48:52] += @560) */
  for (rr=w4+48, ss=w560; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #3675: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3676: @66 = @68[12] */
  for (rr=(&w66), ss=w68+12; ss!=w68+13; ss+=1) *rr++ = *ss;
  /* #3677: @66 = @66' */
  /* #3678: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3679: @560 = mac(@66,@587,@560) */
  casadi_mtimes((&w66), casadi_s81, w587, casadi_s72, w560, casadi_s71, w, 0);
  /* #3680: @560 = @560' */
  /* #3681: (@4[48:52] += @560) */
  for (rr=w4+48, ss=w560; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #3682: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3683: @66 = @68[11] */
  for (rr=(&w66), ss=w68+11; ss!=w68+12; ss+=1) *rr++ = *ss;
  /* #3684: @66 = @66' */
  /* #3685: @560 = mac(@66,@588,@560) */
  casadi_mtimes((&w66), casadi_s81, w588, casadi_s72, w560, casadi_s71, w, 0);
  /* #3686: @560 = @560' */
  /* #3687: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3688: (@4[44:48] += @560) */
  for (rr=w4+44, ss=w560; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #3689: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3690: @66 = @68[11] */
  for (rr=(&w66), ss=w68+11; ss!=w68+12; ss+=1) *rr++ = *ss;
  /* #3691: @66 = @66' */
  /* #3692: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3693: @560 = mac(@66,@589,@560) */
  casadi_mtimes((&w66), casadi_s81, w589, casadi_s72, w560, casadi_s71, w, 0);
  /* #3694: @560 = @560' */
  /* #3695: (@4[44:48] += @560) */
  for (rr=w4+44, ss=w560; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #3696: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3697: @66 = @68[10] */
  for (rr=(&w66), ss=w68+10; ss!=w68+11; ss+=1) *rr++ = *ss;
  /* #3698: @66 = @66' */
  /* #3699: @560 = mac(@66,@590,@560) */
  casadi_mtimes((&w66), casadi_s81, w590, casadi_s72, w560, casadi_s71, w, 0);
  /* #3700: @560 = @560' */
  /* #3701: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3702: (@4[40:44] += @560) */
  for (rr=w4+40, ss=w560; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #3703: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3704: @66 = @68[10] */
  for (rr=(&w66), ss=w68+10; ss!=w68+11; ss+=1) *rr++ = *ss;
  /* #3705: @66 = @66' */
  /* #3706: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3707: @560 = mac(@66,@591,@560) */
  casadi_mtimes((&w66), casadi_s81, w591, casadi_s72, w560, casadi_s71, w, 0);
  /* #3708: @560 = @560' */
  /* #3709: (@4[40:44] += @560) */
  for (rr=w4+40, ss=w560; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #3710: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3711: @66 = @68[9] */
  for (rr=(&w66), ss=w68+9; ss!=w68+10; ss+=1) *rr++ = *ss;
  /* #3712: @66 = @66' */
  /* #3713: @560 = mac(@66,@592,@560) */
  casadi_mtimes((&w66), casadi_s81, w592, casadi_s72, w560, casadi_s71, w, 0);
  /* #3714: @560 = @560' */
  /* #3715: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3716: (@4[36:40] += @560) */
  for (rr=w4+36, ss=w560; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #3717: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3718: @66 = @68[9] */
  for (rr=(&w66), ss=w68+9; ss!=w68+10; ss+=1) *rr++ = *ss;
  /* #3719: @66 = @66' */
  /* #3720: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3721: @560 = mac(@66,@593,@560) */
  casadi_mtimes((&w66), casadi_s81, w593, casadi_s72, w560, casadi_s71, w, 0);
  /* #3722: @560 = @560' */
  /* #3723: (@4[36:40] += @560) */
  for (rr=w4+36, ss=w560; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #3724: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3725: @66 = @68[8] */
  for (rr=(&w66), ss=w68+8; ss!=w68+9; ss+=1) *rr++ = *ss;
  /* #3726: @66 = @66' */
  /* #3727: @560 = mac(@66,@594,@560) */
  casadi_mtimes((&w66), casadi_s81, w594, casadi_s72, w560, casadi_s71, w, 0);
  /* #3728: @560 = @560' */
  /* #3729: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3730: (@4[32:36] += @560) */
  for (rr=w4+32, ss=w560; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #3731: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3732: @66 = @68[8] */
  for (rr=(&w66), ss=w68+8; ss!=w68+9; ss+=1) *rr++ = *ss;
  /* #3733: @66 = @66' */
  /* #3734: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3735: @560 = mac(@66,@595,@560) */
  casadi_mtimes((&w66), casadi_s81, w595, casadi_s72, w560, casadi_s71, w, 0);
  /* #3736: @560 = @560' */
  /* #3737: (@4[32:36] += @560) */
  for (rr=w4+32, ss=w560; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #3738: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3739: @66 = @68[7] */
  for (rr=(&w66), ss=w68+7; ss!=w68+8; ss+=1) *rr++ = *ss;
  /* #3740: @66 = @66' */
  /* #3741: @560 = mac(@66,@596,@560) */
  casadi_mtimes((&w66), casadi_s81, w596, casadi_s72, w560, casadi_s71, w, 0);
  /* #3742: @560 = @560' */
  /* #3743: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3744: (@4[28:32] += @560) */
  for (rr=w4+28, ss=w560; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #3745: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3746: @66 = @68[7] */
  for (rr=(&w66), ss=w68+7; ss!=w68+8; ss+=1) *rr++ = *ss;
  /* #3747: @66 = @66' */
  /* #3748: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3749: @560 = mac(@66,@597,@560) */
  casadi_mtimes((&w66), casadi_s81, w597, casadi_s72, w560, casadi_s71, w, 0);
  /* #3750: @560 = @560' */
  /* #3751: (@4[28:32] += @560) */
  for (rr=w4+28, ss=w560; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #3752: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3753: @66 = @68[6] */
  for (rr=(&w66), ss=w68+6; ss!=w68+7; ss+=1) *rr++ = *ss;
  /* #3754: @66 = @66' */
  /* #3755: @560 = mac(@66,@598,@560) */
  casadi_mtimes((&w66), casadi_s81, w598, casadi_s72, w560, casadi_s71, w, 0);
  /* #3756: @560 = @560' */
  /* #3757: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3758: (@4[24:28] += @560) */
  for (rr=w4+24, ss=w560; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #3759: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3760: @66 = @68[6] */
  for (rr=(&w66), ss=w68+6; ss!=w68+7; ss+=1) *rr++ = *ss;
  /* #3761: @66 = @66' */
  /* #3762: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3763: @560 = mac(@66,@599,@560) */
  casadi_mtimes((&w66), casadi_s81, w599, casadi_s72, w560, casadi_s71, w, 0);
  /* #3764: @560 = @560' */
  /* #3765: (@4[24:28] += @560) */
  for (rr=w4+24, ss=w560; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #3766: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3767: @66 = @68[5] */
  for (rr=(&w66), ss=w68+5; ss!=w68+6; ss+=1) *rr++ = *ss;
  /* #3768: @66 = @66' */
  /* #3769: @560 = mac(@66,@600,@560) */
  casadi_mtimes((&w66), casadi_s81, w600, casadi_s72, w560, casadi_s71, w, 0);
  /* #3770: @560 = @560' */
  /* #3771: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3772: (@4[20:24] += @560) */
  for (rr=w4+20, ss=w560; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #3773: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3774: @66 = @68[5] */
  for (rr=(&w66), ss=w68+5; ss!=w68+6; ss+=1) *rr++ = *ss;
  /* #3775: @66 = @66' */
  /* #3776: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3777: @560 = mac(@66,@601,@560) */
  casadi_mtimes((&w66), casadi_s81, w601, casadi_s72, w560, casadi_s71, w, 0);
  /* #3778: @560 = @560' */
  /* #3779: (@4[20:24] += @560) */
  for (rr=w4+20, ss=w560; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #3780: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3781: @66 = @68[4] */
  for (rr=(&w66), ss=w68+4; ss!=w68+5; ss+=1) *rr++ = *ss;
  /* #3782: @66 = @66' */
  /* #3783: @560 = mac(@66,@602,@560) */
  casadi_mtimes((&w66), casadi_s81, w602, casadi_s72, w560, casadi_s71, w, 0);
  /* #3784: @560 = @560' */
  /* #3785: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3786: (@4[16:20] += @560) */
  for (rr=w4+16, ss=w560; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #3787: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3788: @66 = @68[4] */
  for (rr=(&w66), ss=w68+4; ss!=w68+5; ss+=1) *rr++ = *ss;
  /* #3789: @66 = @66' */
  /* #3790: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3791: @560 = mac(@66,@603,@560) */
  casadi_mtimes((&w66), casadi_s81, w603, casadi_s72, w560, casadi_s71, w, 0);
  /* #3792: @560 = @560' */
  /* #3793: (@4[16:20] += @560) */
  for (rr=w4+16, ss=w560; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #3794: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3795: @66 = @68[3] */
  for (rr=(&w66), ss=w68+3; ss!=w68+4; ss+=1) *rr++ = *ss;
  /* #3796: @66 = @66' */
  /* #3797: @560 = mac(@66,@604,@560) */
  casadi_mtimes((&w66), casadi_s81, w604, casadi_s72, w560, casadi_s71, w, 0);
  /* #3798: @560 = @560' */
  /* #3799: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3800: (@4[12:16] += @560) */
  for (rr=w4+12, ss=w560; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #3801: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3802: @66 = @68[3] */
  for (rr=(&w66), ss=w68+3; ss!=w68+4; ss+=1) *rr++ = *ss;
  /* #3803: @66 = @66' */
  /* #3804: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3805: @560 = mac(@66,@605,@560) */
  casadi_mtimes((&w66), casadi_s81, w605, casadi_s72, w560, casadi_s71, w, 0);
  /* #3806: @560 = @560' */
  /* #3807: (@4[12:16] += @560) */
  for (rr=w4+12, ss=w560; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #3808: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3809: @66 = @68[2] */
  for (rr=(&w66), ss=w68+2; ss!=w68+3; ss+=1) *rr++ = *ss;
  /* #3810: @66 = @66' */
  /* #3811: @560 = mac(@66,@606,@560) */
  casadi_mtimes((&w66), casadi_s81, w606, casadi_s72, w560, casadi_s71, w, 0);
  /* #3812: @560 = @560' */
  /* #3813: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3814: (@4[8:12] += @560) */
  for (rr=w4+8, ss=w560; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #3815: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3816: @66 = @68[2] */
  for (rr=(&w66), ss=w68+2; ss!=w68+3; ss+=1) *rr++ = *ss;
  /* #3817: @66 = @66' */
  /* #3818: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3819: @560 = mac(@66,@607,@560) */
  casadi_mtimes((&w66), casadi_s81, w607, casadi_s72, w560, casadi_s71, w, 0);
  /* #3820: @560 = @560' */
  /* #3821: (@4[8:12] += @560) */
  for (rr=w4+8, ss=w560; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #3822: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3823: @66 = @68[1] */
  for (rr=(&w66), ss=w68+1; ss!=w68+2; ss+=1) *rr++ = *ss;
  /* #3824: @66 = @66' */
  /* #3825: @560 = mac(@66,@608,@560) */
  casadi_mtimes((&w66), casadi_s81, w608, casadi_s72, w560, casadi_s71, w, 0);
  /* #3826: @560 = @560' */
  /* #3827: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3828: (@4[4:8] += @560) */
  for (rr=w4+4, ss=w560; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #3829: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3830: @66 = @68[1] */
  for (rr=(&w66), ss=w68+1; ss!=w68+2; ss+=1) *rr++ = *ss;
  /* #3831: @66 = @66' */
  /* #3832: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3833: @560 = mac(@66,@609,@560) */
  casadi_mtimes((&w66), casadi_s81, w609, casadi_s72, w560, casadi_s71, w, 0);
  /* #3834: @560 = @560' */
  /* #3835: (@4[4:8] += @560) */
  for (rr=w4+4, ss=w560; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #3836: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3837: @66 = @68[0] */
  for (rr=(&w66), ss=w68+0; ss!=w68+1; ss+=1) *rr++ = *ss;
  /* #3838: @66 = @66' */
  /* #3839: @560 = mac(@66,@610,@560) */
  casadi_mtimes((&w66), casadi_s81, w610, casadi_s72, w560, casadi_s71, w, 0);
  /* #3840: @560 = @560' */
  /* #3841: @560 = (@63*@560) */
  for (i=0, rr=w560, cs=w560; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #3842: (@4[:4] += @560) */
  for (rr=w4+0, ss=w560; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #3843: @560 = zeros(1x4) */
  casadi_clear(w560, 4);
  /* #3844: @66 = @68[0] */
  for (rr=(&w66), ss=w68+0; ss!=w68+1; ss+=1) *rr++ = *ss;
  /* #3845: @66 = @66' */
  /* #3846: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #3847: @560 = mac(@66,@611,@560) */
  casadi_mtimes((&w66), casadi_s81, w611, casadi_s72, w560, casadi_s71, w, 0);
  /* #3848: @560 = @560' */
  /* #3849: (@4[:4] += @560) */
  for (rr=w4+0, ss=w560; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #3850: @4 = vec(@4) */
  /* #3851: @612 = vertcat(@1, @4) */
  rr=w612;
  for (i=0, cs=w1; i<364; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<100; ++i) *rr++ = *cs++;
  /* #3852: (@0[28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4745, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 5104, 5105, 5106, 5107, 5120, 5121, 5122, 5123, 5136, 5137, 5138, 5139, 5152, 5153, 5154, 5155, 5168, 5169, 5170, 5171, 5184, 5185, 5186, 5187, 5200, 5201, 5202, 5203, 5216, 5217, 5218, 5219, 5232, 5233, 5234, 5235, 5248, 5249, 5250, 5251, 5264, 5265, 5266, 5267, 5280, 5281, 5282, 5283, 5296, 5297, 5298, 5299, 5312, 5313, 5314, 5315, 5328, 5329, 5330, 5331, 5344, 5345, 5346, 5347, 5360, 5361, 5362, 5363, 5376, 5377, 5378, 5379, 5392, 5393, 5394, 5395, 5408, 5409, 5410, 5411, 5424, 5425, 5426, 5427, 5440, 5441, 5442, 5443, 5456, 5457, 5458, 5459, 5472, 5473, 5474, 5475, 5488, 5489, 5490, 5491] = @612) */
  for (cii=casadi_s82, rr=w0, ss=w612; cii!=casadi_s82+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #3853: (@0[2, 16, 30, 44, 58, 72, 86, 100, 114, 128, 142, 156, 170, 184, 198, 212, 226, 240, 254, 268, 282, 296, 310, 324, 338, 352, 366, 380, 394, 408, 422, 436, 450, 464, 478, 492, 506, 520, 534, 548, 562, 576, 590, 604, 618, 632, 646, 660, 674, 688, 702, 716, 730, 744, 758, 772, 786, 800, 814, 828, 842, 856, 870, 884, 898, 912, 926, 940, 954, 968, 982, 996, 1010, 1024, 1038, 1052, 1066, 1080, 1094, 1108, 1122, 1136, 1150, 1164, 1178, 1192, 1206, 1220, 1234, 1248, 1262, 1276, 1290, 1304, 1318, 1332, 1346, 1360, 1374, 1388, 1402, 1416, 1430, 1444, 1458, 1472, 1486, 1500, 1514, 1528, 1542, 1556, 1570, 1584, 1598, 1612, 1626, 1640, 1654, 1668, 1682, 1696, 1710, 1724, 1738, 1752, 1766, 1780, 1794, 1808, 1822, 1836, 1850, 1864, 1878, 1892, 1906, 1920, 1934, 1948, 1962, 1976, 1990, 2004, 2018, 2032, 2046, 2060, 2074, 2088, 2102, 2116, 2130, 2144, 2158, 2172, 2186, 2200, 2214, 2228, 2242, 2256, 2270, 2284, 2298, 2312, 2326, 2340, 2354, 2368, 2382, 2396, 2410, 2424, 2438, 2452, 2466, 2480, 2494, 2508, 2522, 2536, 2550, 2564, 2578, 2592, 2606, 2620, 2634, 2648, 2662, 2676, 2690, 2704, 2718, 2732, 2746, 2760, 2774, 2788, 2802, 2816, 2830, 2844, 2858, 2872, 2886, 2900, 2914, 2928, 2942, 2956, 2970, 2984, 2998, 3012, 3026, 3040, 3054, 3068, 3082, 3096, 3110, 3124, 3138, 3152, 3166, 3180, 3194, 3208, 3222, 3236, 3250, 3264, 3278, 3292, 3306, 3320, 3334, 3348, 3362, 3376, 3390, 3404, 3418, 3432, 3446, 3460, 3474, 3488, 3502, 3516, 3530, 3544, 3558, 3572, 3586, 3600, 3614, 3628, 3642, 3656, 3670, 3684, 3698, 3712, 3726, 3740, 3754, 3768, 3782, 3796, 3810, 3824, 3838, 3852, 3866, 3880, 3894, 3908, 3922, 3936, 3950, 3964, 3978, 3992, 4006, 4020, 4034, 4048, 4062, 4076, 4090, 4104, 4118, 4132, 4146, 4160, 4174, 4188, 4202, 4216, 4230, 4244, 4258, 4272, 4286, 4300, 4314, 4328, 4342, 4356, 4370, 4384, 4398, 4412, 4426, 4440, 4454, 4468, 4482, 4496, 4510, 4524, 4538, 4552, 4566, 4580, 4594, 4608, 4622, 4636, 4650, 4664, 4678, 4692, 4706, 4720, 4734, 4748, 4762, 4776, 4790, 4804, 4818, 4832, 4846, 4860, 4874, 4888, 4902, 4916, 4930, 4944, 4958, 4972, 4986, 5000, 5014, 5028, 5042, 5056, 5070, 5084, 5098, 5102, 5106, 5110, 5114, 5118, 5122, 5126, 5130, 5134, 5138, 5142, 5146, 5150, 5154, 5158, 5162, 5166, 5170, 5174, 5178, 5182, 5186, 5190, 5194, 5198, 5202, 5206, 5210, 5214, 5218, 5222, 5226, 5230, 5234, 5238, 5242, 5246, 5250, 5254, 5258, 5262, 5266, 5270, 5274, 5278, 5282, 5286, 5290, 5294, 5298, 5302, 5306, 5310, 5314, 5318, 5322, 5326, 5330, 5334, 5338, 5342, 5346, 5350, 5354, 5358, 5362, 5366, 5370, 5374, 5378, 5382, 5386, 5390, 5394, 5398, 5402, 5406, 5410, 5414, 5418, 5422, 5426, 5430, 5434, 5438, 5442, 5446, 5450, 5454, 5458, 5462, 5466, 5470, 5474, 5478, 5482, 5486, 5490, 5494] = @612) */
  for (cii=casadi_s83, rr=w0, ss=w612; cii!=casadi_s83+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #3854: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #3855: @66 = @70[24] */
  for (rr=(&w66), ss=w70+24; ss!=w70+25; ss+=1) *rr++ = *ss;
  /* #3856: @66 = @66' */
  /* #3857: @66 = (@57*@66) */
  w66  = (w57*w66);
  /* #3858: @66 = @66' */
  /* #3859: (@1[346] += @66) */
  for (rr=w1+346, ss=(&w66); rr!=w1+347; rr+=1) *rr += *ss++;
  /* #3860: (@1[336:350] += @111) */
  for (rr=w1+336, ss=w111; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #3861: @66 = @70[23] */
  for (rr=(&w66), ss=w70+23; ss!=w70+24; ss+=1) *rr++ = *ss;
  /* #3862: @66 = @66' */
  /* #3863: @66 = (@55*@66) */
  w66  = (w55*w66);
  /* #3864: @66 = @66' */
  /* #3865: (@1[332] += @66) */
  for (rr=w1+332, ss=(&w66); rr!=w1+333; rr+=1) *rr += *ss++;
  /* #3866: (@1[322:336] += @124) */
  for (rr=w1+322, ss=w124; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #3867: @66 = @70[22] */
  for (rr=(&w66), ss=w70+22; ss!=w70+23; ss+=1) *rr++ = *ss;
  /* #3868: @66 = @66' */
  /* #3869: @66 = (@53*@66) */
  w66  = (w53*w66);
  /* #3870: @66 = @66' */
  /* #3871: (@1[318] += @66) */
  for (rr=w1+318, ss=(&w66); rr!=w1+319; rr+=1) *rr += *ss++;
  /* #3872: (@1[308:322] += @137) */
  for (rr=w1+308, ss=w137; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #3873: @66 = @70[21] */
  for (rr=(&w66), ss=w70+21; ss!=w70+22; ss+=1) *rr++ = *ss;
  /* #3874: @66 = @66' */
  /* #3875: @66 = (@51*@66) */
  w66  = (w51*w66);
  /* #3876: @66 = @66' */
  /* #3877: (@1[304] += @66) */
  for (rr=w1+304, ss=(&w66); rr!=w1+305; rr+=1) *rr += *ss++;
  /* #3878: (@1[294:308] += @150) */
  for (rr=w1+294, ss=w150; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #3879: @66 = @70[20] */
  for (rr=(&w66), ss=w70+20; ss!=w70+21; ss+=1) *rr++ = *ss;
  /* #3880: @66 = @66' */
  /* #3881: @66 = (@49*@66) */
  w66  = (w49*w66);
  /* #3882: @66 = @66' */
  /* #3883: (@1[290] += @66) */
  for (rr=w1+290, ss=(&w66); rr!=w1+291; rr+=1) *rr += *ss++;
  /* #3884: (@1[280:294] += @163) */
  for (rr=w1+280, ss=w163; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #3885: @66 = @70[19] */
  for (rr=(&w66), ss=w70+19; ss!=w70+20; ss+=1) *rr++ = *ss;
  /* #3886: @66 = @66' */
  /* #3887: @66 = (@47*@66) */
  w66  = (w47*w66);
  /* #3888: @66 = @66' */
  /* #3889: (@1[276] += @66) */
  for (rr=w1+276, ss=(&w66); rr!=w1+277; rr+=1) *rr += *ss++;
  /* #3890: (@1[266:280] += @176) */
  for (rr=w1+266, ss=w176; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #3891: @66 = @70[18] */
  for (rr=(&w66), ss=w70+18; ss!=w70+19; ss+=1) *rr++ = *ss;
  /* #3892: @66 = @66' */
  /* #3893: @66 = (@45*@66) */
  w66  = (w45*w66);
  /* #3894: @66 = @66' */
  /* #3895: (@1[262] += @66) */
  for (rr=w1+262, ss=(&w66); rr!=w1+263; rr+=1) *rr += *ss++;
  /* #3896: (@1[252:266] += @189) */
  for (rr=w1+252, ss=w189; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #3897: @66 = @70[17] */
  for (rr=(&w66), ss=w70+17; ss!=w70+18; ss+=1) *rr++ = *ss;
  /* #3898: @66 = @66' */
  /* #3899: @66 = (@43*@66) */
  w66  = (w43*w66);
  /* #3900: @66 = @66' */
  /* #3901: (@1[248] += @66) */
  for (rr=w1+248, ss=(&w66); rr!=w1+249; rr+=1) *rr += *ss++;
  /* #3902: (@1[238:252] += @202) */
  for (rr=w1+238, ss=w202; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #3903: @66 = @70[16] */
  for (rr=(&w66), ss=w70+16; ss!=w70+17; ss+=1) *rr++ = *ss;
  /* #3904: @66 = @66' */
  /* #3905: @66 = (@41*@66) */
  w66  = (w41*w66);
  /* #3906: @66 = @66' */
  /* #3907: (@1[234] += @66) */
  for (rr=w1+234, ss=(&w66); rr!=w1+235; rr+=1) *rr += *ss++;
  /* #3908: (@1[224:238] += @215) */
  for (rr=w1+224, ss=w215; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #3909: @66 = @70[15] */
  for (rr=(&w66), ss=w70+15; ss!=w70+16; ss+=1) *rr++ = *ss;
  /* #3910: @66 = @66' */
  /* #3911: @66 = (@39*@66) */
  w66  = (w39*w66);
  /* #3912: @66 = @66' */
  /* #3913: (@1[220] += @66) */
  for (rr=w1+220, ss=(&w66); rr!=w1+221; rr+=1) *rr += *ss++;
  /* #3914: (@1[210:224] += @228) */
  for (rr=w1+210, ss=w228; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #3915: @66 = @70[14] */
  for (rr=(&w66), ss=w70+14; ss!=w70+15; ss+=1) *rr++ = *ss;
  /* #3916: @66 = @66' */
  /* #3917: @66 = (@37*@66) */
  w66  = (w37*w66);
  /* #3918: @66 = @66' */
  /* #3919: (@1[206] += @66) */
  for (rr=w1+206, ss=(&w66); rr!=w1+207; rr+=1) *rr += *ss++;
  /* #3920: (@1[196:210] += @241) */
  for (rr=w1+196, ss=w241; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #3921: @66 = @70[13] */
  for (rr=(&w66), ss=w70+13; ss!=w70+14; ss+=1) *rr++ = *ss;
  /* #3922: @66 = @66' */
  /* #3923: @66 = (@35*@66) */
  w66  = (w35*w66);
  /* #3924: @66 = @66' */
  /* #3925: (@1[192] += @66) */
  for (rr=w1+192, ss=(&w66); rr!=w1+193; rr+=1) *rr += *ss++;
  /* #3926: (@1[182:196] += @254) */
  for (rr=w1+182, ss=w254; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #3927: @66 = @70[12] */
  for (rr=(&w66), ss=w70+12; ss!=w70+13; ss+=1) *rr++ = *ss;
  /* #3928: @66 = @66' */
  /* #3929: @66 = (@33*@66) */
  w66  = (w33*w66);
  /* #3930: @66 = @66' */
  /* #3931: (@1[178] += @66) */
  for (rr=w1+178, ss=(&w66); rr!=w1+179; rr+=1) *rr += *ss++;
  /* #3932: (@1[168:182] += @267) */
  for (rr=w1+168, ss=w267; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #3933: @66 = @70[11] */
  for (rr=(&w66), ss=w70+11; ss!=w70+12; ss+=1) *rr++ = *ss;
  /* #3934: @66 = @66' */
  /* #3935: @66 = (@31*@66) */
  w66  = (w31*w66);
  /* #3936: @66 = @66' */
  /* #3937: (@1[164] += @66) */
  for (rr=w1+164, ss=(&w66); rr!=w1+165; rr+=1) *rr += *ss++;
  /* #3938: (@1[154:168] += @280) */
  for (rr=w1+154, ss=w280; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #3939: @66 = @70[10] */
  for (rr=(&w66), ss=w70+10; ss!=w70+11; ss+=1) *rr++ = *ss;
  /* #3940: @66 = @66' */
  /* #3941: @66 = (@29*@66) */
  w66  = (w29*w66);
  /* #3942: @66 = @66' */
  /* #3943: (@1[150] += @66) */
  for (rr=w1+150, ss=(&w66); rr!=w1+151; rr+=1) *rr += *ss++;
  /* #3944: (@1[140:154] += @293) */
  for (rr=w1+140, ss=w293; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #3945: @66 = @70[9] */
  for (rr=(&w66), ss=w70+9; ss!=w70+10; ss+=1) *rr++ = *ss;
  /* #3946: @66 = @66' */
  /* #3947: @66 = (@27*@66) */
  w66  = (w27*w66);
  /* #3948: @66 = @66' */
  /* #3949: (@1[136] += @66) */
  for (rr=w1+136, ss=(&w66); rr!=w1+137; rr+=1) *rr += *ss++;
  /* #3950: (@1[126:140] += @306) */
  for (rr=w1+126, ss=w306; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #3951: @66 = @70[8] */
  for (rr=(&w66), ss=w70+8; ss!=w70+9; ss+=1) *rr++ = *ss;
  /* #3952: @66 = @66' */
  /* #3953: @66 = (@25*@66) */
  w66  = (w25*w66);
  /* #3954: @66 = @66' */
  /* #3955: (@1[122] += @66) */
  for (rr=w1+122, ss=(&w66); rr!=w1+123; rr+=1) *rr += *ss++;
  /* #3956: (@1[112:126] += @319) */
  for (rr=w1+112, ss=w319; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #3957: @66 = @70[7] */
  for (rr=(&w66), ss=w70+7; ss!=w70+8; ss+=1) *rr++ = *ss;
  /* #3958: @66 = @66' */
  /* #3959: @66 = (@23*@66) */
  w66  = (w23*w66);
  /* #3960: @66 = @66' */
  /* #3961: (@1[108] += @66) */
  for (rr=w1+108, ss=(&w66); rr!=w1+109; rr+=1) *rr += *ss++;
  /* #3962: (@1[98:112] += @332) */
  for (rr=w1+98, ss=w332; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #3963: @66 = @70[6] */
  for (rr=(&w66), ss=w70+6; ss!=w70+7; ss+=1) *rr++ = *ss;
  /* #3964: @66 = @66' */
  /* #3965: @66 = (@21*@66) */
  w66  = (w21*w66);
  /* #3966: @66 = @66' */
  /* #3967: (@1[94] += @66) */
  for (rr=w1+94, ss=(&w66); rr!=w1+95; rr+=1) *rr += *ss++;
  /* #3968: (@1[84:98] += @345) */
  for (rr=w1+84, ss=w345; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #3969: @66 = @70[5] */
  for (rr=(&w66), ss=w70+5; ss!=w70+6; ss+=1) *rr++ = *ss;
  /* #3970: @66 = @66' */
  /* #3971: @66 = (@19*@66) */
  w66  = (w19*w66);
  /* #3972: @66 = @66' */
  /* #3973: (@1[80] += @66) */
  for (rr=w1+80, ss=(&w66); rr!=w1+81; rr+=1) *rr += *ss++;
  /* #3974: (@1[70:84] += @358) */
  for (rr=w1+70, ss=w358; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #3975: @66 = @70[4] */
  for (rr=(&w66), ss=w70+4; ss!=w70+5; ss+=1) *rr++ = *ss;
  /* #3976: @66 = @66' */
  /* #3977: @66 = (@17*@66) */
  w66  = (w17*w66);
  /* #3978: @66 = @66' */
  /* #3979: (@1[66] += @66) */
  for (rr=w1+66, ss=(&w66); rr!=w1+67; rr+=1) *rr += *ss++;
  /* #3980: (@1[56:70] += @371) */
  for (rr=w1+56, ss=w371; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #3981: @66 = @70[3] */
  for (rr=(&w66), ss=w70+3; ss!=w70+4; ss+=1) *rr++ = *ss;
  /* #3982: @66 = @66' */
  /* #3983: @66 = (@15*@66) */
  w66  = (w15*w66);
  /* #3984: @66 = @66' */
  /* #3985: (@1[52] += @66) */
  for (rr=w1+52, ss=(&w66); rr!=w1+53; rr+=1) *rr += *ss++;
  /* #3986: (@1[42:56] += @384) */
  for (rr=w1+42, ss=w384; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #3987: @66 = @70[2] */
  for (rr=(&w66), ss=w70+2; ss!=w70+3; ss+=1) *rr++ = *ss;
  /* #3988: @66 = @66' */
  /* #3989: @66 = (@13*@66) */
  w66  = (w13*w66);
  /* #3990: @66 = @66' */
  /* #3991: (@1[38] += @66) */
  for (rr=w1+38, ss=(&w66); rr!=w1+39; rr+=1) *rr += *ss++;
  /* #3992: (@1[28:42] += @397) */
  for (rr=w1+28, ss=w397; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #3993: @66 = @70[1] */
  for (rr=(&w66), ss=w70+1; ss!=w70+2; ss+=1) *rr++ = *ss;
  /* #3994: @66 = @66' */
  /* #3995: @66 = (@11*@66) */
  w66  = (w11*w66);
  /* #3996: @66 = @66' */
  /* #3997: (@1[24] += @66) */
  for (rr=w1+24, ss=(&w66); rr!=w1+25; rr+=1) *rr += *ss++;
  /* #3998: (@1[14:28] += @410) */
  for (rr=w1+14, ss=w410; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #3999: @66 = @70[0] */
  for (rr=(&w66), ss=w70+0; ss!=w70+1; ss+=1) *rr++ = *ss;
  /* #4000: @66 = @66' */
  /* #4001: @66 = (@9*@66) */
  w66  = (w9*w66);
  /* #4002: @66 = @66' */
  /* #4003: (@1[10] += @66) */
  for (rr=w1+10, ss=(&w66); rr!=w1+11; rr+=1) *rr += *ss++;
  /* #4004: (@1[:14] += @423) */
  for (rr=w1+0, ss=w423; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #4005: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4006: @66 = @70[25] */
  for (rr=(&w66), ss=w70+25; ss!=w70+26; ss+=1) *rr++ = *ss;
  /* #4007: @66 = @66' */
  /* #4008: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s84, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #4009: @434 = @434' */
  /* #4010: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4011: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4012: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #4013: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #4014: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4015: @66 = @70[25] */
  for (rr=(&w66), ss=w70+25; ss!=w70+26; ss+=1) *rr++ = *ss;
  /* #4016: @66 = @66' */
  /* #4017: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4018: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s84, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #4019: @434 = @434' */
  /* #4020: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4021: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #4022: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #4023: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4024: @66 = @70[24] */
  for (rr=(&w66), ss=w70+24; ss!=w70+25; ss+=1) *rr++ = *ss;
  /* #4025: @66 = @66' */
  /* #4026: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s84, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #4027: @434 = @434' */
  /* #4028: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4029: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4030: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #4031: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #4032: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4033: @66 = @70[24] */
  for (rr=(&w66), ss=w70+24; ss!=w70+25; ss+=1) *rr++ = *ss;
  /* #4034: @66 = @66' */
  /* #4035: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4036: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s84, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #4037: @434 = @434' */
  /* #4038: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4039: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #4040: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #4041: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4042: @66 = @70[23] */
  for (rr=(&w66), ss=w70+23; ss!=w70+24; ss+=1) *rr++ = *ss;
  /* #4043: @66 = @66' */
  /* #4044: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s84, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #4045: @434 = @434' */
  /* #4046: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4047: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4048: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #4049: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #4050: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4051: @66 = @70[23] */
  for (rr=(&w66), ss=w70+23; ss!=w70+24; ss+=1) *rr++ = *ss;
  /* #4052: @66 = @66' */
  /* #4053: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4054: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s84, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #4055: @434 = @434' */
  /* #4056: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4057: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #4058: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #4059: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4060: @66 = @70[22] */
  for (rr=(&w66), ss=w70+22; ss!=w70+23; ss+=1) *rr++ = *ss;
  /* #4061: @66 = @66' */
  /* #4062: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s84, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #4063: @434 = @434' */
  /* #4064: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4065: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4066: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #4067: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #4068: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4069: @66 = @70[22] */
  for (rr=(&w66), ss=w70+22; ss!=w70+23; ss+=1) *rr++ = *ss;
  /* #4070: @66 = @66' */
  /* #4071: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4072: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s84, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #4073: @434 = @434' */
  /* #4074: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4075: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #4076: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #4077: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4078: @66 = @70[21] */
  for (rr=(&w66), ss=w70+21; ss!=w70+22; ss+=1) *rr++ = *ss;
  /* #4079: @66 = @66' */
  /* #4080: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s84, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #4081: @434 = @434' */
  /* #4082: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4083: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4084: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #4085: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #4086: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4087: @66 = @70[21] */
  for (rr=(&w66), ss=w70+21; ss!=w70+22; ss+=1) *rr++ = *ss;
  /* #4088: @66 = @66' */
  /* #4089: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4090: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s84, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #4091: @434 = @434' */
  /* #4092: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4093: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #4094: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #4095: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4096: @66 = @70[20] */
  for (rr=(&w66), ss=w70+20; ss!=w70+21; ss+=1) *rr++ = *ss;
  /* #4097: @66 = @66' */
  /* #4098: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s84, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #4099: @434 = @434' */
  /* #4100: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4101: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4102: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #4103: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #4104: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4105: @66 = @70[20] */
  for (rr=(&w66), ss=w70+20; ss!=w70+21; ss+=1) *rr++ = *ss;
  /* #4106: @66 = @66' */
  /* #4107: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4108: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s84, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #4109: @434 = @434' */
  /* #4110: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4111: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #4112: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #4113: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4114: @66 = @70[19] */
  for (rr=(&w66), ss=w70+19; ss!=w70+20; ss+=1) *rr++ = *ss;
  /* #4115: @66 = @66' */
  /* #4116: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s84, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #4117: @434 = @434' */
  /* #4118: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4119: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4120: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #4121: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #4122: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4123: @66 = @70[19] */
  for (rr=(&w66), ss=w70+19; ss!=w70+20; ss+=1) *rr++ = *ss;
  /* #4124: @66 = @66' */
  /* #4125: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4126: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s84, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #4127: @434 = @434' */
  /* #4128: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4129: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #4130: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #4131: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4132: @66 = @70[18] */
  for (rr=(&w66), ss=w70+18; ss!=w70+19; ss+=1) *rr++ = *ss;
  /* #4133: @66 = @66' */
  /* #4134: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s84, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #4135: @434 = @434' */
  /* #4136: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4137: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4138: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #4139: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #4140: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4141: @66 = @70[18] */
  for (rr=(&w66), ss=w70+18; ss!=w70+19; ss+=1) *rr++ = *ss;
  /* #4142: @66 = @66' */
  /* #4143: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4144: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s84, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #4145: @434 = @434' */
  /* #4146: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4147: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #4148: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #4149: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4150: @66 = @70[17] */
  for (rr=(&w66), ss=w70+17; ss!=w70+18; ss+=1) *rr++ = *ss;
  /* #4151: @66 = @66' */
  /* #4152: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s84, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #4153: @434 = @434' */
  /* #4154: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4155: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4156: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #4157: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #4158: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4159: @66 = @70[17] */
  for (rr=(&w66), ss=w70+17; ss!=w70+18; ss+=1) *rr++ = *ss;
  /* #4160: @66 = @66' */
  /* #4161: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4162: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s84, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #4163: @434 = @434' */
  /* #4164: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4165: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #4166: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #4167: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4168: @66 = @70[16] */
  for (rr=(&w66), ss=w70+16; ss!=w70+17; ss+=1) *rr++ = *ss;
  /* #4169: @66 = @66' */
  /* #4170: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s84, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #4171: @434 = @434' */
  /* #4172: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4173: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4174: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #4175: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #4176: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4177: @66 = @70[16] */
  for (rr=(&w66), ss=w70+16; ss!=w70+17; ss+=1) *rr++ = *ss;
  /* #4178: @66 = @66' */
  /* #4179: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4180: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s84, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #4181: @434 = @434' */
  /* #4182: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4183: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #4184: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #4185: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4186: @66 = @70[15] */
  for (rr=(&w66), ss=w70+15; ss!=w70+16; ss+=1) *rr++ = *ss;
  /* #4187: @66 = @66' */
  /* #4188: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s84, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #4189: @434 = @434' */
  /* #4190: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4191: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4192: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #4193: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #4194: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4195: @66 = @70[15] */
  for (rr=(&w66), ss=w70+15; ss!=w70+16; ss+=1) *rr++ = *ss;
  /* #4196: @66 = @66' */
  /* #4197: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4198: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s84, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #4199: @434 = @434' */
  /* #4200: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4201: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #4202: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #4203: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4204: @66 = @70[14] */
  for (rr=(&w66), ss=w70+14; ss!=w70+15; ss+=1) *rr++ = *ss;
  /* #4205: @66 = @66' */
  /* #4206: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s84, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #4207: @434 = @434' */
  /* #4208: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4209: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4210: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #4211: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #4212: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4213: @66 = @70[14] */
  for (rr=(&w66), ss=w70+14; ss!=w70+15; ss+=1) *rr++ = *ss;
  /* #4214: @66 = @66' */
  /* #4215: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4216: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s84, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #4217: @434 = @434' */
  /* #4218: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4219: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #4220: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #4221: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4222: @66 = @70[13] */
  for (rr=(&w66), ss=w70+13; ss!=w70+14; ss+=1) *rr++ = *ss;
  /* #4223: @66 = @66' */
  /* #4224: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s84, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #4225: @434 = @434' */
  /* #4226: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4227: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4228: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #4229: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #4230: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4231: @66 = @70[13] */
  for (rr=(&w66), ss=w70+13; ss!=w70+14; ss+=1) *rr++ = *ss;
  /* #4232: @66 = @66' */
  /* #4233: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4234: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s84, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #4235: @434 = @434' */
  /* #4236: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4237: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #4238: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #4239: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4240: @66 = @70[12] */
  for (rr=(&w66), ss=w70+12; ss!=w70+13; ss+=1) *rr++ = *ss;
  /* #4241: @66 = @66' */
  /* #4242: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s84, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #4243: @434 = @434' */
  /* #4244: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4245: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4246: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #4247: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #4248: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4249: @66 = @70[12] */
  for (rr=(&w66), ss=w70+12; ss!=w70+13; ss+=1) *rr++ = *ss;
  /* #4250: @66 = @66' */
  /* #4251: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4252: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s84, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #4253: @434 = @434' */
  /* #4254: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4255: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #4256: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #4257: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4258: @66 = @70[11] */
  for (rr=(&w66), ss=w70+11; ss!=w70+12; ss+=1) *rr++ = *ss;
  /* #4259: @66 = @66' */
  /* #4260: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s84, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #4261: @434 = @434' */
  /* #4262: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4263: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4264: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #4265: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #4266: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4267: @66 = @70[11] */
  for (rr=(&w66), ss=w70+11; ss!=w70+12; ss+=1) *rr++ = *ss;
  /* #4268: @66 = @66' */
  /* #4269: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4270: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s84, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #4271: @434 = @434' */
  /* #4272: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4273: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #4274: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #4275: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4276: @66 = @70[10] */
  for (rr=(&w66), ss=w70+10; ss!=w70+11; ss+=1) *rr++ = *ss;
  /* #4277: @66 = @66' */
  /* #4278: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s84, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #4279: @434 = @434' */
  /* #4280: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4281: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4282: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #4283: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #4284: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4285: @66 = @70[10] */
  for (rr=(&w66), ss=w70+10; ss!=w70+11; ss+=1) *rr++ = *ss;
  /* #4286: @66 = @66' */
  /* #4287: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4288: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s84, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #4289: @434 = @434' */
  /* #4290: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4291: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #4292: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #4293: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4294: @66 = @70[9] */
  for (rr=(&w66), ss=w70+9; ss!=w70+10; ss+=1) *rr++ = *ss;
  /* #4295: @66 = @66' */
  /* #4296: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s84, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #4297: @434 = @434' */
  /* #4298: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4299: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4300: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #4301: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #4302: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4303: @66 = @70[9] */
  for (rr=(&w66), ss=w70+9; ss!=w70+10; ss+=1) *rr++ = *ss;
  /* #4304: @66 = @66' */
  /* #4305: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4306: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s84, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #4307: @434 = @434' */
  /* #4308: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4309: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #4310: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #4311: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4312: @66 = @70[8] */
  for (rr=(&w66), ss=w70+8; ss!=w70+9; ss+=1) *rr++ = *ss;
  /* #4313: @66 = @66' */
  /* #4314: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s84, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #4315: @434 = @434' */
  /* #4316: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4317: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4318: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #4319: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #4320: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4321: @66 = @70[8] */
  for (rr=(&w66), ss=w70+8; ss!=w70+9; ss+=1) *rr++ = *ss;
  /* #4322: @66 = @66' */
  /* #4323: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4324: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s84, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #4325: @434 = @434' */
  /* #4326: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4327: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #4328: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #4329: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4330: @66 = @70[7] */
  for (rr=(&w66), ss=w70+7; ss!=w70+8; ss+=1) *rr++ = *ss;
  /* #4331: @66 = @66' */
  /* #4332: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s84, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #4333: @434 = @434' */
  /* #4334: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4335: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4336: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #4337: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #4338: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4339: @66 = @70[7] */
  for (rr=(&w66), ss=w70+7; ss!=w70+8; ss+=1) *rr++ = *ss;
  /* #4340: @66 = @66' */
  /* #4341: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4342: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s84, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #4343: @434 = @434' */
  /* #4344: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4345: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #4346: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #4347: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4348: @66 = @70[6] */
  for (rr=(&w66), ss=w70+6; ss!=w70+7; ss+=1) *rr++ = *ss;
  /* #4349: @66 = @66' */
  /* #4350: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s84, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #4351: @434 = @434' */
  /* #4352: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4353: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4354: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #4355: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #4356: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4357: @66 = @70[6] */
  for (rr=(&w66), ss=w70+6; ss!=w70+7; ss+=1) *rr++ = *ss;
  /* #4358: @66 = @66' */
  /* #4359: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4360: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s84, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #4361: @434 = @434' */
  /* #4362: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4363: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #4364: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #4365: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4366: @66 = @70[5] */
  for (rr=(&w66), ss=w70+5; ss!=w70+6; ss+=1) *rr++ = *ss;
  /* #4367: @66 = @66' */
  /* #4368: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s84, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #4369: @434 = @434' */
  /* #4370: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4371: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4372: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #4373: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #4374: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4375: @66 = @70[5] */
  for (rr=(&w66), ss=w70+5; ss!=w70+6; ss+=1) *rr++ = *ss;
  /* #4376: @66 = @66' */
  /* #4377: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4378: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s84, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #4379: @434 = @434' */
  /* #4380: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4381: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #4382: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #4383: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4384: @66 = @70[4] */
  for (rr=(&w66), ss=w70+4; ss!=w70+5; ss+=1) *rr++ = *ss;
  /* #4385: @66 = @66' */
  /* #4386: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s84, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #4387: @434 = @434' */
  /* #4388: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4389: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4390: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #4391: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #4392: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4393: @66 = @70[4] */
  for (rr=(&w66), ss=w70+4; ss!=w70+5; ss+=1) *rr++ = *ss;
  /* #4394: @66 = @66' */
  /* #4395: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4396: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s84, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #4397: @434 = @434' */
  /* #4398: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4399: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #4400: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #4401: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4402: @66 = @70[3] */
  for (rr=(&w66), ss=w70+3; ss!=w70+4; ss+=1) *rr++ = *ss;
  /* #4403: @66 = @66' */
  /* #4404: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s84, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #4405: @434 = @434' */
  /* #4406: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4407: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4408: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #4409: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #4410: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4411: @66 = @70[3] */
  for (rr=(&w66), ss=w70+3; ss!=w70+4; ss+=1) *rr++ = *ss;
  /* #4412: @66 = @66' */
  /* #4413: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4414: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s84, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #4415: @434 = @434' */
  /* #4416: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4417: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #4418: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #4419: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4420: @66 = @70[2] */
  for (rr=(&w66), ss=w70+2; ss!=w70+3; ss+=1) *rr++ = *ss;
  /* #4421: @66 = @66' */
  /* #4422: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s84, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #4423: @434 = @434' */
  /* #4424: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4425: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4426: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #4427: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #4428: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4429: @66 = @70[2] */
  for (rr=(&w66), ss=w70+2; ss!=w70+3; ss+=1) *rr++ = *ss;
  /* #4430: @66 = @66' */
  /* #4431: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4432: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s84, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #4433: @434 = @434' */
  /* #4434: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4435: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #4436: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #4437: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4438: @66 = @70[1] */
  for (rr=(&w66), ss=w70+1; ss!=w70+2; ss+=1) *rr++ = *ss;
  /* #4439: @66 = @66' */
  /* #4440: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s84, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #4441: @434 = @434' */
  /* #4442: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4443: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4444: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #4445: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #4446: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4447: @66 = @70[1] */
  for (rr=(&w66), ss=w70+1; ss!=w70+2; ss+=1) *rr++ = *ss;
  /* #4448: @66 = @66' */
  /* #4449: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4450: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s84, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #4451: @434 = @434' */
  /* #4452: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4453: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #4454: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #4455: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4456: @66 = @70[0] */
  for (rr=(&w66), ss=w70+0; ss!=w70+1; ss+=1) *rr++ = *ss;
  /* #4457: @66 = @66' */
  /* #4458: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s84, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #4459: @434 = @434' */
  /* #4460: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #4461: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4462: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #4463: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #4464: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #4465: @66 = @70[0] */
  for (rr=(&w66), ss=w70+0; ss!=w70+1; ss+=1) *rr++ = *ss;
  /* #4466: @66 = @66' */
  /* #4467: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4468: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s84, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #4469: @434 = @434' */
  /* #4470: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #4471: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #4472: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #4473: @1 = vec(@1) */
  /* #4474: @4 = zeros(4x25) */
  casadi_clear(w4, 100);
  /* #4475: (@4[96:100] += @489) */
  for (rr=w4+96, ss=w489; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #4476: (@4[92:96] += @492) */
  for (rr=w4+92, ss=w492; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #4477: (@4[88:92] += @495) */
  for (rr=w4+88, ss=w495; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #4478: (@4[84:88] += @498) */
  for (rr=w4+84, ss=w498; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #4479: (@4[80:84] += @501) */
  for (rr=w4+80, ss=w501; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #4480: (@4[76:80] += @504) */
  for (rr=w4+76, ss=w504; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #4481: (@4[72:76] += @507) */
  for (rr=w4+72, ss=w507; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #4482: (@4[68:72] += @510) */
  for (rr=w4+68, ss=w510; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #4483: (@4[64:68] += @513) */
  for (rr=w4+64, ss=w513; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #4484: (@4[60:64] += @516) */
  for (rr=w4+60, ss=w516; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #4485: (@4[56:60] += @519) */
  for (rr=w4+56, ss=w519; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #4486: (@4[52:56] += @522) */
  for (rr=w4+52, ss=w522; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #4487: (@4[48:52] += @525) */
  for (rr=w4+48, ss=w525; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #4488: (@4[44:48] += @528) */
  for (rr=w4+44, ss=w528; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #4489: (@4[40:44] += @531) */
  for (rr=w4+40, ss=w531; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #4490: (@4[36:40] += @534) */
  for (rr=w4+36, ss=w534; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #4491: (@4[32:36] += @537) */
  for (rr=w4+32, ss=w537; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #4492: (@4[28:32] += @540) */
  for (rr=w4+28, ss=w540; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #4493: (@4[24:28] += @543) */
  for (rr=w4+24, ss=w543; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #4494: (@4[20:24] += @546) */
  for (rr=w4+20, ss=w546; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #4495: (@4[16:20] += @549) */
  for (rr=w4+16, ss=w549; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #4496: (@4[12:16] += @552) */
  for (rr=w4+12, ss=w552; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #4497: (@4[8:12] += @555) */
  for (rr=w4+8, ss=w555; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #4498: (@4[4:8] += @558) */
  for (rr=w4+4, ss=w558; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #4499: (@4[:4] += @561) */
  for (rr=w4+0, ss=w561; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #4500: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4501: @66 = @71[24] */
  for (rr=(&w66), ss=w71+24; ss!=w71+25; ss+=1) *rr++ = *ss;
  /* #4502: @66 = @66' */
  /* #4503: @561 = mac(@66,@562,@561) */
  casadi_mtimes((&w66), casadi_s85, w562, casadi_s72, w561, casadi_s71, w, 0);
  /* #4504: @561 = @561' */
  /* #4505: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4506: (@4[96:100] += @561) */
  for (rr=w4+96, ss=w561; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #4507: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4508: @66 = @71[24] */
  for (rr=(&w66), ss=w71+24; ss!=w71+25; ss+=1) *rr++ = *ss;
  /* #4509: @66 = @66' */
  /* #4510: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4511: @561 = mac(@66,@563,@561) */
  casadi_mtimes((&w66), casadi_s85, w563, casadi_s72, w561, casadi_s71, w, 0);
  /* #4512: @561 = @561' */
  /* #4513: (@4[96:100] += @561) */
  for (rr=w4+96, ss=w561; rr!=w4+100; rr+=1) *rr += *ss++;
  /* #4514: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4515: @66 = @71[23] */
  for (rr=(&w66), ss=w71+23; ss!=w71+24; ss+=1) *rr++ = *ss;
  /* #4516: @66 = @66' */
  /* #4517: @561 = mac(@66,@564,@561) */
  casadi_mtimes((&w66), casadi_s85, w564, casadi_s72, w561, casadi_s71, w, 0);
  /* #4518: @561 = @561' */
  /* #4519: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4520: (@4[92:96] += @561) */
  for (rr=w4+92, ss=w561; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #4521: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4522: @66 = @71[23] */
  for (rr=(&w66), ss=w71+23; ss!=w71+24; ss+=1) *rr++ = *ss;
  /* #4523: @66 = @66' */
  /* #4524: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4525: @561 = mac(@66,@565,@561) */
  casadi_mtimes((&w66), casadi_s85, w565, casadi_s72, w561, casadi_s71, w, 0);
  /* #4526: @561 = @561' */
  /* #4527: (@4[92:96] += @561) */
  for (rr=w4+92, ss=w561; rr!=w4+96; rr+=1) *rr += *ss++;
  /* #4528: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4529: @66 = @71[22] */
  for (rr=(&w66), ss=w71+22; ss!=w71+23; ss+=1) *rr++ = *ss;
  /* #4530: @66 = @66' */
  /* #4531: @561 = mac(@66,@566,@561) */
  casadi_mtimes((&w66), casadi_s85, w566, casadi_s72, w561, casadi_s71, w, 0);
  /* #4532: @561 = @561' */
  /* #4533: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4534: (@4[88:92] += @561) */
  for (rr=w4+88, ss=w561; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #4535: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4536: @66 = @71[22] */
  for (rr=(&w66), ss=w71+22; ss!=w71+23; ss+=1) *rr++ = *ss;
  /* #4537: @66 = @66' */
  /* #4538: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4539: @561 = mac(@66,@567,@561) */
  casadi_mtimes((&w66), casadi_s85, w567, casadi_s72, w561, casadi_s71, w, 0);
  /* #4540: @561 = @561' */
  /* #4541: (@4[88:92] += @561) */
  for (rr=w4+88, ss=w561; rr!=w4+92; rr+=1) *rr += *ss++;
  /* #4542: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4543: @66 = @71[21] */
  for (rr=(&w66), ss=w71+21; ss!=w71+22; ss+=1) *rr++ = *ss;
  /* #4544: @66 = @66' */
  /* #4545: @561 = mac(@66,@568,@561) */
  casadi_mtimes((&w66), casadi_s85, w568, casadi_s72, w561, casadi_s71, w, 0);
  /* #4546: @561 = @561' */
  /* #4547: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4548: (@4[84:88] += @561) */
  for (rr=w4+84, ss=w561; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #4549: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4550: @66 = @71[21] */
  for (rr=(&w66), ss=w71+21; ss!=w71+22; ss+=1) *rr++ = *ss;
  /* #4551: @66 = @66' */
  /* #4552: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4553: @561 = mac(@66,@569,@561) */
  casadi_mtimes((&w66), casadi_s85, w569, casadi_s72, w561, casadi_s71, w, 0);
  /* #4554: @561 = @561' */
  /* #4555: (@4[84:88] += @561) */
  for (rr=w4+84, ss=w561; rr!=w4+88; rr+=1) *rr += *ss++;
  /* #4556: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4557: @66 = @71[20] */
  for (rr=(&w66), ss=w71+20; ss!=w71+21; ss+=1) *rr++ = *ss;
  /* #4558: @66 = @66' */
  /* #4559: @561 = mac(@66,@570,@561) */
  casadi_mtimes((&w66), casadi_s85, w570, casadi_s72, w561, casadi_s71, w, 0);
  /* #4560: @561 = @561' */
  /* #4561: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4562: (@4[80:84] += @561) */
  for (rr=w4+80, ss=w561; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #4563: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4564: @66 = @71[20] */
  for (rr=(&w66), ss=w71+20; ss!=w71+21; ss+=1) *rr++ = *ss;
  /* #4565: @66 = @66' */
  /* #4566: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4567: @561 = mac(@66,@571,@561) */
  casadi_mtimes((&w66), casadi_s85, w571, casadi_s72, w561, casadi_s71, w, 0);
  /* #4568: @561 = @561' */
  /* #4569: (@4[80:84] += @561) */
  for (rr=w4+80, ss=w561; rr!=w4+84; rr+=1) *rr += *ss++;
  /* #4570: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4571: @66 = @71[19] */
  for (rr=(&w66), ss=w71+19; ss!=w71+20; ss+=1) *rr++ = *ss;
  /* #4572: @66 = @66' */
  /* #4573: @561 = mac(@66,@572,@561) */
  casadi_mtimes((&w66), casadi_s85, w572, casadi_s72, w561, casadi_s71, w, 0);
  /* #4574: @561 = @561' */
  /* #4575: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4576: (@4[76:80] += @561) */
  for (rr=w4+76, ss=w561; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #4577: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4578: @66 = @71[19] */
  for (rr=(&w66), ss=w71+19; ss!=w71+20; ss+=1) *rr++ = *ss;
  /* #4579: @66 = @66' */
  /* #4580: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4581: @561 = mac(@66,@573,@561) */
  casadi_mtimes((&w66), casadi_s85, w573, casadi_s72, w561, casadi_s71, w, 0);
  /* #4582: @561 = @561' */
  /* #4583: (@4[76:80] += @561) */
  for (rr=w4+76, ss=w561; rr!=w4+80; rr+=1) *rr += *ss++;
  /* #4584: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4585: @66 = @71[18] */
  for (rr=(&w66), ss=w71+18; ss!=w71+19; ss+=1) *rr++ = *ss;
  /* #4586: @66 = @66' */
  /* #4587: @561 = mac(@66,@574,@561) */
  casadi_mtimes((&w66), casadi_s85, w574, casadi_s72, w561, casadi_s71, w, 0);
  /* #4588: @561 = @561' */
  /* #4589: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4590: (@4[72:76] += @561) */
  for (rr=w4+72, ss=w561; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #4591: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4592: @66 = @71[18] */
  for (rr=(&w66), ss=w71+18; ss!=w71+19; ss+=1) *rr++ = *ss;
  /* #4593: @66 = @66' */
  /* #4594: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4595: @561 = mac(@66,@575,@561) */
  casadi_mtimes((&w66), casadi_s85, w575, casadi_s72, w561, casadi_s71, w, 0);
  /* #4596: @561 = @561' */
  /* #4597: (@4[72:76] += @561) */
  for (rr=w4+72, ss=w561; rr!=w4+76; rr+=1) *rr += *ss++;
  /* #4598: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4599: @66 = @71[17] */
  for (rr=(&w66), ss=w71+17; ss!=w71+18; ss+=1) *rr++ = *ss;
  /* #4600: @66 = @66' */
  /* #4601: @561 = mac(@66,@576,@561) */
  casadi_mtimes((&w66), casadi_s85, w576, casadi_s72, w561, casadi_s71, w, 0);
  /* #4602: @561 = @561' */
  /* #4603: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4604: (@4[68:72] += @561) */
  for (rr=w4+68, ss=w561; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #4605: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4606: @66 = @71[17] */
  for (rr=(&w66), ss=w71+17; ss!=w71+18; ss+=1) *rr++ = *ss;
  /* #4607: @66 = @66' */
  /* #4608: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4609: @561 = mac(@66,@577,@561) */
  casadi_mtimes((&w66), casadi_s85, w577, casadi_s72, w561, casadi_s71, w, 0);
  /* #4610: @561 = @561' */
  /* #4611: (@4[68:72] += @561) */
  for (rr=w4+68, ss=w561; rr!=w4+72; rr+=1) *rr += *ss++;
  /* #4612: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4613: @66 = @71[16] */
  for (rr=(&w66), ss=w71+16; ss!=w71+17; ss+=1) *rr++ = *ss;
  /* #4614: @66 = @66' */
  /* #4615: @561 = mac(@66,@578,@561) */
  casadi_mtimes((&w66), casadi_s85, w578, casadi_s72, w561, casadi_s71, w, 0);
  /* #4616: @561 = @561' */
  /* #4617: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4618: (@4[64:68] += @561) */
  for (rr=w4+64, ss=w561; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #4619: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4620: @66 = @71[16] */
  for (rr=(&w66), ss=w71+16; ss!=w71+17; ss+=1) *rr++ = *ss;
  /* #4621: @66 = @66' */
  /* #4622: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4623: @561 = mac(@66,@579,@561) */
  casadi_mtimes((&w66), casadi_s85, w579, casadi_s72, w561, casadi_s71, w, 0);
  /* #4624: @561 = @561' */
  /* #4625: (@4[64:68] += @561) */
  for (rr=w4+64, ss=w561; rr!=w4+68; rr+=1) *rr += *ss++;
  /* #4626: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4627: @66 = @71[15] */
  for (rr=(&w66), ss=w71+15; ss!=w71+16; ss+=1) *rr++ = *ss;
  /* #4628: @66 = @66' */
  /* #4629: @561 = mac(@66,@580,@561) */
  casadi_mtimes((&w66), casadi_s85, w580, casadi_s72, w561, casadi_s71, w, 0);
  /* #4630: @561 = @561' */
  /* #4631: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4632: (@4[60:64] += @561) */
  for (rr=w4+60, ss=w561; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #4633: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4634: @66 = @71[15] */
  for (rr=(&w66), ss=w71+15; ss!=w71+16; ss+=1) *rr++ = *ss;
  /* #4635: @66 = @66' */
  /* #4636: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4637: @561 = mac(@66,@581,@561) */
  casadi_mtimes((&w66), casadi_s85, w581, casadi_s72, w561, casadi_s71, w, 0);
  /* #4638: @561 = @561' */
  /* #4639: (@4[60:64] += @561) */
  for (rr=w4+60, ss=w561; rr!=w4+64; rr+=1) *rr += *ss++;
  /* #4640: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4641: @66 = @71[14] */
  for (rr=(&w66), ss=w71+14; ss!=w71+15; ss+=1) *rr++ = *ss;
  /* #4642: @66 = @66' */
  /* #4643: @561 = mac(@66,@582,@561) */
  casadi_mtimes((&w66), casadi_s85, w582, casadi_s72, w561, casadi_s71, w, 0);
  /* #4644: @561 = @561' */
  /* #4645: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4646: (@4[56:60] += @561) */
  for (rr=w4+56, ss=w561; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #4647: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4648: @66 = @71[14] */
  for (rr=(&w66), ss=w71+14; ss!=w71+15; ss+=1) *rr++ = *ss;
  /* #4649: @66 = @66' */
  /* #4650: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4651: @561 = mac(@66,@583,@561) */
  casadi_mtimes((&w66), casadi_s85, w583, casadi_s72, w561, casadi_s71, w, 0);
  /* #4652: @561 = @561' */
  /* #4653: (@4[56:60] += @561) */
  for (rr=w4+56, ss=w561; rr!=w4+60; rr+=1) *rr += *ss++;
  /* #4654: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4655: @66 = @71[13] */
  for (rr=(&w66), ss=w71+13; ss!=w71+14; ss+=1) *rr++ = *ss;
  /* #4656: @66 = @66' */
  /* #4657: @561 = mac(@66,@584,@561) */
  casadi_mtimes((&w66), casadi_s85, w584, casadi_s72, w561, casadi_s71, w, 0);
  /* #4658: @561 = @561' */
  /* #4659: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4660: (@4[52:56] += @561) */
  for (rr=w4+52, ss=w561; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #4661: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4662: @66 = @71[13] */
  for (rr=(&w66), ss=w71+13; ss!=w71+14; ss+=1) *rr++ = *ss;
  /* #4663: @66 = @66' */
  /* #4664: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4665: @561 = mac(@66,@585,@561) */
  casadi_mtimes((&w66), casadi_s85, w585, casadi_s72, w561, casadi_s71, w, 0);
  /* #4666: @561 = @561' */
  /* #4667: (@4[52:56] += @561) */
  for (rr=w4+52, ss=w561; rr!=w4+56; rr+=1) *rr += *ss++;
  /* #4668: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4669: @66 = @71[12] */
  for (rr=(&w66), ss=w71+12; ss!=w71+13; ss+=1) *rr++ = *ss;
  /* #4670: @66 = @66' */
  /* #4671: @561 = mac(@66,@586,@561) */
  casadi_mtimes((&w66), casadi_s85, w586, casadi_s72, w561, casadi_s71, w, 0);
  /* #4672: @561 = @561' */
  /* #4673: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4674: (@4[48:52] += @561) */
  for (rr=w4+48, ss=w561; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #4675: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4676: @66 = @71[12] */
  for (rr=(&w66), ss=w71+12; ss!=w71+13; ss+=1) *rr++ = *ss;
  /* #4677: @66 = @66' */
  /* #4678: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4679: @561 = mac(@66,@587,@561) */
  casadi_mtimes((&w66), casadi_s85, w587, casadi_s72, w561, casadi_s71, w, 0);
  /* #4680: @561 = @561' */
  /* #4681: (@4[48:52] += @561) */
  for (rr=w4+48, ss=w561; rr!=w4+52; rr+=1) *rr += *ss++;
  /* #4682: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4683: @66 = @71[11] */
  for (rr=(&w66), ss=w71+11; ss!=w71+12; ss+=1) *rr++ = *ss;
  /* #4684: @66 = @66' */
  /* #4685: @561 = mac(@66,@588,@561) */
  casadi_mtimes((&w66), casadi_s85, w588, casadi_s72, w561, casadi_s71, w, 0);
  /* #4686: @561 = @561' */
  /* #4687: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4688: (@4[44:48] += @561) */
  for (rr=w4+44, ss=w561; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #4689: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4690: @66 = @71[11] */
  for (rr=(&w66), ss=w71+11; ss!=w71+12; ss+=1) *rr++ = *ss;
  /* #4691: @66 = @66' */
  /* #4692: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4693: @561 = mac(@66,@589,@561) */
  casadi_mtimes((&w66), casadi_s85, w589, casadi_s72, w561, casadi_s71, w, 0);
  /* #4694: @561 = @561' */
  /* #4695: (@4[44:48] += @561) */
  for (rr=w4+44, ss=w561; rr!=w4+48; rr+=1) *rr += *ss++;
  /* #4696: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4697: @66 = @71[10] */
  for (rr=(&w66), ss=w71+10; ss!=w71+11; ss+=1) *rr++ = *ss;
  /* #4698: @66 = @66' */
  /* #4699: @561 = mac(@66,@590,@561) */
  casadi_mtimes((&w66), casadi_s85, w590, casadi_s72, w561, casadi_s71, w, 0);
  /* #4700: @561 = @561' */
  /* #4701: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4702: (@4[40:44] += @561) */
  for (rr=w4+40, ss=w561; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #4703: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4704: @66 = @71[10] */
  for (rr=(&w66), ss=w71+10; ss!=w71+11; ss+=1) *rr++ = *ss;
  /* #4705: @66 = @66' */
  /* #4706: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4707: @561 = mac(@66,@591,@561) */
  casadi_mtimes((&w66), casadi_s85, w591, casadi_s72, w561, casadi_s71, w, 0);
  /* #4708: @561 = @561' */
  /* #4709: (@4[40:44] += @561) */
  for (rr=w4+40, ss=w561; rr!=w4+44; rr+=1) *rr += *ss++;
  /* #4710: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4711: @66 = @71[9] */
  for (rr=(&w66), ss=w71+9; ss!=w71+10; ss+=1) *rr++ = *ss;
  /* #4712: @66 = @66' */
  /* #4713: @561 = mac(@66,@592,@561) */
  casadi_mtimes((&w66), casadi_s85, w592, casadi_s72, w561, casadi_s71, w, 0);
  /* #4714: @561 = @561' */
  /* #4715: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4716: (@4[36:40] += @561) */
  for (rr=w4+36, ss=w561; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #4717: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4718: @66 = @71[9] */
  for (rr=(&w66), ss=w71+9; ss!=w71+10; ss+=1) *rr++ = *ss;
  /* #4719: @66 = @66' */
  /* #4720: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4721: @561 = mac(@66,@593,@561) */
  casadi_mtimes((&w66), casadi_s85, w593, casadi_s72, w561, casadi_s71, w, 0);
  /* #4722: @561 = @561' */
  /* #4723: (@4[36:40] += @561) */
  for (rr=w4+36, ss=w561; rr!=w4+40; rr+=1) *rr += *ss++;
  /* #4724: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4725: @66 = @71[8] */
  for (rr=(&w66), ss=w71+8; ss!=w71+9; ss+=1) *rr++ = *ss;
  /* #4726: @66 = @66' */
  /* #4727: @561 = mac(@66,@594,@561) */
  casadi_mtimes((&w66), casadi_s85, w594, casadi_s72, w561, casadi_s71, w, 0);
  /* #4728: @561 = @561' */
  /* #4729: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4730: (@4[32:36] += @561) */
  for (rr=w4+32, ss=w561; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #4731: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4732: @66 = @71[8] */
  for (rr=(&w66), ss=w71+8; ss!=w71+9; ss+=1) *rr++ = *ss;
  /* #4733: @66 = @66' */
  /* #4734: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4735: @561 = mac(@66,@595,@561) */
  casadi_mtimes((&w66), casadi_s85, w595, casadi_s72, w561, casadi_s71, w, 0);
  /* #4736: @561 = @561' */
  /* #4737: (@4[32:36] += @561) */
  for (rr=w4+32, ss=w561; rr!=w4+36; rr+=1) *rr += *ss++;
  /* #4738: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4739: @66 = @71[7] */
  for (rr=(&w66), ss=w71+7; ss!=w71+8; ss+=1) *rr++ = *ss;
  /* #4740: @66 = @66' */
  /* #4741: @561 = mac(@66,@596,@561) */
  casadi_mtimes((&w66), casadi_s85, w596, casadi_s72, w561, casadi_s71, w, 0);
  /* #4742: @561 = @561' */
  /* #4743: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4744: (@4[28:32] += @561) */
  for (rr=w4+28, ss=w561; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #4745: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4746: @66 = @71[7] */
  for (rr=(&w66), ss=w71+7; ss!=w71+8; ss+=1) *rr++ = *ss;
  /* #4747: @66 = @66' */
  /* #4748: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4749: @561 = mac(@66,@597,@561) */
  casadi_mtimes((&w66), casadi_s85, w597, casadi_s72, w561, casadi_s71, w, 0);
  /* #4750: @561 = @561' */
  /* #4751: (@4[28:32] += @561) */
  for (rr=w4+28, ss=w561; rr!=w4+32; rr+=1) *rr += *ss++;
  /* #4752: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4753: @66 = @71[6] */
  for (rr=(&w66), ss=w71+6; ss!=w71+7; ss+=1) *rr++ = *ss;
  /* #4754: @66 = @66' */
  /* #4755: @561 = mac(@66,@598,@561) */
  casadi_mtimes((&w66), casadi_s85, w598, casadi_s72, w561, casadi_s71, w, 0);
  /* #4756: @561 = @561' */
  /* #4757: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4758: (@4[24:28] += @561) */
  for (rr=w4+24, ss=w561; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #4759: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4760: @66 = @71[6] */
  for (rr=(&w66), ss=w71+6; ss!=w71+7; ss+=1) *rr++ = *ss;
  /* #4761: @66 = @66' */
  /* #4762: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4763: @561 = mac(@66,@599,@561) */
  casadi_mtimes((&w66), casadi_s85, w599, casadi_s72, w561, casadi_s71, w, 0);
  /* #4764: @561 = @561' */
  /* #4765: (@4[24:28] += @561) */
  for (rr=w4+24, ss=w561; rr!=w4+28; rr+=1) *rr += *ss++;
  /* #4766: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4767: @66 = @71[5] */
  for (rr=(&w66), ss=w71+5; ss!=w71+6; ss+=1) *rr++ = *ss;
  /* #4768: @66 = @66' */
  /* #4769: @561 = mac(@66,@600,@561) */
  casadi_mtimes((&w66), casadi_s85, w600, casadi_s72, w561, casadi_s71, w, 0);
  /* #4770: @561 = @561' */
  /* #4771: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4772: (@4[20:24] += @561) */
  for (rr=w4+20, ss=w561; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #4773: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4774: @66 = @71[5] */
  for (rr=(&w66), ss=w71+5; ss!=w71+6; ss+=1) *rr++ = *ss;
  /* #4775: @66 = @66' */
  /* #4776: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4777: @561 = mac(@66,@601,@561) */
  casadi_mtimes((&w66), casadi_s85, w601, casadi_s72, w561, casadi_s71, w, 0);
  /* #4778: @561 = @561' */
  /* #4779: (@4[20:24] += @561) */
  for (rr=w4+20, ss=w561; rr!=w4+24; rr+=1) *rr += *ss++;
  /* #4780: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4781: @66 = @71[4] */
  for (rr=(&w66), ss=w71+4; ss!=w71+5; ss+=1) *rr++ = *ss;
  /* #4782: @66 = @66' */
  /* #4783: @561 = mac(@66,@602,@561) */
  casadi_mtimes((&w66), casadi_s85, w602, casadi_s72, w561, casadi_s71, w, 0);
  /* #4784: @561 = @561' */
  /* #4785: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4786: (@4[16:20] += @561) */
  for (rr=w4+16, ss=w561; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #4787: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4788: @66 = @71[4] */
  for (rr=(&w66), ss=w71+4; ss!=w71+5; ss+=1) *rr++ = *ss;
  /* #4789: @66 = @66' */
  /* #4790: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4791: @561 = mac(@66,@603,@561) */
  casadi_mtimes((&w66), casadi_s85, w603, casadi_s72, w561, casadi_s71, w, 0);
  /* #4792: @561 = @561' */
  /* #4793: (@4[16:20] += @561) */
  for (rr=w4+16, ss=w561; rr!=w4+20; rr+=1) *rr += *ss++;
  /* #4794: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4795: @66 = @71[3] */
  for (rr=(&w66), ss=w71+3; ss!=w71+4; ss+=1) *rr++ = *ss;
  /* #4796: @66 = @66' */
  /* #4797: @561 = mac(@66,@604,@561) */
  casadi_mtimes((&w66), casadi_s85, w604, casadi_s72, w561, casadi_s71, w, 0);
  /* #4798: @561 = @561' */
  /* #4799: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4800: (@4[12:16] += @561) */
  for (rr=w4+12, ss=w561; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #4801: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4802: @66 = @71[3] */
  for (rr=(&w66), ss=w71+3; ss!=w71+4; ss+=1) *rr++ = *ss;
  /* #4803: @66 = @66' */
  /* #4804: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4805: @561 = mac(@66,@605,@561) */
  casadi_mtimes((&w66), casadi_s85, w605, casadi_s72, w561, casadi_s71, w, 0);
  /* #4806: @561 = @561' */
  /* #4807: (@4[12:16] += @561) */
  for (rr=w4+12, ss=w561; rr!=w4+16; rr+=1) *rr += *ss++;
  /* #4808: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4809: @66 = @71[2] */
  for (rr=(&w66), ss=w71+2; ss!=w71+3; ss+=1) *rr++ = *ss;
  /* #4810: @66 = @66' */
  /* #4811: @561 = mac(@66,@606,@561) */
  casadi_mtimes((&w66), casadi_s85, w606, casadi_s72, w561, casadi_s71, w, 0);
  /* #4812: @561 = @561' */
  /* #4813: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4814: (@4[8:12] += @561) */
  for (rr=w4+8, ss=w561; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #4815: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4816: @66 = @71[2] */
  for (rr=(&w66), ss=w71+2; ss!=w71+3; ss+=1) *rr++ = *ss;
  /* #4817: @66 = @66' */
  /* #4818: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4819: @561 = mac(@66,@607,@561) */
  casadi_mtimes((&w66), casadi_s85, w607, casadi_s72, w561, casadi_s71, w, 0);
  /* #4820: @561 = @561' */
  /* #4821: (@4[8:12] += @561) */
  for (rr=w4+8, ss=w561; rr!=w4+12; rr+=1) *rr += *ss++;
  /* #4822: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4823: @66 = @71[1] */
  for (rr=(&w66), ss=w71+1; ss!=w71+2; ss+=1) *rr++ = *ss;
  /* #4824: @66 = @66' */
  /* #4825: @561 = mac(@66,@608,@561) */
  casadi_mtimes((&w66), casadi_s85, w608, casadi_s72, w561, casadi_s71, w, 0);
  /* #4826: @561 = @561' */
  /* #4827: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4828: (@4[4:8] += @561) */
  for (rr=w4+4, ss=w561; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #4829: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4830: @66 = @71[1] */
  for (rr=(&w66), ss=w71+1; ss!=w71+2; ss+=1) *rr++ = *ss;
  /* #4831: @66 = @66' */
  /* #4832: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4833: @561 = mac(@66,@609,@561) */
  casadi_mtimes((&w66), casadi_s85, w609, casadi_s72, w561, casadi_s71, w, 0);
  /* #4834: @561 = @561' */
  /* #4835: (@4[4:8] += @561) */
  for (rr=w4+4, ss=w561; rr!=w4+8; rr+=1) *rr += *ss++;
  /* #4836: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4837: @66 = @71[0] */
  for (rr=(&w66), ss=w71+0; ss!=w71+1; ss+=1) *rr++ = *ss;
  /* #4838: @66 = @66' */
  /* #4839: @561 = mac(@66,@610,@561) */
  casadi_mtimes((&w66), casadi_s85, w610, casadi_s72, w561, casadi_s71, w, 0);
  /* #4840: @561 = @561' */
  /* #4841: @561 = (@63*@561) */
  for (i=0, rr=w561, cs=w561; i<4; ++i) (*rr++)  = (w63*(*cs++));
  /* #4842: (@4[:4] += @561) */
  for (rr=w4+0, ss=w561; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #4843: @561 = zeros(1x4) */
  casadi_clear(w561, 4);
  /* #4844: @66 = @71[0] */
  for (rr=(&w66), ss=w71+0; ss!=w71+1; ss+=1) *rr++ = *ss;
  /* #4845: @66 = @66' */
  /* #4846: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #4847: @561 = mac(@66,@611,@561) */
  casadi_mtimes((&w66), casadi_s85, w611, casadi_s72, w561, casadi_s71, w, 0);
  /* #4848: @561 = @561' */
  /* #4849: (@4[:4] += @561) */
  for (rr=w4+0, ss=w561; rr!=w4+4; rr+=1) *rr += *ss++;
  /* #4850: @4 = vec(@4) */
  /* #4851: @612 = vertcat(@1, @4) */
  rr=w612;
  for (i=0, cs=w1; i<364; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<100; ++i) *rr++ = *cs++;
  /* #4852: (@0[42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4746, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 5108, 5109, 5110, 5111, 5124, 5125, 5126, 5127, 5140, 5141, 5142, 5143, 5156, 5157, 5158, 5159, 5172, 5173, 5174, 5175, 5188, 5189, 5190, 5191, 5204, 5205, 5206, 5207, 5220, 5221, 5222, 5223, 5236, 5237, 5238, 5239, 5252, 5253, 5254, 5255, 5268, 5269, 5270, 5271, 5284, 5285, 5286, 5287, 5300, 5301, 5302, 5303, 5316, 5317, 5318, 5319, 5332, 5333, 5334, 5335, 5348, 5349, 5350, 5351, 5364, 5365, 5366, 5367, 5380, 5381, 5382, 5383, 5396, 5397, 5398, 5399, 5412, 5413, 5414, 5415, 5428, 5429, 5430, 5431, 5444, 5445, 5446, 5447, 5460, 5461, 5462, 5463, 5476, 5477, 5478, 5479, 5492, 5493, 5494, 5495] = @612) */
  for (cii=casadi_s86, rr=w0, ss=w612; cii!=casadi_s86+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #4853: (@0[3, 17, 31, 45, 59, 73, 87, 101, 115, 129, 143, 157, 171, 185, 199, 213, 227, 241, 255, 269, 283, 297, 311, 325, 339, 353, 367, 381, 395, 409, 423, 437, 451, 465, 479, 493, 507, 521, 535, 549, 563, 577, 591, 605, 619, 633, 647, 661, 675, 689, 703, 717, 731, 745, 759, 773, 787, 801, 815, 829, 843, 857, 871, 885, 899, 913, 927, 941, 955, 969, 983, 997, 1011, 1025, 1039, 1053, 1067, 1081, 1095, 1109, 1123, 1137, 1151, 1165, 1179, 1193, 1207, 1221, 1235, 1249, 1263, 1277, 1291, 1305, 1319, 1333, 1347, 1361, 1375, 1389, 1403, 1417, 1431, 1445, 1459, 1473, 1487, 1501, 1515, 1529, 1543, 1557, 1571, 1585, 1599, 1613, 1627, 1641, 1655, 1669, 1683, 1697, 1711, 1725, 1739, 1753, 1767, 1781, 1795, 1809, 1823, 1837, 1851, 1865, 1879, 1893, 1907, 1921, 1935, 1949, 1963, 1977, 1991, 2005, 2019, 2033, 2047, 2061, 2075, 2089, 2103, 2117, 2131, 2145, 2159, 2173, 2187, 2201, 2215, 2229, 2243, 2257, 2271, 2285, 2299, 2313, 2327, 2341, 2355, 2369, 2383, 2397, 2411, 2425, 2439, 2453, 2467, 2481, 2495, 2509, 2523, 2537, 2551, 2565, 2579, 2593, 2607, 2621, 2635, 2649, 2663, 2677, 2691, 2705, 2719, 2733, 2747, 2761, 2775, 2789, 2803, 2817, 2831, 2845, 2859, 2873, 2887, 2901, 2915, 2929, 2943, 2957, 2971, 2985, 2999, 3013, 3027, 3041, 3055, 3069, 3083, 3097, 3111, 3125, 3139, 3153, 3167, 3181, 3195, 3209, 3223, 3237, 3251, 3265, 3279, 3293, 3307, 3321, 3335, 3349, 3363, 3377, 3391, 3405, 3419, 3433, 3447, 3461, 3475, 3489, 3503, 3517, 3531, 3545, 3559, 3573, 3587, 3601, 3615, 3629, 3643, 3657, 3671, 3685, 3699, 3713, 3727, 3741, 3755, 3769, 3783, 3797, 3811, 3825, 3839, 3853, 3867, 3881, 3895, 3909, 3923, 3937, 3951, 3965, 3979, 3993, 4007, 4021, 4035, 4049, 4063, 4077, 4091, 4105, 4119, 4133, 4147, 4161, 4175, 4189, 4203, 4217, 4231, 4245, 4259, 4273, 4287, 4301, 4315, 4329, 4343, 4357, 4371, 4385, 4399, 4413, 4427, 4441, 4455, 4469, 4483, 4497, 4511, 4525, 4539, 4553, 4567, 4581, 4595, 4609, 4623, 4637, 4651, 4665, 4679, 4693, 4707, 4721, 4735, 4749, 4763, 4777, 4791, 4805, 4819, 4833, 4847, 4861, 4875, 4889, 4903, 4917, 4931, 4945, 4959, 4973, 4987, 5001, 5015, 5029, 5043, 5057, 5071, 5085, 5099, 5103, 5107, 5111, 5115, 5119, 5123, 5127, 5131, 5135, 5139, 5143, 5147, 5151, 5155, 5159, 5163, 5167, 5171, 5175, 5179, 5183, 5187, 5191, 5195, 5199, 5203, 5207, 5211, 5215, 5219, 5223, 5227, 5231, 5235, 5239, 5243, 5247, 5251, 5255, 5259, 5263, 5267, 5271, 5275, 5279, 5283, 5287, 5291, 5295, 5299, 5303, 5307, 5311, 5315, 5319, 5323, 5327, 5331, 5335, 5339, 5343, 5347, 5351, 5355, 5359, 5363, 5367, 5371, 5375, 5379, 5383, 5387, 5391, 5395, 5399, 5403, 5407, 5411, 5415, 5419, 5423, 5427, 5431, 5435, 5439, 5443, 5447, 5451, 5455, 5459, 5463, 5467, 5471, 5475, 5479, 5483, 5487, 5491, 5495] = @612) */
  for (cii=casadi_s87, rr=w0, ss=w612; cii!=casadi_s87+464; ++cii, ++ss) rr[*cii] = *ss;
  /* #4854: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #4855: @66 = @74[24] */
  for (rr=(&w66), ss=w74+24; ss!=w74+25; ss+=1) *rr++ = *ss;
  /* #4856: @66 = @66' */
  /* #4857: @66 = (@57*@66) */
  w66  = (w57*w66);
  /* #4858: @66 = @66' */
  /* #4859: (@1[347] += @66) */
  for (rr=w1+347, ss=(&w66); rr!=w1+348; rr+=1) *rr += *ss++;
  /* #4860: (@1[336:350] += @112) */
  for (rr=w1+336, ss=w112; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #4861: @66 = @74[23] */
  for (rr=(&w66), ss=w74+23; ss!=w74+24; ss+=1) *rr++ = *ss;
  /* #4862: @66 = @66' */
  /* #4863: @66 = (@55*@66) */
  w66  = (w55*w66);
  /* #4864: @66 = @66' */
  /* #4865: (@1[333] += @66) */
  for (rr=w1+333, ss=(&w66); rr!=w1+334; rr+=1) *rr += *ss++;
  /* #4866: (@1[322:336] += @125) */
  for (rr=w1+322, ss=w125; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #4867: @66 = @74[22] */
  for (rr=(&w66), ss=w74+22; ss!=w74+23; ss+=1) *rr++ = *ss;
  /* #4868: @66 = @66' */
  /* #4869: @66 = (@53*@66) */
  w66  = (w53*w66);
  /* #4870: @66 = @66' */
  /* #4871: (@1[319] += @66) */
  for (rr=w1+319, ss=(&w66); rr!=w1+320; rr+=1) *rr += *ss++;
  /* #4872: (@1[308:322] += @138) */
  for (rr=w1+308, ss=w138; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #4873: @66 = @74[21] */
  for (rr=(&w66), ss=w74+21; ss!=w74+22; ss+=1) *rr++ = *ss;
  /* #4874: @66 = @66' */
  /* #4875: @66 = (@51*@66) */
  w66  = (w51*w66);
  /* #4876: @66 = @66' */
  /* #4877: (@1[305] += @66) */
  for (rr=w1+305, ss=(&w66); rr!=w1+306; rr+=1) *rr += *ss++;
  /* #4878: (@1[294:308] += @151) */
  for (rr=w1+294, ss=w151; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #4879: @66 = @74[20] */
  for (rr=(&w66), ss=w74+20; ss!=w74+21; ss+=1) *rr++ = *ss;
  /* #4880: @66 = @66' */
  /* #4881: @66 = (@49*@66) */
  w66  = (w49*w66);
  /* #4882: @66 = @66' */
  /* #4883: (@1[291] += @66) */
  for (rr=w1+291, ss=(&w66); rr!=w1+292; rr+=1) *rr += *ss++;
  /* #4884: (@1[280:294] += @164) */
  for (rr=w1+280, ss=w164; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #4885: @66 = @74[19] */
  for (rr=(&w66), ss=w74+19; ss!=w74+20; ss+=1) *rr++ = *ss;
  /* #4886: @66 = @66' */
  /* #4887: @66 = (@47*@66) */
  w66  = (w47*w66);
  /* #4888: @66 = @66' */
  /* #4889: (@1[277] += @66) */
  for (rr=w1+277, ss=(&w66); rr!=w1+278; rr+=1) *rr += *ss++;
  /* #4890: (@1[266:280] += @177) */
  for (rr=w1+266, ss=w177; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #4891: @66 = @74[18] */
  for (rr=(&w66), ss=w74+18; ss!=w74+19; ss+=1) *rr++ = *ss;
  /* #4892: @66 = @66' */
  /* #4893: @66 = (@45*@66) */
  w66  = (w45*w66);
  /* #4894: @66 = @66' */
  /* #4895: (@1[263] += @66) */
  for (rr=w1+263, ss=(&w66); rr!=w1+264; rr+=1) *rr += *ss++;
  /* #4896: (@1[252:266] += @190) */
  for (rr=w1+252, ss=w190; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #4897: @66 = @74[17] */
  for (rr=(&w66), ss=w74+17; ss!=w74+18; ss+=1) *rr++ = *ss;
  /* #4898: @66 = @66' */
  /* #4899: @66 = (@43*@66) */
  w66  = (w43*w66);
  /* #4900: @66 = @66' */
  /* #4901: (@1[249] += @66) */
  for (rr=w1+249, ss=(&w66); rr!=w1+250; rr+=1) *rr += *ss++;
  /* #4902: (@1[238:252] += @203) */
  for (rr=w1+238, ss=w203; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #4903: @66 = @74[16] */
  for (rr=(&w66), ss=w74+16; ss!=w74+17; ss+=1) *rr++ = *ss;
  /* #4904: @66 = @66' */
  /* #4905: @66 = (@41*@66) */
  w66  = (w41*w66);
  /* #4906: @66 = @66' */
  /* #4907: (@1[235] += @66) */
  for (rr=w1+235, ss=(&w66); rr!=w1+236; rr+=1) *rr += *ss++;
  /* #4908: (@1[224:238] += @216) */
  for (rr=w1+224, ss=w216; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #4909: @66 = @74[15] */
  for (rr=(&w66), ss=w74+15; ss!=w74+16; ss+=1) *rr++ = *ss;
  /* #4910: @66 = @66' */
  /* #4911: @66 = (@39*@66) */
  w66  = (w39*w66);
  /* #4912: @66 = @66' */
  /* #4913: (@1[221] += @66) */
  for (rr=w1+221, ss=(&w66); rr!=w1+222; rr+=1) *rr += *ss++;
  /* #4914: (@1[210:224] += @229) */
  for (rr=w1+210, ss=w229; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #4915: @66 = @74[14] */
  for (rr=(&w66), ss=w74+14; ss!=w74+15; ss+=1) *rr++ = *ss;
  /* #4916: @66 = @66' */
  /* #4917: @66 = (@37*@66) */
  w66  = (w37*w66);
  /* #4918: @66 = @66' */
  /* #4919: (@1[207] += @66) */
  for (rr=w1+207, ss=(&w66); rr!=w1+208; rr+=1) *rr += *ss++;
  /* #4920: (@1[196:210] += @242) */
  for (rr=w1+196, ss=w242; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #4921: @66 = @74[13] */
  for (rr=(&w66), ss=w74+13; ss!=w74+14; ss+=1) *rr++ = *ss;
  /* #4922: @66 = @66' */
  /* #4923: @66 = (@35*@66) */
  w66  = (w35*w66);
  /* #4924: @66 = @66' */
  /* #4925: (@1[193] += @66) */
  for (rr=w1+193, ss=(&w66); rr!=w1+194; rr+=1) *rr += *ss++;
  /* #4926: (@1[182:196] += @255) */
  for (rr=w1+182, ss=w255; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #4927: @66 = @74[12] */
  for (rr=(&w66), ss=w74+12; ss!=w74+13; ss+=1) *rr++ = *ss;
  /* #4928: @66 = @66' */
  /* #4929: @66 = (@33*@66) */
  w66  = (w33*w66);
  /* #4930: @66 = @66' */
  /* #4931: (@1[179] += @66) */
  for (rr=w1+179, ss=(&w66); rr!=w1+180; rr+=1) *rr += *ss++;
  /* #4932: (@1[168:182] += @268) */
  for (rr=w1+168, ss=w268; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #4933: @66 = @74[11] */
  for (rr=(&w66), ss=w74+11; ss!=w74+12; ss+=1) *rr++ = *ss;
  /* #4934: @66 = @66' */
  /* #4935: @66 = (@31*@66) */
  w66  = (w31*w66);
  /* #4936: @66 = @66' */
  /* #4937: (@1[165] += @66) */
  for (rr=w1+165, ss=(&w66); rr!=w1+166; rr+=1) *rr += *ss++;
  /* #4938: (@1[154:168] += @281) */
  for (rr=w1+154, ss=w281; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #4939: @66 = @74[10] */
  for (rr=(&w66), ss=w74+10; ss!=w74+11; ss+=1) *rr++ = *ss;
  /* #4940: @66 = @66' */
  /* #4941: @66 = (@29*@66) */
  w66  = (w29*w66);
  /* #4942: @66 = @66' */
  /* #4943: (@1[151] += @66) */
  for (rr=w1+151, ss=(&w66); rr!=w1+152; rr+=1) *rr += *ss++;
  /* #4944: (@1[140:154] += @294) */
  for (rr=w1+140, ss=w294; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #4945: @66 = @74[9] */
  for (rr=(&w66), ss=w74+9; ss!=w74+10; ss+=1) *rr++ = *ss;
  /* #4946: @66 = @66' */
  /* #4947: @66 = (@27*@66) */
  w66  = (w27*w66);
  /* #4948: @66 = @66' */
  /* #4949: (@1[137] += @66) */
  for (rr=w1+137, ss=(&w66); rr!=w1+138; rr+=1) *rr += *ss++;
  /* #4950: (@1[126:140] += @307) */
  for (rr=w1+126, ss=w307; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #4951: @66 = @74[8] */
  for (rr=(&w66), ss=w74+8; ss!=w74+9; ss+=1) *rr++ = *ss;
  /* #4952: @66 = @66' */
  /* #4953: @66 = (@25*@66) */
  w66  = (w25*w66);
  /* #4954: @66 = @66' */
  /* #4955: (@1[123] += @66) */
  for (rr=w1+123, ss=(&w66); rr!=w1+124; rr+=1) *rr += *ss++;
  /* #4956: (@1[112:126] += @320) */
  for (rr=w1+112, ss=w320; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #4957: @66 = @74[7] */
  for (rr=(&w66), ss=w74+7; ss!=w74+8; ss+=1) *rr++ = *ss;
  /* #4958: @66 = @66' */
  /* #4959: @66 = (@23*@66) */
  w66  = (w23*w66);
  /* #4960: @66 = @66' */
  /* #4961: (@1[109] += @66) */
  for (rr=w1+109, ss=(&w66); rr!=w1+110; rr+=1) *rr += *ss++;
  /* #4962: (@1[98:112] += @333) */
  for (rr=w1+98, ss=w333; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #4963: @66 = @74[6] */
  for (rr=(&w66), ss=w74+6; ss!=w74+7; ss+=1) *rr++ = *ss;
  /* #4964: @66 = @66' */
  /* #4965: @66 = (@21*@66) */
  w66  = (w21*w66);
  /* #4966: @66 = @66' */
  /* #4967: (@1[95] += @66) */
  for (rr=w1+95, ss=(&w66); rr!=w1+96; rr+=1) *rr += *ss++;
  /* #4968: (@1[84:98] += @346) */
  for (rr=w1+84, ss=w346; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #4969: @66 = @74[5] */
  for (rr=(&w66), ss=w74+5; ss!=w74+6; ss+=1) *rr++ = *ss;
  /* #4970: @66 = @66' */
  /* #4971: @66 = (@19*@66) */
  w66  = (w19*w66);
  /* #4972: @66 = @66' */
  /* #4973: (@1[81] += @66) */
  for (rr=w1+81, ss=(&w66); rr!=w1+82; rr+=1) *rr += *ss++;
  /* #4974: (@1[70:84] += @359) */
  for (rr=w1+70, ss=w359; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #4975: @66 = @74[4] */
  for (rr=(&w66), ss=w74+4; ss!=w74+5; ss+=1) *rr++ = *ss;
  /* #4976: @66 = @66' */
  /* #4977: @66 = (@17*@66) */
  w66  = (w17*w66);
  /* #4978: @66 = @66' */
  /* #4979: (@1[67] += @66) */
  for (rr=w1+67, ss=(&w66); rr!=w1+68; rr+=1) *rr += *ss++;
  /* #4980: (@1[56:70] += @372) */
  for (rr=w1+56, ss=w372; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #4981: @66 = @74[3] */
  for (rr=(&w66), ss=w74+3; ss!=w74+4; ss+=1) *rr++ = *ss;
  /* #4982: @66 = @66' */
  /* #4983: @66 = (@15*@66) */
  w66  = (w15*w66);
  /* #4984: @66 = @66' */
  /* #4985: (@1[53] += @66) */
  for (rr=w1+53, ss=(&w66); rr!=w1+54; rr+=1) *rr += *ss++;
  /* #4986: (@1[42:56] += @385) */
  for (rr=w1+42, ss=w385; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #4987: @66 = @74[2] */
  for (rr=(&w66), ss=w74+2; ss!=w74+3; ss+=1) *rr++ = *ss;
  /* #4988: @66 = @66' */
  /* #4989: @66 = (@13*@66) */
  w66  = (w13*w66);
  /* #4990: @66 = @66' */
  /* #4991: (@1[39] += @66) */
  for (rr=w1+39, ss=(&w66); rr!=w1+40; rr+=1) *rr += *ss++;
  /* #4992: (@1[28:42] += @398) */
  for (rr=w1+28, ss=w398; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #4993: @66 = @74[1] */
  for (rr=(&w66), ss=w74+1; ss!=w74+2; ss+=1) *rr++ = *ss;
  /* #4994: @66 = @66' */
  /* #4995: @66 = (@11*@66) */
  w66  = (w11*w66);
  /* #4996: @66 = @66' */
  /* #4997: (@1[25] += @66) */
  for (rr=w1+25, ss=(&w66); rr!=w1+26; rr+=1) *rr += *ss++;
  /* #4998: (@1[14:28] += @411) */
  for (rr=w1+14, ss=w411; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #4999: @66 = @74[0] */
  for (rr=(&w66), ss=w74+0; ss!=w74+1; ss+=1) *rr++ = *ss;
  /* #5000: @66 = @66' */
  /* #5001: @66 = (@9*@66) */
  w66  = (w9*w66);
  /* #5002: @66 = @66' */
  /* #5003: (@1[11] += @66) */
  for (rr=w1+11, ss=(&w66); rr!=w1+12; rr+=1) *rr += *ss++;
  /* #5004: (@1[:14] += @424) */
  for (rr=w1+0, ss=w424; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #5005: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5006: @66 = @74[25] */
  for (rr=(&w66), ss=w74+25; ss!=w74+26; ss+=1) *rr++ = *ss;
  /* #5007: @66 = @66' */
  /* #5008: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s88, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #5009: @434 = @434' */
  /* #5010: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5011: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5012: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #5013: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #5014: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5015: @66 = @74[25] */
  for (rr=(&w66), ss=w74+25; ss!=w74+26; ss+=1) *rr++ = *ss;
  /* #5016: @66 = @66' */
  /* #5017: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5018: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s88, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #5019: @434 = @434' */
  /* #5020: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5021: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #5022: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #5023: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5024: @66 = @74[24] */
  for (rr=(&w66), ss=w74+24; ss!=w74+25; ss+=1) *rr++ = *ss;
  /* #5025: @66 = @66' */
  /* #5026: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s88, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #5027: @434 = @434' */
  /* #5028: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5029: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5030: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #5031: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #5032: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5033: @66 = @74[24] */
  for (rr=(&w66), ss=w74+24; ss!=w74+25; ss+=1) *rr++ = *ss;
  /* #5034: @66 = @66' */
  /* #5035: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5036: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s88, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #5037: @434 = @434' */
  /* #5038: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5039: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #5040: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #5041: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5042: @66 = @74[23] */
  for (rr=(&w66), ss=w74+23; ss!=w74+24; ss+=1) *rr++ = *ss;
  /* #5043: @66 = @66' */
  /* #5044: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s88, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #5045: @434 = @434' */
  /* #5046: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5047: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5048: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #5049: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #5050: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5051: @66 = @74[23] */
  for (rr=(&w66), ss=w74+23; ss!=w74+24; ss+=1) *rr++ = *ss;
  /* #5052: @66 = @66' */
  /* #5053: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5054: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s88, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #5055: @434 = @434' */
  /* #5056: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5057: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #5058: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #5059: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5060: @66 = @74[22] */
  for (rr=(&w66), ss=w74+22; ss!=w74+23; ss+=1) *rr++ = *ss;
  /* #5061: @66 = @66' */
  /* #5062: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s88, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #5063: @434 = @434' */
  /* #5064: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5065: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5066: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #5067: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #5068: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5069: @66 = @74[22] */
  for (rr=(&w66), ss=w74+22; ss!=w74+23; ss+=1) *rr++ = *ss;
  /* #5070: @66 = @66' */
  /* #5071: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5072: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s88, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #5073: @434 = @434' */
  /* #5074: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5075: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #5076: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #5077: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5078: @66 = @74[21] */
  for (rr=(&w66), ss=w74+21; ss!=w74+22; ss+=1) *rr++ = *ss;
  /* #5079: @66 = @66' */
  /* #5080: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s88, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #5081: @434 = @434' */
  /* #5082: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5083: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5084: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #5085: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #5086: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5087: @66 = @74[21] */
  for (rr=(&w66), ss=w74+21; ss!=w74+22; ss+=1) *rr++ = *ss;
  /* #5088: @66 = @66' */
  /* #5089: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5090: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s88, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #5091: @434 = @434' */
  /* #5092: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5093: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #5094: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #5095: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5096: @66 = @74[20] */
  for (rr=(&w66), ss=w74+20; ss!=w74+21; ss+=1) *rr++ = *ss;
  /* #5097: @66 = @66' */
  /* #5098: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s88, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #5099: @434 = @434' */
  /* #5100: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5101: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5102: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #5103: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #5104: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5105: @66 = @74[20] */
  for (rr=(&w66), ss=w74+20; ss!=w74+21; ss+=1) *rr++ = *ss;
  /* #5106: @66 = @66' */
  /* #5107: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5108: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s88, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #5109: @434 = @434' */
  /* #5110: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5111: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #5112: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #5113: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5114: @66 = @74[19] */
  for (rr=(&w66), ss=w74+19; ss!=w74+20; ss+=1) *rr++ = *ss;
  /* #5115: @66 = @66' */
  /* #5116: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s88, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #5117: @434 = @434' */
  /* #5118: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5119: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5120: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #5121: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #5122: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5123: @66 = @74[19] */
  for (rr=(&w66), ss=w74+19; ss!=w74+20; ss+=1) *rr++ = *ss;
  /* #5124: @66 = @66' */
  /* #5125: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5126: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s88, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #5127: @434 = @434' */
  /* #5128: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5129: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #5130: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #5131: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5132: @66 = @74[18] */
  for (rr=(&w66), ss=w74+18; ss!=w74+19; ss+=1) *rr++ = *ss;
  /* #5133: @66 = @66' */
  /* #5134: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s88, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #5135: @434 = @434' */
  /* #5136: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5137: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5138: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #5139: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #5140: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5141: @66 = @74[18] */
  for (rr=(&w66), ss=w74+18; ss!=w74+19; ss+=1) *rr++ = *ss;
  /* #5142: @66 = @66' */
  /* #5143: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5144: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s88, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #5145: @434 = @434' */
  /* #5146: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5147: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #5148: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #5149: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5150: @66 = @74[17] */
  for (rr=(&w66), ss=w74+17; ss!=w74+18; ss+=1) *rr++ = *ss;
  /* #5151: @66 = @66' */
  /* #5152: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s88, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #5153: @434 = @434' */
  /* #5154: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5155: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5156: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #5157: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #5158: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5159: @66 = @74[17] */
  for (rr=(&w66), ss=w74+17; ss!=w74+18; ss+=1) *rr++ = *ss;
  /* #5160: @66 = @66' */
  /* #5161: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5162: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s88, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #5163: @434 = @434' */
  /* #5164: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5165: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #5166: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #5167: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5168: @66 = @74[16] */
  for (rr=(&w66), ss=w74+16; ss!=w74+17; ss+=1) *rr++ = *ss;
  /* #5169: @66 = @66' */
  /* #5170: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s88, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #5171: @434 = @434' */
  /* #5172: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5173: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5174: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #5175: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #5176: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5177: @66 = @74[16] */
  for (rr=(&w66), ss=w74+16; ss!=w74+17; ss+=1) *rr++ = *ss;
  /* #5178: @66 = @66' */
  /* #5179: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5180: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s88, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #5181: @434 = @434' */
  /* #5182: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5183: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #5184: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #5185: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5186: @66 = @74[15] */
  for (rr=(&w66), ss=w74+15; ss!=w74+16; ss+=1) *rr++ = *ss;
  /* #5187: @66 = @66' */
  /* #5188: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s88, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #5189: @434 = @434' */
  /* #5190: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5191: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5192: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #5193: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #5194: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5195: @66 = @74[15] */
  for (rr=(&w66), ss=w74+15; ss!=w74+16; ss+=1) *rr++ = *ss;
  /* #5196: @66 = @66' */
  /* #5197: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5198: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s88, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #5199: @434 = @434' */
  /* #5200: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5201: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #5202: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #5203: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5204: @66 = @74[14] */
  for (rr=(&w66), ss=w74+14; ss!=w74+15; ss+=1) *rr++ = *ss;
  /* #5205: @66 = @66' */
  /* #5206: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s88, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #5207: @434 = @434' */
  /* #5208: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5209: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5210: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #5211: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #5212: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5213: @66 = @74[14] */
  for (rr=(&w66), ss=w74+14; ss!=w74+15; ss+=1) *rr++ = *ss;
  /* #5214: @66 = @66' */
  /* #5215: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5216: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s88, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #5217: @434 = @434' */
  /* #5218: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5219: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #5220: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #5221: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5222: @66 = @74[13] */
  for (rr=(&w66), ss=w74+13; ss!=w74+14; ss+=1) *rr++ = *ss;
  /* #5223: @66 = @66' */
  /* #5224: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s88, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #5225: @434 = @434' */
  /* #5226: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5227: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5228: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #5229: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #5230: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5231: @66 = @74[13] */
  for (rr=(&w66), ss=w74+13; ss!=w74+14; ss+=1) *rr++ = *ss;
  /* #5232: @66 = @66' */
  /* #5233: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5234: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s88, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #5235: @434 = @434' */
  /* #5236: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5237: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #5238: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #5239: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5240: @66 = @74[12] */
  for (rr=(&w66), ss=w74+12; ss!=w74+13; ss+=1) *rr++ = *ss;
  /* #5241: @66 = @66' */
  /* #5242: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s88, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #5243: @434 = @434' */
  /* #5244: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5245: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5246: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #5247: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #5248: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5249: @66 = @74[12] */
  for (rr=(&w66), ss=w74+12; ss!=w74+13; ss+=1) *rr++ = *ss;
  /* #5250: @66 = @66' */
  /* #5251: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5252: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s88, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #5253: @434 = @434' */
  /* #5254: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5255: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #5256: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #5257: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5258: @66 = @74[11] */
  for (rr=(&w66), ss=w74+11; ss!=w74+12; ss+=1) *rr++ = *ss;
  /* #5259: @66 = @66' */
  /* #5260: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s88, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #5261: @434 = @434' */
  /* #5262: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5263: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5264: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #5265: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #5266: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5267: @66 = @74[11] */
  for (rr=(&w66), ss=w74+11; ss!=w74+12; ss+=1) *rr++ = *ss;
  /* #5268: @66 = @66' */
  /* #5269: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5270: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s88, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #5271: @434 = @434' */
  /* #5272: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5273: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #5274: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #5275: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5276: @66 = @74[10] */
  for (rr=(&w66), ss=w74+10; ss!=w74+11; ss+=1) *rr++ = *ss;
  /* #5277: @66 = @66' */
  /* #5278: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s88, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #5279: @434 = @434' */
  /* #5280: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5281: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5282: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #5283: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #5284: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5285: @66 = @74[10] */
  for (rr=(&w66), ss=w74+10; ss!=w74+11; ss+=1) *rr++ = *ss;
  /* #5286: @66 = @66' */
  /* #5287: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5288: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s88, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #5289: @434 = @434' */
  /* #5290: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5291: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #5292: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #5293: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5294: @66 = @74[9] */
  for (rr=(&w66), ss=w74+9; ss!=w74+10; ss+=1) *rr++ = *ss;
  /* #5295: @66 = @66' */
  /* #5296: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s88, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #5297: @434 = @434' */
  /* #5298: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5299: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5300: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #5301: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #5302: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5303: @66 = @74[9] */
  for (rr=(&w66), ss=w74+9; ss!=w74+10; ss+=1) *rr++ = *ss;
  /* #5304: @66 = @66' */
  /* #5305: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5306: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s88, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #5307: @434 = @434' */
  /* #5308: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5309: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #5310: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #5311: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5312: @66 = @74[8] */
  for (rr=(&w66), ss=w74+8; ss!=w74+9; ss+=1) *rr++ = *ss;
  /* #5313: @66 = @66' */
  /* #5314: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s88, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #5315: @434 = @434' */
  /* #5316: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5317: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5318: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #5319: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #5320: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5321: @66 = @74[8] */
  for (rr=(&w66), ss=w74+8; ss!=w74+9; ss+=1) *rr++ = *ss;
  /* #5322: @66 = @66' */
  /* #5323: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5324: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s88, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #5325: @434 = @434' */
  /* #5326: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5327: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #5328: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #5329: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5330: @66 = @74[7] */
  for (rr=(&w66), ss=w74+7; ss!=w74+8; ss+=1) *rr++ = *ss;
  /* #5331: @66 = @66' */
  /* #5332: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s88, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #5333: @434 = @434' */
  /* #5334: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5335: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5336: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #5337: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #5338: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5339: @66 = @74[7] */
  for (rr=(&w66), ss=w74+7; ss!=w74+8; ss+=1) *rr++ = *ss;
  /* #5340: @66 = @66' */
  /* #5341: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5342: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s88, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #5343: @434 = @434' */
  /* #5344: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5345: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #5346: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #5347: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5348: @66 = @74[6] */
  for (rr=(&w66), ss=w74+6; ss!=w74+7; ss+=1) *rr++ = *ss;
  /* #5349: @66 = @66' */
  /* #5350: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s88, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #5351: @434 = @434' */
  /* #5352: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5353: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5354: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #5355: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #5356: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5357: @66 = @74[6] */
  for (rr=(&w66), ss=w74+6; ss!=w74+7; ss+=1) *rr++ = *ss;
  /* #5358: @66 = @66' */
  /* #5359: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5360: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s88, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #5361: @434 = @434' */
  /* #5362: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5363: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #5364: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #5365: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5366: @66 = @74[5] */
  for (rr=(&w66), ss=w74+5; ss!=w74+6; ss+=1) *rr++ = *ss;
  /* #5367: @66 = @66' */
  /* #5368: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s88, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #5369: @434 = @434' */
  /* #5370: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5371: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5372: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #5373: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #5374: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5375: @66 = @74[5] */
  for (rr=(&w66), ss=w74+5; ss!=w74+6; ss+=1) *rr++ = *ss;
  /* #5376: @66 = @66' */
  /* #5377: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5378: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s88, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #5379: @434 = @434' */
  /* #5380: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5381: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #5382: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #5383: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5384: @66 = @74[4] */
  for (rr=(&w66), ss=w74+4; ss!=w74+5; ss+=1) *rr++ = *ss;
  /* #5385: @66 = @66' */
  /* #5386: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s88, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #5387: @434 = @434' */
  /* #5388: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5389: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5390: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #5391: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #5392: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5393: @66 = @74[4] */
  for (rr=(&w66), ss=w74+4; ss!=w74+5; ss+=1) *rr++ = *ss;
  /* #5394: @66 = @66' */
  /* #5395: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5396: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s88, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #5397: @434 = @434' */
  /* #5398: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5399: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #5400: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #5401: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5402: @66 = @74[3] */
  for (rr=(&w66), ss=w74+3; ss!=w74+4; ss+=1) *rr++ = *ss;
  /* #5403: @66 = @66' */
  /* #5404: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s88, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #5405: @434 = @434' */
  /* #5406: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5407: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5408: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #5409: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #5410: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5411: @66 = @74[3] */
  for (rr=(&w66), ss=w74+3; ss!=w74+4; ss+=1) *rr++ = *ss;
  /* #5412: @66 = @66' */
  /* #5413: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5414: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s88, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #5415: @434 = @434' */
  /* #5416: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5417: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #5418: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #5419: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5420: @66 = @74[2] */
  for (rr=(&w66), ss=w74+2; ss!=w74+3; ss+=1) *rr++ = *ss;
  /* #5421: @66 = @66' */
  /* #5422: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s88, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #5423: @434 = @434' */
  /* #5424: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5425: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5426: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #5427: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #5428: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5429: @66 = @74[2] */
  for (rr=(&w66), ss=w74+2; ss!=w74+3; ss+=1) *rr++ = *ss;
  /* #5430: @66 = @66' */
  /* #5431: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5432: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s88, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #5433: @434 = @434' */
  /* #5434: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5435: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #5436: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #5437: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5438: @66 = @74[1] */
  for (rr=(&w66), ss=w74+1; ss!=w74+2; ss+=1) *rr++ = *ss;
  /* #5439: @66 = @66' */
  /* #5440: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s88, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #5441: @434 = @434' */
  /* #5442: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5443: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5444: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #5445: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #5446: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5447: @66 = @74[1] */
  for (rr=(&w66), ss=w74+1; ss!=w74+2; ss+=1) *rr++ = *ss;
  /* #5448: @66 = @66' */
  /* #5449: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5450: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s88, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #5451: @434 = @434' */
  /* #5452: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5453: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #5454: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #5455: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5456: @66 = @74[0] */
  for (rr=(&w66), ss=w74+0; ss!=w74+1; ss+=1) *rr++ = *ss;
  /* #5457: @66 = @66' */
  /* #5458: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s88, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #5459: @434 = @434' */
  /* #5460: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5461: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5462: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #5463: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #5464: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5465: @66 = @74[0] */
  for (rr=(&w66), ss=w74+0; ss!=w74+1; ss+=1) *rr++ = *ss;
  /* #5466: @66 = @66' */
  /* #5467: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5468: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s88, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #5469: @434 = @434' */
  /* #5470: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5471: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #5472: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #5473: @1 = vec(@1) */
  /* #5474: (@0[:5096:196;56:70] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+56; tt!=rr+70; tt+=1) *tt = *ss++;
  /* #5475: (@0[4:5100:14] = @1) */
  for (rr=w0+4, ss=w1; rr!=w0+5100; rr+=14) *rr = *ss++;
  /* #5476: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #5477: @66 = @76[24] */
  for (rr=(&w66), ss=w76+24; ss!=w76+25; ss+=1) *rr++ = *ss;
  /* #5478: @66 = @66' */
  /* #5479: @66 = (@57*@66) */
  w66  = (w57*w66);
  /* #5480: @66 = @66' */
  /* #5481: (@1[348] += @66) */
  for (rr=w1+348, ss=(&w66); rr!=w1+349; rr+=1) *rr += *ss++;
  /* #5482: (@1[336:350] += @113) */
  for (rr=w1+336, ss=w113; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #5483: @66 = @76[23] */
  for (rr=(&w66), ss=w76+23; ss!=w76+24; ss+=1) *rr++ = *ss;
  /* #5484: @66 = @66' */
  /* #5485: @66 = (@55*@66) */
  w66  = (w55*w66);
  /* #5486: @66 = @66' */
  /* #5487: (@1[334] += @66) */
  for (rr=w1+334, ss=(&w66); rr!=w1+335; rr+=1) *rr += *ss++;
  /* #5488: (@1[322:336] += @126) */
  for (rr=w1+322, ss=w126; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #5489: @66 = @76[22] */
  for (rr=(&w66), ss=w76+22; ss!=w76+23; ss+=1) *rr++ = *ss;
  /* #5490: @66 = @66' */
  /* #5491: @66 = (@53*@66) */
  w66  = (w53*w66);
  /* #5492: @66 = @66' */
  /* #5493: (@1[320] += @66) */
  for (rr=w1+320, ss=(&w66); rr!=w1+321; rr+=1) *rr += *ss++;
  /* #5494: (@1[308:322] += @139) */
  for (rr=w1+308, ss=w139; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #5495: @66 = @76[21] */
  for (rr=(&w66), ss=w76+21; ss!=w76+22; ss+=1) *rr++ = *ss;
  /* #5496: @66 = @66' */
  /* #5497: @66 = (@51*@66) */
  w66  = (w51*w66);
  /* #5498: @66 = @66' */
  /* #5499: (@1[306] += @66) */
  for (rr=w1+306, ss=(&w66); rr!=w1+307; rr+=1) *rr += *ss++;
  /* #5500: (@1[294:308] += @152) */
  for (rr=w1+294, ss=w152; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #5501: @66 = @76[20] */
  for (rr=(&w66), ss=w76+20; ss!=w76+21; ss+=1) *rr++ = *ss;
  /* #5502: @66 = @66' */
  /* #5503: @66 = (@49*@66) */
  w66  = (w49*w66);
  /* #5504: @66 = @66' */
  /* #5505: (@1[292] += @66) */
  for (rr=w1+292, ss=(&w66); rr!=w1+293; rr+=1) *rr += *ss++;
  /* #5506: (@1[280:294] += @165) */
  for (rr=w1+280, ss=w165; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #5507: @66 = @76[19] */
  for (rr=(&w66), ss=w76+19; ss!=w76+20; ss+=1) *rr++ = *ss;
  /* #5508: @66 = @66' */
  /* #5509: @66 = (@47*@66) */
  w66  = (w47*w66);
  /* #5510: @66 = @66' */
  /* #5511: (@1[278] += @66) */
  for (rr=w1+278, ss=(&w66); rr!=w1+279; rr+=1) *rr += *ss++;
  /* #5512: (@1[266:280] += @178) */
  for (rr=w1+266, ss=w178; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #5513: @66 = @76[18] */
  for (rr=(&w66), ss=w76+18; ss!=w76+19; ss+=1) *rr++ = *ss;
  /* #5514: @66 = @66' */
  /* #5515: @66 = (@45*@66) */
  w66  = (w45*w66);
  /* #5516: @66 = @66' */
  /* #5517: (@1[264] += @66) */
  for (rr=w1+264, ss=(&w66); rr!=w1+265; rr+=1) *rr += *ss++;
  /* #5518: (@1[252:266] += @191) */
  for (rr=w1+252, ss=w191; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #5519: @66 = @76[17] */
  for (rr=(&w66), ss=w76+17; ss!=w76+18; ss+=1) *rr++ = *ss;
  /* #5520: @66 = @66' */
  /* #5521: @66 = (@43*@66) */
  w66  = (w43*w66);
  /* #5522: @66 = @66' */
  /* #5523: (@1[250] += @66) */
  for (rr=w1+250, ss=(&w66); rr!=w1+251; rr+=1) *rr += *ss++;
  /* #5524: (@1[238:252] += @204) */
  for (rr=w1+238, ss=w204; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #5525: @66 = @76[16] */
  for (rr=(&w66), ss=w76+16; ss!=w76+17; ss+=1) *rr++ = *ss;
  /* #5526: @66 = @66' */
  /* #5527: @66 = (@41*@66) */
  w66  = (w41*w66);
  /* #5528: @66 = @66' */
  /* #5529: (@1[236] += @66) */
  for (rr=w1+236, ss=(&w66); rr!=w1+237; rr+=1) *rr += *ss++;
  /* #5530: (@1[224:238] += @217) */
  for (rr=w1+224, ss=w217; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #5531: @66 = @76[15] */
  for (rr=(&w66), ss=w76+15; ss!=w76+16; ss+=1) *rr++ = *ss;
  /* #5532: @66 = @66' */
  /* #5533: @66 = (@39*@66) */
  w66  = (w39*w66);
  /* #5534: @66 = @66' */
  /* #5535: (@1[222] += @66) */
  for (rr=w1+222, ss=(&w66); rr!=w1+223; rr+=1) *rr += *ss++;
  /* #5536: (@1[210:224] += @230) */
  for (rr=w1+210, ss=w230; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #5537: @66 = @76[14] */
  for (rr=(&w66), ss=w76+14; ss!=w76+15; ss+=1) *rr++ = *ss;
  /* #5538: @66 = @66' */
  /* #5539: @66 = (@37*@66) */
  w66  = (w37*w66);
  /* #5540: @66 = @66' */
  /* #5541: (@1[208] += @66) */
  for (rr=w1+208, ss=(&w66); rr!=w1+209; rr+=1) *rr += *ss++;
  /* #5542: (@1[196:210] += @243) */
  for (rr=w1+196, ss=w243; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #5543: @66 = @76[13] */
  for (rr=(&w66), ss=w76+13; ss!=w76+14; ss+=1) *rr++ = *ss;
  /* #5544: @66 = @66' */
  /* #5545: @66 = (@35*@66) */
  w66  = (w35*w66);
  /* #5546: @66 = @66' */
  /* #5547: (@1[194] += @66) */
  for (rr=w1+194, ss=(&w66); rr!=w1+195; rr+=1) *rr += *ss++;
  /* #5548: (@1[182:196] += @256) */
  for (rr=w1+182, ss=w256; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #5549: @66 = @76[12] */
  for (rr=(&w66), ss=w76+12; ss!=w76+13; ss+=1) *rr++ = *ss;
  /* #5550: @66 = @66' */
  /* #5551: @66 = (@33*@66) */
  w66  = (w33*w66);
  /* #5552: @66 = @66' */
  /* #5553: (@1[180] += @66) */
  for (rr=w1+180, ss=(&w66); rr!=w1+181; rr+=1) *rr += *ss++;
  /* #5554: (@1[168:182] += @269) */
  for (rr=w1+168, ss=w269; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #5555: @66 = @76[11] */
  for (rr=(&w66), ss=w76+11; ss!=w76+12; ss+=1) *rr++ = *ss;
  /* #5556: @66 = @66' */
  /* #5557: @66 = (@31*@66) */
  w66  = (w31*w66);
  /* #5558: @66 = @66' */
  /* #5559: (@1[166] += @66) */
  for (rr=w1+166, ss=(&w66); rr!=w1+167; rr+=1) *rr += *ss++;
  /* #5560: (@1[154:168] += @282) */
  for (rr=w1+154, ss=w282; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #5561: @66 = @76[10] */
  for (rr=(&w66), ss=w76+10; ss!=w76+11; ss+=1) *rr++ = *ss;
  /* #5562: @66 = @66' */
  /* #5563: @66 = (@29*@66) */
  w66  = (w29*w66);
  /* #5564: @66 = @66' */
  /* #5565: (@1[152] += @66) */
  for (rr=w1+152, ss=(&w66); rr!=w1+153; rr+=1) *rr += *ss++;
  /* #5566: (@1[140:154] += @295) */
  for (rr=w1+140, ss=w295; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #5567: @66 = @76[9] */
  for (rr=(&w66), ss=w76+9; ss!=w76+10; ss+=1) *rr++ = *ss;
  /* #5568: @66 = @66' */
  /* #5569: @66 = (@27*@66) */
  w66  = (w27*w66);
  /* #5570: @66 = @66' */
  /* #5571: (@1[138] += @66) */
  for (rr=w1+138, ss=(&w66); rr!=w1+139; rr+=1) *rr += *ss++;
  /* #5572: (@1[126:140] += @308) */
  for (rr=w1+126, ss=w308; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #5573: @66 = @76[8] */
  for (rr=(&w66), ss=w76+8; ss!=w76+9; ss+=1) *rr++ = *ss;
  /* #5574: @66 = @66' */
  /* #5575: @66 = (@25*@66) */
  w66  = (w25*w66);
  /* #5576: @66 = @66' */
  /* #5577: (@1[124] += @66) */
  for (rr=w1+124, ss=(&w66); rr!=w1+125; rr+=1) *rr += *ss++;
  /* #5578: (@1[112:126] += @321) */
  for (rr=w1+112, ss=w321; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #5579: @66 = @76[7] */
  for (rr=(&w66), ss=w76+7; ss!=w76+8; ss+=1) *rr++ = *ss;
  /* #5580: @66 = @66' */
  /* #5581: @66 = (@23*@66) */
  w66  = (w23*w66);
  /* #5582: @66 = @66' */
  /* #5583: (@1[110] += @66) */
  for (rr=w1+110, ss=(&w66); rr!=w1+111; rr+=1) *rr += *ss++;
  /* #5584: (@1[98:112] += @334) */
  for (rr=w1+98, ss=w334; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #5585: @66 = @76[6] */
  for (rr=(&w66), ss=w76+6; ss!=w76+7; ss+=1) *rr++ = *ss;
  /* #5586: @66 = @66' */
  /* #5587: @66 = (@21*@66) */
  w66  = (w21*w66);
  /* #5588: @66 = @66' */
  /* #5589: (@1[96] += @66) */
  for (rr=w1+96, ss=(&w66); rr!=w1+97; rr+=1) *rr += *ss++;
  /* #5590: (@1[84:98] += @347) */
  for (rr=w1+84, ss=w347; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #5591: @66 = @76[5] */
  for (rr=(&w66), ss=w76+5; ss!=w76+6; ss+=1) *rr++ = *ss;
  /* #5592: @66 = @66' */
  /* #5593: @66 = (@19*@66) */
  w66  = (w19*w66);
  /* #5594: @66 = @66' */
  /* #5595: (@1[82] += @66) */
  for (rr=w1+82, ss=(&w66); rr!=w1+83; rr+=1) *rr += *ss++;
  /* #5596: (@1[70:84] += @360) */
  for (rr=w1+70, ss=w360; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #5597: @66 = @76[4] */
  for (rr=(&w66), ss=w76+4; ss!=w76+5; ss+=1) *rr++ = *ss;
  /* #5598: @66 = @66' */
  /* #5599: @66 = (@17*@66) */
  w66  = (w17*w66);
  /* #5600: @66 = @66' */
  /* #5601: (@1[68] += @66) */
  for (rr=w1+68, ss=(&w66); rr!=w1+69; rr+=1) *rr += *ss++;
  /* #5602: (@1[56:70] += @373) */
  for (rr=w1+56, ss=w373; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #5603: @66 = @76[3] */
  for (rr=(&w66), ss=w76+3; ss!=w76+4; ss+=1) *rr++ = *ss;
  /* #5604: @66 = @66' */
  /* #5605: @66 = (@15*@66) */
  w66  = (w15*w66);
  /* #5606: @66 = @66' */
  /* #5607: (@1[54] += @66) */
  for (rr=w1+54, ss=(&w66); rr!=w1+55; rr+=1) *rr += *ss++;
  /* #5608: (@1[42:56] += @386) */
  for (rr=w1+42, ss=w386; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #5609: @66 = @76[2] */
  for (rr=(&w66), ss=w76+2; ss!=w76+3; ss+=1) *rr++ = *ss;
  /* #5610: @66 = @66' */
  /* #5611: @66 = (@13*@66) */
  w66  = (w13*w66);
  /* #5612: @66 = @66' */
  /* #5613: (@1[40] += @66) */
  for (rr=w1+40, ss=(&w66); rr!=w1+41; rr+=1) *rr += *ss++;
  /* #5614: (@1[28:42] += @399) */
  for (rr=w1+28, ss=w399; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #5615: @66 = @76[1] */
  for (rr=(&w66), ss=w76+1; ss!=w76+2; ss+=1) *rr++ = *ss;
  /* #5616: @66 = @66' */
  /* #5617: @66 = (@11*@66) */
  w66  = (w11*w66);
  /* #5618: @66 = @66' */
  /* #5619: (@1[26] += @66) */
  for (rr=w1+26, ss=(&w66); rr!=w1+27; rr+=1) *rr += *ss++;
  /* #5620: (@1[14:28] += @412) */
  for (rr=w1+14, ss=w412; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #5621: @66 = @76[0] */
  for (rr=(&w66), ss=w76+0; ss!=w76+1; ss+=1) *rr++ = *ss;
  /* #5622: @66 = @66' */
  /* #5623: @66 = (@9*@66) */
  w66  = (w9*w66);
  /* #5624: @66 = @66' */
  /* #5625: (@1[12] += @66) */
  for (rr=w1+12, ss=(&w66); rr!=w1+13; rr+=1) *rr += *ss++;
  /* #5626: (@1[:14] += @425) */
  for (rr=w1+0, ss=w425; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #5627: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5628: @66 = @76[25] */
  for (rr=(&w66), ss=w76+25; ss!=w76+26; ss+=1) *rr++ = *ss;
  /* #5629: @66 = @66' */
  /* #5630: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s89, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #5631: @434 = @434' */
  /* #5632: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5633: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5634: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #5635: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #5636: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5637: @66 = @76[25] */
  for (rr=(&w66), ss=w76+25; ss!=w76+26; ss+=1) *rr++ = *ss;
  /* #5638: @66 = @66' */
  /* #5639: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5640: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s89, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #5641: @434 = @434' */
  /* #5642: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5643: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #5644: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #5645: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5646: @66 = @76[24] */
  for (rr=(&w66), ss=w76+24; ss!=w76+25; ss+=1) *rr++ = *ss;
  /* #5647: @66 = @66' */
  /* #5648: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s89, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #5649: @434 = @434' */
  /* #5650: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5651: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5652: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #5653: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #5654: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5655: @66 = @76[24] */
  for (rr=(&w66), ss=w76+24; ss!=w76+25; ss+=1) *rr++ = *ss;
  /* #5656: @66 = @66' */
  /* #5657: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5658: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s89, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #5659: @434 = @434' */
  /* #5660: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5661: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #5662: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #5663: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5664: @66 = @76[23] */
  for (rr=(&w66), ss=w76+23; ss!=w76+24; ss+=1) *rr++ = *ss;
  /* #5665: @66 = @66' */
  /* #5666: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s89, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #5667: @434 = @434' */
  /* #5668: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5669: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5670: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #5671: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #5672: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5673: @66 = @76[23] */
  for (rr=(&w66), ss=w76+23; ss!=w76+24; ss+=1) *rr++ = *ss;
  /* #5674: @66 = @66' */
  /* #5675: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5676: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s89, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #5677: @434 = @434' */
  /* #5678: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5679: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #5680: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #5681: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5682: @66 = @76[22] */
  for (rr=(&w66), ss=w76+22; ss!=w76+23; ss+=1) *rr++ = *ss;
  /* #5683: @66 = @66' */
  /* #5684: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s89, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #5685: @434 = @434' */
  /* #5686: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5687: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5688: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #5689: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #5690: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5691: @66 = @76[22] */
  for (rr=(&w66), ss=w76+22; ss!=w76+23; ss+=1) *rr++ = *ss;
  /* #5692: @66 = @66' */
  /* #5693: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5694: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s89, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #5695: @434 = @434' */
  /* #5696: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5697: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #5698: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #5699: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5700: @66 = @76[21] */
  for (rr=(&w66), ss=w76+21; ss!=w76+22; ss+=1) *rr++ = *ss;
  /* #5701: @66 = @66' */
  /* #5702: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s89, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #5703: @434 = @434' */
  /* #5704: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5705: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5706: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #5707: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #5708: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5709: @66 = @76[21] */
  for (rr=(&w66), ss=w76+21; ss!=w76+22; ss+=1) *rr++ = *ss;
  /* #5710: @66 = @66' */
  /* #5711: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5712: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s89, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #5713: @434 = @434' */
  /* #5714: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5715: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #5716: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #5717: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5718: @66 = @76[20] */
  for (rr=(&w66), ss=w76+20; ss!=w76+21; ss+=1) *rr++ = *ss;
  /* #5719: @66 = @66' */
  /* #5720: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s89, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #5721: @434 = @434' */
  /* #5722: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5723: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5724: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #5725: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #5726: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5727: @66 = @76[20] */
  for (rr=(&w66), ss=w76+20; ss!=w76+21; ss+=1) *rr++ = *ss;
  /* #5728: @66 = @66' */
  /* #5729: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5730: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s89, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #5731: @434 = @434' */
  /* #5732: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5733: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #5734: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #5735: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5736: @66 = @76[19] */
  for (rr=(&w66), ss=w76+19; ss!=w76+20; ss+=1) *rr++ = *ss;
  /* #5737: @66 = @66' */
  /* #5738: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s89, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #5739: @434 = @434' */
  /* #5740: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5741: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5742: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #5743: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #5744: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5745: @66 = @76[19] */
  for (rr=(&w66), ss=w76+19; ss!=w76+20; ss+=1) *rr++ = *ss;
  /* #5746: @66 = @66' */
  /* #5747: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5748: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s89, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #5749: @434 = @434' */
  /* #5750: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5751: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #5752: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #5753: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5754: @66 = @76[18] */
  for (rr=(&w66), ss=w76+18; ss!=w76+19; ss+=1) *rr++ = *ss;
  /* #5755: @66 = @66' */
  /* #5756: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s89, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #5757: @434 = @434' */
  /* #5758: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5759: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5760: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #5761: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #5762: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5763: @66 = @76[18] */
  for (rr=(&w66), ss=w76+18; ss!=w76+19; ss+=1) *rr++ = *ss;
  /* #5764: @66 = @66' */
  /* #5765: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5766: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s89, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #5767: @434 = @434' */
  /* #5768: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5769: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #5770: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #5771: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5772: @66 = @76[17] */
  for (rr=(&w66), ss=w76+17; ss!=w76+18; ss+=1) *rr++ = *ss;
  /* #5773: @66 = @66' */
  /* #5774: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s89, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #5775: @434 = @434' */
  /* #5776: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5777: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5778: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #5779: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #5780: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5781: @66 = @76[17] */
  for (rr=(&w66), ss=w76+17; ss!=w76+18; ss+=1) *rr++ = *ss;
  /* #5782: @66 = @66' */
  /* #5783: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5784: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s89, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #5785: @434 = @434' */
  /* #5786: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5787: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #5788: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #5789: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5790: @66 = @76[16] */
  for (rr=(&w66), ss=w76+16; ss!=w76+17; ss+=1) *rr++ = *ss;
  /* #5791: @66 = @66' */
  /* #5792: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s89, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #5793: @434 = @434' */
  /* #5794: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5795: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5796: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #5797: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #5798: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5799: @66 = @76[16] */
  for (rr=(&w66), ss=w76+16; ss!=w76+17; ss+=1) *rr++ = *ss;
  /* #5800: @66 = @66' */
  /* #5801: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5802: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s89, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #5803: @434 = @434' */
  /* #5804: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5805: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #5806: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #5807: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5808: @66 = @76[15] */
  for (rr=(&w66), ss=w76+15; ss!=w76+16; ss+=1) *rr++ = *ss;
  /* #5809: @66 = @66' */
  /* #5810: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s89, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #5811: @434 = @434' */
  /* #5812: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5813: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5814: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #5815: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #5816: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5817: @66 = @76[15] */
  for (rr=(&w66), ss=w76+15; ss!=w76+16; ss+=1) *rr++ = *ss;
  /* #5818: @66 = @66' */
  /* #5819: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5820: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s89, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #5821: @434 = @434' */
  /* #5822: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5823: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #5824: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #5825: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5826: @66 = @76[14] */
  for (rr=(&w66), ss=w76+14; ss!=w76+15; ss+=1) *rr++ = *ss;
  /* #5827: @66 = @66' */
  /* #5828: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s89, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #5829: @434 = @434' */
  /* #5830: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5831: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5832: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #5833: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #5834: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5835: @66 = @76[14] */
  for (rr=(&w66), ss=w76+14; ss!=w76+15; ss+=1) *rr++ = *ss;
  /* #5836: @66 = @66' */
  /* #5837: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5838: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s89, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #5839: @434 = @434' */
  /* #5840: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5841: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #5842: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #5843: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5844: @66 = @76[13] */
  for (rr=(&w66), ss=w76+13; ss!=w76+14; ss+=1) *rr++ = *ss;
  /* #5845: @66 = @66' */
  /* #5846: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s89, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #5847: @434 = @434' */
  /* #5848: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5849: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5850: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #5851: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #5852: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5853: @66 = @76[13] */
  for (rr=(&w66), ss=w76+13; ss!=w76+14; ss+=1) *rr++ = *ss;
  /* #5854: @66 = @66' */
  /* #5855: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5856: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s89, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #5857: @434 = @434' */
  /* #5858: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5859: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #5860: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #5861: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5862: @66 = @76[12] */
  for (rr=(&w66), ss=w76+12; ss!=w76+13; ss+=1) *rr++ = *ss;
  /* #5863: @66 = @66' */
  /* #5864: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s89, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #5865: @434 = @434' */
  /* #5866: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5867: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5868: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #5869: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #5870: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5871: @66 = @76[12] */
  for (rr=(&w66), ss=w76+12; ss!=w76+13; ss+=1) *rr++ = *ss;
  /* #5872: @66 = @66' */
  /* #5873: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5874: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s89, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #5875: @434 = @434' */
  /* #5876: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5877: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #5878: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #5879: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5880: @66 = @76[11] */
  for (rr=(&w66), ss=w76+11; ss!=w76+12; ss+=1) *rr++ = *ss;
  /* #5881: @66 = @66' */
  /* #5882: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s89, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #5883: @434 = @434' */
  /* #5884: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5885: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5886: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #5887: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #5888: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5889: @66 = @76[11] */
  for (rr=(&w66), ss=w76+11; ss!=w76+12; ss+=1) *rr++ = *ss;
  /* #5890: @66 = @66' */
  /* #5891: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5892: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s89, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #5893: @434 = @434' */
  /* #5894: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5895: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #5896: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #5897: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5898: @66 = @76[10] */
  for (rr=(&w66), ss=w76+10; ss!=w76+11; ss+=1) *rr++ = *ss;
  /* #5899: @66 = @66' */
  /* #5900: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s89, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #5901: @434 = @434' */
  /* #5902: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5903: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5904: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #5905: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #5906: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5907: @66 = @76[10] */
  for (rr=(&w66), ss=w76+10; ss!=w76+11; ss+=1) *rr++ = *ss;
  /* #5908: @66 = @66' */
  /* #5909: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5910: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s89, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #5911: @434 = @434' */
  /* #5912: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5913: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #5914: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #5915: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5916: @66 = @76[9] */
  for (rr=(&w66), ss=w76+9; ss!=w76+10; ss+=1) *rr++ = *ss;
  /* #5917: @66 = @66' */
  /* #5918: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s89, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #5919: @434 = @434' */
  /* #5920: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5921: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5922: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #5923: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #5924: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5925: @66 = @76[9] */
  for (rr=(&w66), ss=w76+9; ss!=w76+10; ss+=1) *rr++ = *ss;
  /* #5926: @66 = @66' */
  /* #5927: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5928: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s89, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #5929: @434 = @434' */
  /* #5930: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5931: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #5932: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #5933: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5934: @66 = @76[8] */
  for (rr=(&w66), ss=w76+8; ss!=w76+9; ss+=1) *rr++ = *ss;
  /* #5935: @66 = @66' */
  /* #5936: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s89, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #5937: @434 = @434' */
  /* #5938: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5939: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5940: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #5941: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #5942: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5943: @66 = @76[8] */
  for (rr=(&w66), ss=w76+8; ss!=w76+9; ss+=1) *rr++ = *ss;
  /* #5944: @66 = @66' */
  /* #5945: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5946: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s89, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #5947: @434 = @434' */
  /* #5948: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5949: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #5950: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #5951: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5952: @66 = @76[7] */
  for (rr=(&w66), ss=w76+7; ss!=w76+8; ss+=1) *rr++ = *ss;
  /* #5953: @66 = @66' */
  /* #5954: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s89, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #5955: @434 = @434' */
  /* #5956: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5957: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5958: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #5959: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #5960: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5961: @66 = @76[7] */
  for (rr=(&w66), ss=w76+7; ss!=w76+8; ss+=1) *rr++ = *ss;
  /* #5962: @66 = @66' */
  /* #5963: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5964: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s89, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #5965: @434 = @434' */
  /* #5966: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5967: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #5968: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #5969: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5970: @66 = @76[6] */
  for (rr=(&w66), ss=w76+6; ss!=w76+7; ss+=1) *rr++ = *ss;
  /* #5971: @66 = @66' */
  /* #5972: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s89, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #5973: @434 = @434' */
  /* #5974: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5975: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5976: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #5977: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #5978: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5979: @66 = @76[6] */
  for (rr=(&w66), ss=w76+6; ss!=w76+7; ss+=1) *rr++ = *ss;
  /* #5980: @66 = @66' */
  /* #5981: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #5982: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s89, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #5983: @434 = @434' */
  /* #5984: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5985: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #5986: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #5987: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5988: @66 = @76[5] */
  for (rr=(&w66), ss=w76+5; ss!=w76+6; ss+=1) *rr++ = *ss;
  /* #5989: @66 = @66' */
  /* #5990: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s89, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #5991: @434 = @434' */
  /* #5992: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #5993: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #5994: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #5995: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #5996: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #5997: @66 = @76[5] */
  for (rr=(&w66), ss=w76+5; ss!=w76+6; ss+=1) *rr++ = *ss;
  /* #5998: @66 = @66' */
  /* #5999: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6000: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s89, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #6001: @434 = @434' */
  /* #6002: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6003: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #6004: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #6005: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6006: @66 = @76[4] */
  for (rr=(&w66), ss=w76+4; ss!=w76+5; ss+=1) *rr++ = *ss;
  /* #6007: @66 = @66' */
  /* #6008: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s89, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #6009: @434 = @434' */
  /* #6010: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6011: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6012: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #6013: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #6014: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6015: @66 = @76[4] */
  for (rr=(&w66), ss=w76+4; ss!=w76+5; ss+=1) *rr++ = *ss;
  /* #6016: @66 = @66' */
  /* #6017: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6018: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s89, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #6019: @434 = @434' */
  /* #6020: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6021: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #6022: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #6023: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6024: @66 = @76[3] */
  for (rr=(&w66), ss=w76+3; ss!=w76+4; ss+=1) *rr++ = *ss;
  /* #6025: @66 = @66' */
  /* #6026: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s89, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #6027: @434 = @434' */
  /* #6028: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6029: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6030: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #6031: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #6032: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6033: @66 = @76[3] */
  for (rr=(&w66), ss=w76+3; ss!=w76+4; ss+=1) *rr++ = *ss;
  /* #6034: @66 = @66' */
  /* #6035: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6036: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s89, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #6037: @434 = @434' */
  /* #6038: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6039: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #6040: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #6041: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6042: @66 = @76[2] */
  for (rr=(&w66), ss=w76+2; ss!=w76+3; ss+=1) *rr++ = *ss;
  /* #6043: @66 = @66' */
  /* #6044: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s89, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #6045: @434 = @434' */
  /* #6046: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6047: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6048: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #6049: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #6050: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6051: @66 = @76[2] */
  for (rr=(&w66), ss=w76+2; ss!=w76+3; ss+=1) *rr++ = *ss;
  /* #6052: @66 = @66' */
  /* #6053: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6054: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s89, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #6055: @434 = @434' */
  /* #6056: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6057: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #6058: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #6059: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6060: @66 = @76[1] */
  for (rr=(&w66), ss=w76+1; ss!=w76+2; ss+=1) *rr++ = *ss;
  /* #6061: @66 = @66' */
  /* #6062: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s89, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #6063: @434 = @434' */
  /* #6064: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6065: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6066: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #6067: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #6068: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6069: @66 = @76[1] */
  for (rr=(&w66), ss=w76+1; ss!=w76+2; ss+=1) *rr++ = *ss;
  /* #6070: @66 = @66' */
  /* #6071: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6072: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s89, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #6073: @434 = @434' */
  /* #6074: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6075: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #6076: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #6077: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6078: @66 = @76[0] */
  for (rr=(&w66), ss=w76+0; ss!=w76+1; ss+=1) *rr++ = *ss;
  /* #6079: @66 = @66' */
  /* #6080: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s89, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #6081: @434 = @434' */
  /* #6082: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6083: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6084: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #6085: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #6086: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6087: @66 = @76[0] */
  for (rr=(&w66), ss=w76+0; ss!=w76+1; ss+=1) *rr++ = *ss;
  /* #6088: @66 = @66' */
  /* #6089: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6090: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s89, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #6091: @434 = @434' */
  /* #6092: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6093: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #6094: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #6095: @1 = vec(@1) */
  /* #6096: (@0[:5096:196;70:84] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+70; tt!=rr+84; tt+=1) *tt = *ss++;
  /* #6097: (@0[5:5101:14] = @1) */
  for (rr=w0+5, ss=w1; rr!=w0+5101; rr+=14) *rr = *ss++;
  /* #6098: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #6099: (@1[336:350] += @114) */
  for (rr=w1+336, ss=w114; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #6100: (@1[322:336] += @127) */
  for (rr=w1+322, ss=w127; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #6101: (@1[308:322] += @140) */
  for (rr=w1+308, ss=w140; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #6102: (@1[294:308] += @153) */
  for (rr=w1+294, ss=w153; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #6103: (@1[280:294] += @166) */
  for (rr=w1+280, ss=w166; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #6104: (@1[266:280] += @179) */
  for (rr=w1+266, ss=w179; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #6105: (@1[252:266] += @192) */
  for (rr=w1+252, ss=w192; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #6106: (@1[238:252] += @205) */
  for (rr=w1+238, ss=w205; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #6107: (@1[224:238] += @218) */
  for (rr=w1+224, ss=w218; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #6108: (@1[210:224] += @231) */
  for (rr=w1+210, ss=w231; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #6109: (@1[196:210] += @244) */
  for (rr=w1+196, ss=w244; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #6110: (@1[182:196] += @257) */
  for (rr=w1+182, ss=w257; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #6111: (@1[168:182] += @270) */
  for (rr=w1+168, ss=w270; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #6112: (@1[154:168] += @283) */
  for (rr=w1+154, ss=w283; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #6113: (@1[140:154] += @296) */
  for (rr=w1+140, ss=w296; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #6114: (@1[126:140] += @309) */
  for (rr=w1+126, ss=w309; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #6115: (@1[112:126] += @322) */
  for (rr=w1+112, ss=w322; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #6116: (@1[98:112] += @335) */
  for (rr=w1+98, ss=w335; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #6117: (@1[84:98] += @348) */
  for (rr=w1+84, ss=w348; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #6118: (@1[70:84] += @361) */
  for (rr=w1+70, ss=w361; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #6119: (@1[56:70] += @374) */
  for (rr=w1+56, ss=w374; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #6120: (@1[42:56] += @387) */
  for (rr=w1+42, ss=w387; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #6121: (@1[28:42] += @400) */
  for (rr=w1+28, ss=w400; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #6122: (@1[14:28] += @413) */
  for (rr=w1+14, ss=w413; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #6123: (@1[:14] += @426) */
  for (rr=w1+0, ss=w426; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #6124: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6125: @66 = @78[25] */
  for (rr=(&w66), ss=w78+25; ss!=w78+26; ss+=1) *rr++ = *ss;
  /* #6126: @66 = @66' */
  /* #6127: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s90, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #6128: @434 = @434' */
  /* #6129: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6130: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6131: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #6132: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #6133: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6134: @66 = @78[25] */
  for (rr=(&w66), ss=w78+25; ss!=w78+26; ss+=1) *rr++ = *ss;
  /* #6135: @66 = @66' */
  /* #6136: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6137: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s90, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #6138: @434 = @434' */
  /* #6139: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6140: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #6141: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #6142: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6143: @66 = @78[24] */
  for (rr=(&w66), ss=w78+24; ss!=w78+25; ss+=1) *rr++ = *ss;
  /* #6144: @66 = @66' */
  /* #6145: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s90, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #6146: @434 = @434' */
  /* #6147: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6148: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6149: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #6150: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #6151: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6152: @66 = @78[24] */
  for (rr=(&w66), ss=w78+24; ss!=w78+25; ss+=1) *rr++ = *ss;
  /* #6153: @66 = @66' */
  /* #6154: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6155: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s90, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #6156: @434 = @434' */
  /* #6157: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6158: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #6159: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #6160: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6161: @66 = @78[23] */
  for (rr=(&w66), ss=w78+23; ss!=w78+24; ss+=1) *rr++ = *ss;
  /* #6162: @66 = @66' */
  /* #6163: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s90, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #6164: @434 = @434' */
  /* #6165: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6166: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6167: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #6168: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #6169: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6170: @66 = @78[23] */
  for (rr=(&w66), ss=w78+23; ss!=w78+24; ss+=1) *rr++ = *ss;
  /* #6171: @66 = @66' */
  /* #6172: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6173: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s90, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #6174: @434 = @434' */
  /* #6175: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6176: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #6177: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #6178: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6179: @66 = @78[22] */
  for (rr=(&w66), ss=w78+22; ss!=w78+23; ss+=1) *rr++ = *ss;
  /* #6180: @66 = @66' */
  /* #6181: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s90, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #6182: @434 = @434' */
  /* #6183: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6184: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6185: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #6186: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #6187: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6188: @66 = @78[22] */
  for (rr=(&w66), ss=w78+22; ss!=w78+23; ss+=1) *rr++ = *ss;
  /* #6189: @66 = @66' */
  /* #6190: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6191: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s90, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #6192: @434 = @434' */
  /* #6193: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6194: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #6195: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #6196: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6197: @66 = @78[21] */
  for (rr=(&w66), ss=w78+21; ss!=w78+22; ss+=1) *rr++ = *ss;
  /* #6198: @66 = @66' */
  /* #6199: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s90, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #6200: @434 = @434' */
  /* #6201: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6202: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6203: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #6204: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #6205: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6206: @66 = @78[21] */
  for (rr=(&w66), ss=w78+21; ss!=w78+22; ss+=1) *rr++ = *ss;
  /* #6207: @66 = @66' */
  /* #6208: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6209: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s90, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #6210: @434 = @434' */
  /* #6211: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6212: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #6213: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #6214: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6215: @66 = @78[20] */
  for (rr=(&w66), ss=w78+20; ss!=w78+21; ss+=1) *rr++ = *ss;
  /* #6216: @66 = @66' */
  /* #6217: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s90, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #6218: @434 = @434' */
  /* #6219: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6220: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6221: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #6222: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #6223: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6224: @66 = @78[20] */
  for (rr=(&w66), ss=w78+20; ss!=w78+21; ss+=1) *rr++ = *ss;
  /* #6225: @66 = @66' */
  /* #6226: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6227: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s90, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #6228: @434 = @434' */
  /* #6229: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6230: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #6231: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #6232: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6233: @66 = @78[19] */
  for (rr=(&w66), ss=w78+19; ss!=w78+20; ss+=1) *rr++ = *ss;
  /* #6234: @66 = @66' */
  /* #6235: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s90, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #6236: @434 = @434' */
  /* #6237: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6238: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6239: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #6240: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #6241: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6242: @66 = @78[19] */
  for (rr=(&w66), ss=w78+19; ss!=w78+20; ss+=1) *rr++ = *ss;
  /* #6243: @66 = @66' */
  /* #6244: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6245: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s90, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #6246: @434 = @434' */
  /* #6247: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6248: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #6249: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #6250: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6251: @66 = @78[18] */
  for (rr=(&w66), ss=w78+18; ss!=w78+19; ss+=1) *rr++ = *ss;
  /* #6252: @66 = @66' */
  /* #6253: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s90, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #6254: @434 = @434' */
  /* #6255: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6256: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6257: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #6258: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #6259: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6260: @66 = @78[18] */
  for (rr=(&w66), ss=w78+18; ss!=w78+19; ss+=1) *rr++ = *ss;
  /* #6261: @66 = @66' */
  /* #6262: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6263: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s90, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #6264: @434 = @434' */
  /* #6265: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6266: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #6267: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #6268: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6269: @66 = @78[17] */
  for (rr=(&w66), ss=w78+17; ss!=w78+18; ss+=1) *rr++ = *ss;
  /* #6270: @66 = @66' */
  /* #6271: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s90, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #6272: @434 = @434' */
  /* #6273: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6274: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6275: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #6276: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #6277: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6278: @66 = @78[17] */
  for (rr=(&w66), ss=w78+17; ss!=w78+18; ss+=1) *rr++ = *ss;
  /* #6279: @66 = @66' */
  /* #6280: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6281: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s90, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #6282: @434 = @434' */
  /* #6283: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6284: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #6285: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #6286: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6287: @66 = @78[16] */
  for (rr=(&w66), ss=w78+16; ss!=w78+17; ss+=1) *rr++ = *ss;
  /* #6288: @66 = @66' */
  /* #6289: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s90, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #6290: @434 = @434' */
  /* #6291: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6292: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6293: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #6294: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #6295: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6296: @66 = @78[16] */
  for (rr=(&w66), ss=w78+16; ss!=w78+17; ss+=1) *rr++ = *ss;
  /* #6297: @66 = @66' */
  /* #6298: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6299: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s90, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #6300: @434 = @434' */
  /* #6301: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6302: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #6303: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #6304: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6305: @66 = @78[15] */
  for (rr=(&w66), ss=w78+15; ss!=w78+16; ss+=1) *rr++ = *ss;
  /* #6306: @66 = @66' */
  /* #6307: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s90, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #6308: @434 = @434' */
  /* #6309: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6310: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6311: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #6312: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #6313: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6314: @66 = @78[15] */
  for (rr=(&w66), ss=w78+15; ss!=w78+16; ss+=1) *rr++ = *ss;
  /* #6315: @66 = @66' */
  /* #6316: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6317: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s90, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #6318: @434 = @434' */
  /* #6319: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6320: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #6321: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #6322: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6323: @66 = @78[14] */
  for (rr=(&w66), ss=w78+14; ss!=w78+15; ss+=1) *rr++ = *ss;
  /* #6324: @66 = @66' */
  /* #6325: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s90, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #6326: @434 = @434' */
  /* #6327: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6328: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6329: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #6330: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #6331: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6332: @66 = @78[14] */
  for (rr=(&w66), ss=w78+14; ss!=w78+15; ss+=1) *rr++ = *ss;
  /* #6333: @66 = @66' */
  /* #6334: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6335: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s90, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #6336: @434 = @434' */
  /* #6337: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6338: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #6339: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #6340: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6341: @66 = @78[13] */
  for (rr=(&w66), ss=w78+13; ss!=w78+14; ss+=1) *rr++ = *ss;
  /* #6342: @66 = @66' */
  /* #6343: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s90, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #6344: @434 = @434' */
  /* #6345: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6346: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6347: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #6348: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #6349: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6350: @66 = @78[13] */
  for (rr=(&w66), ss=w78+13; ss!=w78+14; ss+=1) *rr++ = *ss;
  /* #6351: @66 = @66' */
  /* #6352: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6353: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s90, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #6354: @434 = @434' */
  /* #6355: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6356: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #6357: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #6358: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6359: @66 = @78[12] */
  for (rr=(&w66), ss=w78+12; ss!=w78+13; ss+=1) *rr++ = *ss;
  /* #6360: @66 = @66' */
  /* #6361: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s90, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #6362: @434 = @434' */
  /* #6363: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6364: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6365: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #6366: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #6367: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6368: @66 = @78[12] */
  for (rr=(&w66), ss=w78+12; ss!=w78+13; ss+=1) *rr++ = *ss;
  /* #6369: @66 = @66' */
  /* #6370: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6371: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s90, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #6372: @434 = @434' */
  /* #6373: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6374: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #6375: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #6376: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6377: @66 = @78[11] */
  for (rr=(&w66), ss=w78+11; ss!=w78+12; ss+=1) *rr++ = *ss;
  /* #6378: @66 = @66' */
  /* #6379: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s90, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #6380: @434 = @434' */
  /* #6381: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6382: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6383: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #6384: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #6385: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6386: @66 = @78[11] */
  for (rr=(&w66), ss=w78+11; ss!=w78+12; ss+=1) *rr++ = *ss;
  /* #6387: @66 = @66' */
  /* #6388: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6389: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s90, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #6390: @434 = @434' */
  /* #6391: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6392: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #6393: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #6394: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6395: @66 = @78[10] */
  for (rr=(&w66), ss=w78+10; ss!=w78+11; ss+=1) *rr++ = *ss;
  /* #6396: @66 = @66' */
  /* #6397: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s90, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #6398: @434 = @434' */
  /* #6399: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6400: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6401: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #6402: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #6403: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6404: @66 = @78[10] */
  for (rr=(&w66), ss=w78+10; ss!=w78+11; ss+=1) *rr++ = *ss;
  /* #6405: @66 = @66' */
  /* #6406: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6407: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s90, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #6408: @434 = @434' */
  /* #6409: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6410: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #6411: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #6412: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6413: @66 = @78[9] */
  for (rr=(&w66), ss=w78+9; ss!=w78+10; ss+=1) *rr++ = *ss;
  /* #6414: @66 = @66' */
  /* #6415: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s90, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #6416: @434 = @434' */
  /* #6417: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6418: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6419: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #6420: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #6421: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6422: @66 = @78[9] */
  for (rr=(&w66), ss=w78+9; ss!=w78+10; ss+=1) *rr++ = *ss;
  /* #6423: @66 = @66' */
  /* #6424: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6425: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s90, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #6426: @434 = @434' */
  /* #6427: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6428: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #6429: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #6430: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6431: @66 = @78[8] */
  for (rr=(&w66), ss=w78+8; ss!=w78+9; ss+=1) *rr++ = *ss;
  /* #6432: @66 = @66' */
  /* #6433: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s90, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #6434: @434 = @434' */
  /* #6435: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6436: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6437: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #6438: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #6439: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6440: @66 = @78[8] */
  for (rr=(&w66), ss=w78+8; ss!=w78+9; ss+=1) *rr++ = *ss;
  /* #6441: @66 = @66' */
  /* #6442: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6443: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s90, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #6444: @434 = @434' */
  /* #6445: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6446: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #6447: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #6448: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6449: @66 = @78[7] */
  for (rr=(&w66), ss=w78+7; ss!=w78+8; ss+=1) *rr++ = *ss;
  /* #6450: @66 = @66' */
  /* #6451: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s90, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #6452: @434 = @434' */
  /* #6453: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6454: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6455: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #6456: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #6457: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6458: @66 = @78[7] */
  for (rr=(&w66), ss=w78+7; ss!=w78+8; ss+=1) *rr++ = *ss;
  /* #6459: @66 = @66' */
  /* #6460: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6461: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s90, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #6462: @434 = @434' */
  /* #6463: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6464: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #6465: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #6466: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6467: @66 = @78[6] */
  for (rr=(&w66), ss=w78+6; ss!=w78+7; ss+=1) *rr++ = *ss;
  /* #6468: @66 = @66' */
  /* #6469: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s90, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #6470: @434 = @434' */
  /* #6471: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6472: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6473: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #6474: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #6475: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6476: @66 = @78[6] */
  for (rr=(&w66), ss=w78+6; ss!=w78+7; ss+=1) *rr++ = *ss;
  /* #6477: @66 = @66' */
  /* #6478: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6479: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s90, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #6480: @434 = @434' */
  /* #6481: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6482: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #6483: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #6484: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6485: @66 = @78[5] */
  for (rr=(&w66), ss=w78+5; ss!=w78+6; ss+=1) *rr++ = *ss;
  /* #6486: @66 = @66' */
  /* #6487: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s90, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #6488: @434 = @434' */
  /* #6489: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6490: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6491: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #6492: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #6493: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6494: @66 = @78[5] */
  for (rr=(&w66), ss=w78+5; ss!=w78+6; ss+=1) *rr++ = *ss;
  /* #6495: @66 = @66' */
  /* #6496: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6497: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s90, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #6498: @434 = @434' */
  /* #6499: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6500: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #6501: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #6502: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6503: @66 = @78[4] */
  for (rr=(&w66), ss=w78+4; ss!=w78+5; ss+=1) *rr++ = *ss;
  /* #6504: @66 = @66' */
  /* #6505: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s90, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #6506: @434 = @434' */
  /* #6507: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6508: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6509: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #6510: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #6511: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6512: @66 = @78[4] */
  for (rr=(&w66), ss=w78+4; ss!=w78+5; ss+=1) *rr++ = *ss;
  /* #6513: @66 = @66' */
  /* #6514: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6515: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s90, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #6516: @434 = @434' */
  /* #6517: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6518: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #6519: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #6520: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6521: @66 = @78[3] */
  for (rr=(&w66), ss=w78+3; ss!=w78+4; ss+=1) *rr++ = *ss;
  /* #6522: @66 = @66' */
  /* #6523: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s90, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #6524: @434 = @434' */
  /* #6525: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6526: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6527: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #6528: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #6529: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6530: @66 = @78[3] */
  for (rr=(&w66), ss=w78+3; ss!=w78+4; ss+=1) *rr++ = *ss;
  /* #6531: @66 = @66' */
  /* #6532: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6533: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s90, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #6534: @434 = @434' */
  /* #6535: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6536: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #6537: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #6538: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6539: @66 = @78[2] */
  for (rr=(&w66), ss=w78+2; ss!=w78+3; ss+=1) *rr++ = *ss;
  /* #6540: @66 = @66' */
  /* #6541: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s90, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #6542: @434 = @434' */
  /* #6543: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6544: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6545: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #6546: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #6547: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6548: @66 = @78[2] */
  for (rr=(&w66), ss=w78+2; ss!=w78+3; ss+=1) *rr++ = *ss;
  /* #6549: @66 = @66' */
  /* #6550: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6551: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s90, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #6552: @434 = @434' */
  /* #6553: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6554: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #6555: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #6556: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6557: @66 = @78[1] */
  for (rr=(&w66), ss=w78+1; ss!=w78+2; ss+=1) *rr++ = *ss;
  /* #6558: @66 = @66' */
  /* #6559: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s90, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #6560: @434 = @434' */
  /* #6561: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6562: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6563: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #6564: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #6565: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6566: @66 = @78[1] */
  for (rr=(&w66), ss=w78+1; ss!=w78+2; ss+=1) *rr++ = *ss;
  /* #6567: @66 = @66' */
  /* #6568: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6569: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s90, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #6570: @434 = @434' */
  /* #6571: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6572: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #6573: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #6574: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6575: @66 = @78[0] */
  for (rr=(&w66), ss=w78+0; ss!=w78+1; ss+=1) *rr++ = *ss;
  /* #6576: @66 = @66' */
  /* #6577: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s90, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #6578: @434 = @434' */
  /* #6579: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6580: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6581: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #6582: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #6583: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6584: @66 = @78[0] */
  for (rr=(&w66), ss=w78+0; ss!=w78+1; ss+=1) *rr++ = *ss;
  /* #6585: @66 = @66' */
  /* #6586: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6587: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s90, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #6588: @434 = @434' */
  /* #6589: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6590: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #6591: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #6592: @1 = vec(@1) */
  /* #6593: (@0[:5096:196;84:98] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+84; tt!=rr+98; tt+=1) *tt = *ss++;
  /* #6594: (@0[6:5102:14] = @1) */
  for (rr=w0+6, ss=w1; rr!=w0+5102; rr+=14) *rr = *ss++;
  /* #6595: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #6596: (@1[336:350] += @115) */
  for (rr=w1+336, ss=w115; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #6597: (@1[322:336] += @128) */
  for (rr=w1+322, ss=w128; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #6598: (@1[308:322] += @141) */
  for (rr=w1+308, ss=w141; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #6599: (@1[294:308] += @154) */
  for (rr=w1+294, ss=w154; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #6600: (@1[280:294] += @167) */
  for (rr=w1+280, ss=w167; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #6601: (@1[266:280] += @180) */
  for (rr=w1+266, ss=w180; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #6602: (@1[252:266] += @193) */
  for (rr=w1+252, ss=w193; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #6603: (@1[238:252] += @206) */
  for (rr=w1+238, ss=w206; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #6604: (@1[224:238] += @219) */
  for (rr=w1+224, ss=w219; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #6605: (@1[210:224] += @232) */
  for (rr=w1+210, ss=w232; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #6606: (@1[196:210] += @245) */
  for (rr=w1+196, ss=w245; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #6607: (@1[182:196] += @258) */
  for (rr=w1+182, ss=w258; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #6608: (@1[168:182] += @271) */
  for (rr=w1+168, ss=w271; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #6609: (@1[154:168] += @284) */
  for (rr=w1+154, ss=w284; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #6610: (@1[140:154] += @297) */
  for (rr=w1+140, ss=w297; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #6611: (@1[126:140] += @310) */
  for (rr=w1+126, ss=w310; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #6612: (@1[112:126] += @323) */
  for (rr=w1+112, ss=w323; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #6613: (@1[98:112] += @336) */
  for (rr=w1+98, ss=w336; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #6614: (@1[84:98] += @349) */
  for (rr=w1+84, ss=w349; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #6615: (@1[70:84] += @362) */
  for (rr=w1+70, ss=w362; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #6616: (@1[56:70] += @375) */
  for (rr=w1+56, ss=w375; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #6617: (@1[42:56] += @388) */
  for (rr=w1+42, ss=w388; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #6618: (@1[28:42] += @401) */
  for (rr=w1+28, ss=w401; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #6619: (@1[14:28] += @414) */
  for (rr=w1+14, ss=w414; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #6620: (@1[:14] += @427) */
  for (rr=w1+0, ss=w427; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #6621: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6622: @66 = @80[25] */
  for (rr=(&w66), ss=w80+25; ss!=w80+26; ss+=1) *rr++ = *ss;
  /* #6623: @66 = (-@66) */
  w66 = (- w66 );
  /* #6624: @66 = @66' */
  /* #6625: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s70, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #6626: @434 = @434' */
  /* #6627: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6628: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6629: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #6630: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #6631: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6632: @66 = @80[25] */
  for (rr=(&w66), ss=w80+25; ss!=w80+26; ss+=1) *rr++ = *ss;
  /* #6633: @66 = (-@66) */
  w66 = (- w66 );
  /* #6634: @66 = @66' */
  /* #6635: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6636: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s70, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #6637: @434 = @434' */
  /* #6638: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6639: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #6640: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #6641: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6642: @66 = @80[24] */
  for (rr=(&w66), ss=w80+24; ss!=w80+25; ss+=1) *rr++ = *ss;
  /* #6643: @66 = (-@66) */
  w66 = (- w66 );
  /* #6644: @66 = @66' */
  /* #6645: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s70, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #6646: @434 = @434' */
  /* #6647: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6648: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6649: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #6650: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #6651: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6652: @66 = @80[24] */
  for (rr=(&w66), ss=w80+24; ss!=w80+25; ss+=1) *rr++ = *ss;
  /* #6653: @66 = (-@66) */
  w66 = (- w66 );
  /* #6654: @66 = @66' */
  /* #6655: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6656: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s70, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #6657: @434 = @434' */
  /* #6658: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6659: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #6660: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #6661: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6662: @66 = @80[23] */
  for (rr=(&w66), ss=w80+23; ss!=w80+24; ss+=1) *rr++ = *ss;
  /* #6663: @66 = (-@66) */
  w66 = (- w66 );
  /* #6664: @66 = @66' */
  /* #6665: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s70, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #6666: @434 = @434' */
  /* #6667: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6668: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6669: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #6670: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #6671: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6672: @66 = @80[23] */
  for (rr=(&w66), ss=w80+23; ss!=w80+24; ss+=1) *rr++ = *ss;
  /* #6673: @66 = (-@66) */
  w66 = (- w66 );
  /* #6674: @66 = @66' */
  /* #6675: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6676: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s70, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #6677: @434 = @434' */
  /* #6678: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6679: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #6680: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #6681: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6682: @66 = @80[22] */
  for (rr=(&w66), ss=w80+22; ss!=w80+23; ss+=1) *rr++ = *ss;
  /* #6683: @66 = (-@66) */
  w66 = (- w66 );
  /* #6684: @66 = @66' */
  /* #6685: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s70, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #6686: @434 = @434' */
  /* #6687: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6688: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6689: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #6690: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #6691: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6692: @66 = @80[22] */
  for (rr=(&w66), ss=w80+22; ss!=w80+23; ss+=1) *rr++ = *ss;
  /* #6693: @66 = (-@66) */
  w66 = (- w66 );
  /* #6694: @66 = @66' */
  /* #6695: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6696: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s70, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #6697: @434 = @434' */
  /* #6698: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6699: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #6700: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #6701: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6702: @66 = @80[21] */
  for (rr=(&w66), ss=w80+21; ss!=w80+22; ss+=1) *rr++ = *ss;
  /* #6703: @66 = (-@66) */
  w66 = (- w66 );
  /* #6704: @66 = @66' */
  /* #6705: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s70, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #6706: @434 = @434' */
  /* #6707: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6708: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6709: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #6710: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #6711: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6712: @66 = @80[21] */
  for (rr=(&w66), ss=w80+21; ss!=w80+22; ss+=1) *rr++ = *ss;
  /* #6713: @66 = (-@66) */
  w66 = (- w66 );
  /* #6714: @66 = @66' */
  /* #6715: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6716: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s70, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #6717: @434 = @434' */
  /* #6718: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6719: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #6720: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #6721: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6722: @66 = @80[20] */
  for (rr=(&w66), ss=w80+20; ss!=w80+21; ss+=1) *rr++ = *ss;
  /* #6723: @66 = (-@66) */
  w66 = (- w66 );
  /* #6724: @66 = @66' */
  /* #6725: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s70, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #6726: @434 = @434' */
  /* #6727: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6728: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6729: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #6730: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #6731: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6732: @66 = @80[20] */
  for (rr=(&w66), ss=w80+20; ss!=w80+21; ss+=1) *rr++ = *ss;
  /* #6733: @66 = (-@66) */
  w66 = (- w66 );
  /* #6734: @66 = @66' */
  /* #6735: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6736: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s70, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #6737: @434 = @434' */
  /* #6738: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6739: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #6740: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #6741: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6742: @66 = @80[19] */
  for (rr=(&w66), ss=w80+19; ss!=w80+20; ss+=1) *rr++ = *ss;
  /* #6743: @66 = (-@66) */
  w66 = (- w66 );
  /* #6744: @66 = @66' */
  /* #6745: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s70, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #6746: @434 = @434' */
  /* #6747: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6748: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6749: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #6750: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #6751: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6752: @66 = @80[19] */
  for (rr=(&w66), ss=w80+19; ss!=w80+20; ss+=1) *rr++ = *ss;
  /* #6753: @66 = (-@66) */
  w66 = (- w66 );
  /* #6754: @66 = @66' */
  /* #6755: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6756: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s70, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #6757: @434 = @434' */
  /* #6758: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6759: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #6760: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #6761: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6762: @66 = @80[18] */
  for (rr=(&w66), ss=w80+18; ss!=w80+19; ss+=1) *rr++ = *ss;
  /* #6763: @66 = (-@66) */
  w66 = (- w66 );
  /* #6764: @66 = @66' */
  /* #6765: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s70, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #6766: @434 = @434' */
  /* #6767: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6768: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6769: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #6770: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #6771: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6772: @66 = @80[18] */
  for (rr=(&w66), ss=w80+18; ss!=w80+19; ss+=1) *rr++ = *ss;
  /* #6773: @66 = (-@66) */
  w66 = (- w66 );
  /* #6774: @66 = @66' */
  /* #6775: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6776: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s70, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #6777: @434 = @434' */
  /* #6778: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6779: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #6780: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #6781: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6782: @66 = @80[17] */
  for (rr=(&w66), ss=w80+17; ss!=w80+18; ss+=1) *rr++ = *ss;
  /* #6783: @66 = (-@66) */
  w66 = (- w66 );
  /* #6784: @66 = @66' */
  /* #6785: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s70, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #6786: @434 = @434' */
  /* #6787: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6788: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6789: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #6790: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #6791: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6792: @66 = @80[17] */
  for (rr=(&w66), ss=w80+17; ss!=w80+18; ss+=1) *rr++ = *ss;
  /* #6793: @66 = (-@66) */
  w66 = (- w66 );
  /* #6794: @66 = @66' */
  /* #6795: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6796: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s70, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #6797: @434 = @434' */
  /* #6798: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6799: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #6800: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #6801: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6802: @66 = @80[16] */
  for (rr=(&w66), ss=w80+16; ss!=w80+17; ss+=1) *rr++ = *ss;
  /* #6803: @66 = (-@66) */
  w66 = (- w66 );
  /* #6804: @66 = @66' */
  /* #6805: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s70, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #6806: @434 = @434' */
  /* #6807: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6808: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6809: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #6810: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #6811: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6812: @66 = @80[16] */
  for (rr=(&w66), ss=w80+16; ss!=w80+17; ss+=1) *rr++ = *ss;
  /* #6813: @66 = (-@66) */
  w66 = (- w66 );
  /* #6814: @66 = @66' */
  /* #6815: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6816: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s70, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #6817: @434 = @434' */
  /* #6818: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6819: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #6820: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #6821: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6822: @66 = @80[15] */
  for (rr=(&w66), ss=w80+15; ss!=w80+16; ss+=1) *rr++ = *ss;
  /* #6823: @66 = (-@66) */
  w66 = (- w66 );
  /* #6824: @66 = @66' */
  /* #6825: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s70, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #6826: @434 = @434' */
  /* #6827: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6828: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6829: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #6830: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #6831: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6832: @66 = @80[15] */
  for (rr=(&w66), ss=w80+15; ss!=w80+16; ss+=1) *rr++ = *ss;
  /* #6833: @66 = (-@66) */
  w66 = (- w66 );
  /* #6834: @66 = @66' */
  /* #6835: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6836: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s70, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #6837: @434 = @434' */
  /* #6838: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6839: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #6840: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #6841: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6842: @66 = @80[14] */
  for (rr=(&w66), ss=w80+14; ss!=w80+15; ss+=1) *rr++ = *ss;
  /* #6843: @66 = (-@66) */
  w66 = (- w66 );
  /* #6844: @66 = @66' */
  /* #6845: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s70, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #6846: @434 = @434' */
  /* #6847: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6848: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6849: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #6850: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #6851: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6852: @66 = @80[14] */
  for (rr=(&w66), ss=w80+14; ss!=w80+15; ss+=1) *rr++ = *ss;
  /* #6853: @66 = (-@66) */
  w66 = (- w66 );
  /* #6854: @66 = @66' */
  /* #6855: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6856: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s70, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #6857: @434 = @434' */
  /* #6858: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6859: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #6860: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #6861: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6862: @66 = @80[13] */
  for (rr=(&w66), ss=w80+13; ss!=w80+14; ss+=1) *rr++ = *ss;
  /* #6863: @66 = (-@66) */
  w66 = (- w66 );
  /* #6864: @66 = @66' */
  /* #6865: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s70, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #6866: @434 = @434' */
  /* #6867: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6868: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6869: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #6870: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #6871: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6872: @66 = @80[13] */
  for (rr=(&w66), ss=w80+13; ss!=w80+14; ss+=1) *rr++ = *ss;
  /* #6873: @66 = (-@66) */
  w66 = (- w66 );
  /* #6874: @66 = @66' */
  /* #6875: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6876: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s70, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #6877: @434 = @434' */
  /* #6878: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6879: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #6880: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #6881: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6882: @66 = @80[12] */
  for (rr=(&w66), ss=w80+12; ss!=w80+13; ss+=1) *rr++ = *ss;
  /* #6883: @66 = (-@66) */
  w66 = (- w66 );
  /* #6884: @66 = @66' */
  /* #6885: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s70, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #6886: @434 = @434' */
  /* #6887: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6888: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6889: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #6890: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #6891: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6892: @66 = @80[12] */
  for (rr=(&w66), ss=w80+12; ss!=w80+13; ss+=1) *rr++ = *ss;
  /* #6893: @66 = (-@66) */
  w66 = (- w66 );
  /* #6894: @66 = @66' */
  /* #6895: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6896: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s70, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #6897: @434 = @434' */
  /* #6898: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6899: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #6900: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #6901: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6902: @66 = @80[11] */
  for (rr=(&w66), ss=w80+11; ss!=w80+12; ss+=1) *rr++ = *ss;
  /* #6903: @66 = (-@66) */
  w66 = (- w66 );
  /* #6904: @66 = @66' */
  /* #6905: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s70, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #6906: @434 = @434' */
  /* #6907: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6908: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6909: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #6910: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #6911: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6912: @66 = @80[11] */
  for (rr=(&w66), ss=w80+11; ss!=w80+12; ss+=1) *rr++ = *ss;
  /* #6913: @66 = (-@66) */
  w66 = (- w66 );
  /* #6914: @66 = @66' */
  /* #6915: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6916: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s70, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #6917: @434 = @434' */
  /* #6918: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6919: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #6920: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #6921: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6922: @66 = @80[10] */
  for (rr=(&w66), ss=w80+10; ss!=w80+11; ss+=1) *rr++ = *ss;
  /* #6923: @66 = (-@66) */
  w66 = (- w66 );
  /* #6924: @66 = @66' */
  /* #6925: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s70, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #6926: @434 = @434' */
  /* #6927: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6928: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6929: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #6930: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #6931: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6932: @66 = @80[10] */
  for (rr=(&w66), ss=w80+10; ss!=w80+11; ss+=1) *rr++ = *ss;
  /* #6933: @66 = (-@66) */
  w66 = (- w66 );
  /* #6934: @66 = @66' */
  /* #6935: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6936: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s70, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #6937: @434 = @434' */
  /* #6938: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6939: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #6940: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #6941: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6942: @66 = @80[9] */
  for (rr=(&w66), ss=w80+9; ss!=w80+10; ss+=1) *rr++ = *ss;
  /* #6943: @66 = (-@66) */
  w66 = (- w66 );
  /* #6944: @66 = @66' */
  /* #6945: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s70, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #6946: @434 = @434' */
  /* #6947: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6948: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6949: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #6950: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #6951: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6952: @66 = @80[9] */
  for (rr=(&w66), ss=w80+9; ss!=w80+10; ss+=1) *rr++ = *ss;
  /* #6953: @66 = (-@66) */
  w66 = (- w66 );
  /* #6954: @66 = @66' */
  /* #6955: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6956: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s70, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #6957: @434 = @434' */
  /* #6958: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6959: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #6960: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #6961: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6962: @66 = @80[8] */
  for (rr=(&w66), ss=w80+8; ss!=w80+9; ss+=1) *rr++ = *ss;
  /* #6963: @66 = (-@66) */
  w66 = (- w66 );
  /* #6964: @66 = @66' */
  /* #6965: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s70, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #6966: @434 = @434' */
  /* #6967: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6968: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6969: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #6970: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #6971: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6972: @66 = @80[8] */
  for (rr=(&w66), ss=w80+8; ss!=w80+9; ss+=1) *rr++ = *ss;
  /* #6973: @66 = (-@66) */
  w66 = (- w66 );
  /* #6974: @66 = @66' */
  /* #6975: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6976: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s70, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #6977: @434 = @434' */
  /* #6978: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6979: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #6980: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #6981: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6982: @66 = @80[7] */
  for (rr=(&w66), ss=w80+7; ss!=w80+8; ss+=1) *rr++ = *ss;
  /* #6983: @66 = (-@66) */
  w66 = (- w66 );
  /* #6984: @66 = @66' */
  /* #6985: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s70, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #6986: @434 = @434' */
  /* #6987: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #6988: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6989: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #6990: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #6991: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #6992: @66 = @80[7] */
  for (rr=(&w66), ss=w80+7; ss!=w80+8; ss+=1) *rr++ = *ss;
  /* #6993: @66 = (-@66) */
  w66 = (- w66 );
  /* #6994: @66 = @66' */
  /* #6995: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #6996: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s70, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #6997: @434 = @434' */
  /* #6998: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #6999: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #7000: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #7001: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7002: @66 = @80[6] */
  for (rr=(&w66), ss=w80+6; ss!=w80+7; ss+=1) *rr++ = *ss;
  /* #7003: @66 = (-@66) */
  w66 = (- w66 );
  /* #7004: @66 = @66' */
  /* #7005: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s70, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #7006: @434 = @434' */
  /* #7007: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7008: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7009: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #7010: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #7011: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7012: @66 = @80[6] */
  for (rr=(&w66), ss=w80+6; ss!=w80+7; ss+=1) *rr++ = *ss;
  /* #7013: @66 = (-@66) */
  w66 = (- w66 );
  /* #7014: @66 = @66' */
  /* #7015: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7016: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s70, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #7017: @434 = @434' */
  /* #7018: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7019: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #7020: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #7021: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7022: @66 = @80[5] */
  for (rr=(&w66), ss=w80+5; ss!=w80+6; ss+=1) *rr++ = *ss;
  /* #7023: @66 = (-@66) */
  w66 = (- w66 );
  /* #7024: @66 = @66' */
  /* #7025: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s70, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #7026: @434 = @434' */
  /* #7027: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7028: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7029: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #7030: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #7031: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7032: @66 = @80[5] */
  for (rr=(&w66), ss=w80+5; ss!=w80+6; ss+=1) *rr++ = *ss;
  /* #7033: @66 = (-@66) */
  w66 = (- w66 );
  /* #7034: @66 = @66' */
  /* #7035: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7036: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s70, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #7037: @434 = @434' */
  /* #7038: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7039: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #7040: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #7041: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7042: @66 = @80[4] */
  for (rr=(&w66), ss=w80+4; ss!=w80+5; ss+=1) *rr++ = *ss;
  /* #7043: @66 = (-@66) */
  w66 = (- w66 );
  /* #7044: @66 = @66' */
  /* #7045: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s70, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #7046: @434 = @434' */
  /* #7047: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7048: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7049: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #7050: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #7051: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7052: @66 = @80[4] */
  for (rr=(&w66), ss=w80+4; ss!=w80+5; ss+=1) *rr++ = *ss;
  /* #7053: @66 = (-@66) */
  w66 = (- w66 );
  /* #7054: @66 = @66' */
  /* #7055: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7056: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s70, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #7057: @434 = @434' */
  /* #7058: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7059: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #7060: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #7061: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7062: @66 = @80[3] */
  for (rr=(&w66), ss=w80+3; ss!=w80+4; ss+=1) *rr++ = *ss;
  /* #7063: @66 = (-@66) */
  w66 = (- w66 );
  /* #7064: @66 = @66' */
  /* #7065: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s70, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #7066: @434 = @434' */
  /* #7067: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7068: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7069: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #7070: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #7071: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7072: @66 = @80[3] */
  for (rr=(&w66), ss=w80+3; ss!=w80+4; ss+=1) *rr++ = *ss;
  /* #7073: @66 = (-@66) */
  w66 = (- w66 );
  /* #7074: @66 = @66' */
  /* #7075: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7076: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s70, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #7077: @434 = @434' */
  /* #7078: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7079: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #7080: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #7081: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7082: @66 = @80[2] */
  for (rr=(&w66), ss=w80+2; ss!=w80+3; ss+=1) *rr++ = *ss;
  /* #7083: @66 = (-@66) */
  w66 = (- w66 );
  /* #7084: @66 = @66' */
  /* #7085: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s70, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #7086: @434 = @434' */
  /* #7087: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7088: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7089: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #7090: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #7091: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7092: @66 = @80[2] */
  for (rr=(&w66), ss=w80+2; ss!=w80+3; ss+=1) *rr++ = *ss;
  /* #7093: @66 = (-@66) */
  w66 = (- w66 );
  /* #7094: @66 = @66' */
  /* #7095: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7096: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s70, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #7097: @434 = @434' */
  /* #7098: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7099: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #7100: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #7101: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7102: @66 = @80[1] */
  for (rr=(&w66), ss=w80+1; ss!=w80+2; ss+=1) *rr++ = *ss;
  /* #7103: @66 = (-@66) */
  w66 = (- w66 );
  /* #7104: @66 = @66' */
  /* #7105: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s70, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #7106: @434 = @434' */
  /* #7107: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7108: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7109: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #7110: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #7111: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7112: @66 = @80[1] */
  for (rr=(&w66), ss=w80+1; ss!=w80+2; ss+=1) *rr++ = *ss;
  /* #7113: @66 = (-@66) */
  w66 = (- w66 );
  /* #7114: @66 = @66' */
  /* #7115: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7116: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s70, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #7117: @434 = @434' */
  /* #7118: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7119: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #7120: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #7121: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7122: @66 = @80[0] */
  for (rr=(&w66), ss=w80+0; ss!=w80+1; ss+=1) *rr++ = *ss;
  /* #7123: @66 = (-@66) */
  w66 = (- w66 );
  /* #7124: @66 = @66' */
  /* #7125: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s70, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #7126: @434 = @434' */
  /* #7127: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7128: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7129: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #7130: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #7131: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7132: @66 = @80[0] */
  for (rr=(&w66), ss=w80+0; ss!=w80+1; ss+=1) *rr++ = *ss;
  /* #7133: @66 = (-@66) */
  w66 = (- w66 );
  /* #7134: @66 = @66' */
  /* #7135: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7136: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s70, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #7137: @434 = @434' */
  /* #7138: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7139: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #7140: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #7141: @1 = vec(@1) */
  /* #7142: (@0[:5096:196;98:112] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+98; tt!=rr+112; tt+=1) *tt = *ss++;
  /* #7143: (@0[7:5103:14] = @1) */
  for (rr=w0+7, ss=w1; rr!=w0+5103; rr+=14) *rr = *ss++;
  /* #7144: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #7145: (@1[336:350] += @116) */
  for (rr=w1+336, ss=w116; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #7146: (@1[322:336] += @129) */
  for (rr=w1+322, ss=w129; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #7147: (@1[308:322] += @142) */
  for (rr=w1+308, ss=w142; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #7148: (@1[294:308] += @155) */
  for (rr=w1+294, ss=w155; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #7149: (@1[280:294] += @168) */
  for (rr=w1+280, ss=w168; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #7150: (@1[266:280] += @181) */
  for (rr=w1+266, ss=w181; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #7151: (@1[252:266] += @194) */
  for (rr=w1+252, ss=w194; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #7152: (@1[238:252] += @207) */
  for (rr=w1+238, ss=w207; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #7153: (@1[224:238] += @220) */
  for (rr=w1+224, ss=w220; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #7154: (@1[210:224] += @233) */
  for (rr=w1+210, ss=w233; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #7155: (@1[196:210] += @246) */
  for (rr=w1+196, ss=w246; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #7156: (@1[182:196] += @259) */
  for (rr=w1+182, ss=w259; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #7157: (@1[168:182] += @272) */
  for (rr=w1+168, ss=w272; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #7158: (@1[154:168] += @285) */
  for (rr=w1+154, ss=w285; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #7159: (@1[140:154] += @298) */
  for (rr=w1+140, ss=w298; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #7160: (@1[126:140] += @311) */
  for (rr=w1+126, ss=w311; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #7161: (@1[112:126] += @324) */
  for (rr=w1+112, ss=w324; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #7162: (@1[98:112] += @337) */
  for (rr=w1+98, ss=w337; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #7163: (@1[84:98] += @350) */
  for (rr=w1+84, ss=w350; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #7164: (@1[70:84] += @363) */
  for (rr=w1+70, ss=w363; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #7165: (@1[56:70] += @376) */
  for (rr=w1+56, ss=w376; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #7166: (@1[42:56] += @389) */
  for (rr=w1+42, ss=w389; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #7167: (@1[28:42] += @402) */
  for (rr=w1+28, ss=w402; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #7168: (@1[14:28] += @415) */
  for (rr=w1+14, ss=w415; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #7169: (@1[:14] += @428) */
  for (rr=w1+0, ss=w428; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #7170: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7171: @66 = @82[25] */
  for (rr=(&w66), ss=w82+25; ss!=w82+26; ss+=1) *rr++ = *ss;
  /* #7172: @66 = (-@66) */
  w66 = (- w66 );
  /* #7173: @66 = @66' */
  /* #7174: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s76, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #7175: @434 = @434' */
  /* #7176: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7177: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7178: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #7179: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #7180: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7181: @66 = @82[25] */
  for (rr=(&w66), ss=w82+25; ss!=w82+26; ss+=1) *rr++ = *ss;
  /* #7182: @66 = (-@66) */
  w66 = (- w66 );
  /* #7183: @66 = @66' */
  /* #7184: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7185: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s76, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #7186: @434 = @434' */
  /* #7187: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7188: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #7189: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #7190: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7191: @66 = @82[24] */
  for (rr=(&w66), ss=w82+24; ss!=w82+25; ss+=1) *rr++ = *ss;
  /* #7192: @66 = (-@66) */
  w66 = (- w66 );
  /* #7193: @66 = @66' */
  /* #7194: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s76, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #7195: @434 = @434' */
  /* #7196: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7197: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7198: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #7199: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #7200: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7201: @66 = @82[24] */
  for (rr=(&w66), ss=w82+24; ss!=w82+25; ss+=1) *rr++ = *ss;
  /* #7202: @66 = (-@66) */
  w66 = (- w66 );
  /* #7203: @66 = @66' */
  /* #7204: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7205: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s76, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #7206: @434 = @434' */
  /* #7207: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7208: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #7209: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #7210: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7211: @66 = @82[23] */
  for (rr=(&w66), ss=w82+23; ss!=w82+24; ss+=1) *rr++ = *ss;
  /* #7212: @66 = (-@66) */
  w66 = (- w66 );
  /* #7213: @66 = @66' */
  /* #7214: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s76, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #7215: @434 = @434' */
  /* #7216: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7217: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7218: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #7219: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #7220: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7221: @66 = @82[23] */
  for (rr=(&w66), ss=w82+23; ss!=w82+24; ss+=1) *rr++ = *ss;
  /* #7222: @66 = (-@66) */
  w66 = (- w66 );
  /* #7223: @66 = @66' */
  /* #7224: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7225: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s76, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #7226: @434 = @434' */
  /* #7227: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7228: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #7229: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #7230: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7231: @66 = @82[22] */
  for (rr=(&w66), ss=w82+22; ss!=w82+23; ss+=1) *rr++ = *ss;
  /* #7232: @66 = (-@66) */
  w66 = (- w66 );
  /* #7233: @66 = @66' */
  /* #7234: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s76, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #7235: @434 = @434' */
  /* #7236: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7237: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7238: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #7239: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #7240: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7241: @66 = @82[22] */
  for (rr=(&w66), ss=w82+22; ss!=w82+23; ss+=1) *rr++ = *ss;
  /* #7242: @66 = (-@66) */
  w66 = (- w66 );
  /* #7243: @66 = @66' */
  /* #7244: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7245: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s76, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #7246: @434 = @434' */
  /* #7247: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7248: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #7249: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #7250: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7251: @66 = @82[21] */
  for (rr=(&w66), ss=w82+21; ss!=w82+22; ss+=1) *rr++ = *ss;
  /* #7252: @66 = (-@66) */
  w66 = (- w66 );
  /* #7253: @66 = @66' */
  /* #7254: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s76, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #7255: @434 = @434' */
  /* #7256: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7257: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7258: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #7259: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #7260: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7261: @66 = @82[21] */
  for (rr=(&w66), ss=w82+21; ss!=w82+22; ss+=1) *rr++ = *ss;
  /* #7262: @66 = (-@66) */
  w66 = (- w66 );
  /* #7263: @66 = @66' */
  /* #7264: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7265: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s76, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #7266: @434 = @434' */
  /* #7267: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7268: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #7269: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #7270: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7271: @66 = @82[20] */
  for (rr=(&w66), ss=w82+20; ss!=w82+21; ss+=1) *rr++ = *ss;
  /* #7272: @66 = (-@66) */
  w66 = (- w66 );
  /* #7273: @66 = @66' */
  /* #7274: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s76, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #7275: @434 = @434' */
  /* #7276: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7277: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7278: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #7279: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #7280: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7281: @66 = @82[20] */
  for (rr=(&w66), ss=w82+20; ss!=w82+21; ss+=1) *rr++ = *ss;
  /* #7282: @66 = (-@66) */
  w66 = (- w66 );
  /* #7283: @66 = @66' */
  /* #7284: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7285: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s76, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #7286: @434 = @434' */
  /* #7287: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7288: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #7289: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #7290: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7291: @66 = @82[19] */
  for (rr=(&w66), ss=w82+19; ss!=w82+20; ss+=1) *rr++ = *ss;
  /* #7292: @66 = (-@66) */
  w66 = (- w66 );
  /* #7293: @66 = @66' */
  /* #7294: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s76, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #7295: @434 = @434' */
  /* #7296: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7297: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7298: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #7299: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #7300: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7301: @66 = @82[19] */
  for (rr=(&w66), ss=w82+19; ss!=w82+20; ss+=1) *rr++ = *ss;
  /* #7302: @66 = (-@66) */
  w66 = (- w66 );
  /* #7303: @66 = @66' */
  /* #7304: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7305: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s76, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #7306: @434 = @434' */
  /* #7307: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7308: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #7309: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #7310: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7311: @66 = @82[18] */
  for (rr=(&w66), ss=w82+18; ss!=w82+19; ss+=1) *rr++ = *ss;
  /* #7312: @66 = (-@66) */
  w66 = (- w66 );
  /* #7313: @66 = @66' */
  /* #7314: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s76, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #7315: @434 = @434' */
  /* #7316: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7317: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7318: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #7319: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #7320: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7321: @66 = @82[18] */
  for (rr=(&w66), ss=w82+18; ss!=w82+19; ss+=1) *rr++ = *ss;
  /* #7322: @66 = (-@66) */
  w66 = (- w66 );
  /* #7323: @66 = @66' */
  /* #7324: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7325: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s76, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #7326: @434 = @434' */
  /* #7327: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7328: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #7329: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #7330: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7331: @66 = @82[17] */
  for (rr=(&w66), ss=w82+17; ss!=w82+18; ss+=1) *rr++ = *ss;
  /* #7332: @66 = (-@66) */
  w66 = (- w66 );
  /* #7333: @66 = @66' */
  /* #7334: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s76, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #7335: @434 = @434' */
  /* #7336: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7337: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7338: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #7339: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #7340: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7341: @66 = @82[17] */
  for (rr=(&w66), ss=w82+17; ss!=w82+18; ss+=1) *rr++ = *ss;
  /* #7342: @66 = (-@66) */
  w66 = (- w66 );
  /* #7343: @66 = @66' */
  /* #7344: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7345: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s76, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #7346: @434 = @434' */
  /* #7347: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7348: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #7349: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #7350: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7351: @66 = @82[16] */
  for (rr=(&w66), ss=w82+16; ss!=w82+17; ss+=1) *rr++ = *ss;
  /* #7352: @66 = (-@66) */
  w66 = (- w66 );
  /* #7353: @66 = @66' */
  /* #7354: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s76, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #7355: @434 = @434' */
  /* #7356: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7357: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7358: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #7359: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #7360: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7361: @66 = @82[16] */
  for (rr=(&w66), ss=w82+16; ss!=w82+17; ss+=1) *rr++ = *ss;
  /* #7362: @66 = (-@66) */
  w66 = (- w66 );
  /* #7363: @66 = @66' */
  /* #7364: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7365: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s76, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #7366: @434 = @434' */
  /* #7367: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7368: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #7369: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #7370: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7371: @66 = @82[15] */
  for (rr=(&w66), ss=w82+15; ss!=w82+16; ss+=1) *rr++ = *ss;
  /* #7372: @66 = (-@66) */
  w66 = (- w66 );
  /* #7373: @66 = @66' */
  /* #7374: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s76, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #7375: @434 = @434' */
  /* #7376: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7377: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7378: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #7379: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #7380: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7381: @66 = @82[15] */
  for (rr=(&w66), ss=w82+15; ss!=w82+16; ss+=1) *rr++ = *ss;
  /* #7382: @66 = (-@66) */
  w66 = (- w66 );
  /* #7383: @66 = @66' */
  /* #7384: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7385: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s76, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #7386: @434 = @434' */
  /* #7387: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7388: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #7389: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #7390: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7391: @66 = @82[14] */
  for (rr=(&w66), ss=w82+14; ss!=w82+15; ss+=1) *rr++ = *ss;
  /* #7392: @66 = (-@66) */
  w66 = (- w66 );
  /* #7393: @66 = @66' */
  /* #7394: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s76, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #7395: @434 = @434' */
  /* #7396: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7397: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7398: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #7399: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #7400: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7401: @66 = @82[14] */
  for (rr=(&w66), ss=w82+14; ss!=w82+15; ss+=1) *rr++ = *ss;
  /* #7402: @66 = (-@66) */
  w66 = (- w66 );
  /* #7403: @66 = @66' */
  /* #7404: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7405: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s76, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #7406: @434 = @434' */
  /* #7407: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7408: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #7409: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #7410: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7411: @66 = @82[13] */
  for (rr=(&w66), ss=w82+13; ss!=w82+14; ss+=1) *rr++ = *ss;
  /* #7412: @66 = (-@66) */
  w66 = (- w66 );
  /* #7413: @66 = @66' */
  /* #7414: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s76, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #7415: @434 = @434' */
  /* #7416: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7417: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7418: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #7419: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #7420: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7421: @66 = @82[13] */
  for (rr=(&w66), ss=w82+13; ss!=w82+14; ss+=1) *rr++ = *ss;
  /* #7422: @66 = (-@66) */
  w66 = (- w66 );
  /* #7423: @66 = @66' */
  /* #7424: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7425: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s76, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #7426: @434 = @434' */
  /* #7427: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7428: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #7429: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #7430: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7431: @66 = @82[12] */
  for (rr=(&w66), ss=w82+12; ss!=w82+13; ss+=1) *rr++ = *ss;
  /* #7432: @66 = (-@66) */
  w66 = (- w66 );
  /* #7433: @66 = @66' */
  /* #7434: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s76, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #7435: @434 = @434' */
  /* #7436: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7437: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7438: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #7439: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #7440: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7441: @66 = @82[12] */
  for (rr=(&w66), ss=w82+12; ss!=w82+13; ss+=1) *rr++ = *ss;
  /* #7442: @66 = (-@66) */
  w66 = (- w66 );
  /* #7443: @66 = @66' */
  /* #7444: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7445: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s76, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #7446: @434 = @434' */
  /* #7447: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7448: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #7449: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #7450: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7451: @66 = @82[11] */
  for (rr=(&w66), ss=w82+11; ss!=w82+12; ss+=1) *rr++ = *ss;
  /* #7452: @66 = (-@66) */
  w66 = (- w66 );
  /* #7453: @66 = @66' */
  /* #7454: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s76, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #7455: @434 = @434' */
  /* #7456: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7457: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7458: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #7459: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #7460: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7461: @66 = @82[11] */
  for (rr=(&w66), ss=w82+11; ss!=w82+12; ss+=1) *rr++ = *ss;
  /* #7462: @66 = (-@66) */
  w66 = (- w66 );
  /* #7463: @66 = @66' */
  /* #7464: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7465: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s76, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #7466: @434 = @434' */
  /* #7467: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7468: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #7469: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #7470: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7471: @66 = @82[10] */
  for (rr=(&w66), ss=w82+10; ss!=w82+11; ss+=1) *rr++ = *ss;
  /* #7472: @66 = (-@66) */
  w66 = (- w66 );
  /* #7473: @66 = @66' */
  /* #7474: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s76, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #7475: @434 = @434' */
  /* #7476: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7477: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7478: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #7479: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #7480: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7481: @66 = @82[10] */
  for (rr=(&w66), ss=w82+10; ss!=w82+11; ss+=1) *rr++ = *ss;
  /* #7482: @66 = (-@66) */
  w66 = (- w66 );
  /* #7483: @66 = @66' */
  /* #7484: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7485: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s76, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #7486: @434 = @434' */
  /* #7487: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7488: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #7489: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #7490: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7491: @66 = @82[9] */
  for (rr=(&w66), ss=w82+9; ss!=w82+10; ss+=1) *rr++ = *ss;
  /* #7492: @66 = (-@66) */
  w66 = (- w66 );
  /* #7493: @66 = @66' */
  /* #7494: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s76, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #7495: @434 = @434' */
  /* #7496: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7497: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7498: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #7499: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #7500: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7501: @66 = @82[9] */
  for (rr=(&w66), ss=w82+9; ss!=w82+10; ss+=1) *rr++ = *ss;
  /* #7502: @66 = (-@66) */
  w66 = (- w66 );
  /* #7503: @66 = @66' */
  /* #7504: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7505: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s76, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #7506: @434 = @434' */
  /* #7507: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7508: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #7509: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #7510: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7511: @66 = @82[8] */
  for (rr=(&w66), ss=w82+8; ss!=w82+9; ss+=1) *rr++ = *ss;
  /* #7512: @66 = (-@66) */
  w66 = (- w66 );
  /* #7513: @66 = @66' */
  /* #7514: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s76, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #7515: @434 = @434' */
  /* #7516: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7517: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7518: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #7519: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #7520: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7521: @66 = @82[8] */
  for (rr=(&w66), ss=w82+8; ss!=w82+9; ss+=1) *rr++ = *ss;
  /* #7522: @66 = (-@66) */
  w66 = (- w66 );
  /* #7523: @66 = @66' */
  /* #7524: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7525: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s76, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #7526: @434 = @434' */
  /* #7527: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7528: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #7529: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #7530: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7531: @66 = @82[7] */
  for (rr=(&w66), ss=w82+7; ss!=w82+8; ss+=1) *rr++ = *ss;
  /* #7532: @66 = (-@66) */
  w66 = (- w66 );
  /* #7533: @66 = @66' */
  /* #7534: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s76, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #7535: @434 = @434' */
  /* #7536: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7537: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7538: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #7539: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #7540: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7541: @66 = @82[7] */
  for (rr=(&w66), ss=w82+7; ss!=w82+8; ss+=1) *rr++ = *ss;
  /* #7542: @66 = (-@66) */
  w66 = (- w66 );
  /* #7543: @66 = @66' */
  /* #7544: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7545: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s76, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #7546: @434 = @434' */
  /* #7547: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7548: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #7549: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #7550: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7551: @66 = @82[6] */
  for (rr=(&w66), ss=w82+6; ss!=w82+7; ss+=1) *rr++ = *ss;
  /* #7552: @66 = (-@66) */
  w66 = (- w66 );
  /* #7553: @66 = @66' */
  /* #7554: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s76, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #7555: @434 = @434' */
  /* #7556: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7557: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7558: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #7559: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #7560: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7561: @66 = @82[6] */
  for (rr=(&w66), ss=w82+6; ss!=w82+7; ss+=1) *rr++ = *ss;
  /* #7562: @66 = (-@66) */
  w66 = (- w66 );
  /* #7563: @66 = @66' */
  /* #7564: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7565: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s76, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #7566: @434 = @434' */
  /* #7567: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7568: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #7569: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #7570: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7571: @66 = @82[5] */
  for (rr=(&w66), ss=w82+5; ss!=w82+6; ss+=1) *rr++ = *ss;
  /* #7572: @66 = (-@66) */
  w66 = (- w66 );
  /* #7573: @66 = @66' */
  /* #7574: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s76, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #7575: @434 = @434' */
  /* #7576: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7577: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7578: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #7579: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #7580: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7581: @66 = @82[5] */
  for (rr=(&w66), ss=w82+5; ss!=w82+6; ss+=1) *rr++ = *ss;
  /* #7582: @66 = (-@66) */
  w66 = (- w66 );
  /* #7583: @66 = @66' */
  /* #7584: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7585: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s76, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #7586: @434 = @434' */
  /* #7587: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7588: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #7589: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #7590: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7591: @66 = @82[4] */
  for (rr=(&w66), ss=w82+4; ss!=w82+5; ss+=1) *rr++ = *ss;
  /* #7592: @66 = (-@66) */
  w66 = (- w66 );
  /* #7593: @66 = @66' */
  /* #7594: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s76, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #7595: @434 = @434' */
  /* #7596: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7597: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7598: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #7599: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #7600: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7601: @66 = @82[4] */
  for (rr=(&w66), ss=w82+4; ss!=w82+5; ss+=1) *rr++ = *ss;
  /* #7602: @66 = (-@66) */
  w66 = (- w66 );
  /* #7603: @66 = @66' */
  /* #7604: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7605: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s76, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #7606: @434 = @434' */
  /* #7607: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7608: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #7609: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #7610: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7611: @66 = @82[3] */
  for (rr=(&w66), ss=w82+3; ss!=w82+4; ss+=1) *rr++ = *ss;
  /* #7612: @66 = (-@66) */
  w66 = (- w66 );
  /* #7613: @66 = @66' */
  /* #7614: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s76, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #7615: @434 = @434' */
  /* #7616: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7617: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7618: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #7619: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #7620: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7621: @66 = @82[3] */
  for (rr=(&w66), ss=w82+3; ss!=w82+4; ss+=1) *rr++ = *ss;
  /* #7622: @66 = (-@66) */
  w66 = (- w66 );
  /* #7623: @66 = @66' */
  /* #7624: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7625: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s76, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #7626: @434 = @434' */
  /* #7627: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7628: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #7629: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #7630: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7631: @66 = @82[2] */
  for (rr=(&w66), ss=w82+2; ss!=w82+3; ss+=1) *rr++ = *ss;
  /* #7632: @66 = (-@66) */
  w66 = (- w66 );
  /* #7633: @66 = @66' */
  /* #7634: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s76, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #7635: @434 = @434' */
  /* #7636: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7637: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7638: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #7639: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #7640: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7641: @66 = @82[2] */
  for (rr=(&w66), ss=w82+2; ss!=w82+3; ss+=1) *rr++ = *ss;
  /* #7642: @66 = (-@66) */
  w66 = (- w66 );
  /* #7643: @66 = @66' */
  /* #7644: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7645: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s76, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #7646: @434 = @434' */
  /* #7647: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7648: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #7649: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #7650: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7651: @66 = @82[1] */
  for (rr=(&w66), ss=w82+1; ss!=w82+2; ss+=1) *rr++ = *ss;
  /* #7652: @66 = (-@66) */
  w66 = (- w66 );
  /* #7653: @66 = @66' */
  /* #7654: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s76, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #7655: @434 = @434' */
  /* #7656: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7657: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7658: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #7659: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #7660: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7661: @66 = @82[1] */
  for (rr=(&w66), ss=w82+1; ss!=w82+2; ss+=1) *rr++ = *ss;
  /* #7662: @66 = (-@66) */
  w66 = (- w66 );
  /* #7663: @66 = @66' */
  /* #7664: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7665: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s76, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #7666: @434 = @434' */
  /* #7667: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7668: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #7669: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #7670: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7671: @66 = @82[0] */
  for (rr=(&w66), ss=w82+0; ss!=w82+1; ss+=1) *rr++ = *ss;
  /* #7672: @66 = (-@66) */
  w66 = (- w66 );
  /* #7673: @66 = @66' */
  /* #7674: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s76, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #7675: @434 = @434' */
  /* #7676: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7677: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7678: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #7679: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #7680: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7681: @66 = @82[0] */
  for (rr=(&w66), ss=w82+0; ss!=w82+1; ss+=1) *rr++ = *ss;
  /* #7682: @66 = (-@66) */
  w66 = (- w66 );
  /* #7683: @66 = @66' */
  /* #7684: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7685: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s76, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #7686: @434 = @434' */
  /* #7687: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7688: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #7689: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #7690: @1 = vec(@1) */
  /* #7691: (@0[:5096:196;112:126] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+112; tt!=rr+126; tt+=1) *tt = *ss++;
  /* #7692: (@0[8:5104:14] = @1) */
  for (rr=w0+8, ss=w1; rr!=w0+5104; rr+=14) *rr = *ss++;
  /* #7693: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #7694: (@1[336:350] += @117) */
  for (rr=w1+336, ss=w117; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #7695: (@1[322:336] += @130) */
  for (rr=w1+322, ss=w130; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #7696: (@1[308:322] += @143) */
  for (rr=w1+308, ss=w143; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #7697: (@1[294:308] += @156) */
  for (rr=w1+294, ss=w156; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #7698: (@1[280:294] += @169) */
  for (rr=w1+280, ss=w169; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #7699: (@1[266:280] += @182) */
  for (rr=w1+266, ss=w182; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #7700: (@1[252:266] += @195) */
  for (rr=w1+252, ss=w195; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #7701: (@1[238:252] += @208) */
  for (rr=w1+238, ss=w208; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #7702: (@1[224:238] += @221) */
  for (rr=w1+224, ss=w221; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #7703: (@1[210:224] += @234) */
  for (rr=w1+210, ss=w234; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #7704: (@1[196:210] += @247) */
  for (rr=w1+196, ss=w247; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #7705: (@1[182:196] += @260) */
  for (rr=w1+182, ss=w260; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #7706: (@1[168:182] += @273) */
  for (rr=w1+168, ss=w273; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #7707: (@1[154:168] += @286) */
  for (rr=w1+154, ss=w286; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #7708: (@1[140:154] += @299) */
  for (rr=w1+140, ss=w299; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #7709: (@1[126:140] += @312) */
  for (rr=w1+126, ss=w312; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #7710: (@1[112:126] += @325) */
  for (rr=w1+112, ss=w325; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #7711: (@1[98:112] += @338) */
  for (rr=w1+98, ss=w338; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #7712: (@1[84:98] += @351) */
  for (rr=w1+84, ss=w351; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #7713: (@1[70:84] += @364) */
  for (rr=w1+70, ss=w364; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #7714: (@1[56:70] += @377) */
  for (rr=w1+56, ss=w377; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #7715: (@1[42:56] += @390) */
  for (rr=w1+42, ss=w390; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #7716: (@1[28:42] += @403) */
  for (rr=w1+28, ss=w403; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #7717: (@1[14:28] += @416) */
  for (rr=w1+14, ss=w416; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #7718: (@1[:14] += @429) */
  for (rr=w1+0, ss=w429; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #7719: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7720: @66 = @84[25] */
  for (rr=(&w66), ss=w84+25; ss!=w84+26; ss+=1) *rr++ = *ss;
  /* #7721: @66 = (-@66) */
  w66 = (- w66 );
  /* #7722: @66 = @66' */
  /* #7723: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s80, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #7724: @434 = @434' */
  /* #7725: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7726: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7727: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #7728: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #7729: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7730: @66 = @84[25] */
  for (rr=(&w66), ss=w84+25; ss!=w84+26; ss+=1) *rr++ = *ss;
  /* #7731: @66 = (-@66) */
  w66 = (- w66 );
  /* #7732: @66 = @66' */
  /* #7733: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7734: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s80, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #7735: @434 = @434' */
  /* #7736: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7737: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #7738: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #7739: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7740: @66 = @84[24] */
  for (rr=(&w66), ss=w84+24; ss!=w84+25; ss+=1) *rr++ = *ss;
  /* #7741: @66 = (-@66) */
  w66 = (- w66 );
  /* #7742: @66 = @66' */
  /* #7743: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s80, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #7744: @434 = @434' */
  /* #7745: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7746: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7747: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #7748: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #7749: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7750: @66 = @84[24] */
  for (rr=(&w66), ss=w84+24; ss!=w84+25; ss+=1) *rr++ = *ss;
  /* #7751: @66 = (-@66) */
  w66 = (- w66 );
  /* #7752: @66 = @66' */
  /* #7753: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7754: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s80, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #7755: @434 = @434' */
  /* #7756: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7757: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #7758: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #7759: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7760: @66 = @84[23] */
  for (rr=(&w66), ss=w84+23; ss!=w84+24; ss+=1) *rr++ = *ss;
  /* #7761: @66 = (-@66) */
  w66 = (- w66 );
  /* #7762: @66 = @66' */
  /* #7763: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s80, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #7764: @434 = @434' */
  /* #7765: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7766: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7767: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #7768: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #7769: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7770: @66 = @84[23] */
  for (rr=(&w66), ss=w84+23; ss!=w84+24; ss+=1) *rr++ = *ss;
  /* #7771: @66 = (-@66) */
  w66 = (- w66 );
  /* #7772: @66 = @66' */
  /* #7773: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7774: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s80, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #7775: @434 = @434' */
  /* #7776: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7777: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #7778: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #7779: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7780: @66 = @84[22] */
  for (rr=(&w66), ss=w84+22; ss!=w84+23; ss+=1) *rr++ = *ss;
  /* #7781: @66 = (-@66) */
  w66 = (- w66 );
  /* #7782: @66 = @66' */
  /* #7783: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s80, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #7784: @434 = @434' */
  /* #7785: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7786: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7787: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #7788: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #7789: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7790: @66 = @84[22] */
  for (rr=(&w66), ss=w84+22; ss!=w84+23; ss+=1) *rr++ = *ss;
  /* #7791: @66 = (-@66) */
  w66 = (- w66 );
  /* #7792: @66 = @66' */
  /* #7793: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7794: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s80, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #7795: @434 = @434' */
  /* #7796: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7797: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #7798: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #7799: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7800: @66 = @84[21] */
  for (rr=(&w66), ss=w84+21; ss!=w84+22; ss+=1) *rr++ = *ss;
  /* #7801: @66 = (-@66) */
  w66 = (- w66 );
  /* #7802: @66 = @66' */
  /* #7803: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s80, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #7804: @434 = @434' */
  /* #7805: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7806: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7807: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #7808: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #7809: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7810: @66 = @84[21] */
  for (rr=(&w66), ss=w84+21; ss!=w84+22; ss+=1) *rr++ = *ss;
  /* #7811: @66 = (-@66) */
  w66 = (- w66 );
  /* #7812: @66 = @66' */
  /* #7813: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7814: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s80, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #7815: @434 = @434' */
  /* #7816: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7817: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #7818: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #7819: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7820: @66 = @84[20] */
  for (rr=(&w66), ss=w84+20; ss!=w84+21; ss+=1) *rr++ = *ss;
  /* #7821: @66 = (-@66) */
  w66 = (- w66 );
  /* #7822: @66 = @66' */
  /* #7823: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s80, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #7824: @434 = @434' */
  /* #7825: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7826: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7827: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #7828: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #7829: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7830: @66 = @84[20] */
  for (rr=(&w66), ss=w84+20; ss!=w84+21; ss+=1) *rr++ = *ss;
  /* #7831: @66 = (-@66) */
  w66 = (- w66 );
  /* #7832: @66 = @66' */
  /* #7833: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7834: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s80, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #7835: @434 = @434' */
  /* #7836: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7837: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #7838: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #7839: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7840: @66 = @84[19] */
  for (rr=(&w66), ss=w84+19; ss!=w84+20; ss+=1) *rr++ = *ss;
  /* #7841: @66 = (-@66) */
  w66 = (- w66 );
  /* #7842: @66 = @66' */
  /* #7843: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s80, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #7844: @434 = @434' */
  /* #7845: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7846: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7847: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #7848: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #7849: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7850: @66 = @84[19] */
  for (rr=(&w66), ss=w84+19; ss!=w84+20; ss+=1) *rr++ = *ss;
  /* #7851: @66 = (-@66) */
  w66 = (- w66 );
  /* #7852: @66 = @66' */
  /* #7853: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7854: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s80, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #7855: @434 = @434' */
  /* #7856: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7857: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #7858: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #7859: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7860: @66 = @84[18] */
  for (rr=(&w66), ss=w84+18; ss!=w84+19; ss+=1) *rr++ = *ss;
  /* #7861: @66 = (-@66) */
  w66 = (- w66 );
  /* #7862: @66 = @66' */
  /* #7863: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s80, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #7864: @434 = @434' */
  /* #7865: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7866: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7867: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #7868: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #7869: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7870: @66 = @84[18] */
  for (rr=(&w66), ss=w84+18; ss!=w84+19; ss+=1) *rr++ = *ss;
  /* #7871: @66 = (-@66) */
  w66 = (- w66 );
  /* #7872: @66 = @66' */
  /* #7873: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7874: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s80, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #7875: @434 = @434' */
  /* #7876: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7877: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #7878: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #7879: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7880: @66 = @84[17] */
  for (rr=(&w66), ss=w84+17; ss!=w84+18; ss+=1) *rr++ = *ss;
  /* #7881: @66 = (-@66) */
  w66 = (- w66 );
  /* #7882: @66 = @66' */
  /* #7883: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s80, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #7884: @434 = @434' */
  /* #7885: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7886: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7887: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #7888: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #7889: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7890: @66 = @84[17] */
  for (rr=(&w66), ss=w84+17; ss!=w84+18; ss+=1) *rr++ = *ss;
  /* #7891: @66 = (-@66) */
  w66 = (- w66 );
  /* #7892: @66 = @66' */
  /* #7893: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7894: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s80, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #7895: @434 = @434' */
  /* #7896: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7897: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #7898: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #7899: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7900: @66 = @84[16] */
  for (rr=(&w66), ss=w84+16; ss!=w84+17; ss+=1) *rr++ = *ss;
  /* #7901: @66 = (-@66) */
  w66 = (- w66 );
  /* #7902: @66 = @66' */
  /* #7903: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s80, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #7904: @434 = @434' */
  /* #7905: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7906: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7907: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #7908: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #7909: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7910: @66 = @84[16] */
  for (rr=(&w66), ss=w84+16; ss!=w84+17; ss+=1) *rr++ = *ss;
  /* #7911: @66 = (-@66) */
  w66 = (- w66 );
  /* #7912: @66 = @66' */
  /* #7913: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7914: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s80, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #7915: @434 = @434' */
  /* #7916: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7917: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #7918: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #7919: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7920: @66 = @84[15] */
  for (rr=(&w66), ss=w84+15; ss!=w84+16; ss+=1) *rr++ = *ss;
  /* #7921: @66 = (-@66) */
  w66 = (- w66 );
  /* #7922: @66 = @66' */
  /* #7923: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s80, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #7924: @434 = @434' */
  /* #7925: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7926: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7927: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #7928: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #7929: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7930: @66 = @84[15] */
  for (rr=(&w66), ss=w84+15; ss!=w84+16; ss+=1) *rr++ = *ss;
  /* #7931: @66 = (-@66) */
  w66 = (- w66 );
  /* #7932: @66 = @66' */
  /* #7933: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7934: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s80, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #7935: @434 = @434' */
  /* #7936: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7937: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #7938: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #7939: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7940: @66 = @84[14] */
  for (rr=(&w66), ss=w84+14; ss!=w84+15; ss+=1) *rr++ = *ss;
  /* #7941: @66 = (-@66) */
  w66 = (- w66 );
  /* #7942: @66 = @66' */
  /* #7943: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s80, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #7944: @434 = @434' */
  /* #7945: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7946: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7947: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #7948: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #7949: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7950: @66 = @84[14] */
  for (rr=(&w66), ss=w84+14; ss!=w84+15; ss+=1) *rr++ = *ss;
  /* #7951: @66 = (-@66) */
  w66 = (- w66 );
  /* #7952: @66 = @66' */
  /* #7953: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7954: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s80, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #7955: @434 = @434' */
  /* #7956: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7957: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #7958: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #7959: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7960: @66 = @84[13] */
  for (rr=(&w66), ss=w84+13; ss!=w84+14; ss+=1) *rr++ = *ss;
  /* #7961: @66 = (-@66) */
  w66 = (- w66 );
  /* #7962: @66 = @66' */
  /* #7963: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s80, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #7964: @434 = @434' */
  /* #7965: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7966: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7967: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #7968: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #7969: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7970: @66 = @84[13] */
  for (rr=(&w66), ss=w84+13; ss!=w84+14; ss+=1) *rr++ = *ss;
  /* #7971: @66 = (-@66) */
  w66 = (- w66 );
  /* #7972: @66 = @66' */
  /* #7973: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7974: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s80, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #7975: @434 = @434' */
  /* #7976: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7977: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #7978: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #7979: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7980: @66 = @84[12] */
  for (rr=(&w66), ss=w84+12; ss!=w84+13; ss+=1) *rr++ = *ss;
  /* #7981: @66 = (-@66) */
  w66 = (- w66 );
  /* #7982: @66 = @66' */
  /* #7983: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s80, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #7984: @434 = @434' */
  /* #7985: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #7986: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7987: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #7988: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #7989: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #7990: @66 = @84[12] */
  for (rr=(&w66), ss=w84+12; ss!=w84+13; ss+=1) *rr++ = *ss;
  /* #7991: @66 = (-@66) */
  w66 = (- w66 );
  /* #7992: @66 = @66' */
  /* #7993: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #7994: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s80, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #7995: @434 = @434' */
  /* #7996: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #7997: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #7998: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #7999: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8000: @66 = @84[11] */
  for (rr=(&w66), ss=w84+11; ss!=w84+12; ss+=1) *rr++ = *ss;
  /* #8001: @66 = (-@66) */
  w66 = (- w66 );
  /* #8002: @66 = @66' */
  /* #8003: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s80, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #8004: @434 = @434' */
  /* #8005: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8006: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8007: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #8008: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #8009: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8010: @66 = @84[11] */
  for (rr=(&w66), ss=w84+11; ss!=w84+12; ss+=1) *rr++ = *ss;
  /* #8011: @66 = (-@66) */
  w66 = (- w66 );
  /* #8012: @66 = @66' */
  /* #8013: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8014: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s80, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #8015: @434 = @434' */
  /* #8016: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8017: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #8018: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #8019: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8020: @66 = @84[10] */
  for (rr=(&w66), ss=w84+10; ss!=w84+11; ss+=1) *rr++ = *ss;
  /* #8021: @66 = (-@66) */
  w66 = (- w66 );
  /* #8022: @66 = @66' */
  /* #8023: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s80, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #8024: @434 = @434' */
  /* #8025: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8026: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8027: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #8028: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #8029: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8030: @66 = @84[10] */
  for (rr=(&w66), ss=w84+10; ss!=w84+11; ss+=1) *rr++ = *ss;
  /* #8031: @66 = (-@66) */
  w66 = (- w66 );
  /* #8032: @66 = @66' */
  /* #8033: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8034: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s80, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #8035: @434 = @434' */
  /* #8036: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8037: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #8038: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #8039: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8040: @66 = @84[9] */
  for (rr=(&w66), ss=w84+9; ss!=w84+10; ss+=1) *rr++ = *ss;
  /* #8041: @66 = (-@66) */
  w66 = (- w66 );
  /* #8042: @66 = @66' */
  /* #8043: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s80, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #8044: @434 = @434' */
  /* #8045: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8046: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8047: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #8048: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #8049: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8050: @66 = @84[9] */
  for (rr=(&w66), ss=w84+9; ss!=w84+10; ss+=1) *rr++ = *ss;
  /* #8051: @66 = (-@66) */
  w66 = (- w66 );
  /* #8052: @66 = @66' */
  /* #8053: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8054: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s80, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #8055: @434 = @434' */
  /* #8056: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8057: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #8058: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #8059: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8060: @66 = @84[8] */
  for (rr=(&w66), ss=w84+8; ss!=w84+9; ss+=1) *rr++ = *ss;
  /* #8061: @66 = (-@66) */
  w66 = (- w66 );
  /* #8062: @66 = @66' */
  /* #8063: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s80, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #8064: @434 = @434' */
  /* #8065: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8066: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8067: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #8068: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #8069: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8070: @66 = @84[8] */
  for (rr=(&w66), ss=w84+8; ss!=w84+9; ss+=1) *rr++ = *ss;
  /* #8071: @66 = (-@66) */
  w66 = (- w66 );
  /* #8072: @66 = @66' */
  /* #8073: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8074: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s80, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #8075: @434 = @434' */
  /* #8076: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8077: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #8078: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #8079: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8080: @66 = @84[7] */
  for (rr=(&w66), ss=w84+7; ss!=w84+8; ss+=1) *rr++ = *ss;
  /* #8081: @66 = (-@66) */
  w66 = (- w66 );
  /* #8082: @66 = @66' */
  /* #8083: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s80, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #8084: @434 = @434' */
  /* #8085: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8086: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8087: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #8088: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #8089: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8090: @66 = @84[7] */
  for (rr=(&w66), ss=w84+7; ss!=w84+8; ss+=1) *rr++ = *ss;
  /* #8091: @66 = (-@66) */
  w66 = (- w66 );
  /* #8092: @66 = @66' */
  /* #8093: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8094: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s80, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #8095: @434 = @434' */
  /* #8096: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8097: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #8098: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #8099: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8100: @66 = @84[6] */
  for (rr=(&w66), ss=w84+6; ss!=w84+7; ss+=1) *rr++ = *ss;
  /* #8101: @66 = (-@66) */
  w66 = (- w66 );
  /* #8102: @66 = @66' */
  /* #8103: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s80, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #8104: @434 = @434' */
  /* #8105: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8106: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8107: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #8108: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #8109: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8110: @66 = @84[6] */
  for (rr=(&w66), ss=w84+6; ss!=w84+7; ss+=1) *rr++ = *ss;
  /* #8111: @66 = (-@66) */
  w66 = (- w66 );
  /* #8112: @66 = @66' */
  /* #8113: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8114: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s80, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #8115: @434 = @434' */
  /* #8116: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8117: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #8118: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #8119: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8120: @66 = @84[5] */
  for (rr=(&w66), ss=w84+5; ss!=w84+6; ss+=1) *rr++ = *ss;
  /* #8121: @66 = (-@66) */
  w66 = (- w66 );
  /* #8122: @66 = @66' */
  /* #8123: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s80, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #8124: @434 = @434' */
  /* #8125: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8126: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8127: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #8128: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #8129: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8130: @66 = @84[5] */
  for (rr=(&w66), ss=w84+5; ss!=w84+6; ss+=1) *rr++ = *ss;
  /* #8131: @66 = (-@66) */
  w66 = (- w66 );
  /* #8132: @66 = @66' */
  /* #8133: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8134: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s80, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #8135: @434 = @434' */
  /* #8136: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8137: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #8138: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #8139: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8140: @66 = @84[4] */
  for (rr=(&w66), ss=w84+4; ss!=w84+5; ss+=1) *rr++ = *ss;
  /* #8141: @66 = (-@66) */
  w66 = (- w66 );
  /* #8142: @66 = @66' */
  /* #8143: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s80, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #8144: @434 = @434' */
  /* #8145: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8146: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8147: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #8148: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #8149: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8150: @66 = @84[4] */
  for (rr=(&w66), ss=w84+4; ss!=w84+5; ss+=1) *rr++ = *ss;
  /* #8151: @66 = (-@66) */
  w66 = (- w66 );
  /* #8152: @66 = @66' */
  /* #8153: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8154: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s80, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #8155: @434 = @434' */
  /* #8156: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8157: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #8158: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #8159: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8160: @66 = @84[3] */
  for (rr=(&w66), ss=w84+3; ss!=w84+4; ss+=1) *rr++ = *ss;
  /* #8161: @66 = (-@66) */
  w66 = (- w66 );
  /* #8162: @66 = @66' */
  /* #8163: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s80, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #8164: @434 = @434' */
  /* #8165: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8166: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8167: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #8168: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #8169: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8170: @66 = @84[3] */
  for (rr=(&w66), ss=w84+3; ss!=w84+4; ss+=1) *rr++ = *ss;
  /* #8171: @66 = (-@66) */
  w66 = (- w66 );
  /* #8172: @66 = @66' */
  /* #8173: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8174: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s80, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #8175: @434 = @434' */
  /* #8176: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8177: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #8178: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #8179: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8180: @66 = @84[2] */
  for (rr=(&w66), ss=w84+2; ss!=w84+3; ss+=1) *rr++ = *ss;
  /* #8181: @66 = (-@66) */
  w66 = (- w66 );
  /* #8182: @66 = @66' */
  /* #8183: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s80, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #8184: @434 = @434' */
  /* #8185: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8186: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8187: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #8188: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #8189: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8190: @66 = @84[2] */
  for (rr=(&w66), ss=w84+2; ss!=w84+3; ss+=1) *rr++ = *ss;
  /* #8191: @66 = (-@66) */
  w66 = (- w66 );
  /* #8192: @66 = @66' */
  /* #8193: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8194: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s80, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #8195: @434 = @434' */
  /* #8196: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8197: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #8198: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #8199: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8200: @66 = @84[1] */
  for (rr=(&w66), ss=w84+1; ss!=w84+2; ss+=1) *rr++ = *ss;
  /* #8201: @66 = (-@66) */
  w66 = (- w66 );
  /* #8202: @66 = @66' */
  /* #8203: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s80, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #8204: @434 = @434' */
  /* #8205: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8206: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8207: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #8208: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #8209: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8210: @66 = @84[1] */
  for (rr=(&w66), ss=w84+1; ss!=w84+2; ss+=1) *rr++ = *ss;
  /* #8211: @66 = (-@66) */
  w66 = (- w66 );
  /* #8212: @66 = @66' */
  /* #8213: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8214: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s80, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #8215: @434 = @434' */
  /* #8216: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8217: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #8218: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #8219: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8220: @66 = @84[0] */
  for (rr=(&w66), ss=w84+0; ss!=w84+1; ss+=1) *rr++ = *ss;
  /* #8221: @66 = (-@66) */
  w66 = (- w66 );
  /* #8222: @66 = @66' */
  /* #8223: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s80, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #8224: @434 = @434' */
  /* #8225: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8226: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8227: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #8228: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #8229: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8230: @66 = @84[0] */
  for (rr=(&w66), ss=w84+0; ss!=w84+1; ss+=1) *rr++ = *ss;
  /* #8231: @66 = (-@66) */
  w66 = (- w66 );
  /* #8232: @66 = @66' */
  /* #8233: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8234: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s80, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #8235: @434 = @434' */
  /* #8236: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8237: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #8238: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #8239: @1 = vec(@1) */
  /* #8240: (@0[:5096:196;126:140] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+126; tt!=rr+140; tt+=1) *tt = *ss++;
  /* #8241: (@0[9:5105:14] = @1) */
  for (rr=w0+9, ss=w1; rr!=w0+5105; rr+=14) *rr = *ss++;
  /* #8242: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #8243: @66 = @86[24] */
  for (rr=(&w66), ss=w86+24; ss!=w86+25; ss+=1) *rr++ = *ss;
  /* #8244: @66 = (@57*@66) */
  w66  = (w57*w66);
  /* #8245: (@1[339] += @66) */
  for (rr=w1+339, ss=(&w66); rr!=w1+340; rr+=1) *rr += *ss++;
  /* #8246: (@1[336:350] += @118) */
  for (rr=w1+336, ss=w118; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #8247: @66 = @86[23] */
  for (rr=(&w66), ss=w86+23; ss!=w86+24; ss+=1) *rr++ = *ss;
  /* #8248: @66 = (@55*@66) */
  w66  = (w55*w66);
  /* #8249: (@1[325] += @66) */
  for (rr=w1+325, ss=(&w66); rr!=w1+326; rr+=1) *rr += *ss++;
  /* #8250: (@1[322:336] += @131) */
  for (rr=w1+322, ss=w131; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #8251: @66 = @86[22] */
  for (rr=(&w66), ss=w86+22; ss!=w86+23; ss+=1) *rr++ = *ss;
  /* #8252: @66 = (@53*@66) */
  w66  = (w53*w66);
  /* #8253: (@1[311] += @66) */
  for (rr=w1+311, ss=(&w66); rr!=w1+312; rr+=1) *rr += *ss++;
  /* #8254: (@1[308:322] += @144) */
  for (rr=w1+308, ss=w144; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #8255: @66 = @86[21] */
  for (rr=(&w66), ss=w86+21; ss!=w86+22; ss+=1) *rr++ = *ss;
  /* #8256: @66 = (@51*@66) */
  w66  = (w51*w66);
  /* #8257: (@1[297] += @66) */
  for (rr=w1+297, ss=(&w66); rr!=w1+298; rr+=1) *rr += *ss++;
  /* #8258: (@1[294:308] += @157) */
  for (rr=w1+294, ss=w157; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #8259: @66 = @86[20] */
  for (rr=(&w66), ss=w86+20; ss!=w86+21; ss+=1) *rr++ = *ss;
  /* #8260: @66 = (@49*@66) */
  w66  = (w49*w66);
  /* #8261: (@1[283] += @66) */
  for (rr=w1+283, ss=(&w66); rr!=w1+284; rr+=1) *rr += *ss++;
  /* #8262: (@1[280:294] += @170) */
  for (rr=w1+280, ss=w170; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #8263: @66 = @86[19] */
  for (rr=(&w66), ss=w86+19; ss!=w86+20; ss+=1) *rr++ = *ss;
  /* #8264: @66 = (@47*@66) */
  w66  = (w47*w66);
  /* #8265: (@1[269] += @66) */
  for (rr=w1+269, ss=(&w66); rr!=w1+270; rr+=1) *rr += *ss++;
  /* #8266: (@1[266:280] += @183) */
  for (rr=w1+266, ss=w183; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #8267: @66 = @86[18] */
  for (rr=(&w66), ss=w86+18; ss!=w86+19; ss+=1) *rr++ = *ss;
  /* #8268: @66 = (@45*@66) */
  w66  = (w45*w66);
  /* #8269: (@1[255] += @66) */
  for (rr=w1+255, ss=(&w66); rr!=w1+256; rr+=1) *rr += *ss++;
  /* #8270: (@1[252:266] += @196) */
  for (rr=w1+252, ss=w196; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #8271: @66 = @86[17] */
  for (rr=(&w66), ss=w86+17; ss!=w86+18; ss+=1) *rr++ = *ss;
  /* #8272: @66 = (@43*@66) */
  w66  = (w43*w66);
  /* #8273: (@1[241] += @66) */
  for (rr=w1+241, ss=(&w66); rr!=w1+242; rr+=1) *rr += *ss++;
  /* #8274: (@1[238:252] += @209) */
  for (rr=w1+238, ss=w209; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #8275: @66 = @86[16] */
  for (rr=(&w66), ss=w86+16; ss!=w86+17; ss+=1) *rr++ = *ss;
  /* #8276: @66 = (@41*@66) */
  w66  = (w41*w66);
  /* #8277: (@1[227] += @66) */
  for (rr=w1+227, ss=(&w66); rr!=w1+228; rr+=1) *rr += *ss++;
  /* #8278: (@1[224:238] += @222) */
  for (rr=w1+224, ss=w222; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #8279: @66 = @86[15] */
  for (rr=(&w66), ss=w86+15; ss!=w86+16; ss+=1) *rr++ = *ss;
  /* #8280: @66 = (@39*@66) */
  w66  = (w39*w66);
  /* #8281: (@1[213] += @66) */
  for (rr=w1+213, ss=(&w66); rr!=w1+214; rr+=1) *rr += *ss++;
  /* #8282: (@1[210:224] += @235) */
  for (rr=w1+210, ss=w235; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #8283: @66 = @86[14] */
  for (rr=(&w66), ss=w86+14; ss!=w86+15; ss+=1) *rr++ = *ss;
  /* #8284: @66 = (@37*@66) */
  w66  = (w37*w66);
  /* #8285: (@1[199] += @66) */
  for (rr=w1+199, ss=(&w66); rr!=w1+200; rr+=1) *rr += *ss++;
  /* #8286: (@1[196:210] += @248) */
  for (rr=w1+196, ss=w248; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #8287: @66 = @86[13] */
  for (rr=(&w66), ss=w86+13; ss!=w86+14; ss+=1) *rr++ = *ss;
  /* #8288: @66 = (@35*@66) */
  w66  = (w35*w66);
  /* #8289: (@1[185] += @66) */
  for (rr=w1+185, ss=(&w66); rr!=w1+186; rr+=1) *rr += *ss++;
  /* #8290: (@1[182:196] += @261) */
  for (rr=w1+182, ss=w261; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #8291: @66 = @86[12] */
  for (rr=(&w66), ss=w86+12; ss!=w86+13; ss+=1) *rr++ = *ss;
  /* #8292: @66 = (@33*@66) */
  w66  = (w33*w66);
  /* #8293: (@1[171] += @66) */
  for (rr=w1+171, ss=(&w66); rr!=w1+172; rr+=1) *rr += *ss++;
  /* #8294: (@1[168:182] += @274) */
  for (rr=w1+168, ss=w274; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #8295: @66 = @86[11] */
  for (rr=(&w66), ss=w86+11; ss!=w86+12; ss+=1) *rr++ = *ss;
  /* #8296: @66 = (@31*@66) */
  w66  = (w31*w66);
  /* #8297: (@1[157] += @66) */
  for (rr=w1+157, ss=(&w66); rr!=w1+158; rr+=1) *rr += *ss++;
  /* #8298: (@1[154:168] += @287) */
  for (rr=w1+154, ss=w287; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #8299: @66 = @86[10] */
  for (rr=(&w66), ss=w86+10; ss!=w86+11; ss+=1) *rr++ = *ss;
  /* #8300: @66 = (@29*@66) */
  w66  = (w29*w66);
  /* #8301: (@1[143] += @66) */
  for (rr=w1+143, ss=(&w66); rr!=w1+144; rr+=1) *rr += *ss++;
  /* #8302: (@1[140:154] += @300) */
  for (rr=w1+140, ss=w300; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #8303: @66 = @86[9] */
  for (rr=(&w66), ss=w86+9; ss!=w86+10; ss+=1) *rr++ = *ss;
  /* #8304: @66 = (@27*@66) */
  w66  = (w27*w66);
  /* #8305: (@1[129] += @66) */
  for (rr=w1+129, ss=(&w66); rr!=w1+130; rr+=1) *rr += *ss++;
  /* #8306: (@1[126:140] += @313) */
  for (rr=w1+126, ss=w313; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #8307: @66 = @86[8] */
  for (rr=(&w66), ss=w86+8; ss!=w86+9; ss+=1) *rr++ = *ss;
  /* #8308: @66 = (@25*@66) */
  w66  = (w25*w66);
  /* #8309: (@1[115] += @66) */
  for (rr=w1+115, ss=(&w66); rr!=w1+116; rr+=1) *rr += *ss++;
  /* #8310: (@1[112:126] += @326) */
  for (rr=w1+112, ss=w326; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #8311: @66 = @86[7] */
  for (rr=(&w66), ss=w86+7; ss!=w86+8; ss+=1) *rr++ = *ss;
  /* #8312: @66 = (@23*@66) */
  w66  = (w23*w66);
  /* #8313: (@1[101] += @66) */
  for (rr=w1+101, ss=(&w66); rr!=w1+102; rr+=1) *rr += *ss++;
  /* #8314: (@1[98:112] += @339) */
  for (rr=w1+98, ss=w339; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #8315: @66 = @86[6] */
  for (rr=(&w66), ss=w86+6; ss!=w86+7; ss+=1) *rr++ = *ss;
  /* #8316: @66 = (@21*@66) */
  w66  = (w21*w66);
  /* #8317: (@1[87] += @66) */
  for (rr=w1+87, ss=(&w66); rr!=w1+88; rr+=1) *rr += *ss++;
  /* #8318: (@1[84:98] += @352) */
  for (rr=w1+84, ss=w352; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #8319: @66 = @86[5] */
  for (rr=(&w66), ss=w86+5; ss!=w86+6; ss+=1) *rr++ = *ss;
  /* #8320: @66 = (@19*@66) */
  w66  = (w19*w66);
  /* #8321: (@1[73] += @66) */
  for (rr=w1+73, ss=(&w66); rr!=w1+74; rr+=1) *rr += *ss++;
  /* #8322: (@1[70:84] += @365) */
  for (rr=w1+70, ss=w365; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #8323: @66 = @86[4] */
  for (rr=(&w66), ss=w86+4; ss!=w86+5; ss+=1) *rr++ = *ss;
  /* #8324: @66 = (@17*@66) */
  w66  = (w17*w66);
  /* #8325: (@1[59] += @66) */
  for (rr=w1+59, ss=(&w66); rr!=w1+60; rr+=1) *rr += *ss++;
  /* #8326: (@1[56:70] += @378) */
  for (rr=w1+56, ss=w378; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #8327: @66 = @86[3] */
  for (rr=(&w66), ss=w86+3; ss!=w86+4; ss+=1) *rr++ = *ss;
  /* #8328: @66 = (@15*@66) */
  w66  = (w15*w66);
  /* #8329: (@1[45] += @66) */
  for (rr=w1+45, ss=(&w66); rr!=w1+46; rr+=1) *rr += *ss++;
  /* #8330: (@1[42:56] += @391) */
  for (rr=w1+42, ss=w391; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #8331: @66 = @86[2] */
  for (rr=(&w66), ss=w86+2; ss!=w86+3; ss+=1) *rr++ = *ss;
  /* #8332: @66 = (@13*@66) */
  w66  = (w13*w66);
  /* #8333: (@1[31] += @66) */
  for (rr=w1+31, ss=(&w66); rr!=w1+32; rr+=1) *rr += *ss++;
  /* #8334: (@1[28:42] += @404) */
  for (rr=w1+28, ss=w404; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #8335: @66 = @86[1] */
  for (rr=(&w66), ss=w86+1; ss!=w86+2; ss+=1) *rr++ = *ss;
  /* #8336: @66 = (@11*@66) */
  w66  = (w11*w66);
  /* #8337: (@1[17] += @66) */
  for (rr=w1+17, ss=(&w66); rr!=w1+18; rr+=1) *rr += *ss++;
  /* #8338: (@1[14:28] += @417) */
  for (rr=w1+14, ss=w417; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #8339: @66 = @86[0] */
  for (rr=(&w66), ss=w86+0; ss!=w86+1; ss+=1) *rr++ = *ss;
  /* #8340: @66 = (@9*@66) */
  w66  = (w9*w66);
  /* #8341: (@1[3] += @66) */
  for (rr=w1+3, ss=(&w66); rr!=w1+4; rr+=1) *rr += *ss++;
  /* #8342: (@1[:14] += @430) */
  for (rr=w1+0, ss=w430; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #8343: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8344: @66 = @86[25] */
  for (rr=(&w66), ss=w86+25; ss!=w86+26; ss+=1) *rr++ = *ss;
  /* #8345: @66 = (-@66) */
  w66 = (- w66 );
  /* #8346: @66 = @66' */
  /* #8347: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s84, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #8348: @434 = @434' */
  /* #8349: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8350: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8351: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #8352: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #8353: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8354: @66 = @86[25] */
  for (rr=(&w66), ss=w86+25; ss!=w86+26; ss+=1) *rr++ = *ss;
  /* #8355: @66 = (-@66) */
  w66 = (- w66 );
  /* #8356: @66 = @66' */
  /* #8357: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8358: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s84, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #8359: @434 = @434' */
  /* #8360: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8361: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #8362: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #8363: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8364: @66 = @86[24] */
  for (rr=(&w66), ss=w86+24; ss!=w86+25; ss+=1) *rr++ = *ss;
  /* #8365: @66 = (-@66) */
  w66 = (- w66 );
  /* #8366: @66 = @66' */
  /* #8367: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s84, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #8368: @434 = @434' */
  /* #8369: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8370: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8371: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #8372: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #8373: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8374: @66 = @86[24] */
  for (rr=(&w66), ss=w86+24; ss!=w86+25; ss+=1) *rr++ = *ss;
  /* #8375: @66 = (-@66) */
  w66 = (- w66 );
  /* #8376: @66 = @66' */
  /* #8377: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8378: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s84, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #8379: @434 = @434' */
  /* #8380: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8381: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #8382: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #8383: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8384: @66 = @86[23] */
  for (rr=(&w66), ss=w86+23; ss!=w86+24; ss+=1) *rr++ = *ss;
  /* #8385: @66 = (-@66) */
  w66 = (- w66 );
  /* #8386: @66 = @66' */
  /* #8387: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s84, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #8388: @434 = @434' */
  /* #8389: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8390: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8391: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #8392: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #8393: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8394: @66 = @86[23] */
  for (rr=(&w66), ss=w86+23; ss!=w86+24; ss+=1) *rr++ = *ss;
  /* #8395: @66 = (-@66) */
  w66 = (- w66 );
  /* #8396: @66 = @66' */
  /* #8397: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8398: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s84, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #8399: @434 = @434' */
  /* #8400: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8401: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #8402: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #8403: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8404: @66 = @86[22] */
  for (rr=(&w66), ss=w86+22; ss!=w86+23; ss+=1) *rr++ = *ss;
  /* #8405: @66 = (-@66) */
  w66 = (- w66 );
  /* #8406: @66 = @66' */
  /* #8407: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s84, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #8408: @434 = @434' */
  /* #8409: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8410: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8411: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #8412: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #8413: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8414: @66 = @86[22] */
  for (rr=(&w66), ss=w86+22; ss!=w86+23; ss+=1) *rr++ = *ss;
  /* #8415: @66 = (-@66) */
  w66 = (- w66 );
  /* #8416: @66 = @66' */
  /* #8417: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8418: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s84, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #8419: @434 = @434' */
  /* #8420: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8421: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #8422: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #8423: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8424: @66 = @86[21] */
  for (rr=(&w66), ss=w86+21; ss!=w86+22; ss+=1) *rr++ = *ss;
  /* #8425: @66 = (-@66) */
  w66 = (- w66 );
  /* #8426: @66 = @66' */
  /* #8427: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s84, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #8428: @434 = @434' */
  /* #8429: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8430: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8431: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #8432: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #8433: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8434: @66 = @86[21] */
  for (rr=(&w66), ss=w86+21; ss!=w86+22; ss+=1) *rr++ = *ss;
  /* #8435: @66 = (-@66) */
  w66 = (- w66 );
  /* #8436: @66 = @66' */
  /* #8437: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8438: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s84, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #8439: @434 = @434' */
  /* #8440: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8441: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #8442: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #8443: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8444: @66 = @86[20] */
  for (rr=(&w66), ss=w86+20; ss!=w86+21; ss+=1) *rr++ = *ss;
  /* #8445: @66 = (-@66) */
  w66 = (- w66 );
  /* #8446: @66 = @66' */
  /* #8447: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s84, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #8448: @434 = @434' */
  /* #8449: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8450: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8451: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #8452: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #8453: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8454: @66 = @86[20] */
  for (rr=(&w66), ss=w86+20; ss!=w86+21; ss+=1) *rr++ = *ss;
  /* #8455: @66 = (-@66) */
  w66 = (- w66 );
  /* #8456: @66 = @66' */
  /* #8457: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8458: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s84, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #8459: @434 = @434' */
  /* #8460: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8461: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #8462: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #8463: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8464: @66 = @86[19] */
  for (rr=(&w66), ss=w86+19; ss!=w86+20; ss+=1) *rr++ = *ss;
  /* #8465: @66 = (-@66) */
  w66 = (- w66 );
  /* #8466: @66 = @66' */
  /* #8467: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s84, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #8468: @434 = @434' */
  /* #8469: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8470: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8471: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #8472: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #8473: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8474: @66 = @86[19] */
  for (rr=(&w66), ss=w86+19; ss!=w86+20; ss+=1) *rr++ = *ss;
  /* #8475: @66 = (-@66) */
  w66 = (- w66 );
  /* #8476: @66 = @66' */
  /* #8477: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8478: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s84, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #8479: @434 = @434' */
  /* #8480: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8481: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #8482: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #8483: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8484: @66 = @86[18] */
  for (rr=(&w66), ss=w86+18; ss!=w86+19; ss+=1) *rr++ = *ss;
  /* #8485: @66 = (-@66) */
  w66 = (- w66 );
  /* #8486: @66 = @66' */
  /* #8487: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s84, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #8488: @434 = @434' */
  /* #8489: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8490: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8491: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #8492: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #8493: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8494: @66 = @86[18] */
  for (rr=(&w66), ss=w86+18; ss!=w86+19; ss+=1) *rr++ = *ss;
  /* #8495: @66 = (-@66) */
  w66 = (- w66 );
  /* #8496: @66 = @66' */
  /* #8497: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8498: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s84, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #8499: @434 = @434' */
  /* #8500: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8501: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #8502: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #8503: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8504: @66 = @86[17] */
  for (rr=(&w66), ss=w86+17; ss!=w86+18; ss+=1) *rr++ = *ss;
  /* #8505: @66 = (-@66) */
  w66 = (- w66 );
  /* #8506: @66 = @66' */
  /* #8507: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s84, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #8508: @434 = @434' */
  /* #8509: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8510: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8511: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #8512: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #8513: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8514: @66 = @86[17] */
  for (rr=(&w66), ss=w86+17; ss!=w86+18; ss+=1) *rr++ = *ss;
  /* #8515: @66 = (-@66) */
  w66 = (- w66 );
  /* #8516: @66 = @66' */
  /* #8517: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8518: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s84, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #8519: @434 = @434' */
  /* #8520: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8521: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #8522: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #8523: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8524: @66 = @86[16] */
  for (rr=(&w66), ss=w86+16; ss!=w86+17; ss+=1) *rr++ = *ss;
  /* #8525: @66 = (-@66) */
  w66 = (- w66 );
  /* #8526: @66 = @66' */
  /* #8527: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s84, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #8528: @434 = @434' */
  /* #8529: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8530: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8531: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #8532: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #8533: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8534: @66 = @86[16] */
  for (rr=(&w66), ss=w86+16; ss!=w86+17; ss+=1) *rr++ = *ss;
  /* #8535: @66 = (-@66) */
  w66 = (- w66 );
  /* #8536: @66 = @66' */
  /* #8537: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8538: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s84, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #8539: @434 = @434' */
  /* #8540: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8541: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #8542: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #8543: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8544: @66 = @86[15] */
  for (rr=(&w66), ss=w86+15; ss!=w86+16; ss+=1) *rr++ = *ss;
  /* #8545: @66 = (-@66) */
  w66 = (- w66 );
  /* #8546: @66 = @66' */
  /* #8547: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s84, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #8548: @434 = @434' */
  /* #8549: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8550: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8551: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #8552: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #8553: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8554: @66 = @86[15] */
  for (rr=(&w66), ss=w86+15; ss!=w86+16; ss+=1) *rr++ = *ss;
  /* #8555: @66 = (-@66) */
  w66 = (- w66 );
  /* #8556: @66 = @66' */
  /* #8557: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8558: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s84, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #8559: @434 = @434' */
  /* #8560: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8561: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #8562: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #8563: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8564: @66 = @86[14] */
  for (rr=(&w66), ss=w86+14; ss!=w86+15; ss+=1) *rr++ = *ss;
  /* #8565: @66 = (-@66) */
  w66 = (- w66 );
  /* #8566: @66 = @66' */
  /* #8567: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s84, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #8568: @434 = @434' */
  /* #8569: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8570: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8571: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #8572: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #8573: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8574: @66 = @86[14] */
  for (rr=(&w66), ss=w86+14; ss!=w86+15; ss+=1) *rr++ = *ss;
  /* #8575: @66 = (-@66) */
  w66 = (- w66 );
  /* #8576: @66 = @66' */
  /* #8577: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8578: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s84, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #8579: @434 = @434' */
  /* #8580: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8581: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #8582: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #8583: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8584: @66 = @86[13] */
  for (rr=(&w66), ss=w86+13; ss!=w86+14; ss+=1) *rr++ = *ss;
  /* #8585: @66 = (-@66) */
  w66 = (- w66 );
  /* #8586: @66 = @66' */
  /* #8587: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s84, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #8588: @434 = @434' */
  /* #8589: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8590: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8591: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #8592: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #8593: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8594: @66 = @86[13] */
  for (rr=(&w66), ss=w86+13; ss!=w86+14; ss+=1) *rr++ = *ss;
  /* #8595: @66 = (-@66) */
  w66 = (- w66 );
  /* #8596: @66 = @66' */
  /* #8597: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8598: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s84, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #8599: @434 = @434' */
  /* #8600: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8601: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #8602: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #8603: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8604: @66 = @86[12] */
  for (rr=(&w66), ss=w86+12; ss!=w86+13; ss+=1) *rr++ = *ss;
  /* #8605: @66 = (-@66) */
  w66 = (- w66 );
  /* #8606: @66 = @66' */
  /* #8607: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s84, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #8608: @434 = @434' */
  /* #8609: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8610: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8611: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #8612: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #8613: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8614: @66 = @86[12] */
  for (rr=(&w66), ss=w86+12; ss!=w86+13; ss+=1) *rr++ = *ss;
  /* #8615: @66 = (-@66) */
  w66 = (- w66 );
  /* #8616: @66 = @66' */
  /* #8617: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8618: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s84, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #8619: @434 = @434' */
  /* #8620: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8621: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #8622: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #8623: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8624: @66 = @86[11] */
  for (rr=(&w66), ss=w86+11; ss!=w86+12; ss+=1) *rr++ = *ss;
  /* #8625: @66 = (-@66) */
  w66 = (- w66 );
  /* #8626: @66 = @66' */
  /* #8627: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s84, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #8628: @434 = @434' */
  /* #8629: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8630: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8631: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #8632: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #8633: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8634: @66 = @86[11] */
  for (rr=(&w66), ss=w86+11; ss!=w86+12; ss+=1) *rr++ = *ss;
  /* #8635: @66 = (-@66) */
  w66 = (- w66 );
  /* #8636: @66 = @66' */
  /* #8637: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8638: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s84, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #8639: @434 = @434' */
  /* #8640: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8641: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #8642: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #8643: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8644: @66 = @86[10] */
  for (rr=(&w66), ss=w86+10; ss!=w86+11; ss+=1) *rr++ = *ss;
  /* #8645: @66 = (-@66) */
  w66 = (- w66 );
  /* #8646: @66 = @66' */
  /* #8647: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s84, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #8648: @434 = @434' */
  /* #8649: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8650: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8651: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #8652: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #8653: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8654: @66 = @86[10] */
  for (rr=(&w66), ss=w86+10; ss!=w86+11; ss+=1) *rr++ = *ss;
  /* #8655: @66 = (-@66) */
  w66 = (- w66 );
  /* #8656: @66 = @66' */
  /* #8657: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8658: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s84, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #8659: @434 = @434' */
  /* #8660: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8661: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #8662: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #8663: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8664: @66 = @86[9] */
  for (rr=(&w66), ss=w86+9; ss!=w86+10; ss+=1) *rr++ = *ss;
  /* #8665: @66 = (-@66) */
  w66 = (- w66 );
  /* #8666: @66 = @66' */
  /* #8667: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s84, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #8668: @434 = @434' */
  /* #8669: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8670: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8671: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #8672: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #8673: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8674: @66 = @86[9] */
  for (rr=(&w66), ss=w86+9; ss!=w86+10; ss+=1) *rr++ = *ss;
  /* #8675: @66 = (-@66) */
  w66 = (- w66 );
  /* #8676: @66 = @66' */
  /* #8677: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8678: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s84, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #8679: @434 = @434' */
  /* #8680: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8681: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #8682: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #8683: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8684: @66 = @86[8] */
  for (rr=(&w66), ss=w86+8; ss!=w86+9; ss+=1) *rr++ = *ss;
  /* #8685: @66 = (-@66) */
  w66 = (- w66 );
  /* #8686: @66 = @66' */
  /* #8687: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s84, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #8688: @434 = @434' */
  /* #8689: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8690: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8691: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #8692: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #8693: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8694: @66 = @86[8] */
  for (rr=(&w66), ss=w86+8; ss!=w86+9; ss+=1) *rr++ = *ss;
  /* #8695: @66 = (-@66) */
  w66 = (- w66 );
  /* #8696: @66 = @66' */
  /* #8697: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8698: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s84, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #8699: @434 = @434' */
  /* #8700: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8701: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #8702: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #8703: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8704: @66 = @86[7] */
  for (rr=(&w66), ss=w86+7; ss!=w86+8; ss+=1) *rr++ = *ss;
  /* #8705: @66 = (-@66) */
  w66 = (- w66 );
  /* #8706: @66 = @66' */
  /* #8707: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s84, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #8708: @434 = @434' */
  /* #8709: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8710: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8711: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #8712: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #8713: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8714: @66 = @86[7] */
  for (rr=(&w66), ss=w86+7; ss!=w86+8; ss+=1) *rr++ = *ss;
  /* #8715: @66 = (-@66) */
  w66 = (- w66 );
  /* #8716: @66 = @66' */
  /* #8717: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8718: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s84, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #8719: @434 = @434' */
  /* #8720: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8721: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #8722: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #8723: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8724: @66 = @86[6] */
  for (rr=(&w66), ss=w86+6; ss!=w86+7; ss+=1) *rr++ = *ss;
  /* #8725: @66 = (-@66) */
  w66 = (- w66 );
  /* #8726: @66 = @66' */
  /* #8727: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s84, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #8728: @434 = @434' */
  /* #8729: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8730: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8731: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #8732: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #8733: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8734: @66 = @86[6] */
  for (rr=(&w66), ss=w86+6; ss!=w86+7; ss+=1) *rr++ = *ss;
  /* #8735: @66 = (-@66) */
  w66 = (- w66 );
  /* #8736: @66 = @66' */
  /* #8737: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8738: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s84, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #8739: @434 = @434' */
  /* #8740: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8741: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #8742: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #8743: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8744: @66 = @86[5] */
  for (rr=(&w66), ss=w86+5; ss!=w86+6; ss+=1) *rr++ = *ss;
  /* #8745: @66 = (-@66) */
  w66 = (- w66 );
  /* #8746: @66 = @66' */
  /* #8747: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s84, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #8748: @434 = @434' */
  /* #8749: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8750: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8751: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #8752: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #8753: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8754: @66 = @86[5] */
  for (rr=(&w66), ss=w86+5; ss!=w86+6; ss+=1) *rr++ = *ss;
  /* #8755: @66 = (-@66) */
  w66 = (- w66 );
  /* #8756: @66 = @66' */
  /* #8757: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8758: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s84, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #8759: @434 = @434' */
  /* #8760: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8761: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #8762: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #8763: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8764: @66 = @86[4] */
  for (rr=(&w66), ss=w86+4; ss!=w86+5; ss+=1) *rr++ = *ss;
  /* #8765: @66 = (-@66) */
  w66 = (- w66 );
  /* #8766: @66 = @66' */
  /* #8767: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s84, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #8768: @434 = @434' */
  /* #8769: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8770: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8771: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #8772: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #8773: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8774: @66 = @86[4] */
  for (rr=(&w66), ss=w86+4; ss!=w86+5; ss+=1) *rr++ = *ss;
  /* #8775: @66 = (-@66) */
  w66 = (- w66 );
  /* #8776: @66 = @66' */
  /* #8777: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8778: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s84, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #8779: @434 = @434' */
  /* #8780: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8781: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #8782: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #8783: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8784: @66 = @86[3] */
  for (rr=(&w66), ss=w86+3; ss!=w86+4; ss+=1) *rr++ = *ss;
  /* #8785: @66 = (-@66) */
  w66 = (- w66 );
  /* #8786: @66 = @66' */
  /* #8787: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s84, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #8788: @434 = @434' */
  /* #8789: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8790: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8791: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #8792: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #8793: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8794: @66 = @86[3] */
  for (rr=(&w66), ss=w86+3; ss!=w86+4; ss+=1) *rr++ = *ss;
  /* #8795: @66 = (-@66) */
  w66 = (- w66 );
  /* #8796: @66 = @66' */
  /* #8797: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8798: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s84, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #8799: @434 = @434' */
  /* #8800: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8801: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #8802: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #8803: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8804: @66 = @86[2] */
  for (rr=(&w66), ss=w86+2; ss!=w86+3; ss+=1) *rr++ = *ss;
  /* #8805: @66 = (-@66) */
  w66 = (- w66 );
  /* #8806: @66 = @66' */
  /* #8807: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s84, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #8808: @434 = @434' */
  /* #8809: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8810: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8811: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #8812: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #8813: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8814: @66 = @86[2] */
  for (rr=(&w66), ss=w86+2; ss!=w86+3; ss+=1) *rr++ = *ss;
  /* #8815: @66 = (-@66) */
  w66 = (- w66 );
  /* #8816: @66 = @66' */
  /* #8817: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8818: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s84, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #8819: @434 = @434' */
  /* #8820: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8821: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #8822: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #8823: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8824: @66 = @86[1] */
  for (rr=(&w66), ss=w86+1; ss!=w86+2; ss+=1) *rr++ = *ss;
  /* #8825: @66 = (-@66) */
  w66 = (- w66 );
  /* #8826: @66 = @66' */
  /* #8827: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s84, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #8828: @434 = @434' */
  /* #8829: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8830: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8831: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #8832: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #8833: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8834: @66 = @86[1] */
  for (rr=(&w66), ss=w86+1; ss!=w86+2; ss+=1) *rr++ = *ss;
  /* #8835: @66 = (-@66) */
  w66 = (- w66 );
  /* #8836: @66 = @66' */
  /* #8837: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8838: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s84, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #8839: @434 = @434' */
  /* #8840: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8841: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #8842: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #8843: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8844: @66 = @86[0] */
  for (rr=(&w66), ss=w86+0; ss!=w86+1; ss+=1) *rr++ = *ss;
  /* #8845: @66 = (-@66) */
  w66 = (- w66 );
  /* #8846: @66 = @66' */
  /* #8847: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s84, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #8848: @434 = @434' */
  /* #8849: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8850: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8851: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #8852: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #8853: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8854: @66 = @86[0] */
  for (rr=(&w66), ss=w86+0; ss!=w86+1; ss+=1) *rr++ = *ss;
  /* #8855: @66 = (-@66) */
  w66 = (- w66 );
  /* #8856: @66 = @66' */
  /* #8857: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8858: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s84, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #8859: @434 = @434' */
  /* #8860: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8861: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #8862: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #8863: @1 = vec(@1) */
  /* #8864: (@0[:5096:196;140:154] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+140; tt!=rr+154; tt+=1) *tt = *ss++;
  /* #8865: (@0[10:5106:14] = @1) */
  for (rr=w0+10, ss=w1; rr!=w0+5106; rr+=14) *rr = *ss++;
  /* #8866: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #8867: @66 = @88[24] */
  for (rr=(&w66), ss=w88+24; ss!=w88+25; ss+=1) *rr++ = *ss;
  /* #8868: @66 = (@57*@66) */
  w66  = (w57*w66);
  /* #8869: (@1[340] += @66) */
  for (rr=w1+340, ss=(&w66); rr!=w1+341; rr+=1) *rr += *ss++;
  /* #8870: (@1[336:350] += @119) */
  for (rr=w1+336, ss=w119; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #8871: @66 = @88[23] */
  for (rr=(&w66), ss=w88+23; ss!=w88+24; ss+=1) *rr++ = *ss;
  /* #8872: @66 = (@55*@66) */
  w66  = (w55*w66);
  /* #8873: (@1[326] += @66) */
  for (rr=w1+326, ss=(&w66); rr!=w1+327; rr+=1) *rr += *ss++;
  /* #8874: (@1[322:336] += @132) */
  for (rr=w1+322, ss=w132; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #8875: @66 = @88[22] */
  for (rr=(&w66), ss=w88+22; ss!=w88+23; ss+=1) *rr++ = *ss;
  /* #8876: @66 = (@53*@66) */
  w66  = (w53*w66);
  /* #8877: (@1[312] += @66) */
  for (rr=w1+312, ss=(&w66); rr!=w1+313; rr+=1) *rr += *ss++;
  /* #8878: (@1[308:322] += @145) */
  for (rr=w1+308, ss=w145; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #8879: @66 = @88[21] */
  for (rr=(&w66), ss=w88+21; ss!=w88+22; ss+=1) *rr++ = *ss;
  /* #8880: @66 = (@51*@66) */
  w66  = (w51*w66);
  /* #8881: (@1[298] += @66) */
  for (rr=w1+298, ss=(&w66); rr!=w1+299; rr+=1) *rr += *ss++;
  /* #8882: (@1[294:308] += @158) */
  for (rr=w1+294, ss=w158; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #8883: @66 = @88[20] */
  for (rr=(&w66), ss=w88+20; ss!=w88+21; ss+=1) *rr++ = *ss;
  /* #8884: @66 = (@49*@66) */
  w66  = (w49*w66);
  /* #8885: (@1[284] += @66) */
  for (rr=w1+284, ss=(&w66); rr!=w1+285; rr+=1) *rr += *ss++;
  /* #8886: (@1[280:294] += @171) */
  for (rr=w1+280, ss=w171; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #8887: @66 = @88[19] */
  for (rr=(&w66), ss=w88+19; ss!=w88+20; ss+=1) *rr++ = *ss;
  /* #8888: @66 = (@47*@66) */
  w66  = (w47*w66);
  /* #8889: (@1[270] += @66) */
  for (rr=w1+270, ss=(&w66); rr!=w1+271; rr+=1) *rr += *ss++;
  /* #8890: (@1[266:280] += @184) */
  for (rr=w1+266, ss=w184; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #8891: @66 = @88[18] */
  for (rr=(&w66), ss=w88+18; ss!=w88+19; ss+=1) *rr++ = *ss;
  /* #8892: @66 = (@45*@66) */
  w66  = (w45*w66);
  /* #8893: (@1[256] += @66) */
  for (rr=w1+256, ss=(&w66); rr!=w1+257; rr+=1) *rr += *ss++;
  /* #8894: (@1[252:266] += @197) */
  for (rr=w1+252, ss=w197; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #8895: @66 = @88[17] */
  for (rr=(&w66), ss=w88+17; ss!=w88+18; ss+=1) *rr++ = *ss;
  /* #8896: @66 = (@43*@66) */
  w66  = (w43*w66);
  /* #8897: (@1[242] += @66) */
  for (rr=w1+242, ss=(&w66); rr!=w1+243; rr+=1) *rr += *ss++;
  /* #8898: (@1[238:252] += @210) */
  for (rr=w1+238, ss=w210; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #8899: @66 = @88[16] */
  for (rr=(&w66), ss=w88+16; ss!=w88+17; ss+=1) *rr++ = *ss;
  /* #8900: @66 = (@41*@66) */
  w66  = (w41*w66);
  /* #8901: (@1[228] += @66) */
  for (rr=w1+228, ss=(&w66); rr!=w1+229; rr+=1) *rr += *ss++;
  /* #8902: (@1[224:238] += @223) */
  for (rr=w1+224, ss=w223; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #8903: @66 = @88[15] */
  for (rr=(&w66), ss=w88+15; ss!=w88+16; ss+=1) *rr++ = *ss;
  /* #8904: @66 = (@39*@66) */
  w66  = (w39*w66);
  /* #8905: (@1[214] += @66) */
  for (rr=w1+214, ss=(&w66); rr!=w1+215; rr+=1) *rr += *ss++;
  /* #8906: (@1[210:224] += @236) */
  for (rr=w1+210, ss=w236; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #8907: @66 = @88[14] */
  for (rr=(&w66), ss=w88+14; ss!=w88+15; ss+=1) *rr++ = *ss;
  /* #8908: @66 = (@37*@66) */
  w66  = (w37*w66);
  /* #8909: (@1[200] += @66) */
  for (rr=w1+200, ss=(&w66); rr!=w1+201; rr+=1) *rr += *ss++;
  /* #8910: (@1[196:210] += @249) */
  for (rr=w1+196, ss=w249; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #8911: @66 = @88[13] */
  for (rr=(&w66), ss=w88+13; ss!=w88+14; ss+=1) *rr++ = *ss;
  /* #8912: @66 = (@35*@66) */
  w66  = (w35*w66);
  /* #8913: (@1[186] += @66) */
  for (rr=w1+186, ss=(&w66); rr!=w1+187; rr+=1) *rr += *ss++;
  /* #8914: (@1[182:196] += @262) */
  for (rr=w1+182, ss=w262; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #8915: @66 = @88[12] */
  for (rr=(&w66), ss=w88+12; ss!=w88+13; ss+=1) *rr++ = *ss;
  /* #8916: @66 = (@33*@66) */
  w66  = (w33*w66);
  /* #8917: (@1[172] += @66) */
  for (rr=w1+172, ss=(&w66); rr!=w1+173; rr+=1) *rr += *ss++;
  /* #8918: (@1[168:182] += @275) */
  for (rr=w1+168, ss=w275; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #8919: @66 = @88[11] */
  for (rr=(&w66), ss=w88+11; ss!=w88+12; ss+=1) *rr++ = *ss;
  /* #8920: @66 = (@31*@66) */
  w66  = (w31*w66);
  /* #8921: (@1[158] += @66) */
  for (rr=w1+158, ss=(&w66); rr!=w1+159; rr+=1) *rr += *ss++;
  /* #8922: (@1[154:168] += @288) */
  for (rr=w1+154, ss=w288; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #8923: @66 = @88[10] */
  for (rr=(&w66), ss=w88+10; ss!=w88+11; ss+=1) *rr++ = *ss;
  /* #8924: @66 = (@29*@66) */
  w66  = (w29*w66);
  /* #8925: (@1[144] += @66) */
  for (rr=w1+144, ss=(&w66); rr!=w1+145; rr+=1) *rr += *ss++;
  /* #8926: (@1[140:154] += @301) */
  for (rr=w1+140, ss=w301; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #8927: @66 = @88[9] */
  for (rr=(&w66), ss=w88+9; ss!=w88+10; ss+=1) *rr++ = *ss;
  /* #8928: @66 = (@27*@66) */
  w66  = (w27*w66);
  /* #8929: (@1[130] += @66) */
  for (rr=w1+130, ss=(&w66); rr!=w1+131; rr+=1) *rr += *ss++;
  /* #8930: (@1[126:140] += @314) */
  for (rr=w1+126, ss=w314; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #8931: @66 = @88[8] */
  for (rr=(&w66), ss=w88+8; ss!=w88+9; ss+=1) *rr++ = *ss;
  /* #8932: @66 = (@25*@66) */
  w66  = (w25*w66);
  /* #8933: (@1[116] += @66) */
  for (rr=w1+116, ss=(&w66); rr!=w1+117; rr+=1) *rr += *ss++;
  /* #8934: (@1[112:126] += @327) */
  for (rr=w1+112, ss=w327; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #8935: @66 = @88[7] */
  for (rr=(&w66), ss=w88+7; ss!=w88+8; ss+=1) *rr++ = *ss;
  /* #8936: @66 = (@23*@66) */
  w66  = (w23*w66);
  /* #8937: (@1[102] += @66) */
  for (rr=w1+102, ss=(&w66); rr!=w1+103; rr+=1) *rr += *ss++;
  /* #8938: (@1[98:112] += @340) */
  for (rr=w1+98, ss=w340; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #8939: @66 = @88[6] */
  for (rr=(&w66), ss=w88+6; ss!=w88+7; ss+=1) *rr++ = *ss;
  /* #8940: @66 = (@21*@66) */
  w66  = (w21*w66);
  /* #8941: (@1[88] += @66) */
  for (rr=w1+88, ss=(&w66); rr!=w1+89; rr+=1) *rr += *ss++;
  /* #8942: (@1[84:98] += @353) */
  for (rr=w1+84, ss=w353; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #8943: @66 = @88[5] */
  for (rr=(&w66), ss=w88+5; ss!=w88+6; ss+=1) *rr++ = *ss;
  /* #8944: @66 = (@19*@66) */
  w66  = (w19*w66);
  /* #8945: (@1[74] += @66) */
  for (rr=w1+74, ss=(&w66); rr!=w1+75; rr+=1) *rr += *ss++;
  /* #8946: (@1[70:84] += @366) */
  for (rr=w1+70, ss=w366; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #8947: @66 = @88[4] */
  for (rr=(&w66), ss=w88+4; ss!=w88+5; ss+=1) *rr++ = *ss;
  /* #8948: @66 = (@17*@66) */
  w66  = (w17*w66);
  /* #8949: (@1[60] += @66) */
  for (rr=w1+60, ss=(&w66); rr!=w1+61; rr+=1) *rr += *ss++;
  /* #8950: (@1[56:70] += @379) */
  for (rr=w1+56, ss=w379; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #8951: @66 = @88[3] */
  for (rr=(&w66), ss=w88+3; ss!=w88+4; ss+=1) *rr++ = *ss;
  /* #8952: @66 = (@15*@66) */
  w66  = (w15*w66);
  /* #8953: (@1[46] += @66) */
  for (rr=w1+46, ss=(&w66); rr!=w1+47; rr+=1) *rr += *ss++;
  /* #8954: (@1[42:56] += @392) */
  for (rr=w1+42, ss=w392; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #8955: @66 = @88[2] */
  for (rr=(&w66), ss=w88+2; ss!=w88+3; ss+=1) *rr++ = *ss;
  /* #8956: @66 = (@13*@66) */
  w66  = (w13*w66);
  /* #8957: (@1[32] += @66) */
  for (rr=w1+32, ss=(&w66); rr!=w1+33; rr+=1) *rr += *ss++;
  /* #8958: (@1[28:42] += @405) */
  for (rr=w1+28, ss=w405; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #8959: @66 = @88[1] */
  for (rr=(&w66), ss=w88+1; ss!=w88+2; ss+=1) *rr++ = *ss;
  /* #8960: @66 = (@11*@66) */
  w66  = (w11*w66);
  /* #8961: (@1[18] += @66) */
  for (rr=w1+18, ss=(&w66); rr!=w1+19; rr+=1) *rr += *ss++;
  /* #8962: (@1[14:28] += @418) */
  for (rr=w1+14, ss=w418; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #8963: @66 = @88[0] */
  for (rr=(&w66), ss=w88+0; ss!=w88+1; ss+=1) *rr++ = *ss;
  /* #8964: @66 = (@9*@66) */
  w66  = (w9*w66);
  /* #8965: (@1[4] += @66) */
  for (rr=w1+4, ss=(&w66); rr!=w1+5; rr+=1) *rr += *ss++;
  /* #8966: (@1[:14] += @431) */
  for (rr=w1+0, ss=w431; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #8967: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8968: @66 = @88[25] */
  for (rr=(&w66), ss=w88+25; ss!=w88+26; ss+=1) *rr++ = *ss;
  /* #8969: @66 = (-@66) */
  w66 = (- w66 );
  /* #8970: @66 = @66' */
  /* #8971: @434 = mac(@66,@435,@434) */
  casadi_mtimes((&w66), casadi_s88, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #8972: @434 = @434' */
  /* #8973: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8974: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8975: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #8976: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #8977: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8978: @66 = @88[25] */
  for (rr=(&w66), ss=w88+25; ss!=w88+26; ss+=1) *rr++ = *ss;
  /* #8979: @66 = (-@66) */
  w66 = (- w66 );
  /* #8980: @66 = @66' */
  /* #8981: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #8982: @434 = mac(@66,@437,@434) */
  casadi_mtimes((&w66), casadi_s88, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #8983: @434 = @434' */
  /* #8984: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8985: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #8986: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #8987: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8988: @66 = @88[24] */
  for (rr=(&w66), ss=w88+24; ss!=w88+25; ss+=1) *rr++ = *ss;
  /* #8989: @66 = (-@66) */
  w66 = (- w66 );
  /* #8990: @66 = @66' */
  /* #8991: @434 = mac(@66,@438,@434) */
  casadi_mtimes((&w66), casadi_s88, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #8992: @434 = @434' */
  /* #8993: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #8994: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #8995: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #8996: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #8997: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #8998: @66 = @88[24] */
  for (rr=(&w66), ss=w88+24; ss!=w88+25; ss+=1) *rr++ = *ss;
  /* #8999: @66 = (-@66) */
  w66 = (- w66 );
  /* #9000: @66 = @66' */
  /* #9001: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9002: @434 = mac(@66,@439,@434) */
  casadi_mtimes((&w66), casadi_s88, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #9003: @434 = @434' */
  /* #9004: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9005: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #9006: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #9007: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9008: @66 = @88[23] */
  for (rr=(&w66), ss=w88+23; ss!=w88+24; ss+=1) *rr++ = *ss;
  /* #9009: @66 = (-@66) */
  w66 = (- w66 );
  /* #9010: @66 = @66' */
  /* #9011: @434 = mac(@66,@440,@434) */
  casadi_mtimes((&w66), casadi_s88, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #9012: @434 = @434' */
  /* #9013: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9014: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9015: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #9016: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #9017: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9018: @66 = @88[23] */
  for (rr=(&w66), ss=w88+23; ss!=w88+24; ss+=1) *rr++ = *ss;
  /* #9019: @66 = (-@66) */
  w66 = (- w66 );
  /* #9020: @66 = @66' */
  /* #9021: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9022: @434 = mac(@66,@441,@434) */
  casadi_mtimes((&w66), casadi_s88, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #9023: @434 = @434' */
  /* #9024: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9025: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #9026: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #9027: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9028: @66 = @88[22] */
  for (rr=(&w66), ss=w88+22; ss!=w88+23; ss+=1) *rr++ = *ss;
  /* #9029: @66 = (-@66) */
  w66 = (- w66 );
  /* #9030: @66 = @66' */
  /* #9031: @434 = mac(@66,@442,@434) */
  casadi_mtimes((&w66), casadi_s88, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #9032: @434 = @434' */
  /* #9033: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9034: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9035: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #9036: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #9037: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9038: @66 = @88[22] */
  for (rr=(&w66), ss=w88+22; ss!=w88+23; ss+=1) *rr++ = *ss;
  /* #9039: @66 = (-@66) */
  w66 = (- w66 );
  /* #9040: @66 = @66' */
  /* #9041: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9042: @434 = mac(@66,@443,@434) */
  casadi_mtimes((&w66), casadi_s88, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #9043: @434 = @434' */
  /* #9044: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9045: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #9046: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #9047: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9048: @66 = @88[21] */
  for (rr=(&w66), ss=w88+21; ss!=w88+22; ss+=1) *rr++ = *ss;
  /* #9049: @66 = (-@66) */
  w66 = (- w66 );
  /* #9050: @66 = @66' */
  /* #9051: @434 = mac(@66,@444,@434) */
  casadi_mtimes((&w66), casadi_s88, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #9052: @434 = @434' */
  /* #9053: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9054: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9055: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #9056: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #9057: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9058: @66 = @88[21] */
  for (rr=(&w66), ss=w88+21; ss!=w88+22; ss+=1) *rr++ = *ss;
  /* #9059: @66 = (-@66) */
  w66 = (- w66 );
  /* #9060: @66 = @66' */
  /* #9061: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9062: @434 = mac(@66,@445,@434) */
  casadi_mtimes((&w66), casadi_s88, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #9063: @434 = @434' */
  /* #9064: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9065: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #9066: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #9067: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9068: @66 = @88[20] */
  for (rr=(&w66), ss=w88+20; ss!=w88+21; ss+=1) *rr++ = *ss;
  /* #9069: @66 = (-@66) */
  w66 = (- w66 );
  /* #9070: @66 = @66' */
  /* #9071: @434 = mac(@66,@446,@434) */
  casadi_mtimes((&w66), casadi_s88, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #9072: @434 = @434' */
  /* #9073: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9074: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9075: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #9076: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #9077: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9078: @66 = @88[20] */
  for (rr=(&w66), ss=w88+20; ss!=w88+21; ss+=1) *rr++ = *ss;
  /* #9079: @66 = (-@66) */
  w66 = (- w66 );
  /* #9080: @66 = @66' */
  /* #9081: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9082: @434 = mac(@66,@447,@434) */
  casadi_mtimes((&w66), casadi_s88, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #9083: @434 = @434' */
  /* #9084: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9085: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #9086: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #9087: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9088: @66 = @88[19] */
  for (rr=(&w66), ss=w88+19; ss!=w88+20; ss+=1) *rr++ = *ss;
  /* #9089: @66 = (-@66) */
  w66 = (- w66 );
  /* #9090: @66 = @66' */
  /* #9091: @434 = mac(@66,@448,@434) */
  casadi_mtimes((&w66), casadi_s88, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #9092: @434 = @434' */
  /* #9093: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9094: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9095: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #9096: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #9097: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9098: @66 = @88[19] */
  for (rr=(&w66), ss=w88+19; ss!=w88+20; ss+=1) *rr++ = *ss;
  /* #9099: @66 = (-@66) */
  w66 = (- w66 );
  /* #9100: @66 = @66' */
  /* #9101: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9102: @434 = mac(@66,@449,@434) */
  casadi_mtimes((&w66), casadi_s88, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #9103: @434 = @434' */
  /* #9104: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9105: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #9106: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #9107: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9108: @66 = @88[18] */
  for (rr=(&w66), ss=w88+18; ss!=w88+19; ss+=1) *rr++ = *ss;
  /* #9109: @66 = (-@66) */
  w66 = (- w66 );
  /* #9110: @66 = @66' */
  /* #9111: @434 = mac(@66,@450,@434) */
  casadi_mtimes((&w66), casadi_s88, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #9112: @434 = @434' */
  /* #9113: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9114: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9115: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #9116: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #9117: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9118: @66 = @88[18] */
  for (rr=(&w66), ss=w88+18; ss!=w88+19; ss+=1) *rr++ = *ss;
  /* #9119: @66 = (-@66) */
  w66 = (- w66 );
  /* #9120: @66 = @66' */
  /* #9121: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9122: @434 = mac(@66,@451,@434) */
  casadi_mtimes((&w66), casadi_s88, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #9123: @434 = @434' */
  /* #9124: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9125: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #9126: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #9127: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9128: @66 = @88[17] */
  for (rr=(&w66), ss=w88+17; ss!=w88+18; ss+=1) *rr++ = *ss;
  /* #9129: @66 = (-@66) */
  w66 = (- w66 );
  /* #9130: @66 = @66' */
  /* #9131: @434 = mac(@66,@452,@434) */
  casadi_mtimes((&w66), casadi_s88, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #9132: @434 = @434' */
  /* #9133: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9134: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9135: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #9136: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #9137: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9138: @66 = @88[17] */
  for (rr=(&w66), ss=w88+17; ss!=w88+18; ss+=1) *rr++ = *ss;
  /* #9139: @66 = (-@66) */
  w66 = (- w66 );
  /* #9140: @66 = @66' */
  /* #9141: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9142: @434 = mac(@66,@453,@434) */
  casadi_mtimes((&w66), casadi_s88, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #9143: @434 = @434' */
  /* #9144: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9145: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #9146: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #9147: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9148: @66 = @88[16] */
  for (rr=(&w66), ss=w88+16; ss!=w88+17; ss+=1) *rr++ = *ss;
  /* #9149: @66 = (-@66) */
  w66 = (- w66 );
  /* #9150: @66 = @66' */
  /* #9151: @434 = mac(@66,@454,@434) */
  casadi_mtimes((&w66), casadi_s88, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #9152: @434 = @434' */
  /* #9153: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9154: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9155: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #9156: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #9157: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9158: @66 = @88[16] */
  for (rr=(&w66), ss=w88+16; ss!=w88+17; ss+=1) *rr++ = *ss;
  /* #9159: @66 = (-@66) */
  w66 = (- w66 );
  /* #9160: @66 = @66' */
  /* #9161: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9162: @434 = mac(@66,@455,@434) */
  casadi_mtimes((&w66), casadi_s88, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #9163: @434 = @434' */
  /* #9164: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9165: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #9166: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #9167: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9168: @66 = @88[15] */
  for (rr=(&w66), ss=w88+15; ss!=w88+16; ss+=1) *rr++ = *ss;
  /* #9169: @66 = (-@66) */
  w66 = (- w66 );
  /* #9170: @66 = @66' */
  /* #9171: @434 = mac(@66,@456,@434) */
  casadi_mtimes((&w66), casadi_s88, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #9172: @434 = @434' */
  /* #9173: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9174: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9175: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #9176: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #9177: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9178: @66 = @88[15] */
  for (rr=(&w66), ss=w88+15; ss!=w88+16; ss+=1) *rr++ = *ss;
  /* #9179: @66 = (-@66) */
  w66 = (- w66 );
  /* #9180: @66 = @66' */
  /* #9181: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9182: @434 = mac(@66,@457,@434) */
  casadi_mtimes((&w66), casadi_s88, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #9183: @434 = @434' */
  /* #9184: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9185: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #9186: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #9187: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9188: @66 = @88[14] */
  for (rr=(&w66), ss=w88+14; ss!=w88+15; ss+=1) *rr++ = *ss;
  /* #9189: @66 = (-@66) */
  w66 = (- w66 );
  /* #9190: @66 = @66' */
  /* #9191: @434 = mac(@66,@458,@434) */
  casadi_mtimes((&w66), casadi_s88, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #9192: @434 = @434' */
  /* #9193: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9194: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9195: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #9196: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #9197: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9198: @66 = @88[14] */
  for (rr=(&w66), ss=w88+14; ss!=w88+15; ss+=1) *rr++ = *ss;
  /* #9199: @66 = (-@66) */
  w66 = (- w66 );
  /* #9200: @66 = @66' */
  /* #9201: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9202: @434 = mac(@66,@459,@434) */
  casadi_mtimes((&w66), casadi_s88, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #9203: @434 = @434' */
  /* #9204: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9205: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #9206: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #9207: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9208: @66 = @88[13] */
  for (rr=(&w66), ss=w88+13; ss!=w88+14; ss+=1) *rr++ = *ss;
  /* #9209: @66 = (-@66) */
  w66 = (- w66 );
  /* #9210: @66 = @66' */
  /* #9211: @434 = mac(@66,@460,@434) */
  casadi_mtimes((&w66), casadi_s88, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #9212: @434 = @434' */
  /* #9213: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9214: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9215: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #9216: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #9217: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9218: @66 = @88[13] */
  for (rr=(&w66), ss=w88+13; ss!=w88+14; ss+=1) *rr++ = *ss;
  /* #9219: @66 = (-@66) */
  w66 = (- w66 );
  /* #9220: @66 = @66' */
  /* #9221: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9222: @434 = mac(@66,@461,@434) */
  casadi_mtimes((&w66), casadi_s88, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #9223: @434 = @434' */
  /* #9224: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9225: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #9226: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #9227: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9228: @66 = @88[12] */
  for (rr=(&w66), ss=w88+12; ss!=w88+13; ss+=1) *rr++ = *ss;
  /* #9229: @66 = (-@66) */
  w66 = (- w66 );
  /* #9230: @66 = @66' */
  /* #9231: @434 = mac(@66,@462,@434) */
  casadi_mtimes((&w66), casadi_s88, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #9232: @434 = @434' */
  /* #9233: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9234: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9235: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #9236: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #9237: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9238: @66 = @88[12] */
  for (rr=(&w66), ss=w88+12; ss!=w88+13; ss+=1) *rr++ = *ss;
  /* #9239: @66 = (-@66) */
  w66 = (- w66 );
  /* #9240: @66 = @66' */
  /* #9241: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9242: @434 = mac(@66,@463,@434) */
  casadi_mtimes((&w66), casadi_s88, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #9243: @434 = @434' */
  /* #9244: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9245: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #9246: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #9247: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9248: @66 = @88[11] */
  for (rr=(&w66), ss=w88+11; ss!=w88+12; ss+=1) *rr++ = *ss;
  /* #9249: @66 = (-@66) */
  w66 = (- w66 );
  /* #9250: @66 = @66' */
  /* #9251: @434 = mac(@66,@464,@434) */
  casadi_mtimes((&w66), casadi_s88, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #9252: @434 = @434' */
  /* #9253: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9254: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9255: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #9256: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #9257: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9258: @66 = @88[11] */
  for (rr=(&w66), ss=w88+11; ss!=w88+12; ss+=1) *rr++ = *ss;
  /* #9259: @66 = (-@66) */
  w66 = (- w66 );
  /* #9260: @66 = @66' */
  /* #9261: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9262: @434 = mac(@66,@465,@434) */
  casadi_mtimes((&w66), casadi_s88, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #9263: @434 = @434' */
  /* #9264: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9265: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #9266: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #9267: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9268: @66 = @88[10] */
  for (rr=(&w66), ss=w88+10; ss!=w88+11; ss+=1) *rr++ = *ss;
  /* #9269: @66 = (-@66) */
  w66 = (- w66 );
  /* #9270: @66 = @66' */
  /* #9271: @434 = mac(@66,@466,@434) */
  casadi_mtimes((&w66), casadi_s88, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #9272: @434 = @434' */
  /* #9273: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9274: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9275: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #9276: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #9277: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9278: @66 = @88[10] */
  for (rr=(&w66), ss=w88+10; ss!=w88+11; ss+=1) *rr++ = *ss;
  /* #9279: @66 = (-@66) */
  w66 = (- w66 );
  /* #9280: @66 = @66' */
  /* #9281: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9282: @434 = mac(@66,@467,@434) */
  casadi_mtimes((&w66), casadi_s88, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #9283: @434 = @434' */
  /* #9284: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9285: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #9286: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #9287: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9288: @66 = @88[9] */
  for (rr=(&w66), ss=w88+9; ss!=w88+10; ss+=1) *rr++ = *ss;
  /* #9289: @66 = (-@66) */
  w66 = (- w66 );
  /* #9290: @66 = @66' */
  /* #9291: @434 = mac(@66,@468,@434) */
  casadi_mtimes((&w66), casadi_s88, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #9292: @434 = @434' */
  /* #9293: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9294: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9295: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #9296: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #9297: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9298: @66 = @88[9] */
  for (rr=(&w66), ss=w88+9; ss!=w88+10; ss+=1) *rr++ = *ss;
  /* #9299: @66 = (-@66) */
  w66 = (- w66 );
  /* #9300: @66 = @66' */
  /* #9301: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9302: @434 = mac(@66,@469,@434) */
  casadi_mtimes((&w66), casadi_s88, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #9303: @434 = @434' */
  /* #9304: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9305: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #9306: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #9307: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9308: @66 = @88[8] */
  for (rr=(&w66), ss=w88+8; ss!=w88+9; ss+=1) *rr++ = *ss;
  /* #9309: @66 = (-@66) */
  w66 = (- w66 );
  /* #9310: @66 = @66' */
  /* #9311: @434 = mac(@66,@470,@434) */
  casadi_mtimes((&w66), casadi_s88, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #9312: @434 = @434' */
  /* #9313: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9314: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9315: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #9316: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #9317: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9318: @66 = @88[8] */
  for (rr=(&w66), ss=w88+8; ss!=w88+9; ss+=1) *rr++ = *ss;
  /* #9319: @66 = (-@66) */
  w66 = (- w66 );
  /* #9320: @66 = @66' */
  /* #9321: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9322: @434 = mac(@66,@471,@434) */
  casadi_mtimes((&w66), casadi_s88, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #9323: @434 = @434' */
  /* #9324: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9325: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #9326: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #9327: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9328: @66 = @88[7] */
  for (rr=(&w66), ss=w88+7; ss!=w88+8; ss+=1) *rr++ = *ss;
  /* #9329: @66 = (-@66) */
  w66 = (- w66 );
  /* #9330: @66 = @66' */
  /* #9331: @434 = mac(@66,@472,@434) */
  casadi_mtimes((&w66), casadi_s88, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #9332: @434 = @434' */
  /* #9333: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9334: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9335: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #9336: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #9337: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9338: @66 = @88[7] */
  for (rr=(&w66), ss=w88+7; ss!=w88+8; ss+=1) *rr++ = *ss;
  /* #9339: @66 = (-@66) */
  w66 = (- w66 );
  /* #9340: @66 = @66' */
  /* #9341: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9342: @434 = mac(@66,@473,@434) */
  casadi_mtimes((&w66), casadi_s88, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #9343: @434 = @434' */
  /* #9344: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9345: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #9346: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #9347: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9348: @66 = @88[6] */
  for (rr=(&w66), ss=w88+6; ss!=w88+7; ss+=1) *rr++ = *ss;
  /* #9349: @66 = (-@66) */
  w66 = (- w66 );
  /* #9350: @66 = @66' */
  /* #9351: @434 = mac(@66,@474,@434) */
  casadi_mtimes((&w66), casadi_s88, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #9352: @434 = @434' */
  /* #9353: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9354: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9355: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #9356: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #9357: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9358: @66 = @88[6] */
  for (rr=(&w66), ss=w88+6; ss!=w88+7; ss+=1) *rr++ = *ss;
  /* #9359: @66 = (-@66) */
  w66 = (- w66 );
  /* #9360: @66 = @66' */
  /* #9361: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9362: @434 = mac(@66,@475,@434) */
  casadi_mtimes((&w66), casadi_s88, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #9363: @434 = @434' */
  /* #9364: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9365: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #9366: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #9367: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9368: @66 = @88[5] */
  for (rr=(&w66), ss=w88+5; ss!=w88+6; ss+=1) *rr++ = *ss;
  /* #9369: @66 = (-@66) */
  w66 = (- w66 );
  /* #9370: @66 = @66' */
  /* #9371: @434 = mac(@66,@476,@434) */
  casadi_mtimes((&w66), casadi_s88, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #9372: @434 = @434' */
  /* #9373: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9374: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9375: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #9376: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #9377: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9378: @66 = @88[5] */
  for (rr=(&w66), ss=w88+5; ss!=w88+6; ss+=1) *rr++ = *ss;
  /* #9379: @66 = (-@66) */
  w66 = (- w66 );
  /* #9380: @66 = @66' */
  /* #9381: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9382: @434 = mac(@66,@477,@434) */
  casadi_mtimes((&w66), casadi_s88, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #9383: @434 = @434' */
  /* #9384: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9385: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #9386: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #9387: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9388: @66 = @88[4] */
  for (rr=(&w66), ss=w88+4; ss!=w88+5; ss+=1) *rr++ = *ss;
  /* #9389: @66 = (-@66) */
  w66 = (- w66 );
  /* #9390: @66 = @66' */
  /* #9391: @434 = mac(@66,@478,@434) */
  casadi_mtimes((&w66), casadi_s88, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #9392: @434 = @434' */
  /* #9393: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9394: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9395: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #9396: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #9397: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9398: @66 = @88[4] */
  for (rr=(&w66), ss=w88+4; ss!=w88+5; ss+=1) *rr++ = *ss;
  /* #9399: @66 = (-@66) */
  w66 = (- w66 );
  /* #9400: @66 = @66' */
  /* #9401: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9402: @434 = mac(@66,@479,@434) */
  casadi_mtimes((&w66), casadi_s88, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #9403: @434 = @434' */
  /* #9404: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9405: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #9406: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #9407: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9408: @66 = @88[3] */
  for (rr=(&w66), ss=w88+3; ss!=w88+4; ss+=1) *rr++ = *ss;
  /* #9409: @66 = (-@66) */
  w66 = (- w66 );
  /* #9410: @66 = @66' */
  /* #9411: @434 = mac(@66,@480,@434) */
  casadi_mtimes((&w66), casadi_s88, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #9412: @434 = @434' */
  /* #9413: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9414: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9415: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #9416: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #9417: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9418: @66 = @88[3] */
  for (rr=(&w66), ss=w88+3; ss!=w88+4; ss+=1) *rr++ = *ss;
  /* #9419: @66 = (-@66) */
  w66 = (- w66 );
  /* #9420: @66 = @66' */
  /* #9421: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9422: @434 = mac(@66,@481,@434) */
  casadi_mtimes((&w66), casadi_s88, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #9423: @434 = @434' */
  /* #9424: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9425: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #9426: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #9427: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9428: @66 = @88[2] */
  for (rr=(&w66), ss=w88+2; ss!=w88+3; ss+=1) *rr++ = *ss;
  /* #9429: @66 = (-@66) */
  w66 = (- w66 );
  /* #9430: @66 = @66' */
  /* #9431: @434 = mac(@66,@482,@434) */
  casadi_mtimes((&w66), casadi_s88, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #9432: @434 = @434' */
  /* #9433: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9434: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9435: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #9436: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #9437: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9438: @66 = @88[2] */
  for (rr=(&w66), ss=w88+2; ss!=w88+3; ss+=1) *rr++ = *ss;
  /* #9439: @66 = (-@66) */
  w66 = (- w66 );
  /* #9440: @66 = @66' */
  /* #9441: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9442: @434 = mac(@66,@483,@434) */
  casadi_mtimes((&w66), casadi_s88, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #9443: @434 = @434' */
  /* #9444: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9445: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #9446: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #9447: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9448: @66 = @88[1] */
  for (rr=(&w66), ss=w88+1; ss!=w88+2; ss+=1) *rr++ = *ss;
  /* #9449: @66 = (-@66) */
  w66 = (- w66 );
  /* #9450: @66 = @66' */
  /* #9451: @434 = mac(@66,@484,@434) */
  casadi_mtimes((&w66), casadi_s88, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #9452: @434 = @434' */
  /* #9453: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9454: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9455: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #9456: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #9457: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9458: @66 = @88[1] */
  for (rr=(&w66), ss=w88+1; ss!=w88+2; ss+=1) *rr++ = *ss;
  /* #9459: @66 = (-@66) */
  w66 = (- w66 );
  /* #9460: @66 = @66' */
  /* #9461: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9462: @434 = mac(@66,@485,@434) */
  casadi_mtimes((&w66), casadi_s88, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #9463: @434 = @434' */
  /* #9464: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9465: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #9466: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #9467: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9468: @66 = @88[0] */
  for (rr=(&w66), ss=w88+0; ss!=w88+1; ss+=1) *rr++ = *ss;
  /* #9469: @66 = (-@66) */
  w66 = (- w66 );
  /* #9470: @66 = @66' */
  /* #9471: @434 = mac(@66,@486,@434) */
  casadi_mtimes((&w66), casadi_s88, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #9472: @434 = @434' */
  /* #9473: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9474: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9475: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #9476: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #9477: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9478: @66 = @88[0] */
  for (rr=(&w66), ss=w88+0; ss!=w88+1; ss+=1) *rr++ = *ss;
  /* #9479: @66 = (-@66) */
  w66 = (- w66 );
  /* #9480: @66 = @66' */
  /* #9481: @66 = (@63*@66) */
  w66  = (w63*w66);
  /* #9482: @434 = mac(@66,@487,@434) */
  casadi_mtimes((&w66), casadi_s88, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #9483: @434 = @434' */
  /* #9484: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9485: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #9486: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #9487: @1 = vec(@1) */
  /* #9488: (@0[:5096:196;154:168] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+154; tt!=rr+168; tt+=1) *tt = *ss++;
  /* #9489: (@0[11:5107:14] = @1) */
  for (rr=w0+11, ss=w1; rr!=w0+5107; rr+=14) *rr = *ss++;
  /* #9490: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #9491: @66 = @90[24] */
  for (rr=(&w66), ss=w90+24; ss!=w90+25; ss+=1) *rr++ = *ss;
  /* #9492: @57 = (@57*@66) */
  w57 *= w66;
  /* #9493: (@1[341] += @57) */
  for (rr=w1+341, ss=(&w57); rr!=w1+342; rr+=1) *rr += *ss++;
  /* #9494: (@1[336:350] += @120) */
  for (rr=w1+336, ss=w120; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #9495: @57 = @90[23] */
  for (rr=(&w57), ss=w90+23; ss!=w90+24; ss+=1) *rr++ = *ss;
  /* #9496: @55 = (@55*@57) */
  w55 *= w57;
  /* #9497: (@1[327] += @55) */
  for (rr=w1+327, ss=(&w55); rr!=w1+328; rr+=1) *rr += *ss++;
  /* #9498: (@1[322:336] += @133) */
  for (rr=w1+322, ss=w133; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #9499: @55 = @90[22] */
  for (rr=(&w55), ss=w90+22; ss!=w90+23; ss+=1) *rr++ = *ss;
  /* #9500: @53 = (@53*@55) */
  w53 *= w55;
  /* #9501: (@1[313] += @53) */
  for (rr=w1+313, ss=(&w53); rr!=w1+314; rr+=1) *rr += *ss++;
  /* #9502: (@1[308:322] += @146) */
  for (rr=w1+308, ss=w146; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #9503: @53 = @90[21] */
  for (rr=(&w53), ss=w90+21; ss!=w90+22; ss+=1) *rr++ = *ss;
  /* #9504: @51 = (@51*@53) */
  w51 *= w53;
  /* #9505: (@1[299] += @51) */
  for (rr=w1+299, ss=(&w51); rr!=w1+300; rr+=1) *rr += *ss++;
  /* #9506: (@1[294:308] += @159) */
  for (rr=w1+294, ss=w159; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #9507: @51 = @90[20] */
  for (rr=(&w51), ss=w90+20; ss!=w90+21; ss+=1) *rr++ = *ss;
  /* #9508: @49 = (@49*@51) */
  w49 *= w51;
  /* #9509: (@1[285] += @49) */
  for (rr=w1+285, ss=(&w49); rr!=w1+286; rr+=1) *rr += *ss++;
  /* #9510: (@1[280:294] += @172) */
  for (rr=w1+280, ss=w172; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #9511: @49 = @90[19] */
  for (rr=(&w49), ss=w90+19; ss!=w90+20; ss+=1) *rr++ = *ss;
  /* #9512: @47 = (@47*@49) */
  w47 *= w49;
  /* #9513: (@1[271] += @47) */
  for (rr=w1+271, ss=(&w47); rr!=w1+272; rr+=1) *rr += *ss++;
  /* #9514: (@1[266:280] += @185) */
  for (rr=w1+266, ss=w185; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #9515: @47 = @90[18] */
  for (rr=(&w47), ss=w90+18; ss!=w90+19; ss+=1) *rr++ = *ss;
  /* #9516: @45 = (@45*@47) */
  w45 *= w47;
  /* #9517: (@1[257] += @45) */
  for (rr=w1+257, ss=(&w45); rr!=w1+258; rr+=1) *rr += *ss++;
  /* #9518: (@1[252:266] += @198) */
  for (rr=w1+252, ss=w198; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #9519: @45 = @90[17] */
  for (rr=(&w45), ss=w90+17; ss!=w90+18; ss+=1) *rr++ = *ss;
  /* #9520: @43 = (@43*@45) */
  w43 *= w45;
  /* #9521: (@1[243] += @43) */
  for (rr=w1+243, ss=(&w43); rr!=w1+244; rr+=1) *rr += *ss++;
  /* #9522: (@1[238:252] += @211) */
  for (rr=w1+238, ss=w211; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #9523: @43 = @90[16] */
  for (rr=(&w43), ss=w90+16; ss!=w90+17; ss+=1) *rr++ = *ss;
  /* #9524: @41 = (@41*@43) */
  w41 *= w43;
  /* #9525: (@1[229] += @41) */
  for (rr=w1+229, ss=(&w41); rr!=w1+230; rr+=1) *rr += *ss++;
  /* #9526: (@1[224:238] += @224) */
  for (rr=w1+224, ss=w224; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #9527: @41 = @90[15] */
  for (rr=(&w41), ss=w90+15; ss!=w90+16; ss+=1) *rr++ = *ss;
  /* #9528: @39 = (@39*@41) */
  w39 *= w41;
  /* #9529: (@1[215] += @39) */
  for (rr=w1+215, ss=(&w39); rr!=w1+216; rr+=1) *rr += *ss++;
  /* #9530: (@1[210:224] += @237) */
  for (rr=w1+210, ss=w237; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #9531: @39 = @90[14] */
  for (rr=(&w39), ss=w90+14; ss!=w90+15; ss+=1) *rr++ = *ss;
  /* #9532: @37 = (@37*@39) */
  w37 *= w39;
  /* #9533: (@1[201] += @37) */
  for (rr=w1+201, ss=(&w37); rr!=w1+202; rr+=1) *rr += *ss++;
  /* #9534: (@1[196:210] += @250) */
  for (rr=w1+196, ss=w250; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #9535: @37 = @90[13] */
  for (rr=(&w37), ss=w90+13; ss!=w90+14; ss+=1) *rr++ = *ss;
  /* #9536: @35 = (@35*@37) */
  w35 *= w37;
  /* #9537: (@1[187] += @35) */
  for (rr=w1+187, ss=(&w35); rr!=w1+188; rr+=1) *rr += *ss++;
  /* #9538: (@1[182:196] += @263) */
  for (rr=w1+182, ss=w263; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #9539: @35 = @90[12] */
  for (rr=(&w35), ss=w90+12; ss!=w90+13; ss+=1) *rr++ = *ss;
  /* #9540: @33 = (@33*@35) */
  w33 *= w35;
  /* #9541: (@1[173] += @33) */
  for (rr=w1+173, ss=(&w33); rr!=w1+174; rr+=1) *rr += *ss++;
  /* #9542: (@1[168:182] += @276) */
  for (rr=w1+168, ss=w276; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #9543: @33 = @90[11] */
  for (rr=(&w33), ss=w90+11; ss!=w90+12; ss+=1) *rr++ = *ss;
  /* #9544: @31 = (@31*@33) */
  w31 *= w33;
  /* #9545: (@1[159] += @31) */
  for (rr=w1+159, ss=(&w31); rr!=w1+160; rr+=1) *rr += *ss++;
  /* #9546: (@1[154:168] += @289) */
  for (rr=w1+154, ss=w289; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #9547: @31 = @90[10] */
  for (rr=(&w31), ss=w90+10; ss!=w90+11; ss+=1) *rr++ = *ss;
  /* #9548: @29 = (@29*@31) */
  w29 *= w31;
  /* #9549: (@1[145] += @29) */
  for (rr=w1+145, ss=(&w29); rr!=w1+146; rr+=1) *rr += *ss++;
  /* #9550: (@1[140:154] += @302) */
  for (rr=w1+140, ss=w302; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #9551: @29 = @90[9] */
  for (rr=(&w29), ss=w90+9; ss!=w90+10; ss+=1) *rr++ = *ss;
  /* #9552: @27 = (@27*@29) */
  w27 *= w29;
  /* #9553: (@1[131] += @27) */
  for (rr=w1+131, ss=(&w27); rr!=w1+132; rr+=1) *rr += *ss++;
  /* #9554: (@1[126:140] += @315) */
  for (rr=w1+126, ss=w315; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #9555: @27 = @90[8] */
  for (rr=(&w27), ss=w90+8; ss!=w90+9; ss+=1) *rr++ = *ss;
  /* #9556: @25 = (@25*@27) */
  w25 *= w27;
  /* #9557: (@1[117] += @25) */
  for (rr=w1+117, ss=(&w25); rr!=w1+118; rr+=1) *rr += *ss++;
  /* #9558: (@1[112:126] += @328) */
  for (rr=w1+112, ss=w328; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #9559: @25 = @90[7] */
  for (rr=(&w25), ss=w90+7; ss!=w90+8; ss+=1) *rr++ = *ss;
  /* #9560: @23 = (@23*@25) */
  w23 *= w25;
  /* #9561: (@1[103] += @23) */
  for (rr=w1+103, ss=(&w23); rr!=w1+104; rr+=1) *rr += *ss++;
  /* #9562: (@1[98:112] += @341) */
  for (rr=w1+98, ss=w341; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #9563: @23 = @90[6] */
  for (rr=(&w23), ss=w90+6; ss!=w90+7; ss+=1) *rr++ = *ss;
  /* #9564: @21 = (@21*@23) */
  w21 *= w23;
  /* #9565: (@1[89] += @21) */
  for (rr=w1+89, ss=(&w21); rr!=w1+90; rr+=1) *rr += *ss++;
  /* #9566: (@1[84:98] += @354) */
  for (rr=w1+84, ss=w354; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #9567: @21 = @90[5] */
  for (rr=(&w21), ss=w90+5; ss!=w90+6; ss+=1) *rr++ = *ss;
  /* #9568: @19 = (@19*@21) */
  w19 *= w21;
  /* #9569: (@1[75] += @19) */
  for (rr=w1+75, ss=(&w19); rr!=w1+76; rr+=1) *rr += *ss++;
  /* #9570: (@1[70:84] += @367) */
  for (rr=w1+70, ss=w367; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #9571: @19 = @90[4] */
  for (rr=(&w19), ss=w90+4; ss!=w90+5; ss+=1) *rr++ = *ss;
  /* #9572: @17 = (@17*@19) */
  w17 *= w19;
  /* #9573: (@1[61] += @17) */
  for (rr=w1+61, ss=(&w17); rr!=w1+62; rr+=1) *rr += *ss++;
  /* #9574: (@1[56:70] += @380) */
  for (rr=w1+56, ss=w380; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #9575: @17 = @90[3] */
  for (rr=(&w17), ss=w90+3; ss!=w90+4; ss+=1) *rr++ = *ss;
  /* #9576: @15 = (@15*@17) */
  w15 *= w17;
  /* #9577: (@1[47] += @15) */
  for (rr=w1+47, ss=(&w15); rr!=w1+48; rr+=1) *rr += *ss++;
  /* #9578: (@1[42:56] += @393) */
  for (rr=w1+42, ss=w393; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #9579: @15 = @90[2] */
  for (rr=(&w15), ss=w90+2; ss!=w90+3; ss+=1) *rr++ = *ss;
  /* #9580: @13 = (@13*@15) */
  w13 *= w15;
  /* #9581: (@1[33] += @13) */
  for (rr=w1+33, ss=(&w13); rr!=w1+34; rr+=1) *rr += *ss++;
  /* #9582: (@1[28:42] += @406) */
  for (rr=w1+28, ss=w406; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #9583: @13 = @90[1] */
  for (rr=(&w13), ss=w90+1; ss!=w90+2; ss+=1) *rr++ = *ss;
  /* #9584: @11 = (@11*@13) */
  w11 *= w13;
  /* #9585: (@1[19] += @11) */
  for (rr=w1+19, ss=(&w11); rr!=w1+20; rr+=1) *rr += *ss++;
  /* #9586: (@1[14:28] += @419) */
  for (rr=w1+14, ss=w419; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #9587: @11 = @90[0] */
  for (rr=(&w11), ss=w90+0; ss!=w90+1; ss+=1) *rr++ = *ss;
  /* #9588: @9 = (@9*@11) */
  w9 *= w11;
  /* #9589: (@1[5] += @9) */
  for (rr=w1+5, ss=(&w9); rr!=w1+6; rr+=1) *rr += *ss++;
  /* #9590: (@1[:14] += @432) */
  for (rr=w1+0, ss=w432; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #9591: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9592: @9 = @90[25] */
  for (rr=(&w9), ss=w90+25; ss!=w90+26; ss+=1) *rr++ = *ss;
  /* #9593: @9 = (-@9) */
  w9 = (- w9 );
  /* #9594: @9 = @9' */
  /* #9595: @434 = mac(@9,@435,@434) */
  casadi_mtimes((&w9), casadi_s89, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #9596: @434 = @434' */
  /* #9597: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9598: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9599: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #9600: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #9601: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9602: @9 = @90[25] */
  for (rr=(&w9), ss=w90+25; ss!=w90+26; ss+=1) *rr++ = *ss;
  /* #9603: @9 = (-@9) */
  w9 = (- w9 );
  /* #9604: @9 = @9' */
  /* #9605: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9606: @434 = mac(@9,@437,@434) */
  casadi_mtimes((&w9), casadi_s89, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #9607: @434 = @434' */
  /* #9608: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9609: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #9610: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #9611: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9612: @9 = @90[24] */
  for (rr=(&w9), ss=w90+24; ss!=w90+25; ss+=1) *rr++ = *ss;
  /* #9613: @9 = (-@9) */
  w9 = (- w9 );
  /* #9614: @9 = @9' */
  /* #9615: @434 = mac(@9,@438,@434) */
  casadi_mtimes((&w9), casadi_s89, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #9616: @434 = @434' */
  /* #9617: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9618: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9619: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #9620: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #9621: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9622: @9 = @90[24] */
  for (rr=(&w9), ss=w90+24; ss!=w90+25; ss+=1) *rr++ = *ss;
  /* #9623: @9 = (-@9) */
  w9 = (- w9 );
  /* #9624: @9 = @9' */
  /* #9625: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9626: @434 = mac(@9,@439,@434) */
  casadi_mtimes((&w9), casadi_s89, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #9627: @434 = @434' */
  /* #9628: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9629: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #9630: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #9631: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9632: @9 = @90[23] */
  for (rr=(&w9), ss=w90+23; ss!=w90+24; ss+=1) *rr++ = *ss;
  /* #9633: @9 = (-@9) */
  w9 = (- w9 );
  /* #9634: @9 = @9' */
  /* #9635: @434 = mac(@9,@440,@434) */
  casadi_mtimes((&w9), casadi_s89, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #9636: @434 = @434' */
  /* #9637: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9638: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9639: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #9640: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #9641: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9642: @9 = @90[23] */
  for (rr=(&w9), ss=w90+23; ss!=w90+24; ss+=1) *rr++ = *ss;
  /* #9643: @9 = (-@9) */
  w9 = (- w9 );
  /* #9644: @9 = @9' */
  /* #9645: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9646: @434 = mac(@9,@441,@434) */
  casadi_mtimes((&w9), casadi_s89, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #9647: @434 = @434' */
  /* #9648: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9649: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #9650: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #9651: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9652: @9 = @90[22] */
  for (rr=(&w9), ss=w90+22; ss!=w90+23; ss+=1) *rr++ = *ss;
  /* #9653: @9 = (-@9) */
  w9 = (- w9 );
  /* #9654: @9 = @9' */
  /* #9655: @434 = mac(@9,@442,@434) */
  casadi_mtimes((&w9), casadi_s89, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #9656: @434 = @434' */
  /* #9657: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9658: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9659: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #9660: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #9661: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9662: @9 = @90[22] */
  for (rr=(&w9), ss=w90+22; ss!=w90+23; ss+=1) *rr++ = *ss;
  /* #9663: @9 = (-@9) */
  w9 = (- w9 );
  /* #9664: @9 = @9' */
  /* #9665: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9666: @434 = mac(@9,@443,@434) */
  casadi_mtimes((&w9), casadi_s89, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #9667: @434 = @434' */
  /* #9668: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9669: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #9670: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #9671: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9672: @9 = @90[21] */
  for (rr=(&w9), ss=w90+21; ss!=w90+22; ss+=1) *rr++ = *ss;
  /* #9673: @9 = (-@9) */
  w9 = (- w9 );
  /* #9674: @9 = @9' */
  /* #9675: @434 = mac(@9,@444,@434) */
  casadi_mtimes((&w9), casadi_s89, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #9676: @434 = @434' */
  /* #9677: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9678: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9679: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #9680: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #9681: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9682: @9 = @90[21] */
  for (rr=(&w9), ss=w90+21; ss!=w90+22; ss+=1) *rr++ = *ss;
  /* #9683: @9 = (-@9) */
  w9 = (- w9 );
  /* #9684: @9 = @9' */
  /* #9685: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9686: @434 = mac(@9,@445,@434) */
  casadi_mtimes((&w9), casadi_s89, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #9687: @434 = @434' */
  /* #9688: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9689: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #9690: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #9691: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9692: @9 = @90[20] */
  for (rr=(&w9), ss=w90+20; ss!=w90+21; ss+=1) *rr++ = *ss;
  /* #9693: @9 = (-@9) */
  w9 = (- w9 );
  /* #9694: @9 = @9' */
  /* #9695: @434 = mac(@9,@446,@434) */
  casadi_mtimes((&w9), casadi_s89, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #9696: @434 = @434' */
  /* #9697: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9698: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9699: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #9700: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #9701: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9702: @9 = @90[20] */
  for (rr=(&w9), ss=w90+20; ss!=w90+21; ss+=1) *rr++ = *ss;
  /* #9703: @9 = (-@9) */
  w9 = (- w9 );
  /* #9704: @9 = @9' */
  /* #9705: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9706: @434 = mac(@9,@447,@434) */
  casadi_mtimes((&w9), casadi_s89, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #9707: @434 = @434' */
  /* #9708: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9709: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #9710: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #9711: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9712: @9 = @90[19] */
  for (rr=(&w9), ss=w90+19; ss!=w90+20; ss+=1) *rr++ = *ss;
  /* #9713: @9 = (-@9) */
  w9 = (- w9 );
  /* #9714: @9 = @9' */
  /* #9715: @434 = mac(@9,@448,@434) */
  casadi_mtimes((&w9), casadi_s89, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #9716: @434 = @434' */
  /* #9717: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9718: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9719: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #9720: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #9721: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9722: @9 = @90[19] */
  for (rr=(&w9), ss=w90+19; ss!=w90+20; ss+=1) *rr++ = *ss;
  /* #9723: @9 = (-@9) */
  w9 = (- w9 );
  /* #9724: @9 = @9' */
  /* #9725: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9726: @434 = mac(@9,@449,@434) */
  casadi_mtimes((&w9), casadi_s89, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #9727: @434 = @434' */
  /* #9728: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9729: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #9730: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #9731: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9732: @9 = @90[18] */
  for (rr=(&w9), ss=w90+18; ss!=w90+19; ss+=1) *rr++ = *ss;
  /* #9733: @9 = (-@9) */
  w9 = (- w9 );
  /* #9734: @9 = @9' */
  /* #9735: @434 = mac(@9,@450,@434) */
  casadi_mtimes((&w9), casadi_s89, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #9736: @434 = @434' */
  /* #9737: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9738: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9739: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #9740: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #9741: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9742: @9 = @90[18] */
  for (rr=(&w9), ss=w90+18; ss!=w90+19; ss+=1) *rr++ = *ss;
  /* #9743: @9 = (-@9) */
  w9 = (- w9 );
  /* #9744: @9 = @9' */
  /* #9745: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9746: @434 = mac(@9,@451,@434) */
  casadi_mtimes((&w9), casadi_s89, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #9747: @434 = @434' */
  /* #9748: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9749: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #9750: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #9751: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9752: @9 = @90[17] */
  for (rr=(&w9), ss=w90+17; ss!=w90+18; ss+=1) *rr++ = *ss;
  /* #9753: @9 = (-@9) */
  w9 = (- w9 );
  /* #9754: @9 = @9' */
  /* #9755: @434 = mac(@9,@452,@434) */
  casadi_mtimes((&w9), casadi_s89, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #9756: @434 = @434' */
  /* #9757: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9758: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9759: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #9760: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #9761: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9762: @9 = @90[17] */
  for (rr=(&w9), ss=w90+17; ss!=w90+18; ss+=1) *rr++ = *ss;
  /* #9763: @9 = (-@9) */
  w9 = (- w9 );
  /* #9764: @9 = @9' */
  /* #9765: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9766: @434 = mac(@9,@453,@434) */
  casadi_mtimes((&w9), casadi_s89, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #9767: @434 = @434' */
  /* #9768: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9769: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #9770: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #9771: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9772: @9 = @90[16] */
  for (rr=(&w9), ss=w90+16; ss!=w90+17; ss+=1) *rr++ = *ss;
  /* #9773: @9 = (-@9) */
  w9 = (- w9 );
  /* #9774: @9 = @9' */
  /* #9775: @434 = mac(@9,@454,@434) */
  casadi_mtimes((&w9), casadi_s89, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #9776: @434 = @434' */
  /* #9777: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9778: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9779: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #9780: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #9781: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9782: @9 = @90[16] */
  for (rr=(&w9), ss=w90+16; ss!=w90+17; ss+=1) *rr++ = *ss;
  /* #9783: @9 = (-@9) */
  w9 = (- w9 );
  /* #9784: @9 = @9' */
  /* #9785: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9786: @434 = mac(@9,@455,@434) */
  casadi_mtimes((&w9), casadi_s89, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #9787: @434 = @434' */
  /* #9788: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9789: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #9790: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #9791: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9792: @9 = @90[15] */
  for (rr=(&w9), ss=w90+15; ss!=w90+16; ss+=1) *rr++ = *ss;
  /* #9793: @9 = (-@9) */
  w9 = (- w9 );
  /* #9794: @9 = @9' */
  /* #9795: @434 = mac(@9,@456,@434) */
  casadi_mtimes((&w9), casadi_s89, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #9796: @434 = @434' */
  /* #9797: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9798: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9799: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #9800: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #9801: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9802: @9 = @90[15] */
  for (rr=(&w9), ss=w90+15; ss!=w90+16; ss+=1) *rr++ = *ss;
  /* #9803: @9 = (-@9) */
  w9 = (- w9 );
  /* #9804: @9 = @9' */
  /* #9805: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9806: @434 = mac(@9,@457,@434) */
  casadi_mtimes((&w9), casadi_s89, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #9807: @434 = @434' */
  /* #9808: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9809: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #9810: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #9811: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9812: @9 = @90[14] */
  for (rr=(&w9), ss=w90+14; ss!=w90+15; ss+=1) *rr++ = *ss;
  /* #9813: @9 = (-@9) */
  w9 = (- w9 );
  /* #9814: @9 = @9' */
  /* #9815: @434 = mac(@9,@458,@434) */
  casadi_mtimes((&w9), casadi_s89, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #9816: @434 = @434' */
  /* #9817: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9818: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9819: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #9820: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #9821: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9822: @9 = @90[14] */
  for (rr=(&w9), ss=w90+14; ss!=w90+15; ss+=1) *rr++ = *ss;
  /* #9823: @9 = (-@9) */
  w9 = (- w9 );
  /* #9824: @9 = @9' */
  /* #9825: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9826: @434 = mac(@9,@459,@434) */
  casadi_mtimes((&w9), casadi_s89, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #9827: @434 = @434' */
  /* #9828: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9829: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #9830: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #9831: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9832: @9 = @90[13] */
  for (rr=(&w9), ss=w90+13; ss!=w90+14; ss+=1) *rr++ = *ss;
  /* #9833: @9 = (-@9) */
  w9 = (- w9 );
  /* #9834: @9 = @9' */
  /* #9835: @434 = mac(@9,@460,@434) */
  casadi_mtimes((&w9), casadi_s89, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #9836: @434 = @434' */
  /* #9837: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9838: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9839: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #9840: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #9841: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9842: @9 = @90[13] */
  for (rr=(&w9), ss=w90+13; ss!=w90+14; ss+=1) *rr++ = *ss;
  /* #9843: @9 = (-@9) */
  w9 = (- w9 );
  /* #9844: @9 = @9' */
  /* #9845: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9846: @434 = mac(@9,@461,@434) */
  casadi_mtimes((&w9), casadi_s89, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #9847: @434 = @434' */
  /* #9848: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9849: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #9850: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #9851: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9852: @9 = @90[12] */
  for (rr=(&w9), ss=w90+12; ss!=w90+13; ss+=1) *rr++ = *ss;
  /* #9853: @9 = (-@9) */
  w9 = (- w9 );
  /* #9854: @9 = @9' */
  /* #9855: @434 = mac(@9,@462,@434) */
  casadi_mtimes((&w9), casadi_s89, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #9856: @434 = @434' */
  /* #9857: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9858: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9859: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #9860: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #9861: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9862: @9 = @90[12] */
  for (rr=(&w9), ss=w90+12; ss!=w90+13; ss+=1) *rr++ = *ss;
  /* #9863: @9 = (-@9) */
  w9 = (- w9 );
  /* #9864: @9 = @9' */
  /* #9865: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9866: @434 = mac(@9,@463,@434) */
  casadi_mtimes((&w9), casadi_s89, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #9867: @434 = @434' */
  /* #9868: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9869: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #9870: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #9871: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9872: @9 = @90[11] */
  for (rr=(&w9), ss=w90+11; ss!=w90+12; ss+=1) *rr++ = *ss;
  /* #9873: @9 = (-@9) */
  w9 = (- w9 );
  /* #9874: @9 = @9' */
  /* #9875: @434 = mac(@9,@464,@434) */
  casadi_mtimes((&w9), casadi_s89, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #9876: @434 = @434' */
  /* #9877: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9878: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9879: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #9880: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #9881: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9882: @9 = @90[11] */
  for (rr=(&w9), ss=w90+11; ss!=w90+12; ss+=1) *rr++ = *ss;
  /* #9883: @9 = (-@9) */
  w9 = (- w9 );
  /* #9884: @9 = @9' */
  /* #9885: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9886: @434 = mac(@9,@465,@434) */
  casadi_mtimes((&w9), casadi_s89, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #9887: @434 = @434' */
  /* #9888: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9889: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #9890: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #9891: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9892: @9 = @90[10] */
  for (rr=(&w9), ss=w90+10; ss!=w90+11; ss+=1) *rr++ = *ss;
  /* #9893: @9 = (-@9) */
  w9 = (- w9 );
  /* #9894: @9 = @9' */
  /* #9895: @434 = mac(@9,@466,@434) */
  casadi_mtimes((&w9), casadi_s89, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #9896: @434 = @434' */
  /* #9897: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9898: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9899: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #9900: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #9901: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9902: @9 = @90[10] */
  for (rr=(&w9), ss=w90+10; ss!=w90+11; ss+=1) *rr++ = *ss;
  /* #9903: @9 = (-@9) */
  w9 = (- w9 );
  /* #9904: @9 = @9' */
  /* #9905: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9906: @434 = mac(@9,@467,@434) */
  casadi_mtimes((&w9), casadi_s89, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #9907: @434 = @434' */
  /* #9908: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9909: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #9910: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #9911: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9912: @9 = @90[9] */
  for (rr=(&w9), ss=w90+9; ss!=w90+10; ss+=1) *rr++ = *ss;
  /* #9913: @9 = (-@9) */
  w9 = (- w9 );
  /* #9914: @9 = @9' */
  /* #9915: @434 = mac(@9,@468,@434) */
  casadi_mtimes((&w9), casadi_s89, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #9916: @434 = @434' */
  /* #9917: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9918: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9919: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #9920: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #9921: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9922: @9 = @90[9] */
  for (rr=(&w9), ss=w90+9; ss!=w90+10; ss+=1) *rr++ = *ss;
  /* #9923: @9 = (-@9) */
  w9 = (- w9 );
  /* #9924: @9 = @9' */
  /* #9925: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9926: @434 = mac(@9,@469,@434) */
  casadi_mtimes((&w9), casadi_s89, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #9927: @434 = @434' */
  /* #9928: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9929: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #9930: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #9931: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9932: @9 = @90[8] */
  for (rr=(&w9), ss=w90+8; ss!=w90+9; ss+=1) *rr++ = *ss;
  /* #9933: @9 = (-@9) */
  w9 = (- w9 );
  /* #9934: @9 = @9' */
  /* #9935: @434 = mac(@9,@470,@434) */
  casadi_mtimes((&w9), casadi_s89, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #9936: @434 = @434' */
  /* #9937: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9938: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9939: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #9940: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #9941: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9942: @9 = @90[8] */
  for (rr=(&w9), ss=w90+8; ss!=w90+9; ss+=1) *rr++ = *ss;
  /* #9943: @9 = (-@9) */
  w9 = (- w9 );
  /* #9944: @9 = @9' */
  /* #9945: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9946: @434 = mac(@9,@471,@434) */
  casadi_mtimes((&w9), casadi_s89, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #9947: @434 = @434' */
  /* #9948: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9949: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #9950: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #9951: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9952: @9 = @90[7] */
  for (rr=(&w9), ss=w90+7; ss!=w90+8; ss+=1) *rr++ = *ss;
  /* #9953: @9 = (-@9) */
  w9 = (- w9 );
  /* #9954: @9 = @9' */
  /* #9955: @434 = mac(@9,@472,@434) */
  casadi_mtimes((&w9), casadi_s89, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #9956: @434 = @434' */
  /* #9957: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9958: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9959: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #9960: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #9961: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9962: @9 = @90[7] */
  for (rr=(&w9), ss=w90+7; ss!=w90+8; ss+=1) *rr++ = *ss;
  /* #9963: @9 = (-@9) */
  w9 = (- w9 );
  /* #9964: @9 = @9' */
  /* #9965: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9966: @434 = mac(@9,@473,@434) */
  casadi_mtimes((&w9), casadi_s89, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #9967: @434 = @434' */
  /* #9968: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9969: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #9970: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #9971: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9972: @9 = @90[6] */
  for (rr=(&w9), ss=w90+6; ss!=w90+7; ss+=1) *rr++ = *ss;
  /* #9973: @9 = (-@9) */
  w9 = (- w9 );
  /* #9974: @9 = @9' */
  /* #9975: @434 = mac(@9,@474,@434) */
  casadi_mtimes((&w9), casadi_s89, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #9976: @434 = @434' */
  /* #9977: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9978: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9979: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #9980: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #9981: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9982: @9 = @90[6] */
  for (rr=(&w9), ss=w90+6; ss!=w90+7; ss+=1) *rr++ = *ss;
  /* #9983: @9 = (-@9) */
  w9 = (- w9 );
  /* #9984: @9 = @9' */
  /* #9985: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #9986: @434 = mac(@9,@475,@434) */
  casadi_mtimes((&w9), casadi_s89, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #9987: @434 = @434' */
  /* #9988: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9989: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #9990: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #9991: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #9992: @9 = @90[5] */
  for (rr=(&w9), ss=w90+5; ss!=w90+6; ss+=1) *rr++ = *ss;
  /* #9993: @9 = (-@9) */
  w9 = (- w9 );
  /* #9994: @9 = @9' */
  /* #9995: @434 = mac(@9,@476,@434) */
  casadi_mtimes((&w9), casadi_s89, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #9996: @434 = @434' */
  /* #9997: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #9998: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #9999: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #10000: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #10001: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10002: @9 = @90[5] */
  for (rr=(&w9), ss=w90+5; ss!=w90+6; ss+=1) *rr++ = *ss;
  /* #10003: @9 = (-@9) */
  w9 = (- w9 );
  /* #10004: @9 = @9' */
  /* #10005: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10006: @434 = mac(@9,@477,@434) */
  casadi_mtimes((&w9), casadi_s89, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #10007: @434 = @434' */
  /* #10008: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10009: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #10010: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #10011: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10012: @9 = @90[4] */
  for (rr=(&w9), ss=w90+4; ss!=w90+5; ss+=1) *rr++ = *ss;
  /* #10013: @9 = (-@9) */
  w9 = (- w9 );
  /* #10014: @9 = @9' */
  /* #10015: @434 = mac(@9,@478,@434) */
  casadi_mtimes((&w9), casadi_s89, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #10016: @434 = @434' */
  /* #10017: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10018: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10019: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #10020: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #10021: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10022: @9 = @90[4] */
  for (rr=(&w9), ss=w90+4; ss!=w90+5; ss+=1) *rr++ = *ss;
  /* #10023: @9 = (-@9) */
  w9 = (- w9 );
  /* #10024: @9 = @9' */
  /* #10025: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10026: @434 = mac(@9,@479,@434) */
  casadi_mtimes((&w9), casadi_s89, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #10027: @434 = @434' */
  /* #10028: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10029: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #10030: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #10031: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10032: @9 = @90[3] */
  for (rr=(&w9), ss=w90+3; ss!=w90+4; ss+=1) *rr++ = *ss;
  /* #10033: @9 = (-@9) */
  w9 = (- w9 );
  /* #10034: @9 = @9' */
  /* #10035: @434 = mac(@9,@480,@434) */
  casadi_mtimes((&w9), casadi_s89, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #10036: @434 = @434' */
  /* #10037: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10038: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10039: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #10040: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #10041: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10042: @9 = @90[3] */
  for (rr=(&w9), ss=w90+3; ss!=w90+4; ss+=1) *rr++ = *ss;
  /* #10043: @9 = (-@9) */
  w9 = (- w9 );
  /* #10044: @9 = @9' */
  /* #10045: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10046: @434 = mac(@9,@481,@434) */
  casadi_mtimes((&w9), casadi_s89, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #10047: @434 = @434' */
  /* #10048: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10049: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #10050: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #10051: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10052: @9 = @90[2] */
  for (rr=(&w9), ss=w90+2; ss!=w90+3; ss+=1) *rr++ = *ss;
  /* #10053: @9 = (-@9) */
  w9 = (- w9 );
  /* #10054: @9 = @9' */
  /* #10055: @434 = mac(@9,@482,@434) */
  casadi_mtimes((&w9), casadi_s89, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #10056: @434 = @434' */
  /* #10057: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10058: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10059: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #10060: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #10061: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10062: @9 = @90[2] */
  for (rr=(&w9), ss=w90+2; ss!=w90+3; ss+=1) *rr++ = *ss;
  /* #10063: @9 = (-@9) */
  w9 = (- w9 );
  /* #10064: @9 = @9' */
  /* #10065: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10066: @434 = mac(@9,@483,@434) */
  casadi_mtimes((&w9), casadi_s89, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #10067: @434 = @434' */
  /* #10068: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10069: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #10070: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #10071: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10072: @9 = @90[1] */
  for (rr=(&w9), ss=w90+1; ss!=w90+2; ss+=1) *rr++ = *ss;
  /* #10073: @9 = (-@9) */
  w9 = (- w9 );
  /* #10074: @9 = @9' */
  /* #10075: @434 = mac(@9,@484,@434) */
  casadi_mtimes((&w9), casadi_s89, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #10076: @434 = @434' */
  /* #10077: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10078: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10079: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #10080: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #10081: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10082: @9 = @90[1] */
  for (rr=(&w9), ss=w90+1; ss!=w90+2; ss+=1) *rr++ = *ss;
  /* #10083: @9 = (-@9) */
  w9 = (- w9 );
  /* #10084: @9 = @9' */
  /* #10085: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10086: @434 = mac(@9,@485,@434) */
  casadi_mtimes((&w9), casadi_s89, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #10087: @434 = @434' */
  /* #10088: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10089: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #10090: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #10091: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10092: @9 = @90[0] */
  for (rr=(&w9), ss=w90+0; ss!=w90+1; ss+=1) *rr++ = *ss;
  /* #10093: @9 = (-@9) */
  w9 = (- w9 );
  /* #10094: @9 = @9' */
  /* #10095: @434 = mac(@9,@486,@434) */
  casadi_mtimes((&w9), casadi_s89, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #10096: @434 = @434' */
  /* #10097: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10098: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10099: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #10100: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #10101: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10102: @9 = @90[0] */
  for (rr=(&w9), ss=w90+0; ss!=w90+1; ss+=1) *rr++ = *ss;
  /* #10103: @9 = (-@9) */
  w9 = (- w9 );
  /* #10104: @9 = @9' */
  /* #10105: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10106: @434 = mac(@9,@487,@434) */
  casadi_mtimes((&w9), casadi_s89, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #10107: @434 = @434' */
  /* #10108: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10109: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #10110: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #10111: @1 = vec(@1) */
  /* #10112: (@0[:5096:196;168:182] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+168; tt!=rr+182; tt+=1) *tt = *ss++;
  /* #10113: (@0[12:5108:14] = @1) */
  for (rr=w0+12, ss=w1; rr!=w0+5108; rr+=14) *rr = *ss++;
  /* #10114: @1 = zeros(14x26) */
  casadi_clear(w1, 364);
  /* #10115: (@1[336:350] += @121) */
  for (rr=w1+336, ss=w121; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #10116: (@1[322:336] += @134) */
  for (rr=w1+322, ss=w134; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #10117: (@1[308:322] += @147) */
  for (rr=w1+308, ss=w147; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #10118: (@1[294:308] += @160) */
  for (rr=w1+294, ss=w160; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #10119: (@1[280:294] += @173) */
  for (rr=w1+280, ss=w173; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #10120: (@1[266:280] += @186) */
  for (rr=w1+266, ss=w186; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #10121: (@1[252:266] += @199) */
  for (rr=w1+252, ss=w199; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #10122: (@1[238:252] += @212) */
  for (rr=w1+238, ss=w212; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #10123: (@1[224:238] += @225) */
  for (rr=w1+224, ss=w225; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #10124: (@1[210:224] += @238) */
  for (rr=w1+210, ss=w238; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #10125: (@1[196:210] += @251) */
  for (rr=w1+196, ss=w251; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #10126: (@1[182:196] += @264) */
  for (rr=w1+182, ss=w264; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #10127: (@1[168:182] += @277) */
  for (rr=w1+168, ss=w277; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #10128: (@1[154:168] += @290) */
  for (rr=w1+154, ss=w290; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #10129: (@1[140:154] += @303) */
  for (rr=w1+140, ss=w303; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #10130: (@1[126:140] += @316) */
  for (rr=w1+126, ss=w316; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #10131: (@1[112:126] += @329) */
  for (rr=w1+112, ss=w329; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #10132: (@1[98:112] += @342) */
  for (rr=w1+98, ss=w342; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #10133: (@1[84:98] += @355) */
  for (rr=w1+84, ss=w355; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #10134: (@1[70:84] += @368) */
  for (rr=w1+70, ss=w368; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #10135: (@1[56:70] += @381) */
  for (rr=w1+56, ss=w381; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #10136: (@1[42:56] += @394) */
  for (rr=w1+42, ss=w394; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #10137: (@1[28:42] += @407) */
  for (rr=w1+28, ss=w407; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #10138: (@1[14:28] += @420) */
  for (rr=w1+14, ss=w420; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #10139: (@1[:14] += @433) */
  for (rr=w1+0, ss=w433; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #10140: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10141: @9 = @92[25] */
  for (rr=(&w9), ss=w92+25; ss!=w92+26; ss+=1) *rr++ = *ss;
  /* #10142: @9 = (-@9) */
  w9 = (- w9 );
  /* #10143: @9 = @9' */
  /* #10144: @434 = mac(@9,@435,@434) */
  casadi_mtimes((&w9), casadi_s90, w435, casadi_s69, w434, casadi_s68, w, 0);
  /* #10145: @434 = @434' */
  /* #10146: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10147: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10148: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #10149: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #10150: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10151: @9 = @92[25] */
  for (rr=(&w9), ss=w92+25; ss!=w92+26; ss+=1) *rr++ = *ss;
  /* #10152: @9 = (-@9) */
  w9 = (- w9 );
  /* #10153: @9 = @9' */
  /* #10154: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10155: @434 = mac(@9,@437,@434) */
  casadi_mtimes((&w9), casadi_s90, w437, casadi_s69, w434, casadi_s68, w, 0);
  /* #10156: @434 = @434' */
  /* #10157: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10158: (@1[357:364] += @436) */
  for (rr=w1+357, ss=w436; rr!=w1+364; rr+=1) *rr += *ss++;
  /* #10159: (@1[350:357] += @434) */
  for (rr=w1+350, ss=w434; rr!=w1+357; rr+=1) *rr += *ss++;
  /* #10160: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10161: @9 = @92[24] */
  for (rr=(&w9), ss=w92+24; ss!=w92+25; ss+=1) *rr++ = *ss;
  /* #10162: @9 = (-@9) */
  w9 = (- w9 );
  /* #10163: @9 = @9' */
  /* #10164: @434 = mac(@9,@438,@434) */
  casadi_mtimes((&w9), casadi_s90, w438, casadi_s69, w434, casadi_s68, w, 0);
  /* #10165: @434 = @434' */
  /* #10166: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10167: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10168: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #10169: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #10170: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10171: @9 = @92[24] */
  for (rr=(&w9), ss=w92+24; ss!=w92+25; ss+=1) *rr++ = *ss;
  /* #10172: @9 = (-@9) */
  w9 = (- w9 );
  /* #10173: @9 = @9' */
  /* #10174: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10175: @434 = mac(@9,@439,@434) */
  casadi_mtimes((&w9), casadi_s90, w439, casadi_s69, w434, casadi_s68, w, 0);
  /* #10176: @434 = @434' */
  /* #10177: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10178: (@1[343:350] += @436) */
  for (rr=w1+343, ss=w436; rr!=w1+350; rr+=1) *rr += *ss++;
  /* #10179: (@1[336:343] += @434) */
  for (rr=w1+336, ss=w434; rr!=w1+343; rr+=1) *rr += *ss++;
  /* #10180: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10181: @9 = @92[23] */
  for (rr=(&w9), ss=w92+23; ss!=w92+24; ss+=1) *rr++ = *ss;
  /* #10182: @9 = (-@9) */
  w9 = (- w9 );
  /* #10183: @9 = @9' */
  /* #10184: @434 = mac(@9,@440,@434) */
  casadi_mtimes((&w9), casadi_s90, w440, casadi_s69, w434, casadi_s68, w, 0);
  /* #10185: @434 = @434' */
  /* #10186: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10187: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10188: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #10189: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #10190: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10191: @9 = @92[23] */
  for (rr=(&w9), ss=w92+23; ss!=w92+24; ss+=1) *rr++ = *ss;
  /* #10192: @9 = (-@9) */
  w9 = (- w9 );
  /* #10193: @9 = @9' */
  /* #10194: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10195: @434 = mac(@9,@441,@434) */
  casadi_mtimes((&w9), casadi_s90, w441, casadi_s69, w434, casadi_s68, w, 0);
  /* #10196: @434 = @434' */
  /* #10197: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10198: (@1[329:336] += @436) */
  for (rr=w1+329, ss=w436; rr!=w1+336; rr+=1) *rr += *ss++;
  /* #10199: (@1[322:329] += @434) */
  for (rr=w1+322, ss=w434; rr!=w1+329; rr+=1) *rr += *ss++;
  /* #10200: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10201: @9 = @92[22] */
  for (rr=(&w9), ss=w92+22; ss!=w92+23; ss+=1) *rr++ = *ss;
  /* #10202: @9 = (-@9) */
  w9 = (- w9 );
  /* #10203: @9 = @9' */
  /* #10204: @434 = mac(@9,@442,@434) */
  casadi_mtimes((&w9), casadi_s90, w442, casadi_s69, w434, casadi_s68, w, 0);
  /* #10205: @434 = @434' */
  /* #10206: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10207: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10208: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #10209: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #10210: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10211: @9 = @92[22] */
  for (rr=(&w9), ss=w92+22; ss!=w92+23; ss+=1) *rr++ = *ss;
  /* #10212: @9 = (-@9) */
  w9 = (- w9 );
  /* #10213: @9 = @9' */
  /* #10214: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10215: @434 = mac(@9,@443,@434) */
  casadi_mtimes((&w9), casadi_s90, w443, casadi_s69, w434, casadi_s68, w, 0);
  /* #10216: @434 = @434' */
  /* #10217: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10218: (@1[315:322] += @436) */
  for (rr=w1+315, ss=w436; rr!=w1+322; rr+=1) *rr += *ss++;
  /* #10219: (@1[308:315] += @434) */
  for (rr=w1+308, ss=w434; rr!=w1+315; rr+=1) *rr += *ss++;
  /* #10220: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10221: @9 = @92[21] */
  for (rr=(&w9), ss=w92+21; ss!=w92+22; ss+=1) *rr++ = *ss;
  /* #10222: @9 = (-@9) */
  w9 = (- w9 );
  /* #10223: @9 = @9' */
  /* #10224: @434 = mac(@9,@444,@434) */
  casadi_mtimes((&w9), casadi_s90, w444, casadi_s69, w434, casadi_s68, w, 0);
  /* #10225: @434 = @434' */
  /* #10226: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10227: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10228: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #10229: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #10230: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10231: @9 = @92[21] */
  for (rr=(&w9), ss=w92+21; ss!=w92+22; ss+=1) *rr++ = *ss;
  /* #10232: @9 = (-@9) */
  w9 = (- w9 );
  /* #10233: @9 = @9' */
  /* #10234: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10235: @434 = mac(@9,@445,@434) */
  casadi_mtimes((&w9), casadi_s90, w445, casadi_s69, w434, casadi_s68, w, 0);
  /* #10236: @434 = @434' */
  /* #10237: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10238: (@1[301:308] += @436) */
  for (rr=w1+301, ss=w436; rr!=w1+308; rr+=1) *rr += *ss++;
  /* #10239: (@1[294:301] += @434) */
  for (rr=w1+294, ss=w434; rr!=w1+301; rr+=1) *rr += *ss++;
  /* #10240: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10241: @9 = @92[20] */
  for (rr=(&w9), ss=w92+20; ss!=w92+21; ss+=1) *rr++ = *ss;
  /* #10242: @9 = (-@9) */
  w9 = (- w9 );
  /* #10243: @9 = @9' */
  /* #10244: @434 = mac(@9,@446,@434) */
  casadi_mtimes((&w9), casadi_s90, w446, casadi_s69, w434, casadi_s68, w, 0);
  /* #10245: @434 = @434' */
  /* #10246: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10247: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10248: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #10249: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #10250: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10251: @9 = @92[20] */
  for (rr=(&w9), ss=w92+20; ss!=w92+21; ss+=1) *rr++ = *ss;
  /* #10252: @9 = (-@9) */
  w9 = (- w9 );
  /* #10253: @9 = @9' */
  /* #10254: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10255: @434 = mac(@9,@447,@434) */
  casadi_mtimes((&w9), casadi_s90, w447, casadi_s69, w434, casadi_s68, w, 0);
  /* #10256: @434 = @434' */
  /* #10257: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10258: (@1[287:294] += @436) */
  for (rr=w1+287, ss=w436; rr!=w1+294; rr+=1) *rr += *ss++;
  /* #10259: (@1[280:287] += @434) */
  for (rr=w1+280, ss=w434; rr!=w1+287; rr+=1) *rr += *ss++;
  /* #10260: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10261: @9 = @92[19] */
  for (rr=(&w9), ss=w92+19; ss!=w92+20; ss+=1) *rr++ = *ss;
  /* #10262: @9 = (-@9) */
  w9 = (- w9 );
  /* #10263: @9 = @9' */
  /* #10264: @434 = mac(@9,@448,@434) */
  casadi_mtimes((&w9), casadi_s90, w448, casadi_s69, w434, casadi_s68, w, 0);
  /* #10265: @434 = @434' */
  /* #10266: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10267: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10268: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #10269: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #10270: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10271: @9 = @92[19] */
  for (rr=(&w9), ss=w92+19; ss!=w92+20; ss+=1) *rr++ = *ss;
  /* #10272: @9 = (-@9) */
  w9 = (- w9 );
  /* #10273: @9 = @9' */
  /* #10274: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10275: @434 = mac(@9,@449,@434) */
  casadi_mtimes((&w9), casadi_s90, w449, casadi_s69, w434, casadi_s68, w, 0);
  /* #10276: @434 = @434' */
  /* #10277: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10278: (@1[273:280] += @436) */
  for (rr=w1+273, ss=w436; rr!=w1+280; rr+=1) *rr += *ss++;
  /* #10279: (@1[266:273] += @434) */
  for (rr=w1+266, ss=w434; rr!=w1+273; rr+=1) *rr += *ss++;
  /* #10280: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10281: @9 = @92[18] */
  for (rr=(&w9), ss=w92+18; ss!=w92+19; ss+=1) *rr++ = *ss;
  /* #10282: @9 = (-@9) */
  w9 = (- w9 );
  /* #10283: @9 = @9' */
  /* #10284: @434 = mac(@9,@450,@434) */
  casadi_mtimes((&w9), casadi_s90, w450, casadi_s69, w434, casadi_s68, w, 0);
  /* #10285: @434 = @434' */
  /* #10286: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10287: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10288: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #10289: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #10290: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10291: @9 = @92[18] */
  for (rr=(&w9), ss=w92+18; ss!=w92+19; ss+=1) *rr++ = *ss;
  /* #10292: @9 = (-@9) */
  w9 = (- w9 );
  /* #10293: @9 = @9' */
  /* #10294: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10295: @434 = mac(@9,@451,@434) */
  casadi_mtimes((&w9), casadi_s90, w451, casadi_s69, w434, casadi_s68, w, 0);
  /* #10296: @434 = @434' */
  /* #10297: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10298: (@1[259:266] += @436) */
  for (rr=w1+259, ss=w436; rr!=w1+266; rr+=1) *rr += *ss++;
  /* #10299: (@1[252:259] += @434) */
  for (rr=w1+252, ss=w434; rr!=w1+259; rr+=1) *rr += *ss++;
  /* #10300: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10301: @9 = @92[17] */
  for (rr=(&w9), ss=w92+17; ss!=w92+18; ss+=1) *rr++ = *ss;
  /* #10302: @9 = (-@9) */
  w9 = (- w9 );
  /* #10303: @9 = @9' */
  /* #10304: @434 = mac(@9,@452,@434) */
  casadi_mtimes((&w9), casadi_s90, w452, casadi_s69, w434, casadi_s68, w, 0);
  /* #10305: @434 = @434' */
  /* #10306: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10307: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10308: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #10309: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #10310: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10311: @9 = @92[17] */
  for (rr=(&w9), ss=w92+17; ss!=w92+18; ss+=1) *rr++ = *ss;
  /* #10312: @9 = (-@9) */
  w9 = (- w9 );
  /* #10313: @9 = @9' */
  /* #10314: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10315: @434 = mac(@9,@453,@434) */
  casadi_mtimes((&w9), casadi_s90, w453, casadi_s69, w434, casadi_s68, w, 0);
  /* #10316: @434 = @434' */
  /* #10317: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10318: (@1[245:252] += @436) */
  for (rr=w1+245, ss=w436; rr!=w1+252; rr+=1) *rr += *ss++;
  /* #10319: (@1[238:245] += @434) */
  for (rr=w1+238, ss=w434; rr!=w1+245; rr+=1) *rr += *ss++;
  /* #10320: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10321: @9 = @92[16] */
  for (rr=(&w9), ss=w92+16; ss!=w92+17; ss+=1) *rr++ = *ss;
  /* #10322: @9 = (-@9) */
  w9 = (- w9 );
  /* #10323: @9 = @9' */
  /* #10324: @434 = mac(@9,@454,@434) */
  casadi_mtimes((&w9), casadi_s90, w454, casadi_s69, w434, casadi_s68, w, 0);
  /* #10325: @434 = @434' */
  /* #10326: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10327: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10328: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #10329: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #10330: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10331: @9 = @92[16] */
  for (rr=(&w9), ss=w92+16; ss!=w92+17; ss+=1) *rr++ = *ss;
  /* #10332: @9 = (-@9) */
  w9 = (- w9 );
  /* #10333: @9 = @9' */
  /* #10334: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10335: @434 = mac(@9,@455,@434) */
  casadi_mtimes((&w9), casadi_s90, w455, casadi_s69, w434, casadi_s68, w, 0);
  /* #10336: @434 = @434' */
  /* #10337: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10338: (@1[231:238] += @436) */
  for (rr=w1+231, ss=w436; rr!=w1+238; rr+=1) *rr += *ss++;
  /* #10339: (@1[224:231] += @434) */
  for (rr=w1+224, ss=w434; rr!=w1+231; rr+=1) *rr += *ss++;
  /* #10340: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10341: @9 = @92[15] */
  for (rr=(&w9), ss=w92+15; ss!=w92+16; ss+=1) *rr++ = *ss;
  /* #10342: @9 = (-@9) */
  w9 = (- w9 );
  /* #10343: @9 = @9' */
  /* #10344: @434 = mac(@9,@456,@434) */
  casadi_mtimes((&w9), casadi_s90, w456, casadi_s69, w434, casadi_s68, w, 0);
  /* #10345: @434 = @434' */
  /* #10346: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10347: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10348: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #10349: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #10350: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10351: @9 = @92[15] */
  for (rr=(&w9), ss=w92+15; ss!=w92+16; ss+=1) *rr++ = *ss;
  /* #10352: @9 = (-@9) */
  w9 = (- w9 );
  /* #10353: @9 = @9' */
  /* #10354: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10355: @434 = mac(@9,@457,@434) */
  casadi_mtimes((&w9), casadi_s90, w457, casadi_s69, w434, casadi_s68, w, 0);
  /* #10356: @434 = @434' */
  /* #10357: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10358: (@1[217:224] += @436) */
  for (rr=w1+217, ss=w436; rr!=w1+224; rr+=1) *rr += *ss++;
  /* #10359: (@1[210:217] += @434) */
  for (rr=w1+210, ss=w434; rr!=w1+217; rr+=1) *rr += *ss++;
  /* #10360: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10361: @9 = @92[14] */
  for (rr=(&w9), ss=w92+14; ss!=w92+15; ss+=1) *rr++ = *ss;
  /* #10362: @9 = (-@9) */
  w9 = (- w9 );
  /* #10363: @9 = @9' */
  /* #10364: @434 = mac(@9,@458,@434) */
  casadi_mtimes((&w9), casadi_s90, w458, casadi_s69, w434, casadi_s68, w, 0);
  /* #10365: @434 = @434' */
  /* #10366: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10367: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10368: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #10369: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #10370: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10371: @9 = @92[14] */
  for (rr=(&w9), ss=w92+14; ss!=w92+15; ss+=1) *rr++ = *ss;
  /* #10372: @9 = (-@9) */
  w9 = (- w9 );
  /* #10373: @9 = @9' */
  /* #10374: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10375: @434 = mac(@9,@459,@434) */
  casadi_mtimes((&w9), casadi_s90, w459, casadi_s69, w434, casadi_s68, w, 0);
  /* #10376: @434 = @434' */
  /* #10377: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10378: (@1[203:210] += @436) */
  for (rr=w1+203, ss=w436; rr!=w1+210; rr+=1) *rr += *ss++;
  /* #10379: (@1[196:203] += @434) */
  for (rr=w1+196, ss=w434; rr!=w1+203; rr+=1) *rr += *ss++;
  /* #10380: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10381: @9 = @92[13] */
  for (rr=(&w9), ss=w92+13; ss!=w92+14; ss+=1) *rr++ = *ss;
  /* #10382: @9 = (-@9) */
  w9 = (- w9 );
  /* #10383: @9 = @9' */
  /* #10384: @434 = mac(@9,@460,@434) */
  casadi_mtimes((&w9), casadi_s90, w460, casadi_s69, w434, casadi_s68, w, 0);
  /* #10385: @434 = @434' */
  /* #10386: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10387: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10388: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #10389: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #10390: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10391: @9 = @92[13] */
  for (rr=(&w9), ss=w92+13; ss!=w92+14; ss+=1) *rr++ = *ss;
  /* #10392: @9 = (-@9) */
  w9 = (- w9 );
  /* #10393: @9 = @9' */
  /* #10394: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10395: @434 = mac(@9,@461,@434) */
  casadi_mtimes((&w9), casadi_s90, w461, casadi_s69, w434, casadi_s68, w, 0);
  /* #10396: @434 = @434' */
  /* #10397: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10398: (@1[189:196] += @436) */
  for (rr=w1+189, ss=w436; rr!=w1+196; rr+=1) *rr += *ss++;
  /* #10399: (@1[182:189] += @434) */
  for (rr=w1+182, ss=w434; rr!=w1+189; rr+=1) *rr += *ss++;
  /* #10400: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10401: @9 = @92[12] */
  for (rr=(&w9), ss=w92+12; ss!=w92+13; ss+=1) *rr++ = *ss;
  /* #10402: @9 = (-@9) */
  w9 = (- w9 );
  /* #10403: @9 = @9' */
  /* #10404: @434 = mac(@9,@462,@434) */
  casadi_mtimes((&w9), casadi_s90, w462, casadi_s69, w434, casadi_s68, w, 0);
  /* #10405: @434 = @434' */
  /* #10406: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10407: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10408: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #10409: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #10410: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10411: @9 = @92[12] */
  for (rr=(&w9), ss=w92+12; ss!=w92+13; ss+=1) *rr++ = *ss;
  /* #10412: @9 = (-@9) */
  w9 = (- w9 );
  /* #10413: @9 = @9' */
  /* #10414: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10415: @434 = mac(@9,@463,@434) */
  casadi_mtimes((&w9), casadi_s90, w463, casadi_s69, w434, casadi_s68, w, 0);
  /* #10416: @434 = @434' */
  /* #10417: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10418: (@1[175:182] += @436) */
  for (rr=w1+175, ss=w436; rr!=w1+182; rr+=1) *rr += *ss++;
  /* #10419: (@1[168:175] += @434) */
  for (rr=w1+168, ss=w434; rr!=w1+175; rr+=1) *rr += *ss++;
  /* #10420: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10421: @9 = @92[11] */
  for (rr=(&w9), ss=w92+11; ss!=w92+12; ss+=1) *rr++ = *ss;
  /* #10422: @9 = (-@9) */
  w9 = (- w9 );
  /* #10423: @9 = @9' */
  /* #10424: @434 = mac(@9,@464,@434) */
  casadi_mtimes((&w9), casadi_s90, w464, casadi_s69, w434, casadi_s68, w, 0);
  /* #10425: @434 = @434' */
  /* #10426: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10427: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10428: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #10429: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #10430: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10431: @9 = @92[11] */
  for (rr=(&w9), ss=w92+11; ss!=w92+12; ss+=1) *rr++ = *ss;
  /* #10432: @9 = (-@9) */
  w9 = (- w9 );
  /* #10433: @9 = @9' */
  /* #10434: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10435: @434 = mac(@9,@465,@434) */
  casadi_mtimes((&w9), casadi_s90, w465, casadi_s69, w434, casadi_s68, w, 0);
  /* #10436: @434 = @434' */
  /* #10437: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10438: (@1[161:168] += @436) */
  for (rr=w1+161, ss=w436; rr!=w1+168; rr+=1) *rr += *ss++;
  /* #10439: (@1[154:161] += @434) */
  for (rr=w1+154, ss=w434; rr!=w1+161; rr+=1) *rr += *ss++;
  /* #10440: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10441: @9 = @92[10] */
  for (rr=(&w9), ss=w92+10; ss!=w92+11; ss+=1) *rr++ = *ss;
  /* #10442: @9 = (-@9) */
  w9 = (- w9 );
  /* #10443: @9 = @9' */
  /* #10444: @434 = mac(@9,@466,@434) */
  casadi_mtimes((&w9), casadi_s90, w466, casadi_s69, w434, casadi_s68, w, 0);
  /* #10445: @434 = @434' */
  /* #10446: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10447: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10448: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #10449: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #10450: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10451: @9 = @92[10] */
  for (rr=(&w9), ss=w92+10; ss!=w92+11; ss+=1) *rr++ = *ss;
  /* #10452: @9 = (-@9) */
  w9 = (- w9 );
  /* #10453: @9 = @9' */
  /* #10454: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10455: @434 = mac(@9,@467,@434) */
  casadi_mtimes((&w9), casadi_s90, w467, casadi_s69, w434, casadi_s68, w, 0);
  /* #10456: @434 = @434' */
  /* #10457: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10458: (@1[147:154] += @436) */
  for (rr=w1+147, ss=w436; rr!=w1+154; rr+=1) *rr += *ss++;
  /* #10459: (@1[140:147] += @434) */
  for (rr=w1+140, ss=w434; rr!=w1+147; rr+=1) *rr += *ss++;
  /* #10460: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10461: @9 = @92[9] */
  for (rr=(&w9), ss=w92+9; ss!=w92+10; ss+=1) *rr++ = *ss;
  /* #10462: @9 = (-@9) */
  w9 = (- w9 );
  /* #10463: @9 = @9' */
  /* #10464: @434 = mac(@9,@468,@434) */
  casadi_mtimes((&w9), casadi_s90, w468, casadi_s69, w434, casadi_s68, w, 0);
  /* #10465: @434 = @434' */
  /* #10466: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10467: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10468: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #10469: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #10470: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10471: @9 = @92[9] */
  for (rr=(&w9), ss=w92+9; ss!=w92+10; ss+=1) *rr++ = *ss;
  /* #10472: @9 = (-@9) */
  w9 = (- w9 );
  /* #10473: @9 = @9' */
  /* #10474: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10475: @434 = mac(@9,@469,@434) */
  casadi_mtimes((&w9), casadi_s90, w469, casadi_s69, w434, casadi_s68, w, 0);
  /* #10476: @434 = @434' */
  /* #10477: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10478: (@1[133:140] += @436) */
  for (rr=w1+133, ss=w436; rr!=w1+140; rr+=1) *rr += *ss++;
  /* #10479: (@1[126:133] += @434) */
  for (rr=w1+126, ss=w434; rr!=w1+133; rr+=1) *rr += *ss++;
  /* #10480: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10481: @9 = @92[8] */
  for (rr=(&w9), ss=w92+8; ss!=w92+9; ss+=1) *rr++ = *ss;
  /* #10482: @9 = (-@9) */
  w9 = (- w9 );
  /* #10483: @9 = @9' */
  /* #10484: @434 = mac(@9,@470,@434) */
  casadi_mtimes((&w9), casadi_s90, w470, casadi_s69, w434, casadi_s68, w, 0);
  /* #10485: @434 = @434' */
  /* #10486: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10487: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10488: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #10489: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #10490: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10491: @9 = @92[8] */
  for (rr=(&w9), ss=w92+8; ss!=w92+9; ss+=1) *rr++ = *ss;
  /* #10492: @9 = (-@9) */
  w9 = (- w9 );
  /* #10493: @9 = @9' */
  /* #10494: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10495: @434 = mac(@9,@471,@434) */
  casadi_mtimes((&w9), casadi_s90, w471, casadi_s69, w434, casadi_s68, w, 0);
  /* #10496: @434 = @434' */
  /* #10497: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10498: (@1[119:126] += @436) */
  for (rr=w1+119, ss=w436; rr!=w1+126; rr+=1) *rr += *ss++;
  /* #10499: (@1[112:119] += @434) */
  for (rr=w1+112, ss=w434; rr!=w1+119; rr+=1) *rr += *ss++;
  /* #10500: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10501: @9 = @92[7] */
  for (rr=(&w9), ss=w92+7; ss!=w92+8; ss+=1) *rr++ = *ss;
  /* #10502: @9 = (-@9) */
  w9 = (- w9 );
  /* #10503: @9 = @9' */
  /* #10504: @434 = mac(@9,@472,@434) */
  casadi_mtimes((&w9), casadi_s90, w472, casadi_s69, w434, casadi_s68, w, 0);
  /* #10505: @434 = @434' */
  /* #10506: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10507: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10508: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #10509: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #10510: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10511: @9 = @92[7] */
  for (rr=(&w9), ss=w92+7; ss!=w92+8; ss+=1) *rr++ = *ss;
  /* #10512: @9 = (-@9) */
  w9 = (- w9 );
  /* #10513: @9 = @9' */
  /* #10514: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10515: @434 = mac(@9,@473,@434) */
  casadi_mtimes((&w9), casadi_s90, w473, casadi_s69, w434, casadi_s68, w, 0);
  /* #10516: @434 = @434' */
  /* #10517: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10518: (@1[105:112] += @436) */
  for (rr=w1+105, ss=w436; rr!=w1+112; rr+=1) *rr += *ss++;
  /* #10519: (@1[98:105] += @434) */
  for (rr=w1+98, ss=w434; rr!=w1+105; rr+=1) *rr += *ss++;
  /* #10520: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10521: @9 = @92[6] */
  for (rr=(&w9), ss=w92+6; ss!=w92+7; ss+=1) *rr++ = *ss;
  /* #10522: @9 = (-@9) */
  w9 = (- w9 );
  /* #10523: @9 = @9' */
  /* #10524: @434 = mac(@9,@474,@434) */
  casadi_mtimes((&w9), casadi_s90, w474, casadi_s69, w434, casadi_s68, w, 0);
  /* #10525: @434 = @434' */
  /* #10526: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10527: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10528: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #10529: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #10530: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10531: @9 = @92[6] */
  for (rr=(&w9), ss=w92+6; ss!=w92+7; ss+=1) *rr++ = *ss;
  /* #10532: @9 = (-@9) */
  w9 = (- w9 );
  /* #10533: @9 = @9' */
  /* #10534: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10535: @434 = mac(@9,@475,@434) */
  casadi_mtimes((&w9), casadi_s90, w475, casadi_s69, w434, casadi_s68, w, 0);
  /* #10536: @434 = @434' */
  /* #10537: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10538: (@1[91:98] += @436) */
  for (rr=w1+91, ss=w436; rr!=w1+98; rr+=1) *rr += *ss++;
  /* #10539: (@1[84:91] += @434) */
  for (rr=w1+84, ss=w434; rr!=w1+91; rr+=1) *rr += *ss++;
  /* #10540: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10541: @9 = @92[5] */
  for (rr=(&w9), ss=w92+5; ss!=w92+6; ss+=1) *rr++ = *ss;
  /* #10542: @9 = (-@9) */
  w9 = (- w9 );
  /* #10543: @9 = @9' */
  /* #10544: @434 = mac(@9,@476,@434) */
  casadi_mtimes((&w9), casadi_s90, w476, casadi_s69, w434, casadi_s68, w, 0);
  /* #10545: @434 = @434' */
  /* #10546: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10547: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10548: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #10549: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #10550: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10551: @9 = @92[5] */
  for (rr=(&w9), ss=w92+5; ss!=w92+6; ss+=1) *rr++ = *ss;
  /* #10552: @9 = (-@9) */
  w9 = (- w9 );
  /* #10553: @9 = @9' */
  /* #10554: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10555: @434 = mac(@9,@477,@434) */
  casadi_mtimes((&w9), casadi_s90, w477, casadi_s69, w434, casadi_s68, w, 0);
  /* #10556: @434 = @434' */
  /* #10557: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10558: (@1[77:84] += @436) */
  for (rr=w1+77, ss=w436; rr!=w1+84; rr+=1) *rr += *ss++;
  /* #10559: (@1[70:77] += @434) */
  for (rr=w1+70, ss=w434; rr!=w1+77; rr+=1) *rr += *ss++;
  /* #10560: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10561: @9 = @92[4] */
  for (rr=(&w9), ss=w92+4; ss!=w92+5; ss+=1) *rr++ = *ss;
  /* #10562: @9 = (-@9) */
  w9 = (- w9 );
  /* #10563: @9 = @9' */
  /* #10564: @434 = mac(@9,@478,@434) */
  casadi_mtimes((&w9), casadi_s90, w478, casadi_s69, w434, casadi_s68, w, 0);
  /* #10565: @434 = @434' */
  /* #10566: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10567: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10568: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #10569: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #10570: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10571: @9 = @92[4] */
  for (rr=(&w9), ss=w92+4; ss!=w92+5; ss+=1) *rr++ = *ss;
  /* #10572: @9 = (-@9) */
  w9 = (- w9 );
  /* #10573: @9 = @9' */
  /* #10574: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10575: @434 = mac(@9,@479,@434) */
  casadi_mtimes((&w9), casadi_s90, w479, casadi_s69, w434, casadi_s68, w, 0);
  /* #10576: @434 = @434' */
  /* #10577: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10578: (@1[63:70] += @436) */
  for (rr=w1+63, ss=w436; rr!=w1+70; rr+=1) *rr += *ss++;
  /* #10579: (@1[56:63] += @434) */
  for (rr=w1+56, ss=w434; rr!=w1+63; rr+=1) *rr += *ss++;
  /* #10580: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10581: @9 = @92[3] */
  for (rr=(&w9), ss=w92+3; ss!=w92+4; ss+=1) *rr++ = *ss;
  /* #10582: @9 = (-@9) */
  w9 = (- w9 );
  /* #10583: @9 = @9' */
  /* #10584: @434 = mac(@9,@480,@434) */
  casadi_mtimes((&w9), casadi_s90, w480, casadi_s69, w434, casadi_s68, w, 0);
  /* #10585: @434 = @434' */
  /* #10586: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10587: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10588: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #10589: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #10590: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10591: @9 = @92[3] */
  for (rr=(&w9), ss=w92+3; ss!=w92+4; ss+=1) *rr++ = *ss;
  /* #10592: @9 = (-@9) */
  w9 = (- w9 );
  /* #10593: @9 = @9' */
  /* #10594: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10595: @434 = mac(@9,@481,@434) */
  casadi_mtimes((&w9), casadi_s90, w481, casadi_s69, w434, casadi_s68, w, 0);
  /* #10596: @434 = @434' */
  /* #10597: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10598: (@1[49:56] += @436) */
  for (rr=w1+49, ss=w436; rr!=w1+56; rr+=1) *rr += *ss++;
  /* #10599: (@1[42:49] += @434) */
  for (rr=w1+42, ss=w434; rr!=w1+49; rr+=1) *rr += *ss++;
  /* #10600: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10601: @9 = @92[2] */
  for (rr=(&w9), ss=w92+2; ss!=w92+3; ss+=1) *rr++ = *ss;
  /* #10602: @9 = (-@9) */
  w9 = (- w9 );
  /* #10603: @9 = @9' */
  /* #10604: @434 = mac(@9,@482,@434) */
  casadi_mtimes((&w9), casadi_s90, w482, casadi_s69, w434, casadi_s68, w, 0);
  /* #10605: @434 = @434' */
  /* #10606: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10607: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10608: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #10609: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #10610: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10611: @9 = @92[2] */
  for (rr=(&w9), ss=w92+2; ss!=w92+3; ss+=1) *rr++ = *ss;
  /* #10612: @9 = (-@9) */
  w9 = (- w9 );
  /* #10613: @9 = @9' */
  /* #10614: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10615: @434 = mac(@9,@483,@434) */
  casadi_mtimes((&w9), casadi_s90, w483, casadi_s69, w434, casadi_s68, w, 0);
  /* #10616: @434 = @434' */
  /* #10617: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10618: (@1[35:42] += @436) */
  for (rr=w1+35, ss=w436; rr!=w1+42; rr+=1) *rr += *ss++;
  /* #10619: (@1[28:35] += @434) */
  for (rr=w1+28, ss=w434; rr!=w1+35; rr+=1) *rr += *ss++;
  /* #10620: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10621: @9 = @92[1] */
  for (rr=(&w9), ss=w92+1; ss!=w92+2; ss+=1) *rr++ = *ss;
  /* #10622: @9 = (-@9) */
  w9 = (- w9 );
  /* #10623: @9 = @9' */
  /* #10624: @434 = mac(@9,@484,@434) */
  casadi_mtimes((&w9), casadi_s90, w484, casadi_s69, w434, casadi_s68, w, 0);
  /* #10625: @434 = @434' */
  /* #10626: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10627: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10628: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #10629: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #10630: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10631: @9 = @92[1] */
  for (rr=(&w9), ss=w92+1; ss!=w92+2; ss+=1) *rr++ = *ss;
  /* #10632: @9 = (-@9) */
  w9 = (- w9 );
  /* #10633: @9 = @9' */
  /* #10634: @9 = (@63*@9) */
  w9  = (w63*w9);
  /* #10635: @434 = mac(@9,@485,@434) */
  casadi_mtimes((&w9), casadi_s90, w485, casadi_s69, w434, casadi_s68, w, 0);
  /* #10636: @434 = @434' */
  /* #10637: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10638: (@1[21:28] += @436) */
  for (rr=w1+21, ss=w436; rr!=w1+28; rr+=1) *rr += *ss++;
  /* #10639: (@1[14:21] += @434) */
  for (rr=w1+14, ss=w434; rr!=w1+21; rr+=1) *rr += *ss++;
  /* #10640: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10641: @9 = @92[0] */
  for (rr=(&w9), ss=w92+0; ss!=w92+1; ss+=1) *rr++ = *ss;
  /* #10642: @9 = (-@9) */
  w9 = (- w9 );
  /* #10643: @9 = @9' */
  /* #10644: @434 = mac(@9,@486,@434) */
  casadi_mtimes((&w9), casadi_s90, w486, casadi_s69, w434, casadi_s68, w, 0);
  /* #10645: @434 = @434' */
  /* #10646: @434 = (@63*@434) */
  for (i=0, rr=w434, cs=w434; i<7; ++i) (*rr++)  = (w63*(*cs++));
  /* #10647: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10648: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #10649: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #10650: @434 = zeros(1x7) */
  casadi_clear(w434, 7);
  /* #10651: @9 = @92[0] */
  for (rr=(&w9), ss=w92+0; ss!=w92+1; ss+=1) *rr++ = *ss;
  /* #10652: @9 = (-@9) */
  w9 = (- w9 );
  /* #10653: @9 = @9' */
  /* #10654: @63 = (@63*@9) */
  w63 *= w9;
  /* #10655: @434 = mac(@63,@487,@434) */
  casadi_mtimes((&w63), casadi_s90, w487, casadi_s69, w434, casadi_s68, w, 0);
  /* #10656: @434 = @434' */
  /* #10657: @436 = (-@434) */
  for (i=0, rr=w436, cs=w434; i<7; ++i) *rr++ = (- *cs++ );
  /* #10658: (@1[7:14] += @436) */
  for (rr=w1+7, ss=w436; rr!=w1+14; rr+=1) *rr += *ss++;
  /* #10659: (@1[:7] += @434) */
  for (rr=w1+0, ss=w434; rr!=w1+7; rr+=1) *rr += *ss++;
  /* #10660: @1 = vec(@1) */
  /* #10661: (@0[:5096:196;182:196] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+5096; rr+=196) for (tt=rr+182; tt!=rr+196; tt+=1) *tt = *ss++;
  /* #10662: (@0[13:5109:14] = @1) */
  for (rr=w0+13, ss=w1; rr!=w0+5109; rr+=14) *rr = *ss++;
  /* #10663: @613 = @0' */
  casadi_trans(w0,casadi_s91, w613, casadi_s91, iw);
  /* #10664: output[0][0] = @613 */
  casadi_copy(w613, 5496, res[0]);
  return 0;
}

/* adj1_intg:(x0[14],z0[0],p[4],u[0],adj_xf[],adj_zf[],adj_qf[],out_xf[14x1,0nz],out_zf[],out_qf[0],out_adj_x0[],out_adj_z0[],out_adj_p[],out_adj_u[],adj2_xf[14],adj2_zf[],adj2_qf[0],adj2_adj_x0[],adj2_adj_z0[],adj2_adj_p[],adj2_adj_u[])->(adj2_x0[14],adj2_z0[0],adj2_p[4],adj2_u[0],adj2_adj_xf[],adj2_adj_zf[],adj2_adj_qf[]) */
static int casadi_f27(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+7, *rr;
  const casadi_real **arg1=arg+21, *cs;
  casadi_real w1, *w2=w+224, *w4=w+238, *w10=w+242, *w16=w+256, *w22=w+270, *w27=w+284, *w30=w+298, *w31=w+312, *w32=w+316, *w33=w+320, *w34=w+324;
  /* #0: @0 = 0x1 */
  /* #1: @1 = 0.05 */
  w1 = 5.0000000000000003e-02;
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 14, w2);
  /* #3: @3 = 0x1 */
  /* #4: @4 = input[2][0] */
  casadi_copy(arg[2], 4, w4);
  /* #5: @5 = 0x1 */
  /* #6: @6 = zeros(14x1,0nz) */
  /* #7: @7 = 0x1 */
  /* #8: @8 = 0x1 */
  /* #9: @9 = 0x1 */
  /* #10: {@10, NULL, NULL} = step(@0, @1, @2, @3, @4, @5) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w2;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  res1[0]=w10;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #11: @11 = 0x1 */
  /* #12: @12 = zeros(14x1,0nz) */
  /* #13: @13 = 0x1 */
  /* #14: @14 = 0x1 */
  /* #15: @15 = 0x1 */
  /* #16: {@16, NULL, NULL} = step(@9, @1, @10, @11, @4, @5) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w10;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  res1[0]=w16;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #17: @17 = 0x1 */
  /* #18: @18 = zeros(14x1,0nz) */
  /* #19: @19 = 0x1 */
  /* #20: @20 = 0x1 */
  /* #21: @21 = 0x1 */
  /* #22: {@22, NULL, NULL} = step(@15, @1, @16, @17, @4, @5) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w16;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  res1[0]=w22;
  res1[1]=0;
  res1[2]=0;
  if (casadi_f5(arg1, res1, iw, w, 0)) return 1;
  /* #23: @23 = 0x1 */
  /* #24: @24 = zeros(14x1,0nz) */
  /* #25: @25 = 0x1 */
  /* #26: @26 = 0x1 */
  /* #27: @27 = input[14][0] */
  casadi_copy(arg[14], 14, w27);
  /* #28: @28 = 0x1 */
  /* #29: @29 = 0x1 */
  /* #30: {NULL, NULL, @30, NULL, @31, NULL} = adj1_step(@21, @1, @22, @23, @4, @5, @24, @25, @26, @27, @28, @29) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w22;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w27;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w30;
  res1[3]=0;
  res1[4]=w31;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #31: @21 = 0x1 */
  /* #32: @23 = 0x1 */
  /* #33: {NULL, NULL, @22, NULL, @32, NULL} = adj1_step(@15, @1, @16, @17, @4, @5, @18, @19, @20, @30, @21, @23) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w16;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w30;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w22;
  res1[3]=0;
  res1[4]=w32;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #34: @15 = 0x1 */
  /* #35: @17 = 0x1 */
  /* #36: {NULL, NULL, @16, NULL, @33, NULL} = adj1_step(@9, @1, @10, @11, @4, @5, @12, @13, @14, @22, @15, @17) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w10;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w22;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w16;
  res1[3]=0;
  res1[4]=w33;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #37: @9 = 0x1 */
  /* #38: @11 = 0x1 */
  /* #39: {NULL, NULL, @10, NULL, @34, NULL} = adj1_step(@0, @1, @2, @3, @4, @5, @6, @7, @8, @16, @9, @11) */
  arg1[0]=0;
  arg1[1]=(&w1);
  arg1[2]=w2;
  arg1[3]=0;
  arg1[4]=w4;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=w16;
  arg1[10]=0;
  arg1[11]=0;
  res1[0]=0;
  res1[1]=0;
  res1[2]=w10;
  res1[3]=0;
  res1[4]=w34;
  res1[5]=0;
  if (casadi_f19(arg1, res1, iw, w, 0)) return 1;
  /* #40: output[0][0] = @10 */
  casadi_copy(w10, 14, res[0]);
  /* #41: @31 = (@31+@32) */
  for (i=0, rr=w31, cs=w32; i<4; ++i) (*rr++) += (*cs++);
  /* #42: @31 = (@31+@33) */
  for (i=0, rr=w31, cs=w33; i<4; ++i) (*rr++) += (*cs++);
  /* #43: @31 = (@31+@34) */
  for (i=0, rr=w31, cs=w34; i<4; ++i) (*rr++) += (*cs++);
  /* #44: output[2][0] = @31 */
  casadi_copy(w31, 4, res[2]);
  return 0;
}

/* adj1_f_disc:(x[14],u[4],out_x_next[14x1,0nz],adj_x_next[14])->(adj_x[14],adj_u[4]) */
static int casadi_f26(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+2, *rr;
  const casadi_real **arg1=arg+4, *cs;
  casadi_real *w0=w+328, *w1=w+331, w2, *w3=w+335, *w4=w+338, w5, *w6=w+342, *w8=w+356, *w13=w+360, *w15=w+374, *w16=w+388;
  /* #0: @0 = input[0][0] */
  casadi_copy(arg[0], 3, w0);
  /* #1: @1 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+3 : 0, 3, w1);
  /* #2: @2 = input[0][2] */
  w2 = arg[0] ? arg[0][6] : 0;
  /* #3: @3 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+7 : 0, 3, w3);
  /* #4: @4 = input[0][4] */
  casadi_copy(arg[0] ? arg[0]+10 : 0, 3, w4);
  /* #5: @5 = input[0][5] */
  w5 = arg[0] ? arg[0][13] : 0;
  /* #6: @6 = vertcat(@0, @1, @2, @3, @4, @5) */
  rr=w6;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  for (i=0, cs=w3; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w4; i<3; ++i) *rr++ = *cs++;
  *rr++ = w5;
  /* #7: @7 = 0x1 */
  /* #8: @0 = input[1][0] */
  casadi_copy(arg[1], 3, w0);
  /* #9: @2 = input[1][1] */
  w2 = arg[1] ? arg[1][3] : 0;
  /* #10: @8 = vertcat(@0, @2) */
  rr=w8;
  for (i=0, cs=w0; i<3; ++i) *rr++ = *cs++;
  *rr++ = w2;
  /* #11: @9 = 0x1 */
  /* #12: @10 = 0x0 */
  /* #13: @11 = zeros(14x1,0nz) */
  /* #14: @12 = 0x1 */
  /* #15: @13 = input[3][0] */
  casadi_copy(arg[3], 14, w13);
  /* #16: @14 = 0x1 */
  /* #17: {@15, NULL, @16, NULL, NULL, NULL, NULL} = adj1_intg(@6, @7, @8, @9, @10, @10, @10, @11, @10, @12, @10, @10, @10, @10, @13, @10, @14, @10, @10, @10, @10) */
  arg1[0]=w6;
  arg1[1]=0;
  arg1[2]=w8;
  arg1[3]=0;
  arg1[4]=0;
  arg1[5]=0;
  arg1[6]=0;
  arg1[7]=0;
  arg1[8]=0;
  arg1[9]=0;
  arg1[10]=0;
  arg1[11]=0;
  arg1[12]=0;
  arg1[13]=0;
  arg1[14]=w13;
  arg1[15]=0;
  arg1[16]=0;
  arg1[17]=0;
  arg1[18]=0;
  arg1[19]=0;
  arg1[20]=0;
  res1[0]=w15;
  res1[1]=0;
  res1[2]=w16;
  res1[3]=0;
  res1[4]=0;
  res1[5]=0;
  res1[6]=0;
  if (casadi_f27(arg1, res1, iw, w, 0)) return 1;
  /* #18: output[0][0] = @15 */
  casadi_copy(w15, 14, res[0]);
  /* #19: output[1][0] = @16 */
  casadi_copy(w16, 4, res[1]);
  return 0;
}

/* nlp_grad:(x[464],p[14],lam_f,lam_g[564])->(f,g[564],grad_gamma_x[464],grad_gamma_p[14]) */
static int casadi_f25(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j, k;
  casadi_real **res1=res+4, *rr, *ss, *tt;
  const casadi_real **arg1=arg+4, *cs;
  casadi_real w0, *w1=w+393, *w2=w+400, *w3=w+764, *w4=w+771, *w5=w+778, w6, *w7=w+828, *w8=w+832, *w9=w+932, *w10=w+936, *w11=w+952, *w12=w+959, *w13=w+966, *w14=w+1015, *w15=w+1019, *w16=w+1023, *w17=w+1039, *w18=w+1046, *w19=w+1053, *w20=w+1102, *w21=w+1106, *w22=w+1110, *w23=w+1126, *w24=w+1133, *w25=w+1140, *w26=w+1189, *w27=w+1193, *w28=w+1197, *w29=w+1213, *w30=w+1220, *w31=w+1227, *w32=w+1276, *w33=w+1280, *w34=w+1284, *w35=w+1300, *w36=w+1307, *w37=w+1314, *w38=w+1363, *w39=w+1367, *w40=w+1371, *w41=w+1387, *w42=w+1394, *w43=w+1401, *w44=w+1450, *w45=w+1454, *w46=w+1458, *w47=w+1474, *w48=w+1481, *w49=w+1488, *w50=w+1537, *w51=w+1541, *w52=w+1545, *w53=w+1561, *w54=w+1568, *w55=w+1575, *w56=w+1624, *w57=w+1628, *w58=w+1632, *w59=w+1648, *w60=w+1655, *w61=w+1662, *w62=w+1711, *w63=w+1715, *w64=w+1719, *w65=w+1735, *w66=w+1742, *w67=w+1749, *w68=w+1798, *w69=w+1802, *w70=w+1806, *w71=w+1822, *w72=w+1829, *w73=w+1836, *w74=w+1885, *w75=w+1889, *w76=w+1893, *w77=w+1909, *w78=w+1916, *w79=w+1923, *w80=w+1972, *w81=w+1976, *w82=w+1980, *w83=w+1996, *w84=w+2003, *w85=w+2010, *w86=w+2059, *w87=w+2063, *w88=w+2067, *w89=w+2083, *w90=w+2090, *w91=w+2097, *w92=w+2146, *w93=w+2150, *w94=w+2154, *w95=w+2170, *w96=w+2177, *w97=w+2184, *w98=w+2233, *w99=w+2237, *w100=w+2241, *w101=w+2257, *w102=w+2264, *w103=w+2271, *w104=w+2320, *w105=w+2324, *w106=w+2328, *w107=w+2344, *w108=w+2351, *w109=w+2358, *w110=w+2407, *w111=w+2411, *w112=w+2415, *w113=w+2431, *w114=w+2438, *w115=w+2445, *w116=w+2494, *w117=w+2498, *w118=w+2502, *w119=w+2518, *w120=w+2525, *w121=w+2532, *w122=w+2581, *w123=w+2585, *w124=w+2589, *w125=w+2605, *w126=w+2612, *w127=w+2619, *w128=w+2668, *w129=w+2672, *w130=w+2676, *w131=w+2692, *w132=w+2699, *w133=w+2706, *w134=w+2755, *w135=w+2759, *w136=w+2763, *w137=w+2779, *w138=w+2786, *w139=w+2793, *w140=w+2842, *w141=w+2846, *w142=w+2850, *w143=w+2866, *w144=w+2873, *w145=w+2880, *w146=w+2929, *w147=w+2933, *w148=w+2937, *w149=w+2953, *w150=w+2960, *w151=w+2967, *w152=w+3016, *w153=w+3020, *w154=w+3024, *w155=w+3040, *w156=w+3047, *w157=w+3054, *w158=w+3103, *w159=w+3117, *w160=w+3131, *w161=w+3135, *w162=w+3149, *w163=w+3152, *w164=w+3155, *w165=w+3158, *w166=w+3162, *w167=w+3176, *w168=w+3179, *w169=w+3182, *w170=w+3186, *w171=w+3200, *w172=w+3203, *w173=w+3206, *w174=w+3210, *w175=w+3224, *w176=w+3227, *w177=w+3230, *w178=w+3234, *w179=w+3248, *w180=w+3251, *w181=w+3254, *w182=w+3258, *w183=w+3272, *w184=w+3275, *w185=w+3278, *w186=w+3282, *w187=w+3296, *w188=w+3299, *w189=w+3302, *w190=w+3306, *w191=w+3320, *w192=w+3323, *w193=w+3326, *w194=w+3330, *w195=w+3344, *w196=w+3347, *w197=w+3350, *w198=w+3354, *w199=w+3368, *w200=w+3371, *w201=w+3374, *w202=w+3378, *w203=w+3392, *w204=w+3395, *w205=w+3398, *w206=w+3402, *w207=w+3416, *w208=w+3419, *w209=w+3422, *w210=w+3426, *w211=w+3440, *w212=w+3443, *w213=w+3446, *w214=w+3450, *w215=w+3464, *w216=w+3467, *w217=w+3470, *w218=w+3474, *w219=w+3488, *w220=w+3491, *w221=w+3494, *w222=w+3498, *w223=w+3512, *w224=w+3515, *w225=w+3518, *w226=w+3522, *w227=w+3536, *w228=w+3539, *w229=w+3542, *w230=w+3546, *w231=w+3560, *w232=w+3563, *w233=w+3566, *w234=w+3570, *w235=w+3584, *w236=w+3587, *w237=w+3590, *w238=w+3594, *w239=w+3608, *w240=w+3611, *w241=w+3614, *w242=w+3618, *w243=w+3632, *w244=w+3635, *w245=w+3638, *w246=w+3642, *w247=w+3656, *w248=w+3659, *w249=w+3662, *w250=w+3666, *w251=w+3680, *w252=w+3683, *w253=w+3686, *w254=w+3690, *w255=w+3704, *w256=w+3707, *w257=w+3710, *w258=w+3714, *w259=w+3728, *w260=w+3731, *w261=w+3734, *w262=w+4298, w263, w264, *w265=w+4303, *w266=w+4306, *w267=w+4309, w268, w269, *w270=w+4325, *w271=w+4328, *w272=w+4331, w273, w274, *w275=w+4347, *w276=w+4350, *w277=w+4353, w278, w279, *w280=w+4369, *w281=w+4372, *w282=w+4375, w283, w284, *w285=w+4391, *w286=w+4394, *w287=w+4397, w288, w289, *w290=w+4413, *w291=w+4416, *w292=w+4419, w293, w294, *w295=w+4435, *w296=w+4438, *w297=w+4441, w298, w299, *w300=w+4457, *w301=w+4460, *w302=w+4463, w303, w304, *w305=w+4479, *w306=w+4482, *w307=w+4485, w308, w309, *w310=w+4501, *w311=w+4504, *w312=w+4507, w313, w314, *w315=w+4523, *w316=w+4526, *w317=w+4529, w318, w319, *w320=w+4545, *w321=w+4548, *w322=w+4551, w323, w324, *w325=w+4567, *w326=w+4570, *w327=w+4573, w328, w329, *w330=w+4589, *w331=w+4592, *w332=w+4595, w333, w334, *w335=w+4611, *w336=w+4614, *w337=w+4617, w338, w339, *w340=w+4633, *w341=w+4636, *w342=w+4639, w343, w344, *w345=w+4655, *w346=w+4658, *w347=w+4661, w348, w349, *w350=w+4677, *w351=w+4680, *w352=w+4683, w353, w354, *w355=w+4699, *w356=w+4702, *w357=w+4705, w358, w359, *w360=w+4721, *w361=w+4724, *w362=w+4727, w363, w364, *w365=w+4743, *w366=w+4746, *w367=w+4749, w368, w369, *w370=w+4765, *w371=w+4768, *w372=w+4771, w373, w374, *w375=w+4787, *w376=w+4790, *w377=w+4793, w378, w379, *w380=w+4809, *w381=w+4812, *w382=w+4815, w383, *w385=w+4830, *w386=w+4844, *w387=w+4848, *w388=w+4897;
  /* #0: @0 = 0 */
  w0 = 0.;
  /* #1: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 364, w2);
  /* #3: @3 = @2[:7] */
  for (rr=w3, ss=w2+0; ss!=w2+7; ss+=1) *rr++ = *ss;
  /* #4: @4 = @2[7:14] */
  for (rr=w4, ss=w2+7; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #5: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #6: @3 = @3' */
  /* #7: @5 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w5);
  /* #8: @1 = mac(@3,@5,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w5+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #9: @3 = @2[:7] */
  for (rr=w3, ss=w2+0; ss!=w2+7; ss+=1) *rr++ = *ss;
  /* #10: @4 = @2[7:14] */
  for (rr=w4, ss=w2+7; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #11: @3 = (@3-@4) */
  for (i=0, rr=w3, cs=w4; i<7; ++i) (*rr++) -= (*cs++);
  /* #12: @0 = mac(@1,@3,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w1+j, tt=w3+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #13: @6 = 0 */
  w6 = 0.;
  /* #14: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #15: @8 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+364 : 0, 100, w8);
  /* #16: @9 = @8[:4] */
  for (rr=w9, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #17: @9 = @9' */
  /* #18: @10 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w10);
  /* #19: @7 = mac(@9,@10,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w10+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #20: @9 = @8[:4] */
  for (rr=w9, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #21: @6 = mac(@7,@9,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w7+j, tt=w9+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #22: @0 = (@0+@6) */
  w0 += w6;
  /* #23: @6 = 0 */
  w6 = 0.;
  /* #24: @4 = zeros(1x7) */
  casadi_clear(w4, 7);
  /* #25: @11 = @2[14:21] */
  for (rr=w11, ss=w2+14; ss!=w2+21; ss+=1) *rr++ = *ss;
  /* #26: @12 = @2[21:28] */
  for (rr=w12, ss=w2+21; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #27: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<7; ++i) (*rr++) -= (*cs++);
  /* #28: @11 = @11' */
  /* #29: @13 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w13);
  /* #30: @4 = mac(@11,@13,@4) */
  for (i=0, rr=w4; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w11+j, tt=w13+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #31: @11 = @2[14:21] */
  for (rr=w11, ss=w2+14; ss!=w2+21; ss+=1) *rr++ = *ss;
  /* #32: @12 = @2[21:28] */
  for (rr=w12, ss=w2+21; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #33: @11 = (@11-@12) */
  for (i=0, rr=w11, cs=w12; i<7; ++i) (*rr++) -= (*cs++);
  /* #34: @6 = mac(@4,@11,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w4+j, tt=w11+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #35: @0 = (@0+@6) */
  w0 += w6;
  /* #36: @6 = 0 */
  w6 = 0.;
  /* #37: @14 = zeros(1x4) */
  casadi_clear(w14, 4);
  /* #38: @15 = @8[4:8] */
  for (rr=w15, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #39: @15 = @15' */
  /* #40: @16 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w16);
  /* #41: @14 = mac(@15,@16,@14) */
  for (i=0, rr=w14; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w15+j, tt=w16+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #42: @15 = @8[4:8] */
  for (rr=w15, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #43: @6 = mac(@14,@15,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w14+j, tt=w15+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #44: @0 = (@0+@6) */
  w0 += w6;
  /* #45: @6 = 0 */
  w6 = 0.;
  /* #46: @12 = zeros(1x7) */
  casadi_clear(w12, 7);
  /* #47: @17 = @2[28:35] */
  for (rr=w17, ss=w2+28; ss!=w2+35; ss+=1) *rr++ = *ss;
  /* #48: @18 = @2[35:42] */
  for (rr=w18, ss=w2+35; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #49: @17 = (@17-@18) */
  for (i=0, rr=w17, cs=w18; i<7; ++i) (*rr++) -= (*cs++);
  /* #50: @17 = @17' */
  /* #51: @19 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w19);
  /* #52: @12 = mac(@17,@19,@12) */
  for (i=0, rr=w12; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w17+j, tt=w19+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #53: @17 = @2[28:35] */
  for (rr=w17, ss=w2+28; ss!=w2+35; ss+=1) *rr++ = *ss;
  /* #54: @18 = @2[35:42] */
  for (rr=w18, ss=w2+35; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #55: @17 = (@17-@18) */
  for (i=0, rr=w17, cs=w18; i<7; ++i) (*rr++) -= (*cs++);
  /* #56: @6 = mac(@12,@17,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w12+j, tt=w17+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #57: @0 = (@0+@6) */
  w0 += w6;
  /* #58: @6 = 0 */
  w6 = 0.;
  /* #59: @20 = zeros(1x4) */
  casadi_clear(w20, 4);
  /* #60: @21 = @8[8:12] */
  for (rr=w21, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #61: @21 = @21' */
  /* #62: @22 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w22);
  /* #63: @20 = mac(@21,@22,@20) */
  for (i=0, rr=w20; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w21+j, tt=w22+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #64: @21 = @8[8:12] */
  for (rr=w21, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #65: @6 = mac(@20,@21,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w20+j, tt=w21+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #66: @0 = (@0+@6) */
  w0 += w6;
  /* #67: @6 = 0 */
  w6 = 0.;
  /* #68: @18 = zeros(1x7) */
  casadi_clear(w18, 7);
  /* #69: @23 = @2[42:49] */
  for (rr=w23, ss=w2+42; ss!=w2+49; ss+=1) *rr++ = *ss;
  /* #70: @24 = @2[49:56] */
  for (rr=w24, ss=w2+49; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #71: @23 = (@23-@24) */
  for (i=0, rr=w23, cs=w24; i<7; ++i) (*rr++) -= (*cs++);
  /* #72: @23 = @23' */
  /* #73: @25 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w25);
  /* #74: @18 = mac(@23,@25,@18) */
  for (i=0, rr=w18; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w23+j, tt=w25+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #75: @23 = @2[42:49] */
  for (rr=w23, ss=w2+42; ss!=w2+49; ss+=1) *rr++ = *ss;
  /* #76: @24 = @2[49:56] */
  for (rr=w24, ss=w2+49; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #77: @23 = (@23-@24) */
  for (i=0, rr=w23, cs=w24; i<7; ++i) (*rr++) -= (*cs++);
  /* #78: @6 = mac(@18,@23,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w18+j, tt=w23+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #79: @0 = (@0+@6) */
  w0 += w6;
  /* #80: @6 = 0 */
  w6 = 0.;
  /* #81: @26 = zeros(1x4) */
  casadi_clear(w26, 4);
  /* #82: @27 = @8[12:16] */
  for (rr=w27, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #83: @27 = @27' */
  /* #84: @28 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w28);
  /* #85: @26 = mac(@27,@28,@26) */
  for (i=0, rr=w26; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w27+j, tt=w28+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #86: @27 = @8[12:16] */
  for (rr=w27, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #87: @6 = mac(@26,@27,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w26+j, tt=w27+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #88: @0 = (@0+@6) */
  w0 += w6;
  /* #89: @6 = 0 */
  w6 = 0.;
  /* #90: @24 = zeros(1x7) */
  casadi_clear(w24, 7);
  /* #91: @29 = @2[56:63] */
  for (rr=w29, ss=w2+56; ss!=w2+63; ss+=1) *rr++ = *ss;
  /* #92: @30 = @2[63:70] */
  for (rr=w30, ss=w2+63; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #93: @29 = (@29-@30) */
  for (i=0, rr=w29, cs=w30; i<7; ++i) (*rr++) -= (*cs++);
  /* #94: @29 = @29' */
  /* #95: @31 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w31);
  /* #96: @24 = mac(@29,@31,@24) */
  for (i=0, rr=w24; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w29+j, tt=w31+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #97: @29 = @2[56:63] */
  for (rr=w29, ss=w2+56; ss!=w2+63; ss+=1) *rr++ = *ss;
  /* #98: @30 = @2[63:70] */
  for (rr=w30, ss=w2+63; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #99: @29 = (@29-@30) */
  for (i=0, rr=w29, cs=w30; i<7; ++i) (*rr++) -= (*cs++);
  /* #100: @6 = mac(@24,@29,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w24+j, tt=w29+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #101: @0 = (@0+@6) */
  w0 += w6;
  /* #102: @6 = 0 */
  w6 = 0.;
  /* #103: @32 = zeros(1x4) */
  casadi_clear(w32, 4);
  /* #104: @33 = @8[16:20] */
  for (rr=w33, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #105: @33 = @33' */
  /* #106: @34 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w34);
  /* #107: @32 = mac(@33,@34,@32) */
  for (i=0, rr=w32; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w33+j, tt=w34+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #108: @33 = @8[16:20] */
  for (rr=w33, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #109: @6 = mac(@32,@33,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w32+j, tt=w33+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #110: @0 = (@0+@6) */
  w0 += w6;
  /* #111: @6 = 0 */
  w6 = 0.;
  /* #112: @30 = zeros(1x7) */
  casadi_clear(w30, 7);
  /* #113: @35 = @2[70:77] */
  for (rr=w35, ss=w2+70; ss!=w2+77; ss+=1) *rr++ = *ss;
  /* #114: @36 = @2[77:84] */
  for (rr=w36, ss=w2+77; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #115: @35 = (@35-@36) */
  for (i=0, rr=w35, cs=w36; i<7; ++i) (*rr++) -= (*cs++);
  /* #116: @35 = @35' */
  /* #117: @37 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w37);
  /* #118: @30 = mac(@35,@37,@30) */
  for (i=0, rr=w30; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w35+j, tt=w37+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #119: @35 = @2[70:77] */
  for (rr=w35, ss=w2+70; ss!=w2+77; ss+=1) *rr++ = *ss;
  /* #120: @36 = @2[77:84] */
  for (rr=w36, ss=w2+77; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #121: @35 = (@35-@36) */
  for (i=0, rr=w35, cs=w36; i<7; ++i) (*rr++) -= (*cs++);
  /* #122: @6 = mac(@30,@35,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w30+j, tt=w35+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #123: @0 = (@0+@6) */
  w0 += w6;
  /* #124: @6 = 0 */
  w6 = 0.;
  /* #125: @38 = zeros(1x4) */
  casadi_clear(w38, 4);
  /* #126: @39 = @8[20:24] */
  for (rr=w39, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #127: @39 = @39' */
  /* #128: @40 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w40);
  /* #129: @38 = mac(@39,@40,@38) */
  for (i=0, rr=w38; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w39+j, tt=w40+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #130: @39 = @8[20:24] */
  for (rr=w39, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #131: @6 = mac(@38,@39,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w38+j, tt=w39+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #132: @0 = (@0+@6) */
  w0 += w6;
  /* #133: @6 = 0 */
  w6 = 0.;
  /* #134: @36 = zeros(1x7) */
  casadi_clear(w36, 7);
  /* #135: @41 = @2[84:91] */
  for (rr=w41, ss=w2+84; ss!=w2+91; ss+=1) *rr++ = *ss;
  /* #136: @42 = @2[91:98] */
  for (rr=w42, ss=w2+91; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #137: @41 = (@41-@42) */
  for (i=0, rr=w41, cs=w42; i<7; ++i) (*rr++) -= (*cs++);
  /* #138: @41 = @41' */
  /* #139: @43 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w43);
  /* #140: @36 = mac(@41,@43,@36) */
  for (i=0, rr=w36; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w41+j, tt=w43+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #141: @41 = @2[84:91] */
  for (rr=w41, ss=w2+84; ss!=w2+91; ss+=1) *rr++ = *ss;
  /* #142: @42 = @2[91:98] */
  for (rr=w42, ss=w2+91; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #143: @41 = (@41-@42) */
  for (i=0, rr=w41, cs=w42; i<7; ++i) (*rr++) -= (*cs++);
  /* #144: @6 = mac(@36,@41,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w36+j, tt=w41+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #145: @0 = (@0+@6) */
  w0 += w6;
  /* #146: @6 = 0 */
  w6 = 0.;
  /* #147: @44 = zeros(1x4) */
  casadi_clear(w44, 4);
  /* #148: @45 = @8[24:28] */
  for (rr=w45, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #149: @45 = @45' */
  /* #150: @46 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w46);
  /* #151: @44 = mac(@45,@46,@44) */
  for (i=0, rr=w44; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w45+j, tt=w46+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #152: @45 = @8[24:28] */
  for (rr=w45, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #153: @6 = mac(@44,@45,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w44+j, tt=w45+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #154: @0 = (@0+@6) */
  w0 += w6;
  /* #155: @6 = 0 */
  w6 = 0.;
  /* #156: @42 = zeros(1x7) */
  casadi_clear(w42, 7);
  /* #157: @47 = @2[98:105] */
  for (rr=w47, ss=w2+98; ss!=w2+105; ss+=1) *rr++ = *ss;
  /* #158: @48 = @2[105:112] */
  for (rr=w48, ss=w2+105; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #159: @47 = (@47-@48) */
  for (i=0, rr=w47, cs=w48; i<7; ++i) (*rr++) -= (*cs++);
  /* #160: @47 = @47' */
  /* #161: @49 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w49);
  /* #162: @42 = mac(@47,@49,@42) */
  for (i=0, rr=w42; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w47+j, tt=w49+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #163: @47 = @2[98:105] */
  for (rr=w47, ss=w2+98; ss!=w2+105; ss+=1) *rr++ = *ss;
  /* #164: @48 = @2[105:112] */
  for (rr=w48, ss=w2+105; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #165: @47 = (@47-@48) */
  for (i=0, rr=w47, cs=w48; i<7; ++i) (*rr++) -= (*cs++);
  /* #166: @6 = mac(@42,@47,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w42+j, tt=w47+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #167: @0 = (@0+@6) */
  w0 += w6;
  /* #168: @6 = 0 */
  w6 = 0.;
  /* #169: @50 = zeros(1x4) */
  casadi_clear(w50, 4);
  /* #170: @51 = @8[28:32] */
  for (rr=w51, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #171: @51 = @51' */
  /* #172: @52 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w52);
  /* #173: @50 = mac(@51,@52,@50) */
  for (i=0, rr=w50; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w51+j, tt=w52+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #174: @51 = @8[28:32] */
  for (rr=w51, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #175: @6 = mac(@50,@51,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w50+j, tt=w51+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #176: @0 = (@0+@6) */
  w0 += w6;
  /* #177: @6 = 0 */
  w6 = 0.;
  /* #178: @48 = zeros(1x7) */
  casadi_clear(w48, 7);
  /* #179: @53 = @2[112:119] */
  for (rr=w53, ss=w2+112; ss!=w2+119; ss+=1) *rr++ = *ss;
  /* #180: @54 = @2[119:126] */
  for (rr=w54, ss=w2+119; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #181: @53 = (@53-@54) */
  for (i=0, rr=w53, cs=w54; i<7; ++i) (*rr++) -= (*cs++);
  /* #182: @53 = @53' */
  /* #183: @55 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w55);
  /* #184: @48 = mac(@53,@55,@48) */
  for (i=0, rr=w48; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w53+j, tt=w55+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #185: @53 = @2[112:119] */
  for (rr=w53, ss=w2+112; ss!=w2+119; ss+=1) *rr++ = *ss;
  /* #186: @54 = @2[119:126] */
  for (rr=w54, ss=w2+119; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #187: @53 = (@53-@54) */
  for (i=0, rr=w53, cs=w54; i<7; ++i) (*rr++) -= (*cs++);
  /* #188: @6 = mac(@48,@53,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w48+j, tt=w53+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #189: @0 = (@0+@6) */
  w0 += w6;
  /* #190: @6 = 0 */
  w6 = 0.;
  /* #191: @56 = zeros(1x4) */
  casadi_clear(w56, 4);
  /* #192: @57 = @8[32:36] */
  for (rr=w57, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #193: @57 = @57' */
  /* #194: @58 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w58);
  /* #195: @56 = mac(@57,@58,@56) */
  for (i=0, rr=w56; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w57+j, tt=w58+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #196: @57 = @8[32:36] */
  for (rr=w57, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #197: @6 = mac(@56,@57,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w56+j, tt=w57+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #198: @0 = (@0+@6) */
  w0 += w6;
  /* #199: @6 = 0 */
  w6 = 0.;
  /* #200: @54 = zeros(1x7) */
  casadi_clear(w54, 7);
  /* #201: @59 = @2[126:133] */
  for (rr=w59, ss=w2+126; ss!=w2+133; ss+=1) *rr++ = *ss;
  /* #202: @60 = @2[133:140] */
  for (rr=w60, ss=w2+133; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #203: @59 = (@59-@60) */
  for (i=0, rr=w59, cs=w60; i<7; ++i) (*rr++) -= (*cs++);
  /* #204: @59 = @59' */
  /* #205: @61 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w61);
  /* #206: @54 = mac(@59,@61,@54) */
  for (i=0, rr=w54; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w59+j, tt=w61+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #207: @59 = @2[126:133] */
  for (rr=w59, ss=w2+126; ss!=w2+133; ss+=1) *rr++ = *ss;
  /* #208: @60 = @2[133:140] */
  for (rr=w60, ss=w2+133; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #209: @59 = (@59-@60) */
  for (i=0, rr=w59, cs=w60; i<7; ++i) (*rr++) -= (*cs++);
  /* #210: @6 = mac(@54,@59,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w54+j, tt=w59+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #211: @0 = (@0+@6) */
  w0 += w6;
  /* #212: @6 = 0 */
  w6 = 0.;
  /* #213: @62 = zeros(1x4) */
  casadi_clear(w62, 4);
  /* #214: @63 = @8[36:40] */
  for (rr=w63, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #215: @63 = @63' */
  /* #216: @64 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w64);
  /* #217: @62 = mac(@63,@64,@62) */
  for (i=0, rr=w62; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w63+j, tt=w64+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #218: @63 = @8[36:40] */
  for (rr=w63, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #219: @6 = mac(@62,@63,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w62+j, tt=w63+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #220: @0 = (@0+@6) */
  w0 += w6;
  /* #221: @6 = 0 */
  w6 = 0.;
  /* #222: @60 = zeros(1x7) */
  casadi_clear(w60, 7);
  /* #223: @65 = @2[140:147] */
  for (rr=w65, ss=w2+140; ss!=w2+147; ss+=1) *rr++ = *ss;
  /* #224: @66 = @2[147:154] */
  for (rr=w66, ss=w2+147; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #225: @65 = (@65-@66) */
  for (i=0, rr=w65, cs=w66; i<7; ++i) (*rr++) -= (*cs++);
  /* #226: @65 = @65' */
  /* #227: @67 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w67);
  /* #228: @60 = mac(@65,@67,@60) */
  for (i=0, rr=w60; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w65+j, tt=w67+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #229: @65 = @2[140:147] */
  for (rr=w65, ss=w2+140; ss!=w2+147; ss+=1) *rr++ = *ss;
  /* #230: @66 = @2[147:154] */
  for (rr=w66, ss=w2+147; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #231: @65 = (@65-@66) */
  for (i=0, rr=w65, cs=w66; i<7; ++i) (*rr++) -= (*cs++);
  /* #232: @6 = mac(@60,@65,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w60+j, tt=w65+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #233: @0 = (@0+@6) */
  w0 += w6;
  /* #234: @6 = 0 */
  w6 = 0.;
  /* #235: @68 = zeros(1x4) */
  casadi_clear(w68, 4);
  /* #236: @69 = @8[40:44] */
  for (rr=w69, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #237: @69 = @69' */
  /* #238: @70 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w70);
  /* #239: @68 = mac(@69,@70,@68) */
  for (i=0, rr=w68; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w69+j, tt=w70+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #240: @69 = @8[40:44] */
  for (rr=w69, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #241: @6 = mac(@68,@69,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w68+j, tt=w69+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #242: @0 = (@0+@6) */
  w0 += w6;
  /* #243: @6 = 0 */
  w6 = 0.;
  /* #244: @66 = zeros(1x7) */
  casadi_clear(w66, 7);
  /* #245: @71 = @2[154:161] */
  for (rr=w71, ss=w2+154; ss!=w2+161; ss+=1) *rr++ = *ss;
  /* #246: @72 = @2[161:168] */
  for (rr=w72, ss=w2+161; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #247: @71 = (@71-@72) */
  for (i=0, rr=w71, cs=w72; i<7; ++i) (*rr++) -= (*cs++);
  /* #248: @71 = @71' */
  /* #249: @73 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w73);
  /* #250: @66 = mac(@71,@73,@66) */
  for (i=0, rr=w66; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w71+j, tt=w73+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #251: @71 = @2[154:161] */
  for (rr=w71, ss=w2+154; ss!=w2+161; ss+=1) *rr++ = *ss;
  /* #252: @72 = @2[161:168] */
  for (rr=w72, ss=w2+161; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #253: @71 = (@71-@72) */
  for (i=0, rr=w71, cs=w72; i<7; ++i) (*rr++) -= (*cs++);
  /* #254: @6 = mac(@66,@71,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w66+j, tt=w71+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #255: @0 = (@0+@6) */
  w0 += w6;
  /* #256: @6 = 0 */
  w6 = 0.;
  /* #257: @74 = zeros(1x4) */
  casadi_clear(w74, 4);
  /* #258: @75 = @8[44:48] */
  for (rr=w75, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #259: @75 = @75' */
  /* #260: @76 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w76);
  /* #261: @74 = mac(@75,@76,@74) */
  for (i=0, rr=w74; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w75+j, tt=w76+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #262: @75 = @8[44:48] */
  for (rr=w75, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #263: @6 = mac(@74,@75,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w74+j, tt=w75+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #264: @0 = (@0+@6) */
  w0 += w6;
  /* #265: @6 = 0 */
  w6 = 0.;
  /* #266: @72 = zeros(1x7) */
  casadi_clear(w72, 7);
  /* #267: @77 = @2[168:175] */
  for (rr=w77, ss=w2+168; ss!=w2+175; ss+=1) *rr++ = *ss;
  /* #268: @78 = @2[175:182] */
  for (rr=w78, ss=w2+175; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #269: @77 = (@77-@78) */
  for (i=0, rr=w77, cs=w78; i<7; ++i) (*rr++) -= (*cs++);
  /* #270: @77 = @77' */
  /* #271: @79 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w79);
  /* #272: @72 = mac(@77,@79,@72) */
  for (i=0, rr=w72; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w77+j, tt=w79+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #273: @77 = @2[168:175] */
  for (rr=w77, ss=w2+168; ss!=w2+175; ss+=1) *rr++ = *ss;
  /* #274: @78 = @2[175:182] */
  for (rr=w78, ss=w2+175; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #275: @77 = (@77-@78) */
  for (i=0, rr=w77, cs=w78; i<7; ++i) (*rr++) -= (*cs++);
  /* #276: @6 = mac(@72,@77,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w72+j, tt=w77+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #277: @0 = (@0+@6) */
  w0 += w6;
  /* #278: @6 = 0 */
  w6 = 0.;
  /* #279: @80 = zeros(1x4) */
  casadi_clear(w80, 4);
  /* #280: @81 = @8[48:52] */
  for (rr=w81, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #281: @81 = @81' */
  /* #282: @82 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w82);
  /* #283: @80 = mac(@81,@82,@80) */
  for (i=0, rr=w80; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w81+j, tt=w82+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #284: @81 = @8[48:52] */
  for (rr=w81, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #285: @6 = mac(@80,@81,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w80+j, tt=w81+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #286: @0 = (@0+@6) */
  w0 += w6;
  /* #287: @6 = 0 */
  w6 = 0.;
  /* #288: @78 = zeros(1x7) */
  casadi_clear(w78, 7);
  /* #289: @83 = @2[182:189] */
  for (rr=w83, ss=w2+182; ss!=w2+189; ss+=1) *rr++ = *ss;
  /* #290: @84 = @2[189:196] */
  for (rr=w84, ss=w2+189; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #291: @83 = (@83-@84) */
  for (i=0, rr=w83, cs=w84; i<7; ++i) (*rr++) -= (*cs++);
  /* #292: @83 = @83' */
  /* #293: @85 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w85);
  /* #294: @78 = mac(@83,@85,@78) */
  for (i=0, rr=w78; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w83+j, tt=w85+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #295: @83 = @2[182:189] */
  for (rr=w83, ss=w2+182; ss!=w2+189; ss+=1) *rr++ = *ss;
  /* #296: @84 = @2[189:196] */
  for (rr=w84, ss=w2+189; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #297: @83 = (@83-@84) */
  for (i=0, rr=w83, cs=w84; i<7; ++i) (*rr++) -= (*cs++);
  /* #298: @6 = mac(@78,@83,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w78+j, tt=w83+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #299: @0 = (@0+@6) */
  w0 += w6;
  /* #300: @6 = 0 */
  w6 = 0.;
  /* #301: @86 = zeros(1x4) */
  casadi_clear(w86, 4);
  /* #302: @87 = @8[52:56] */
  for (rr=w87, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #303: @87 = @87' */
  /* #304: @88 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w88);
  /* #305: @86 = mac(@87,@88,@86) */
  for (i=0, rr=w86; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w87+j, tt=w88+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #306: @87 = @8[52:56] */
  for (rr=w87, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #307: @6 = mac(@86,@87,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w86+j, tt=w87+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #308: @0 = (@0+@6) */
  w0 += w6;
  /* #309: @6 = 0 */
  w6 = 0.;
  /* #310: @84 = zeros(1x7) */
  casadi_clear(w84, 7);
  /* #311: @89 = @2[196:203] */
  for (rr=w89, ss=w2+196; ss!=w2+203; ss+=1) *rr++ = *ss;
  /* #312: @90 = @2[203:210] */
  for (rr=w90, ss=w2+203; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #313: @89 = (@89-@90) */
  for (i=0, rr=w89, cs=w90; i<7; ++i) (*rr++) -= (*cs++);
  /* #314: @89 = @89' */
  /* #315: @91 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w91);
  /* #316: @84 = mac(@89,@91,@84) */
  for (i=0, rr=w84; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w89+j, tt=w91+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #317: @89 = @2[196:203] */
  for (rr=w89, ss=w2+196; ss!=w2+203; ss+=1) *rr++ = *ss;
  /* #318: @90 = @2[203:210] */
  for (rr=w90, ss=w2+203; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #319: @89 = (@89-@90) */
  for (i=0, rr=w89, cs=w90; i<7; ++i) (*rr++) -= (*cs++);
  /* #320: @6 = mac(@84,@89,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w84+j, tt=w89+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #321: @0 = (@0+@6) */
  w0 += w6;
  /* #322: @6 = 0 */
  w6 = 0.;
  /* #323: @92 = zeros(1x4) */
  casadi_clear(w92, 4);
  /* #324: @93 = @8[56:60] */
  for (rr=w93, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #325: @93 = @93' */
  /* #326: @94 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w94);
  /* #327: @92 = mac(@93,@94,@92) */
  for (i=0, rr=w92; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w93+j, tt=w94+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #328: @93 = @8[56:60] */
  for (rr=w93, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #329: @6 = mac(@92,@93,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w92+j, tt=w93+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #330: @0 = (@0+@6) */
  w0 += w6;
  /* #331: @6 = 0 */
  w6 = 0.;
  /* #332: @90 = zeros(1x7) */
  casadi_clear(w90, 7);
  /* #333: @95 = @2[210:217] */
  for (rr=w95, ss=w2+210; ss!=w2+217; ss+=1) *rr++ = *ss;
  /* #334: @96 = @2[217:224] */
  for (rr=w96, ss=w2+217; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #335: @95 = (@95-@96) */
  for (i=0, rr=w95, cs=w96; i<7; ++i) (*rr++) -= (*cs++);
  /* #336: @95 = @95' */
  /* #337: @97 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w97);
  /* #338: @90 = mac(@95,@97,@90) */
  for (i=0, rr=w90; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w95+j, tt=w97+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #339: @95 = @2[210:217] */
  for (rr=w95, ss=w2+210; ss!=w2+217; ss+=1) *rr++ = *ss;
  /* #340: @96 = @2[217:224] */
  for (rr=w96, ss=w2+217; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #341: @95 = (@95-@96) */
  for (i=0, rr=w95, cs=w96; i<7; ++i) (*rr++) -= (*cs++);
  /* #342: @6 = mac(@90,@95,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w90+j, tt=w95+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #343: @0 = (@0+@6) */
  w0 += w6;
  /* #344: @6 = 0 */
  w6 = 0.;
  /* #345: @98 = zeros(1x4) */
  casadi_clear(w98, 4);
  /* #346: @99 = @8[60:64] */
  for (rr=w99, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #347: @99 = @99' */
  /* #348: @100 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w100);
  /* #349: @98 = mac(@99,@100,@98) */
  for (i=0, rr=w98; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w99+j, tt=w100+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #350: @99 = @8[60:64] */
  for (rr=w99, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #351: @6 = mac(@98,@99,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w98+j, tt=w99+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #352: @0 = (@0+@6) */
  w0 += w6;
  /* #353: @6 = 0 */
  w6 = 0.;
  /* #354: @96 = zeros(1x7) */
  casadi_clear(w96, 7);
  /* #355: @101 = @2[224:231] */
  for (rr=w101, ss=w2+224; ss!=w2+231; ss+=1) *rr++ = *ss;
  /* #356: @102 = @2[231:238] */
  for (rr=w102, ss=w2+231; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #357: @101 = (@101-@102) */
  for (i=0, rr=w101, cs=w102; i<7; ++i) (*rr++) -= (*cs++);
  /* #358: @101 = @101' */
  /* #359: @103 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w103);
  /* #360: @96 = mac(@101,@103,@96) */
  for (i=0, rr=w96; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w101+j, tt=w103+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #361: @101 = @2[224:231] */
  for (rr=w101, ss=w2+224; ss!=w2+231; ss+=1) *rr++ = *ss;
  /* #362: @102 = @2[231:238] */
  for (rr=w102, ss=w2+231; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #363: @101 = (@101-@102) */
  for (i=0, rr=w101, cs=w102; i<7; ++i) (*rr++) -= (*cs++);
  /* #364: @6 = mac(@96,@101,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w96+j, tt=w101+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #365: @0 = (@0+@6) */
  w0 += w6;
  /* #366: @6 = 0 */
  w6 = 0.;
  /* #367: @104 = zeros(1x4) */
  casadi_clear(w104, 4);
  /* #368: @105 = @8[64:68] */
  for (rr=w105, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #369: @105 = @105' */
  /* #370: @106 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w106);
  /* #371: @104 = mac(@105,@106,@104) */
  for (i=0, rr=w104; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w105+j, tt=w106+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #372: @105 = @8[64:68] */
  for (rr=w105, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #373: @6 = mac(@104,@105,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w104+j, tt=w105+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #374: @0 = (@0+@6) */
  w0 += w6;
  /* #375: @6 = 0 */
  w6 = 0.;
  /* #376: @102 = zeros(1x7) */
  casadi_clear(w102, 7);
  /* #377: @107 = @2[238:245] */
  for (rr=w107, ss=w2+238; ss!=w2+245; ss+=1) *rr++ = *ss;
  /* #378: @108 = @2[245:252] */
  for (rr=w108, ss=w2+245; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #379: @107 = (@107-@108) */
  for (i=0, rr=w107, cs=w108; i<7; ++i) (*rr++) -= (*cs++);
  /* #380: @107 = @107' */
  /* #381: @109 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w109);
  /* #382: @102 = mac(@107,@109,@102) */
  for (i=0, rr=w102; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w107+j, tt=w109+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #383: @107 = @2[238:245] */
  for (rr=w107, ss=w2+238; ss!=w2+245; ss+=1) *rr++ = *ss;
  /* #384: @108 = @2[245:252] */
  for (rr=w108, ss=w2+245; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #385: @107 = (@107-@108) */
  for (i=0, rr=w107, cs=w108; i<7; ++i) (*rr++) -= (*cs++);
  /* #386: @6 = mac(@102,@107,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w102+j, tt=w107+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #387: @0 = (@0+@6) */
  w0 += w6;
  /* #388: @6 = 0 */
  w6 = 0.;
  /* #389: @110 = zeros(1x4) */
  casadi_clear(w110, 4);
  /* #390: @111 = @8[68:72] */
  for (rr=w111, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #391: @111 = @111' */
  /* #392: @112 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w112);
  /* #393: @110 = mac(@111,@112,@110) */
  for (i=0, rr=w110; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w111+j, tt=w112+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #394: @111 = @8[68:72] */
  for (rr=w111, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #395: @6 = mac(@110,@111,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w110+j, tt=w111+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #396: @0 = (@0+@6) */
  w0 += w6;
  /* #397: @6 = 0 */
  w6 = 0.;
  /* #398: @108 = zeros(1x7) */
  casadi_clear(w108, 7);
  /* #399: @113 = @2[252:259] */
  for (rr=w113, ss=w2+252; ss!=w2+259; ss+=1) *rr++ = *ss;
  /* #400: @114 = @2[259:266] */
  for (rr=w114, ss=w2+259; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #401: @113 = (@113-@114) */
  for (i=0, rr=w113, cs=w114; i<7; ++i) (*rr++) -= (*cs++);
  /* #402: @113 = @113' */
  /* #403: @115 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w115);
  /* #404: @108 = mac(@113,@115,@108) */
  for (i=0, rr=w108; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w113+j, tt=w115+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #405: @113 = @2[252:259] */
  for (rr=w113, ss=w2+252; ss!=w2+259; ss+=1) *rr++ = *ss;
  /* #406: @114 = @2[259:266] */
  for (rr=w114, ss=w2+259; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #407: @113 = (@113-@114) */
  for (i=0, rr=w113, cs=w114; i<7; ++i) (*rr++) -= (*cs++);
  /* #408: @6 = mac(@108,@113,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w108+j, tt=w113+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #409: @0 = (@0+@6) */
  w0 += w6;
  /* #410: @6 = 0 */
  w6 = 0.;
  /* #411: @116 = zeros(1x4) */
  casadi_clear(w116, 4);
  /* #412: @117 = @8[72:76] */
  for (rr=w117, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #413: @117 = @117' */
  /* #414: @118 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w118);
  /* #415: @116 = mac(@117,@118,@116) */
  for (i=0, rr=w116; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w117+j, tt=w118+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #416: @117 = @8[72:76] */
  for (rr=w117, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #417: @6 = mac(@116,@117,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w116+j, tt=w117+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #418: @0 = (@0+@6) */
  w0 += w6;
  /* #419: @6 = 0 */
  w6 = 0.;
  /* #420: @114 = zeros(1x7) */
  casadi_clear(w114, 7);
  /* #421: @119 = @2[266:273] */
  for (rr=w119, ss=w2+266; ss!=w2+273; ss+=1) *rr++ = *ss;
  /* #422: @120 = @2[273:280] */
  for (rr=w120, ss=w2+273; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #423: @119 = (@119-@120) */
  for (i=0, rr=w119, cs=w120; i<7; ++i) (*rr++) -= (*cs++);
  /* #424: @119 = @119' */
  /* #425: @121 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w121);
  /* #426: @114 = mac(@119,@121,@114) */
  for (i=0, rr=w114; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w119+j, tt=w121+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #427: @119 = @2[266:273] */
  for (rr=w119, ss=w2+266; ss!=w2+273; ss+=1) *rr++ = *ss;
  /* #428: @120 = @2[273:280] */
  for (rr=w120, ss=w2+273; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #429: @119 = (@119-@120) */
  for (i=0, rr=w119, cs=w120; i<7; ++i) (*rr++) -= (*cs++);
  /* #430: @6 = mac(@114,@119,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w114+j, tt=w119+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #431: @0 = (@0+@6) */
  w0 += w6;
  /* #432: @6 = 0 */
  w6 = 0.;
  /* #433: @122 = zeros(1x4) */
  casadi_clear(w122, 4);
  /* #434: @123 = @8[76:80] */
  for (rr=w123, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #435: @123 = @123' */
  /* #436: @124 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w124);
  /* #437: @122 = mac(@123,@124,@122) */
  for (i=0, rr=w122; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w123+j, tt=w124+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #438: @123 = @8[76:80] */
  for (rr=w123, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #439: @6 = mac(@122,@123,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w122+j, tt=w123+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #440: @0 = (@0+@6) */
  w0 += w6;
  /* #441: @6 = 0 */
  w6 = 0.;
  /* #442: @120 = zeros(1x7) */
  casadi_clear(w120, 7);
  /* #443: @125 = @2[280:287] */
  for (rr=w125, ss=w2+280; ss!=w2+287; ss+=1) *rr++ = *ss;
  /* #444: @126 = @2[287:294] */
  for (rr=w126, ss=w2+287; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #445: @125 = (@125-@126) */
  for (i=0, rr=w125, cs=w126; i<7; ++i) (*rr++) -= (*cs++);
  /* #446: @125 = @125' */
  /* #447: @127 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w127);
  /* #448: @120 = mac(@125,@127,@120) */
  for (i=0, rr=w120; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w125+j, tt=w127+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #449: @125 = @2[280:287] */
  for (rr=w125, ss=w2+280; ss!=w2+287; ss+=1) *rr++ = *ss;
  /* #450: @126 = @2[287:294] */
  for (rr=w126, ss=w2+287; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #451: @125 = (@125-@126) */
  for (i=0, rr=w125, cs=w126; i<7; ++i) (*rr++) -= (*cs++);
  /* #452: @6 = mac(@120,@125,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w120+j, tt=w125+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #453: @0 = (@0+@6) */
  w0 += w6;
  /* #454: @6 = 0 */
  w6 = 0.;
  /* #455: @128 = zeros(1x4) */
  casadi_clear(w128, 4);
  /* #456: @129 = @8[80:84] */
  for (rr=w129, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #457: @129 = @129' */
  /* #458: @130 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w130);
  /* #459: @128 = mac(@129,@130,@128) */
  for (i=0, rr=w128; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w129+j, tt=w130+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #460: @129 = @8[80:84] */
  for (rr=w129, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #461: @6 = mac(@128,@129,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w128+j, tt=w129+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #462: @0 = (@0+@6) */
  w0 += w6;
  /* #463: @6 = 0 */
  w6 = 0.;
  /* #464: @126 = zeros(1x7) */
  casadi_clear(w126, 7);
  /* #465: @131 = @2[294:301] */
  for (rr=w131, ss=w2+294; ss!=w2+301; ss+=1) *rr++ = *ss;
  /* #466: @132 = @2[301:308] */
  for (rr=w132, ss=w2+301; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #467: @131 = (@131-@132) */
  for (i=0, rr=w131, cs=w132; i<7; ++i) (*rr++) -= (*cs++);
  /* #468: @131 = @131' */
  /* #469: @133 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w133);
  /* #470: @126 = mac(@131,@133,@126) */
  for (i=0, rr=w126; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w131+j, tt=w133+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #471: @131 = @2[294:301] */
  for (rr=w131, ss=w2+294; ss!=w2+301; ss+=1) *rr++ = *ss;
  /* #472: @132 = @2[301:308] */
  for (rr=w132, ss=w2+301; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #473: @131 = (@131-@132) */
  for (i=0, rr=w131, cs=w132; i<7; ++i) (*rr++) -= (*cs++);
  /* #474: @6 = mac(@126,@131,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w126+j, tt=w131+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #475: @0 = (@0+@6) */
  w0 += w6;
  /* #476: @6 = 0 */
  w6 = 0.;
  /* #477: @134 = zeros(1x4) */
  casadi_clear(w134, 4);
  /* #478: @135 = @8[84:88] */
  for (rr=w135, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #479: @135 = @135' */
  /* #480: @136 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w136);
  /* #481: @134 = mac(@135,@136,@134) */
  for (i=0, rr=w134; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w135+j, tt=w136+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #482: @135 = @8[84:88] */
  for (rr=w135, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #483: @6 = mac(@134,@135,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w134+j, tt=w135+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #484: @0 = (@0+@6) */
  w0 += w6;
  /* #485: @6 = 0 */
  w6 = 0.;
  /* #486: @132 = zeros(1x7) */
  casadi_clear(w132, 7);
  /* #487: @137 = @2[308:315] */
  for (rr=w137, ss=w2+308; ss!=w2+315; ss+=1) *rr++ = *ss;
  /* #488: @138 = @2[315:322] */
  for (rr=w138, ss=w2+315; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #489: @137 = (@137-@138) */
  for (i=0, rr=w137, cs=w138; i<7; ++i) (*rr++) -= (*cs++);
  /* #490: @137 = @137' */
  /* #491: @139 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w139);
  /* #492: @132 = mac(@137,@139,@132) */
  for (i=0, rr=w132; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w137+j, tt=w139+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #493: @137 = @2[308:315] */
  for (rr=w137, ss=w2+308; ss!=w2+315; ss+=1) *rr++ = *ss;
  /* #494: @138 = @2[315:322] */
  for (rr=w138, ss=w2+315; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #495: @137 = (@137-@138) */
  for (i=0, rr=w137, cs=w138; i<7; ++i) (*rr++) -= (*cs++);
  /* #496: @6 = mac(@132,@137,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w132+j, tt=w137+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #497: @0 = (@0+@6) */
  w0 += w6;
  /* #498: @6 = 0 */
  w6 = 0.;
  /* #499: @140 = zeros(1x4) */
  casadi_clear(w140, 4);
  /* #500: @141 = @8[88:92] */
  for (rr=w141, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #501: @141 = @141' */
  /* #502: @142 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w142);
  /* #503: @140 = mac(@141,@142,@140) */
  for (i=0, rr=w140; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w141+j, tt=w142+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #504: @141 = @8[88:92] */
  for (rr=w141, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #505: @6 = mac(@140,@141,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w140+j, tt=w141+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #506: @0 = (@0+@6) */
  w0 += w6;
  /* #507: @6 = 0 */
  w6 = 0.;
  /* #508: @138 = zeros(1x7) */
  casadi_clear(w138, 7);
  /* #509: @143 = @2[322:329] */
  for (rr=w143, ss=w2+322; ss!=w2+329; ss+=1) *rr++ = *ss;
  /* #510: @144 = @2[329:336] */
  for (rr=w144, ss=w2+329; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #511: @143 = (@143-@144) */
  for (i=0, rr=w143, cs=w144; i<7; ++i) (*rr++) -= (*cs++);
  /* #512: @143 = @143' */
  /* #513: @145 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w145);
  /* #514: @138 = mac(@143,@145,@138) */
  for (i=0, rr=w138; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w143+j, tt=w145+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #515: @143 = @2[322:329] */
  for (rr=w143, ss=w2+322; ss!=w2+329; ss+=1) *rr++ = *ss;
  /* #516: @144 = @2[329:336] */
  for (rr=w144, ss=w2+329; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #517: @143 = (@143-@144) */
  for (i=0, rr=w143, cs=w144; i<7; ++i) (*rr++) -= (*cs++);
  /* #518: @6 = mac(@138,@143,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w138+j, tt=w143+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #519: @0 = (@0+@6) */
  w0 += w6;
  /* #520: @6 = 0 */
  w6 = 0.;
  /* #521: @146 = zeros(1x4) */
  casadi_clear(w146, 4);
  /* #522: @147 = @8[92:96] */
  for (rr=w147, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #523: @147 = @147' */
  /* #524: @148 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w148);
  /* #525: @146 = mac(@147,@148,@146) */
  for (i=0, rr=w146; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w147+j, tt=w148+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #526: @147 = @8[92:96] */
  for (rr=w147, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #527: @6 = mac(@146,@147,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w146+j, tt=w147+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #528: @0 = (@0+@6) */
  w0 += w6;
  /* #529: @6 = 0 */
  w6 = 0.;
  /* #530: @144 = zeros(1x7) */
  casadi_clear(w144, 7);
  /* #531: @149 = @2[336:343] */
  for (rr=w149, ss=w2+336; ss!=w2+343; ss+=1) *rr++ = *ss;
  /* #532: @150 = @2[343:350] */
  for (rr=w150, ss=w2+343; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #533: @149 = (@149-@150) */
  for (i=0, rr=w149, cs=w150; i<7; ++i) (*rr++) -= (*cs++);
  /* #534: @149 = @149' */
  /* #535: @151 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w151);
  /* #536: @144 = mac(@149,@151,@144) */
  for (i=0, rr=w144; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w149+j, tt=w151+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #537: @149 = @2[336:343] */
  for (rr=w149, ss=w2+336; ss!=w2+343; ss+=1) *rr++ = *ss;
  /* #538: @150 = @2[343:350] */
  for (rr=w150, ss=w2+343; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #539: @149 = (@149-@150) */
  for (i=0, rr=w149, cs=w150; i<7; ++i) (*rr++) -= (*cs++);
  /* #540: @6 = mac(@144,@149,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w144+j, tt=w149+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #541: @0 = (@0+@6) */
  w0 += w6;
  /* #542: @6 = 0 */
  w6 = 0.;
  /* #543: @152 = zeros(1x4) */
  casadi_clear(w152, 4);
  /* #544: @153 = @8[96:100] */
  for (rr=w153, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #545: @153 = @153' */
  /* #546: @154 = 
  [[10, 0, 0, 0], 
   [0, 10, 0, 0], 
   [0, 0, 10, 0], 
   [0, 0, 0, 10]] */
  casadi_copy(casadi_c1, 16, w154);
  /* #547: @152 = mac(@153,@154,@152) */
  for (i=0, rr=w152; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w153+j, tt=w154+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #548: @153 = @8[96:100] */
  for (rr=w153, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #549: @6 = mac(@152,@153,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w152+j, tt=w153+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #550: @0 = (@0+@6) */
  w0 += w6;
  /* #551: @6 = 0 */
  w6 = 0.;
  /* #552: @150 = zeros(1x7) */
  casadi_clear(w150, 7);
  /* #553: @155 = @2[350:357] */
  for (rr=w155, ss=w2+350; ss!=w2+357; ss+=1) *rr++ = *ss;
  /* #554: @156 = @2[357:364] */
  for (rr=w156, ss=w2+357; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #555: @155 = (@155-@156) */
  for (i=0, rr=w155, cs=w156; i<7; ++i) (*rr++) -= (*cs++);
  /* #556: @155 = @155' */
  /* #557: @157 = 
  [[20, 0, 0, 0, 0, 0, 0], 
   [0, 20, 0, 0, 0, 0, 0], 
   [0, 0, 20, 0, 0, 0, 0], 
   [0, 0, 0, 20, 0, 0, 0], 
   [0, 0, 0, 0, 20, 0, 0], 
   [0, 0, 0, 0, 0, 20, 0], 
   [0, 0, 0, 0, 0, 0, 10]] */
  casadi_copy(casadi_c0, 49, w157);
  /* #558: @150 = mac(@155,@157,@150) */
  for (i=0, rr=w150; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w155+j, tt=w157+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #559: @155 = @2[350:357] */
  for (rr=w155, ss=w2+350; ss!=w2+357; ss+=1) *rr++ = *ss;
  /* #560: @156 = @2[357:364] */
  for (rr=w156, ss=w2+357; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #561: @155 = (@155-@156) */
  for (i=0, rr=w155, cs=w156; i<7; ++i) (*rr++) -= (*cs++);
  /* #562: @6 = mac(@150,@155,@6) */
  for (i=0, rr=(&w6); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w150+j, tt=w155+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #563: @0 = (@0+@6) */
  w0 += w6;
  /* #564: output[0][0] = @0 */
  if (res[0]) res[0][0] = w0;
  /* #565: @158 = @2[14:28] */
  for (rr=w158, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #566: @159 = @2[:14] */
  for (rr=w159, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #567: @160 = @8[:4] */
  for (rr=w160, ss=w8+0; ss!=w8+4; ss+=1) *rr++ = *ss;
  /* #568: @161 = f_disc(@159, @160) */
  arg1[0]=w159;
  arg1[1]=w160;
  res1[0]=w161;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #569: @158 = (@158-@161) */
  for (i=0, rr=w158, cs=w161; i<14; ++i) (*rr++) -= (*cs++);
  /* #570: output[1][0] = @158 */
  casadi_copy(w158, 14, res[1]);
  /* #571: @0 = 0 */
  w0 = 0.;
  /* #572: @162 = @2[10:13] */
  for (rr=w162, ss=w2+10; ss!=w2+13; ss+=1) *rr++ = *ss;
  /* #573: @163 = @162' */
  casadi_copy(w162, 3, w163);
  /* #574: @164 = @2[3:6] */
  for (rr=w164, ss=w2+3; ss!=w2+6; ss+=1) *rr++ = *ss;
  /* #575: @0 = mac(@163,@164,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w163+j, tt=w164+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #576: output[1][1] = @0 */
  if (res[1]) res[1][14] = w0;
  /* #577: @0 = @2[2] */
  for (rr=(&w0), ss=w2+2; ss!=w2+3; ss+=1) *rr++ = *ss;
  /* #578: @6 = @2[13] */
  for (rr=(&w6), ss=w2+13; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #579: @0 = (@0-@6) */
  w0 -= w6;
  /* #580: output[1][2] = @0 */
  if (res[1]) res[1][15] = w0;
  /* #581: @163 = @2[3:6] */
  for (rr=w163, ss=w2+3; ss!=w2+6; ss+=1) *rr++ = *ss;
  /* #582: output[1][3] = @163 */
  if (res[1]) casadi_copy(w163, 3, res[1]+16);
  /* #583: @163 = @8[:3] */
  for (rr=w163, ss=w8+0; ss!=w8+3; ss+=1) *rr++ = *ss;
  /* #584: output[1][4] = @163 */
  if (res[1]) casadi_copy(w163, 3, res[1]+19);
  /* #585: @158 = @2[28:42] */
  for (rr=w158, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #586: @161 = @2[14:28] */
  for (rr=w161, ss=w2+14; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #587: @165 = @8[4:8] */
  for (rr=w165, ss=w8+4; ss!=w8+8; ss+=1) *rr++ = *ss;
  /* #588: @166 = f_disc(@161, @165) */
  arg1[0]=w161;
  arg1[1]=w165;
  res1[0]=w166;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #589: @158 = (@158-@166) */
  for (i=0, rr=w158, cs=w166; i<14; ++i) (*rr++) -= (*cs++);
  /* #590: output[1][5] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+22);
  /* #591: @0 = 0 */
  w0 = 0.;
  /* #592: @163 = @2[24:27] */
  for (rr=w163, ss=w2+24; ss!=w2+27; ss+=1) *rr++ = *ss;
  /* #593: @167 = @163' */
  casadi_copy(w163, 3, w167);
  /* #594: @168 = @2[17:20] */
  for (rr=w168, ss=w2+17; ss!=w2+20; ss+=1) *rr++ = *ss;
  /* #595: @0 = mac(@167,@168,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w167+j, tt=w168+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #596: output[1][6] = @0 */
  if (res[1]) res[1][36] = w0;
  /* #597: @0 = @2[16] */
  for (rr=(&w0), ss=w2+16; ss!=w2+17; ss+=1) *rr++ = *ss;
  /* #598: @6 = @2[27] */
  for (rr=(&w6), ss=w2+27; ss!=w2+28; ss+=1) *rr++ = *ss;
  /* #599: @0 = (@0-@6) */
  w0 -= w6;
  /* #600: output[1][7] = @0 */
  if (res[1]) res[1][37] = w0;
  /* #601: @167 = @2[17:20] */
  for (rr=w167, ss=w2+17; ss!=w2+20; ss+=1) *rr++ = *ss;
  /* #602: output[1][8] = @167 */
  if (res[1]) casadi_copy(w167, 3, res[1]+38);
  /* #603: @167 = @8[4:7] */
  for (rr=w167, ss=w8+4; ss!=w8+7; ss+=1) *rr++ = *ss;
  /* #604: output[1][9] = @167 */
  if (res[1]) casadi_copy(w167, 3, res[1]+41);
  /* #605: @158 = @2[42:56] */
  for (rr=w158, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #606: @166 = @2[28:42] */
  for (rr=w166, ss=w2+28; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #607: @169 = @8[8:12] */
  for (rr=w169, ss=w8+8; ss!=w8+12; ss+=1) *rr++ = *ss;
  /* #608: @170 = f_disc(@166, @169) */
  arg1[0]=w166;
  arg1[1]=w169;
  res1[0]=w170;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #609: @158 = (@158-@170) */
  for (i=0, rr=w158, cs=w170; i<14; ++i) (*rr++) -= (*cs++);
  /* #610: output[1][10] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+44);
  /* #611: @0 = 0 */
  w0 = 0.;
  /* #612: @167 = @2[38:41] */
  for (rr=w167, ss=w2+38; ss!=w2+41; ss+=1) *rr++ = *ss;
  /* #613: @171 = @167' */
  casadi_copy(w167, 3, w171);
  /* #614: @172 = @2[31:34] */
  for (rr=w172, ss=w2+31; ss!=w2+34; ss+=1) *rr++ = *ss;
  /* #615: @0 = mac(@171,@172,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w171+j, tt=w172+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #616: output[1][11] = @0 */
  if (res[1]) res[1][58] = w0;
  /* #617: @0 = @2[30] */
  for (rr=(&w0), ss=w2+30; ss!=w2+31; ss+=1) *rr++ = *ss;
  /* #618: @6 = @2[41] */
  for (rr=(&w6), ss=w2+41; ss!=w2+42; ss+=1) *rr++ = *ss;
  /* #619: @0 = (@0-@6) */
  w0 -= w6;
  /* #620: output[1][12] = @0 */
  if (res[1]) res[1][59] = w0;
  /* #621: @171 = @2[31:34] */
  for (rr=w171, ss=w2+31; ss!=w2+34; ss+=1) *rr++ = *ss;
  /* #622: output[1][13] = @171 */
  if (res[1]) casadi_copy(w171, 3, res[1]+60);
  /* #623: @171 = @8[8:11] */
  for (rr=w171, ss=w8+8; ss!=w8+11; ss+=1) *rr++ = *ss;
  /* #624: output[1][14] = @171 */
  if (res[1]) casadi_copy(w171, 3, res[1]+63);
  /* #625: @158 = @2[56:70] */
  for (rr=w158, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #626: @170 = @2[42:56] */
  for (rr=w170, ss=w2+42; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #627: @173 = @8[12:16] */
  for (rr=w173, ss=w8+12; ss!=w8+16; ss+=1) *rr++ = *ss;
  /* #628: @174 = f_disc(@170, @173) */
  arg1[0]=w170;
  arg1[1]=w173;
  res1[0]=w174;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #629: @158 = (@158-@174) */
  for (i=0, rr=w158, cs=w174; i<14; ++i) (*rr++) -= (*cs++);
  /* #630: output[1][15] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+66);
  /* #631: @0 = 0 */
  w0 = 0.;
  /* #632: @171 = @2[52:55] */
  for (rr=w171, ss=w2+52; ss!=w2+55; ss+=1) *rr++ = *ss;
  /* #633: @175 = @171' */
  casadi_copy(w171, 3, w175);
  /* #634: @176 = @2[45:48] */
  for (rr=w176, ss=w2+45; ss!=w2+48; ss+=1) *rr++ = *ss;
  /* #635: @0 = mac(@175,@176,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w175+j, tt=w176+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #636: output[1][16] = @0 */
  if (res[1]) res[1][80] = w0;
  /* #637: @0 = @2[44] */
  for (rr=(&w0), ss=w2+44; ss!=w2+45; ss+=1) *rr++ = *ss;
  /* #638: @6 = @2[55] */
  for (rr=(&w6), ss=w2+55; ss!=w2+56; ss+=1) *rr++ = *ss;
  /* #639: @0 = (@0-@6) */
  w0 -= w6;
  /* #640: output[1][17] = @0 */
  if (res[1]) res[1][81] = w0;
  /* #641: @175 = @2[45:48] */
  for (rr=w175, ss=w2+45; ss!=w2+48; ss+=1) *rr++ = *ss;
  /* #642: output[1][18] = @175 */
  if (res[1]) casadi_copy(w175, 3, res[1]+82);
  /* #643: @175 = @8[12:15] */
  for (rr=w175, ss=w8+12; ss!=w8+15; ss+=1) *rr++ = *ss;
  /* #644: output[1][19] = @175 */
  if (res[1]) casadi_copy(w175, 3, res[1]+85);
  /* #645: @158 = @2[70:84] */
  for (rr=w158, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #646: @174 = @2[56:70] */
  for (rr=w174, ss=w2+56; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #647: @177 = @8[16:20] */
  for (rr=w177, ss=w8+16; ss!=w8+20; ss+=1) *rr++ = *ss;
  /* #648: @178 = f_disc(@174, @177) */
  arg1[0]=w174;
  arg1[1]=w177;
  res1[0]=w178;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #649: @158 = (@158-@178) */
  for (i=0, rr=w158, cs=w178; i<14; ++i) (*rr++) -= (*cs++);
  /* #650: output[1][20] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+88);
  /* #651: @0 = 0 */
  w0 = 0.;
  /* #652: @175 = @2[66:69] */
  for (rr=w175, ss=w2+66; ss!=w2+69; ss+=1) *rr++ = *ss;
  /* #653: @179 = @175' */
  casadi_copy(w175, 3, w179);
  /* #654: @180 = @2[59:62] */
  for (rr=w180, ss=w2+59; ss!=w2+62; ss+=1) *rr++ = *ss;
  /* #655: @0 = mac(@179,@180,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w179+j, tt=w180+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #656: output[1][21] = @0 */
  if (res[1]) res[1][102] = w0;
  /* #657: @0 = @2[58] */
  for (rr=(&w0), ss=w2+58; ss!=w2+59; ss+=1) *rr++ = *ss;
  /* #658: @6 = @2[69] */
  for (rr=(&w6), ss=w2+69; ss!=w2+70; ss+=1) *rr++ = *ss;
  /* #659: @0 = (@0-@6) */
  w0 -= w6;
  /* #660: output[1][22] = @0 */
  if (res[1]) res[1][103] = w0;
  /* #661: @179 = @2[59:62] */
  for (rr=w179, ss=w2+59; ss!=w2+62; ss+=1) *rr++ = *ss;
  /* #662: output[1][23] = @179 */
  if (res[1]) casadi_copy(w179, 3, res[1]+104);
  /* #663: @179 = @8[16:19] */
  for (rr=w179, ss=w8+16; ss!=w8+19; ss+=1) *rr++ = *ss;
  /* #664: output[1][24] = @179 */
  if (res[1]) casadi_copy(w179, 3, res[1]+107);
  /* #665: @158 = @2[84:98] */
  for (rr=w158, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #666: @178 = @2[70:84] */
  for (rr=w178, ss=w2+70; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #667: @181 = @8[20:24] */
  for (rr=w181, ss=w8+20; ss!=w8+24; ss+=1) *rr++ = *ss;
  /* #668: @182 = f_disc(@178, @181) */
  arg1[0]=w178;
  arg1[1]=w181;
  res1[0]=w182;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #669: @158 = (@158-@182) */
  for (i=0, rr=w158, cs=w182; i<14; ++i) (*rr++) -= (*cs++);
  /* #670: output[1][25] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+110);
  /* #671: @0 = 0 */
  w0 = 0.;
  /* #672: @179 = @2[80:83] */
  for (rr=w179, ss=w2+80; ss!=w2+83; ss+=1) *rr++ = *ss;
  /* #673: @183 = @179' */
  casadi_copy(w179, 3, w183);
  /* #674: @184 = @2[73:76] */
  for (rr=w184, ss=w2+73; ss!=w2+76; ss+=1) *rr++ = *ss;
  /* #675: @0 = mac(@183,@184,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w183+j, tt=w184+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #676: output[1][26] = @0 */
  if (res[1]) res[1][124] = w0;
  /* #677: @0 = @2[72] */
  for (rr=(&w0), ss=w2+72; ss!=w2+73; ss+=1) *rr++ = *ss;
  /* #678: @6 = @2[83] */
  for (rr=(&w6), ss=w2+83; ss!=w2+84; ss+=1) *rr++ = *ss;
  /* #679: @0 = (@0-@6) */
  w0 -= w6;
  /* #680: output[1][27] = @0 */
  if (res[1]) res[1][125] = w0;
  /* #681: @183 = @2[73:76] */
  for (rr=w183, ss=w2+73; ss!=w2+76; ss+=1) *rr++ = *ss;
  /* #682: output[1][28] = @183 */
  if (res[1]) casadi_copy(w183, 3, res[1]+126);
  /* #683: @183 = @8[20:23] */
  for (rr=w183, ss=w8+20; ss!=w8+23; ss+=1) *rr++ = *ss;
  /* #684: output[1][29] = @183 */
  if (res[1]) casadi_copy(w183, 3, res[1]+129);
  /* #685: @158 = @2[98:112] */
  for (rr=w158, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #686: @182 = @2[84:98] */
  for (rr=w182, ss=w2+84; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #687: @185 = @8[24:28] */
  for (rr=w185, ss=w8+24; ss!=w8+28; ss+=1) *rr++ = *ss;
  /* #688: @186 = f_disc(@182, @185) */
  arg1[0]=w182;
  arg1[1]=w185;
  res1[0]=w186;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #689: @158 = (@158-@186) */
  for (i=0, rr=w158, cs=w186; i<14; ++i) (*rr++) -= (*cs++);
  /* #690: output[1][30] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+132);
  /* #691: @0 = 0 */
  w0 = 0.;
  /* #692: @183 = @2[94:97] */
  for (rr=w183, ss=w2+94; ss!=w2+97; ss+=1) *rr++ = *ss;
  /* #693: @187 = @183' */
  casadi_copy(w183, 3, w187);
  /* #694: @188 = @2[87:90] */
  for (rr=w188, ss=w2+87; ss!=w2+90; ss+=1) *rr++ = *ss;
  /* #695: @0 = mac(@187,@188,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w187+j, tt=w188+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #696: output[1][31] = @0 */
  if (res[1]) res[1][146] = w0;
  /* #697: @0 = @2[86] */
  for (rr=(&w0), ss=w2+86; ss!=w2+87; ss+=1) *rr++ = *ss;
  /* #698: @6 = @2[97] */
  for (rr=(&w6), ss=w2+97; ss!=w2+98; ss+=1) *rr++ = *ss;
  /* #699: @0 = (@0-@6) */
  w0 -= w6;
  /* #700: output[1][32] = @0 */
  if (res[1]) res[1][147] = w0;
  /* #701: @187 = @2[87:90] */
  for (rr=w187, ss=w2+87; ss!=w2+90; ss+=1) *rr++ = *ss;
  /* #702: output[1][33] = @187 */
  if (res[1]) casadi_copy(w187, 3, res[1]+148);
  /* #703: @187 = @8[24:27] */
  for (rr=w187, ss=w8+24; ss!=w8+27; ss+=1) *rr++ = *ss;
  /* #704: output[1][34] = @187 */
  if (res[1]) casadi_copy(w187, 3, res[1]+151);
  /* #705: @158 = @2[112:126] */
  for (rr=w158, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #706: @186 = @2[98:112] */
  for (rr=w186, ss=w2+98; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #707: @189 = @8[28:32] */
  for (rr=w189, ss=w8+28; ss!=w8+32; ss+=1) *rr++ = *ss;
  /* #708: @190 = f_disc(@186, @189) */
  arg1[0]=w186;
  arg1[1]=w189;
  res1[0]=w190;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #709: @158 = (@158-@190) */
  for (i=0, rr=w158, cs=w190; i<14; ++i) (*rr++) -= (*cs++);
  /* #710: output[1][35] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+154);
  /* #711: @0 = 0 */
  w0 = 0.;
  /* #712: @187 = @2[108:111] */
  for (rr=w187, ss=w2+108; ss!=w2+111; ss+=1) *rr++ = *ss;
  /* #713: @191 = @187' */
  casadi_copy(w187, 3, w191);
  /* #714: @192 = @2[101:104] */
  for (rr=w192, ss=w2+101; ss!=w2+104; ss+=1) *rr++ = *ss;
  /* #715: @0 = mac(@191,@192,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w191+j, tt=w192+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #716: output[1][36] = @0 */
  if (res[1]) res[1][168] = w0;
  /* #717: @0 = @2[100] */
  for (rr=(&w0), ss=w2+100; ss!=w2+101; ss+=1) *rr++ = *ss;
  /* #718: @6 = @2[111] */
  for (rr=(&w6), ss=w2+111; ss!=w2+112; ss+=1) *rr++ = *ss;
  /* #719: @0 = (@0-@6) */
  w0 -= w6;
  /* #720: output[1][37] = @0 */
  if (res[1]) res[1][169] = w0;
  /* #721: @191 = @2[101:104] */
  for (rr=w191, ss=w2+101; ss!=w2+104; ss+=1) *rr++ = *ss;
  /* #722: output[1][38] = @191 */
  if (res[1]) casadi_copy(w191, 3, res[1]+170);
  /* #723: @191 = @8[28:31] */
  for (rr=w191, ss=w8+28; ss!=w8+31; ss+=1) *rr++ = *ss;
  /* #724: output[1][39] = @191 */
  if (res[1]) casadi_copy(w191, 3, res[1]+173);
  /* #725: @158 = @2[126:140] */
  for (rr=w158, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #726: @190 = @2[112:126] */
  for (rr=w190, ss=w2+112; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #727: @193 = @8[32:36] */
  for (rr=w193, ss=w8+32; ss!=w8+36; ss+=1) *rr++ = *ss;
  /* #728: @194 = f_disc(@190, @193) */
  arg1[0]=w190;
  arg1[1]=w193;
  res1[0]=w194;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #729: @158 = (@158-@194) */
  for (i=0, rr=w158, cs=w194; i<14; ++i) (*rr++) -= (*cs++);
  /* #730: output[1][40] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+176);
  /* #731: @0 = 0 */
  w0 = 0.;
  /* #732: @191 = @2[122:125] */
  for (rr=w191, ss=w2+122; ss!=w2+125; ss+=1) *rr++ = *ss;
  /* #733: @195 = @191' */
  casadi_copy(w191, 3, w195);
  /* #734: @196 = @2[115:118] */
  for (rr=w196, ss=w2+115; ss!=w2+118; ss+=1) *rr++ = *ss;
  /* #735: @0 = mac(@195,@196,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w195+j, tt=w196+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #736: output[1][41] = @0 */
  if (res[1]) res[1][190] = w0;
  /* #737: @0 = @2[114] */
  for (rr=(&w0), ss=w2+114; ss!=w2+115; ss+=1) *rr++ = *ss;
  /* #738: @6 = @2[125] */
  for (rr=(&w6), ss=w2+125; ss!=w2+126; ss+=1) *rr++ = *ss;
  /* #739: @0 = (@0-@6) */
  w0 -= w6;
  /* #740: output[1][42] = @0 */
  if (res[1]) res[1][191] = w0;
  /* #741: @195 = @2[115:118] */
  for (rr=w195, ss=w2+115; ss!=w2+118; ss+=1) *rr++ = *ss;
  /* #742: output[1][43] = @195 */
  if (res[1]) casadi_copy(w195, 3, res[1]+192);
  /* #743: @195 = @8[32:35] */
  for (rr=w195, ss=w8+32; ss!=w8+35; ss+=1) *rr++ = *ss;
  /* #744: output[1][44] = @195 */
  if (res[1]) casadi_copy(w195, 3, res[1]+195);
  /* #745: @158 = @2[140:154] */
  for (rr=w158, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #746: @194 = @2[126:140] */
  for (rr=w194, ss=w2+126; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #747: @197 = @8[36:40] */
  for (rr=w197, ss=w8+36; ss!=w8+40; ss+=1) *rr++ = *ss;
  /* #748: @198 = f_disc(@194, @197) */
  arg1[0]=w194;
  arg1[1]=w197;
  res1[0]=w198;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #749: @158 = (@158-@198) */
  for (i=0, rr=w158, cs=w198; i<14; ++i) (*rr++) -= (*cs++);
  /* #750: output[1][45] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+198);
  /* #751: @0 = 0 */
  w0 = 0.;
  /* #752: @195 = @2[136:139] */
  for (rr=w195, ss=w2+136; ss!=w2+139; ss+=1) *rr++ = *ss;
  /* #753: @199 = @195' */
  casadi_copy(w195, 3, w199);
  /* #754: @200 = @2[129:132] */
  for (rr=w200, ss=w2+129; ss!=w2+132; ss+=1) *rr++ = *ss;
  /* #755: @0 = mac(@199,@200,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w199+j, tt=w200+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #756: output[1][46] = @0 */
  if (res[1]) res[1][212] = w0;
  /* #757: @0 = @2[128] */
  for (rr=(&w0), ss=w2+128; ss!=w2+129; ss+=1) *rr++ = *ss;
  /* #758: @6 = @2[139] */
  for (rr=(&w6), ss=w2+139; ss!=w2+140; ss+=1) *rr++ = *ss;
  /* #759: @0 = (@0-@6) */
  w0 -= w6;
  /* #760: output[1][47] = @0 */
  if (res[1]) res[1][213] = w0;
  /* #761: @199 = @2[129:132] */
  for (rr=w199, ss=w2+129; ss!=w2+132; ss+=1) *rr++ = *ss;
  /* #762: output[1][48] = @199 */
  if (res[1]) casadi_copy(w199, 3, res[1]+214);
  /* #763: @199 = @8[36:39] */
  for (rr=w199, ss=w8+36; ss!=w8+39; ss+=1) *rr++ = *ss;
  /* #764: output[1][49] = @199 */
  if (res[1]) casadi_copy(w199, 3, res[1]+217);
  /* #765: @158 = @2[154:168] */
  for (rr=w158, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #766: @198 = @2[140:154] */
  for (rr=w198, ss=w2+140; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #767: @201 = @8[40:44] */
  for (rr=w201, ss=w8+40; ss!=w8+44; ss+=1) *rr++ = *ss;
  /* #768: @202 = f_disc(@198, @201) */
  arg1[0]=w198;
  arg1[1]=w201;
  res1[0]=w202;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #769: @158 = (@158-@202) */
  for (i=0, rr=w158, cs=w202; i<14; ++i) (*rr++) -= (*cs++);
  /* #770: output[1][50] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+220);
  /* #771: @0 = 0 */
  w0 = 0.;
  /* #772: @199 = @2[150:153] */
  for (rr=w199, ss=w2+150; ss!=w2+153; ss+=1) *rr++ = *ss;
  /* #773: @203 = @199' */
  casadi_copy(w199, 3, w203);
  /* #774: @204 = @2[143:146] */
  for (rr=w204, ss=w2+143; ss!=w2+146; ss+=1) *rr++ = *ss;
  /* #775: @0 = mac(@203,@204,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w203+j, tt=w204+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #776: output[1][51] = @0 */
  if (res[1]) res[1][234] = w0;
  /* #777: @0 = @2[142] */
  for (rr=(&w0), ss=w2+142; ss!=w2+143; ss+=1) *rr++ = *ss;
  /* #778: @6 = @2[153] */
  for (rr=(&w6), ss=w2+153; ss!=w2+154; ss+=1) *rr++ = *ss;
  /* #779: @0 = (@0-@6) */
  w0 -= w6;
  /* #780: output[1][52] = @0 */
  if (res[1]) res[1][235] = w0;
  /* #781: @203 = @2[143:146] */
  for (rr=w203, ss=w2+143; ss!=w2+146; ss+=1) *rr++ = *ss;
  /* #782: output[1][53] = @203 */
  if (res[1]) casadi_copy(w203, 3, res[1]+236);
  /* #783: @203 = @8[40:43] */
  for (rr=w203, ss=w8+40; ss!=w8+43; ss+=1) *rr++ = *ss;
  /* #784: output[1][54] = @203 */
  if (res[1]) casadi_copy(w203, 3, res[1]+239);
  /* #785: @158 = @2[168:182] */
  for (rr=w158, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #786: @202 = @2[154:168] */
  for (rr=w202, ss=w2+154; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #787: @205 = @8[44:48] */
  for (rr=w205, ss=w8+44; ss!=w8+48; ss+=1) *rr++ = *ss;
  /* #788: @206 = f_disc(@202, @205) */
  arg1[0]=w202;
  arg1[1]=w205;
  res1[0]=w206;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #789: @158 = (@158-@206) */
  for (i=0, rr=w158, cs=w206; i<14; ++i) (*rr++) -= (*cs++);
  /* #790: output[1][55] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+242);
  /* #791: @0 = 0 */
  w0 = 0.;
  /* #792: @203 = @2[164:167] */
  for (rr=w203, ss=w2+164; ss!=w2+167; ss+=1) *rr++ = *ss;
  /* #793: @207 = @203' */
  casadi_copy(w203, 3, w207);
  /* #794: @208 = @2[157:160] */
  for (rr=w208, ss=w2+157; ss!=w2+160; ss+=1) *rr++ = *ss;
  /* #795: @0 = mac(@207,@208,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w207+j, tt=w208+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #796: output[1][56] = @0 */
  if (res[1]) res[1][256] = w0;
  /* #797: @0 = @2[156] */
  for (rr=(&w0), ss=w2+156; ss!=w2+157; ss+=1) *rr++ = *ss;
  /* #798: @6 = @2[167] */
  for (rr=(&w6), ss=w2+167; ss!=w2+168; ss+=1) *rr++ = *ss;
  /* #799: @0 = (@0-@6) */
  w0 -= w6;
  /* #800: output[1][57] = @0 */
  if (res[1]) res[1][257] = w0;
  /* #801: @207 = @2[157:160] */
  for (rr=w207, ss=w2+157; ss!=w2+160; ss+=1) *rr++ = *ss;
  /* #802: output[1][58] = @207 */
  if (res[1]) casadi_copy(w207, 3, res[1]+258);
  /* #803: @207 = @8[44:47] */
  for (rr=w207, ss=w8+44; ss!=w8+47; ss+=1) *rr++ = *ss;
  /* #804: output[1][59] = @207 */
  if (res[1]) casadi_copy(w207, 3, res[1]+261);
  /* #805: @158 = @2[182:196] */
  for (rr=w158, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #806: @206 = @2[168:182] */
  for (rr=w206, ss=w2+168; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #807: @209 = @8[48:52] */
  for (rr=w209, ss=w8+48; ss!=w8+52; ss+=1) *rr++ = *ss;
  /* #808: @210 = f_disc(@206, @209) */
  arg1[0]=w206;
  arg1[1]=w209;
  res1[0]=w210;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #809: @158 = (@158-@210) */
  for (i=0, rr=w158, cs=w210; i<14; ++i) (*rr++) -= (*cs++);
  /* #810: output[1][60] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+264);
  /* #811: @0 = 0 */
  w0 = 0.;
  /* #812: @207 = @2[178:181] */
  for (rr=w207, ss=w2+178; ss!=w2+181; ss+=1) *rr++ = *ss;
  /* #813: @211 = @207' */
  casadi_copy(w207, 3, w211);
  /* #814: @212 = @2[171:174] */
  for (rr=w212, ss=w2+171; ss!=w2+174; ss+=1) *rr++ = *ss;
  /* #815: @0 = mac(@211,@212,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w211+j, tt=w212+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #816: output[1][61] = @0 */
  if (res[1]) res[1][278] = w0;
  /* #817: @0 = @2[170] */
  for (rr=(&w0), ss=w2+170; ss!=w2+171; ss+=1) *rr++ = *ss;
  /* #818: @6 = @2[181] */
  for (rr=(&w6), ss=w2+181; ss!=w2+182; ss+=1) *rr++ = *ss;
  /* #819: @0 = (@0-@6) */
  w0 -= w6;
  /* #820: output[1][62] = @0 */
  if (res[1]) res[1][279] = w0;
  /* #821: @211 = @2[171:174] */
  for (rr=w211, ss=w2+171; ss!=w2+174; ss+=1) *rr++ = *ss;
  /* #822: output[1][63] = @211 */
  if (res[1]) casadi_copy(w211, 3, res[1]+280);
  /* #823: @211 = @8[48:51] */
  for (rr=w211, ss=w8+48; ss!=w8+51; ss+=1) *rr++ = *ss;
  /* #824: output[1][64] = @211 */
  if (res[1]) casadi_copy(w211, 3, res[1]+283);
  /* #825: @158 = @2[196:210] */
  for (rr=w158, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #826: @210 = @2[182:196] */
  for (rr=w210, ss=w2+182; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #827: @213 = @8[52:56] */
  for (rr=w213, ss=w8+52; ss!=w8+56; ss+=1) *rr++ = *ss;
  /* #828: @214 = f_disc(@210, @213) */
  arg1[0]=w210;
  arg1[1]=w213;
  res1[0]=w214;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #829: @158 = (@158-@214) */
  for (i=0, rr=w158, cs=w214; i<14; ++i) (*rr++) -= (*cs++);
  /* #830: output[1][65] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+286);
  /* #831: @0 = 0 */
  w0 = 0.;
  /* #832: @211 = @2[192:195] */
  for (rr=w211, ss=w2+192; ss!=w2+195; ss+=1) *rr++ = *ss;
  /* #833: @215 = @211' */
  casadi_copy(w211, 3, w215);
  /* #834: @216 = @2[185:188] */
  for (rr=w216, ss=w2+185; ss!=w2+188; ss+=1) *rr++ = *ss;
  /* #835: @0 = mac(@215,@216,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w215+j, tt=w216+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #836: output[1][66] = @0 */
  if (res[1]) res[1][300] = w0;
  /* #837: @0 = @2[184] */
  for (rr=(&w0), ss=w2+184; ss!=w2+185; ss+=1) *rr++ = *ss;
  /* #838: @6 = @2[195] */
  for (rr=(&w6), ss=w2+195; ss!=w2+196; ss+=1) *rr++ = *ss;
  /* #839: @0 = (@0-@6) */
  w0 -= w6;
  /* #840: output[1][67] = @0 */
  if (res[1]) res[1][301] = w0;
  /* #841: @215 = @2[185:188] */
  for (rr=w215, ss=w2+185; ss!=w2+188; ss+=1) *rr++ = *ss;
  /* #842: output[1][68] = @215 */
  if (res[1]) casadi_copy(w215, 3, res[1]+302);
  /* #843: @215 = @8[52:55] */
  for (rr=w215, ss=w8+52; ss!=w8+55; ss+=1) *rr++ = *ss;
  /* #844: output[1][69] = @215 */
  if (res[1]) casadi_copy(w215, 3, res[1]+305);
  /* #845: @158 = @2[210:224] */
  for (rr=w158, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #846: @214 = @2[196:210] */
  for (rr=w214, ss=w2+196; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #847: @217 = @8[56:60] */
  for (rr=w217, ss=w8+56; ss!=w8+60; ss+=1) *rr++ = *ss;
  /* #848: @218 = f_disc(@214, @217) */
  arg1[0]=w214;
  arg1[1]=w217;
  res1[0]=w218;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #849: @158 = (@158-@218) */
  for (i=0, rr=w158, cs=w218; i<14; ++i) (*rr++) -= (*cs++);
  /* #850: output[1][70] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+308);
  /* #851: @0 = 0 */
  w0 = 0.;
  /* #852: @215 = @2[206:209] */
  for (rr=w215, ss=w2+206; ss!=w2+209; ss+=1) *rr++ = *ss;
  /* #853: @219 = @215' */
  casadi_copy(w215, 3, w219);
  /* #854: @220 = @2[199:202] */
  for (rr=w220, ss=w2+199; ss!=w2+202; ss+=1) *rr++ = *ss;
  /* #855: @0 = mac(@219,@220,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w219+j, tt=w220+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #856: output[1][71] = @0 */
  if (res[1]) res[1][322] = w0;
  /* #857: @0 = @2[198] */
  for (rr=(&w0), ss=w2+198; ss!=w2+199; ss+=1) *rr++ = *ss;
  /* #858: @6 = @2[209] */
  for (rr=(&w6), ss=w2+209; ss!=w2+210; ss+=1) *rr++ = *ss;
  /* #859: @0 = (@0-@6) */
  w0 -= w6;
  /* #860: output[1][72] = @0 */
  if (res[1]) res[1][323] = w0;
  /* #861: @219 = @2[199:202] */
  for (rr=w219, ss=w2+199; ss!=w2+202; ss+=1) *rr++ = *ss;
  /* #862: output[1][73] = @219 */
  if (res[1]) casadi_copy(w219, 3, res[1]+324);
  /* #863: @219 = @8[56:59] */
  for (rr=w219, ss=w8+56; ss!=w8+59; ss+=1) *rr++ = *ss;
  /* #864: output[1][74] = @219 */
  if (res[1]) casadi_copy(w219, 3, res[1]+327);
  /* #865: @158 = @2[224:238] */
  for (rr=w158, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #866: @218 = @2[210:224] */
  for (rr=w218, ss=w2+210; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #867: @221 = @8[60:64] */
  for (rr=w221, ss=w8+60; ss!=w8+64; ss+=1) *rr++ = *ss;
  /* #868: @222 = f_disc(@218, @221) */
  arg1[0]=w218;
  arg1[1]=w221;
  res1[0]=w222;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #869: @158 = (@158-@222) */
  for (i=0, rr=w158, cs=w222; i<14; ++i) (*rr++) -= (*cs++);
  /* #870: output[1][75] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+330);
  /* #871: @0 = 0 */
  w0 = 0.;
  /* #872: @219 = @2[220:223] */
  for (rr=w219, ss=w2+220; ss!=w2+223; ss+=1) *rr++ = *ss;
  /* #873: @223 = @219' */
  casadi_copy(w219, 3, w223);
  /* #874: @224 = @2[213:216] */
  for (rr=w224, ss=w2+213; ss!=w2+216; ss+=1) *rr++ = *ss;
  /* #875: @0 = mac(@223,@224,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w223+j, tt=w224+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #876: output[1][76] = @0 */
  if (res[1]) res[1][344] = w0;
  /* #877: @0 = @2[212] */
  for (rr=(&w0), ss=w2+212; ss!=w2+213; ss+=1) *rr++ = *ss;
  /* #878: @6 = @2[223] */
  for (rr=(&w6), ss=w2+223; ss!=w2+224; ss+=1) *rr++ = *ss;
  /* #879: @0 = (@0-@6) */
  w0 -= w6;
  /* #880: output[1][77] = @0 */
  if (res[1]) res[1][345] = w0;
  /* #881: @223 = @2[213:216] */
  for (rr=w223, ss=w2+213; ss!=w2+216; ss+=1) *rr++ = *ss;
  /* #882: output[1][78] = @223 */
  if (res[1]) casadi_copy(w223, 3, res[1]+346);
  /* #883: @223 = @8[60:63] */
  for (rr=w223, ss=w8+60; ss!=w8+63; ss+=1) *rr++ = *ss;
  /* #884: output[1][79] = @223 */
  if (res[1]) casadi_copy(w223, 3, res[1]+349);
  /* #885: @158 = @2[238:252] */
  for (rr=w158, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #886: @222 = @2[224:238] */
  for (rr=w222, ss=w2+224; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #887: @225 = @8[64:68] */
  for (rr=w225, ss=w8+64; ss!=w8+68; ss+=1) *rr++ = *ss;
  /* #888: @226 = f_disc(@222, @225) */
  arg1[0]=w222;
  arg1[1]=w225;
  res1[0]=w226;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #889: @158 = (@158-@226) */
  for (i=0, rr=w158, cs=w226; i<14; ++i) (*rr++) -= (*cs++);
  /* #890: output[1][80] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+352);
  /* #891: @0 = 0 */
  w0 = 0.;
  /* #892: @223 = @2[234:237] */
  for (rr=w223, ss=w2+234; ss!=w2+237; ss+=1) *rr++ = *ss;
  /* #893: @227 = @223' */
  casadi_copy(w223, 3, w227);
  /* #894: @228 = @2[227:230] */
  for (rr=w228, ss=w2+227; ss!=w2+230; ss+=1) *rr++ = *ss;
  /* #895: @0 = mac(@227,@228,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w227+j, tt=w228+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #896: output[1][81] = @0 */
  if (res[1]) res[1][366] = w0;
  /* #897: @0 = @2[226] */
  for (rr=(&w0), ss=w2+226; ss!=w2+227; ss+=1) *rr++ = *ss;
  /* #898: @6 = @2[237] */
  for (rr=(&w6), ss=w2+237; ss!=w2+238; ss+=1) *rr++ = *ss;
  /* #899: @0 = (@0-@6) */
  w0 -= w6;
  /* #900: output[1][82] = @0 */
  if (res[1]) res[1][367] = w0;
  /* #901: @227 = @2[227:230] */
  for (rr=w227, ss=w2+227; ss!=w2+230; ss+=1) *rr++ = *ss;
  /* #902: output[1][83] = @227 */
  if (res[1]) casadi_copy(w227, 3, res[1]+368);
  /* #903: @227 = @8[64:67] */
  for (rr=w227, ss=w8+64; ss!=w8+67; ss+=1) *rr++ = *ss;
  /* #904: output[1][84] = @227 */
  if (res[1]) casadi_copy(w227, 3, res[1]+371);
  /* #905: @158 = @2[252:266] */
  for (rr=w158, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #906: @226 = @2[238:252] */
  for (rr=w226, ss=w2+238; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #907: @229 = @8[68:72] */
  for (rr=w229, ss=w8+68; ss!=w8+72; ss+=1) *rr++ = *ss;
  /* #908: @230 = f_disc(@226, @229) */
  arg1[0]=w226;
  arg1[1]=w229;
  res1[0]=w230;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #909: @158 = (@158-@230) */
  for (i=0, rr=w158, cs=w230; i<14; ++i) (*rr++) -= (*cs++);
  /* #910: output[1][85] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+374);
  /* #911: @0 = 0 */
  w0 = 0.;
  /* #912: @227 = @2[248:251] */
  for (rr=w227, ss=w2+248; ss!=w2+251; ss+=1) *rr++ = *ss;
  /* #913: @231 = @227' */
  casadi_copy(w227, 3, w231);
  /* #914: @232 = @2[241:244] */
  for (rr=w232, ss=w2+241; ss!=w2+244; ss+=1) *rr++ = *ss;
  /* #915: @0 = mac(@231,@232,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w231+j, tt=w232+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #916: output[1][86] = @0 */
  if (res[1]) res[1][388] = w0;
  /* #917: @0 = @2[240] */
  for (rr=(&w0), ss=w2+240; ss!=w2+241; ss+=1) *rr++ = *ss;
  /* #918: @6 = @2[251] */
  for (rr=(&w6), ss=w2+251; ss!=w2+252; ss+=1) *rr++ = *ss;
  /* #919: @0 = (@0-@6) */
  w0 -= w6;
  /* #920: output[1][87] = @0 */
  if (res[1]) res[1][389] = w0;
  /* #921: @231 = @2[241:244] */
  for (rr=w231, ss=w2+241; ss!=w2+244; ss+=1) *rr++ = *ss;
  /* #922: output[1][88] = @231 */
  if (res[1]) casadi_copy(w231, 3, res[1]+390);
  /* #923: @231 = @8[68:71] */
  for (rr=w231, ss=w8+68; ss!=w8+71; ss+=1) *rr++ = *ss;
  /* #924: output[1][89] = @231 */
  if (res[1]) casadi_copy(w231, 3, res[1]+393);
  /* #925: @158 = @2[266:280] */
  for (rr=w158, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #926: @230 = @2[252:266] */
  for (rr=w230, ss=w2+252; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #927: @233 = @8[72:76] */
  for (rr=w233, ss=w8+72; ss!=w8+76; ss+=1) *rr++ = *ss;
  /* #928: @234 = f_disc(@230, @233) */
  arg1[0]=w230;
  arg1[1]=w233;
  res1[0]=w234;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #929: @158 = (@158-@234) */
  for (i=0, rr=w158, cs=w234; i<14; ++i) (*rr++) -= (*cs++);
  /* #930: output[1][90] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+396);
  /* #931: @0 = 0 */
  w0 = 0.;
  /* #932: @231 = @2[262:265] */
  for (rr=w231, ss=w2+262; ss!=w2+265; ss+=1) *rr++ = *ss;
  /* #933: @235 = @231' */
  casadi_copy(w231, 3, w235);
  /* #934: @236 = @2[255:258] */
  for (rr=w236, ss=w2+255; ss!=w2+258; ss+=1) *rr++ = *ss;
  /* #935: @0 = mac(@235,@236,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w235+j, tt=w236+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #936: output[1][91] = @0 */
  if (res[1]) res[1][410] = w0;
  /* #937: @0 = @2[254] */
  for (rr=(&w0), ss=w2+254; ss!=w2+255; ss+=1) *rr++ = *ss;
  /* #938: @6 = @2[265] */
  for (rr=(&w6), ss=w2+265; ss!=w2+266; ss+=1) *rr++ = *ss;
  /* #939: @0 = (@0-@6) */
  w0 -= w6;
  /* #940: output[1][92] = @0 */
  if (res[1]) res[1][411] = w0;
  /* #941: @235 = @2[255:258] */
  for (rr=w235, ss=w2+255; ss!=w2+258; ss+=1) *rr++ = *ss;
  /* #942: output[1][93] = @235 */
  if (res[1]) casadi_copy(w235, 3, res[1]+412);
  /* #943: @235 = @8[72:75] */
  for (rr=w235, ss=w8+72; ss!=w8+75; ss+=1) *rr++ = *ss;
  /* #944: output[1][94] = @235 */
  if (res[1]) casadi_copy(w235, 3, res[1]+415);
  /* #945: @158 = @2[280:294] */
  for (rr=w158, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #946: @234 = @2[266:280] */
  for (rr=w234, ss=w2+266; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #947: @237 = @8[76:80] */
  for (rr=w237, ss=w8+76; ss!=w8+80; ss+=1) *rr++ = *ss;
  /* #948: @238 = f_disc(@234, @237) */
  arg1[0]=w234;
  arg1[1]=w237;
  res1[0]=w238;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #949: @158 = (@158-@238) */
  for (i=0, rr=w158, cs=w238; i<14; ++i) (*rr++) -= (*cs++);
  /* #950: output[1][95] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+418);
  /* #951: @0 = 0 */
  w0 = 0.;
  /* #952: @235 = @2[276:279] */
  for (rr=w235, ss=w2+276; ss!=w2+279; ss+=1) *rr++ = *ss;
  /* #953: @239 = @235' */
  casadi_copy(w235, 3, w239);
  /* #954: @240 = @2[269:272] */
  for (rr=w240, ss=w2+269; ss!=w2+272; ss+=1) *rr++ = *ss;
  /* #955: @0 = mac(@239,@240,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w239+j, tt=w240+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #956: output[1][96] = @0 */
  if (res[1]) res[1][432] = w0;
  /* #957: @0 = @2[268] */
  for (rr=(&w0), ss=w2+268; ss!=w2+269; ss+=1) *rr++ = *ss;
  /* #958: @6 = @2[279] */
  for (rr=(&w6), ss=w2+279; ss!=w2+280; ss+=1) *rr++ = *ss;
  /* #959: @0 = (@0-@6) */
  w0 -= w6;
  /* #960: output[1][97] = @0 */
  if (res[1]) res[1][433] = w0;
  /* #961: @239 = @2[269:272] */
  for (rr=w239, ss=w2+269; ss!=w2+272; ss+=1) *rr++ = *ss;
  /* #962: output[1][98] = @239 */
  if (res[1]) casadi_copy(w239, 3, res[1]+434);
  /* #963: @239 = @8[76:79] */
  for (rr=w239, ss=w8+76; ss!=w8+79; ss+=1) *rr++ = *ss;
  /* #964: output[1][99] = @239 */
  if (res[1]) casadi_copy(w239, 3, res[1]+437);
  /* #965: @158 = @2[294:308] */
  for (rr=w158, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #966: @238 = @2[280:294] */
  for (rr=w238, ss=w2+280; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #967: @241 = @8[80:84] */
  for (rr=w241, ss=w8+80; ss!=w8+84; ss+=1) *rr++ = *ss;
  /* #968: @242 = f_disc(@238, @241) */
  arg1[0]=w238;
  arg1[1]=w241;
  res1[0]=w242;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #969: @158 = (@158-@242) */
  for (i=0, rr=w158, cs=w242; i<14; ++i) (*rr++) -= (*cs++);
  /* #970: output[1][100] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+440);
  /* #971: @0 = 0 */
  w0 = 0.;
  /* #972: @239 = @2[290:293] */
  for (rr=w239, ss=w2+290; ss!=w2+293; ss+=1) *rr++ = *ss;
  /* #973: @243 = @239' */
  casadi_copy(w239, 3, w243);
  /* #974: @244 = @2[283:286] */
  for (rr=w244, ss=w2+283; ss!=w2+286; ss+=1) *rr++ = *ss;
  /* #975: @0 = mac(@243,@244,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w243+j, tt=w244+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #976: output[1][101] = @0 */
  if (res[1]) res[1][454] = w0;
  /* #977: @0 = @2[282] */
  for (rr=(&w0), ss=w2+282; ss!=w2+283; ss+=1) *rr++ = *ss;
  /* #978: @6 = @2[293] */
  for (rr=(&w6), ss=w2+293; ss!=w2+294; ss+=1) *rr++ = *ss;
  /* #979: @0 = (@0-@6) */
  w0 -= w6;
  /* #980: output[1][102] = @0 */
  if (res[1]) res[1][455] = w0;
  /* #981: @243 = @2[283:286] */
  for (rr=w243, ss=w2+283; ss!=w2+286; ss+=1) *rr++ = *ss;
  /* #982: output[1][103] = @243 */
  if (res[1]) casadi_copy(w243, 3, res[1]+456);
  /* #983: @243 = @8[80:83] */
  for (rr=w243, ss=w8+80; ss!=w8+83; ss+=1) *rr++ = *ss;
  /* #984: output[1][104] = @243 */
  if (res[1]) casadi_copy(w243, 3, res[1]+459);
  /* #985: @158 = @2[308:322] */
  for (rr=w158, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #986: @242 = @2[294:308] */
  for (rr=w242, ss=w2+294; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #987: @245 = @8[84:88] */
  for (rr=w245, ss=w8+84; ss!=w8+88; ss+=1) *rr++ = *ss;
  /* #988: @246 = f_disc(@242, @245) */
  arg1[0]=w242;
  arg1[1]=w245;
  res1[0]=w246;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #989: @158 = (@158-@246) */
  for (i=0, rr=w158, cs=w246; i<14; ++i) (*rr++) -= (*cs++);
  /* #990: output[1][105] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+462);
  /* #991: @0 = 0 */
  w0 = 0.;
  /* #992: @243 = @2[304:307] */
  for (rr=w243, ss=w2+304; ss!=w2+307; ss+=1) *rr++ = *ss;
  /* #993: @247 = @243' */
  casadi_copy(w243, 3, w247);
  /* #994: @248 = @2[297:300] */
  for (rr=w248, ss=w2+297; ss!=w2+300; ss+=1) *rr++ = *ss;
  /* #995: @0 = mac(@247,@248,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w247+j, tt=w248+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #996: output[1][106] = @0 */
  if (res[1]) res[1][476] = w0;
  /* #997: @0 = @2[296] */
  for (rr=(&w0), ss=w2+296; ss!=w2+297; ss+=1) *rr++ = *ss;
  /* #998: @6 = @2[307] */
  for (rr=(&w6), ss=w2+307; ss!=w2+308; ss+=1) *rr++ = *ss;
  /* #999: @0 = (@0-@6) */
  w0 -= w6;
  /* #1000: output[1][107] = @0 */
  if (res[1]) res[1][477] = w0;
  /* #1001: @247 = @2[297:300] */
  for (rr=w247, ss=w2+297; ss!=w2+300; ss+=1) *rr++ = *ss;
  /* #1002: output[1][108] = @247 */
  if (res[1]) casadi_copy(w247, 3, res[1]+478);
  /* #1003: @247 = @8[84:87] */
  for (rr=w247, ss=w8+84; ss!=w8+87; ss+=1) *rr++ = *ss;
  /* #1004: output[1][109] = @247 */
  if (res[1]) casadi_copy(w247, 3, res[1]+481);
  /* #1005: @158 = @2[322:336] */
  for (rr=w158, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1006: @246 = @2[308:322] */
  for (rr=w246, ss=w2+308; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1007: @249 = @8[88:92] */
  for (rr=w249, ss=w8+88; ss!=w8+92; ss+=1) *rr++ = *ss;
  /* #1008: @250 = f_disc(@246, @249) */
  arg1[0]=w246;
  arg1[1]=w249;
  res1[0]=w250;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1009: @158 = (@158-@250) */
  for (i=0, rr=w158, cs=w250; i<14; ++i) (*rr++) -= (*cs++);
  /* #1010: output[1][110] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+484);
  /* #1011: @0 = 0 */
  w0 = 0.;
  /* #1012: @247 = @2[318:321] */
  for (rr=w247, ss=w2+318; ss!=w2+321; ss+=1) *rr++ = *ss;
  /* #1013: @251 = @247' */
  casadi_copy(w247, 3, w251);
  /* #1014: @252 = @2[311:314] */
  for (rr=w252, ss=w2+311; ss!=w2+314; ss+=1) *rr++ = *ss;
  /* #1015: @0 = mac(@251,@252,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w251+j, tt=w252+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1016: output[1][111] = @0 */
  if (res[1]) res[1][498] = w0;
  /* #1017: @0 = @2[310] */
  for (rr=(&w0), ss=w2+310; ss!=w2+311; ss+=1) *rr++ = *ss;
  /* #1018: @6 = @2[321] */
  for (rr=(&w6), ss=w2+321; ss!=w2+322; ss+=1) *rr++ = *ss;
  /* #1019: @0 = (@0-@6) */
  w0 -= w6;
  /* #1020: output[1][112] = @0 */
  if (res[1]) res[1][499] = w0;
  /* #1021: @251 = @2[311:314] */
  for (rr=w251, ss=w2+311; ss!=w2+314; ss+=1) *rr++ = *ss;
  /* #1022: output[1][113] = @251 */
  if (res[1]) casadi_copy(w251, 3, res[1]+500);
  /* #1023: @251 = @8[88:91] */
  for (rr=w251, ss=w8+88; ss!=w8+91; ss+=1) *rr++ = *ss;
  /* #1024: output[1][114] = @251 */
  if (res[1]) casadi_copy(w251, 3, res[1]+503);
  /* #1025: @158 = @2[336:350] */
  for (rr=w158, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1026: @250 = @2[322:336] */
  for (rr=w250, ss=w2+322; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1027: @253 = @8[92:96] */
  for (rr=w253, ss=w8+92; ss!=w8+96; ss+=1) *rr++ = *ss;
  /* #1028: @254 = f_disc(@250, @253) */
  arg1[0]=w250;
  arg1[1]=w253;
  res1[0]=w254;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1029: @158 = (@158-@254) */
  for (i=0, rr=w158, cs=w254; i<14; ++i) (*rr++) -= (*cs++);
  /* #1030: output[1][115] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+506);
  /* #1031: @0 = 0 */
  w0 = 0.;
  /* #1032: @251 = @2[332:335] */
  for (rr=w251, ss=w2+332; ss!=w2+335; ss+=1) *rr++ = *ss;
  /* #1033: @255 = @251' */
  casadi_copy(w251, 3, w255);
  /* #1034: @256 = @2[325:328] */
  for (rr=w256, ss=w2+325; ss!=w2+328; ss+=1) *rr++ = *ss;
  /* #1035: @0 = mac(@255,@256,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w255+j, tt=w256+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1036: output[1][116] = @0 */
  if (res[1]) res[1][520] = w0;
  /* #1037: @0 = @2[324] */
  for (rr=(&w0), ss=w2+324; ss!=w2+325; ss+=1) *rr++ = *ss;
  /* #1038: @6 = @2[335] */
  for (rr=(&w6), ss=w2+335; ss!=w2+336; ss+=1) *rr++ = *ss;
  /* #1039: @0 = (@0-@6) */
  w0 -= w6;
  /* #1040: output[1][117] = @0 */
  if (res[1]) res[1][521] = w0;
  /* #1041: @255 = @2[325:328] */
  for (rr=w255, ss=w2+325; ss!=w2+328; ss+=1) *rr++ = *ss;
  /* #1042: output[1][118] = @255 */
  if (res[1]) casadi_copy(w255, 3, res[1]+522);
  /* #1043: @255 = @8[92:95] */
  for (rr=w255, ss=w8+92; ss!=w8+95; ss+=1) *rr++ = *ss;
  /* #1044: output[1][119] = @255 */
  if (res[1]) casadi_copy(w255, 3, res[1]+525);
  /* #1045: @158 = @2[350:364] */
  for (rr=w158, ss=w2+350; ss!=w2+364; ss+=1) *rr++ = *ss;
  /* #1046: @254 = @2[336:350] */
  for (rr=w254, ss=w2+336; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1047: @257 = @8[96:100] */
  for (rr=w257, ss=w8+96; ss!=w8+100; ss+=1) *rr++ = *ss;
  /* #1048: @258 = f_disc(@254, @257) */
  arg1[0]=w254;
  arg1[1]=w257;
  res1[0]=w258;
  if (casadi_f3(arg1, res1, iw, w, 0)) return 1;
  /* #1049: @158 = (@158-@258) */
  for (i=0, rr=w158, cs=w258; i<14; ++i) (*rr++) -= (*cs++);
  /* #1050: output[1][120] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+528);
  /* #1051: @0 = 0 */
  w0 = 0.;
  /* #1052: @255 = @2[346:349] */
  for (rr=w255, ss=w2+346; ss!=w2+349; ss+=1) *rr++ = *ss;
  /* #1053: @259 = @255' */
  casadi_copy(w255, 3, w259);
  /* #1054: @260 = @2[339:342] */
  for (rr=w260, ss=w2+339; ss!=w2+342; ss+=1) *rr++ = *ss;
  /* #1055: @0 = mac(@259,@260,@0) */
  for (i=0, rr=(&w0); i<1; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w259+j, tt=w260+i*3; k<3; ++k) *rr += ss[k*1]**tt++;
  /* #1056: output[1][121] = @0 */
  if (res[1]) res[1][542] = w0;
  /* #1057: @0 = @2[338] */
  for (rr=(&w0), ss=w2+338; ss!=w2+339; ss+=1) *rr++ = *ss;
  /* #1058: @6 = @2[349] */
  for (rr=(&w6), ss=w2+349; ss!=w2+350; ss+=1) *rr++ = *ss;
  /* #1059: @0 = (@0-@6) */
  w0 -= w6;
  /* #1060: output[1][122] = @0 */
  if (res[1]) res[1][543] = w0;
  /* #1061: @259 = @2[339:342] */
  for (rr=w259, ss=w2+339; ss!=w2+342; ss+=1) *rr++ = *ss;
  /* #1062: output[1][123] = @259 */
  if (res[1]) casadi_copy(w259, 3, res[1]+544);
  /* #1063: @259 = @8[96:99] */
  for (rr=w259, ss=w8+96; ss!=w8+99; ss+=1) *rr++ = *ss;
  /* #1064: output[1][124] = @259 */
  if (res[1]) casadi_copy(w259, 3, res[1]+547);
  /* #1065: @158 = @2[:14] */
  for (rr=w158, ss=w2+0; ss!=w2+14; ss+=1) *rr++ = *ss;
  /* #1066: output[1][125] = @158 */
  if (res[1]) casadi_copy(w158, 14, res[1]+550);
  /* #1067: @2 = zeros(14x26) */
  casadi_clear(w2, 364);
  /* #1068: @261 = input[3][0] */
  casadi_copy(arg[3], 564, w261);
  /* #1069: {} = vertsplit(@261) */
  casadi_copy(w261, 14, w158);
  w0 = w261[14];
  w6 = w261[15];
  casadi_copy(w261+16, 3, w259);
  casadi_copy(w261+19, 3, w262);
  casadi_copy(w261+22, 14, w258);
  w263 = w261[36];
  w264 = w261[37];
  casadi_copy(w261+38, 3, w265);
  casadi_copy(w261+41, 3, w266);
  casadi_copy(w261+44, 14, w267);
  w268 = w261[58];
  w269 = w261[59];
  casadi_copy(w261+60, 3, w270);
  casadi_copy(w261+63, 3, w271);
  casadi_copy(w261+66, 14, w272);
  w273 = w261[80];
  w274 = w261[81];
  casadi_copy(w261+82, 3, w275);
  casadi_copy(w261+85, 3, w276);
  casadi_copy(w261+88, 14, w277);
  w278 = w261[102];
  w279 = w261[103];
  casadi_copy(w261+104, 3, w280);
  casadi_copy(w261+107, 3, w281);
  casadi_copy(w261+110, 14, w282);
  w283 = w261[124];
  w284 = w261[125];
  casadi_copy(w261+126, 3, w285);
  casadi_copy(w261+129, 3, w286);
  casadi_copy(w261+132, 14, w287);
  w288 = w261[146];
  w289 = w261[147];
  casadi_copy(w261+148, 3, w290);
  casadi_copy(w261+151, 3, w291);
  casadi_copy(w261+154, 14, w292);
  w293 = w261[168];
  w294 = w261[169];
  casadi_copy(w261+170, 3, w295);
  casadi_copy(w261+173, 3, w296);
  casadi_copy(w261+176, 14, w297);
  w298 = w261[190];
  w299 = w261[191];
  casadi_copy(w261+192, 3, w300);
  casadi_copy(w261+195, 3, w301);
  casadi_copy(w261+198, 14, w302);
  w303 = w261[212];
  w304 = w261[213];
  casadi_copy(w261+214, 3, w305);
  casadi_copy(w261+217, 3, w306);
  casadi_copy(w261+220, 14, w307);
  w308 = w261[234];
  w309 = w261[235];
  casadi_copy(w261+236, 3, w310);
  casadi_copy(w261+239, 3, w311);
  casadi_copy(w261+242, 14, w312);
  w313 = w261[256];
  w314 = w261[257];
  casadi_copy(w261+258, 3, w315);
  casadi_copy(w261+261, 3, w316);
  casadi_copy(w261+264, 14, w317);
  w318 = w261[278];
  w319 = w261[279];
  casadi_copy(w261+280, 3, w320);
  casadi_copy(w261+283, 3, w321);
  casadi_copy(w261+286, 14, w322);
  w323 = w261[300];
  w324 = w261[301];
  casadi_copy(w261+302, 3, w325);
  casadi_copy(w261+305, 3, w326);
  casadi_copy(w261+308, 14, w327);
  w328 = w261[322];
  w329 = w261[323];
  casadi_copy(w261+324, 3, w330);
  casadi_copy(w261+327, 3, w331);
  casadi_copy(w261+330, 14, w332);
  w333 = w261[344];
  w334 = w261[345];
  casadi_copy(w261+346, 3, w335);
  casadi_copy(w261+349, 3, w336);
  casadi_copy(w261+352, 14, w337);
  w338 = w261[366];
  w339 = w261[367];
  casadi_copy(w261+368, 3, w340);
  casadi_copy(w261+371, 3, w341);
  casadi_copy(w261+374, 14, w342);
  w343 = w261[388];
  w344 = w261[389];
  casadi_copy(w261+390, 3, w345);
  casadi_copy(w261+393, 3, w346);
  casadi_copy(w261+396, 14, w347);
  w348 = w261[410];
  w349 = w261[411];
  casadi_copy(w261+412, 3, w350);
  casadi_copy(w261+415, 3, w351);
  casadi_copy(w261+418, 14, w352);
  w353 = w261[432];
  w354 = w261[433];
  casadi_copy(w261+434, 3, w355);
  casadi_copy(w261+437, 3, w356);
  casadi_copy(w261+440, 14, w357);
  w358 = w261[454];
  w359 = w261[455];
  casadi_copy(w261+456, 3, w360);
  casadi_copy(w261+459, 3, w361);
  casadi_copy(w261+462, 14, w362);
  w363 = w261[476];
  w364 = w261[477];
  casadi_copy(w261+478, 3, w365);
  casadi_copy(w261+481, 3, w366);
  casadi_copy(w261+484, 14, w367);
  w368 = w261[498];
  w369 = w261[499];
  casadi_copy(w261+500, 3, w370);
  casadi_copy(w261+503, 3, w371);
  casadi_copy(w261+506, 14, w372);
  w373 = w261[520];
  w374 = w261[521];
  casadi_copy(w261+522, 3, w375);
  casadi_copy(w261+525, 3, w376);
  casadi_copy(w261+528, 14, w377);
  w378 = w261[542];
  w379 = w261[543];
  casadi_copy(w261+544, 3, w380);
  casadi_copy(w261+547, 3, w381);
  casadi_copy(w261+550, 14, w382);
  /* #1070: (@2[:14] += @382) */
  for (rr=w2+0, ss=w382; rr!=w2+14; rr+=1) *rr += *ss++;
  /* #1071: (@2[339:342] += @380) */
  for (rr=w2+339, ss=w380; rr!=w2+342; rr+=1) *rr += *ss++;
  /* #1072: @383 = (-@379) */
  w383 = (- w379 );
  /* #1073: (@2[349] += @383) */
  for (rr=w2+349, ss=(&w383); rr!=w2+350; rr+=1) *rr += *ss++;
  /* #1074: (@2[338] += @379) */
  for (rr=w2+338, ss=(&w379); rr!=w2+339; rr+=1) *rr += *ss++;
  /* #1075: @255 = (@255*@378) */
  for (i=0, rr=w255; i<3; ++i) (*rr++) *= w378;
  /* #1076: (@2[339:342] += @255) */
  for (rr=w2+339, ss=w255; rr!=w2+342; rr+=1) *rr += *ss++;
  /* #1077: @260 = @260' */
  /* #1078: @260 = (@378*@260) */
  for (i=0, rr=w260, cs=w260; i<3; ++i) (*rr++)  = (w378*(*cs++));
  /* #1079: @260 = @260' */
  /* #1080: (@2[346:349] += @260) */
  for (rr=w2+346, ss=w260; rr!=w2+349; rr+=1) *rr += *ss++;
  /* #1081: @384 = zeros(14x1,0nz) */
  /* #1082: @382 = (-@377) */
  for (i=0, rr=w382, cs=w377; i<14; ++i) *rr++ = (- *cs++ );
  /* #1083: {@385, @386} = adj1_f_disc(@254, @257, @384, @382) */
  arg1[0]=w254;
  arg1[1]=w257;
  arg1[2]=0;
  arg1[3]=w382;
  res1[0]=w385;
  res1[1]=w386;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1084: (@2[336:350] += @385) */
  for (rr=w2+336, ss=w385; rr!=w2+350; rr+=1) *rr += *ss++;
  /* #1085: (@2[350:364] += @377) */
  for (rr=w2+350, ss=w377; rr!=w2+364; rr+=1) *rr += *ss++;
  /* #1086: (@2[325:328] += @375) */
  for (rr=w2+325, ss=w375; rr!=w2+328; rr+=1) *rr += *ss++;
  /* #1087: @378 = (-@374) */
  w378 = (- w374 );
  /* #1088: (@2[335] += @378) */
  for (rr=w2+335, ss=(&w378); rr!=w2+336; rr+=1) *rr += *ss++;
  /* #1089: (@2[324] += @374) */
  for (rr=w2+324, ss=(&w374); rr!=w2+325; rr+=1) *rr += *ss++;
  /* #1090: @251 = (@251*@373) */
  for (i=0, rr=w251; i<3; ++i) (*rr++) *= w373;
  /* #1091: (@2[325:328] += @251) */
  for (rr=w2+325, ss=w251; rr!=w2+328; rr+=1) *rr += *ss++;
  /* #1092: @256 = @256' */
  /* #1093: @256 = (@373*@256) */
  for (i=0, rr=w256, cs=w256; i<3; ++i) (*rr++)  = (w373*(*cs++));
  /* #1094: @256 = @256' */
  /* #1095: (@2[332:335] += @256) */
  for (rr=w2+332, ss=w256; rr!=w2+335; rr+=1) *rr += *ss++;
  /* #1096: @384 = zeros(14x1,0nz) */
  /* #1097: @377 = (-@372) */
  for (i=0, rr=w377, cs=w372; i<14; ++i) *rr++ = (- *cs++ );
  /* #1098: {@385, @257} = adj1_f_disc(@250, @253, @384, @377) */
  arg1[0]=w250;
  arg1[1]=w253;
  arg1[2]=0;
  arg1[3]=w377;
  res1[0]=w385;
  res1[1]=w257;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1099: (@2[322:336] += @385) */
  for (rr=w2+322, ss=w385; rr!=w2+336; rr+=1) *rr += *ss++;
  /* #1100: (@2[336:350] += @372) */
  for (rr=w2+336, ss=w372; rr!=w2+350; rr+=1) *rr += *ss++;
  /* #1101: (@2[311:314] += @370) */
  for (rr=w2+311, ss=w370; rr!=w2+314; rr+=1) *rr += *ss++;
  /* #1102: @373 = (-@369) */
  w373 = (- w369 );
  /* #1103: (@2[321] += @373) */
  for (rr=w2+321, ss=(&w373); rr!=w2+322; rr+=1) *rr += *ss++;
  /* #1104: (@2[310] += @369) */
  for (rr=w2+310, ss=(&w369); rr!=w2+311; rr+=1) *rr += *ss++;
  /* #1105: @247 = (@247*@368) */
  for (i=0, rr=w247; i<3; ++i) (*rr++) *= w368;
  /* #1106: (@2[311:314] += @247) */
  for (rr=w2+311, ss=w247; rr!=w2+314; rr+=1) *rr += *ss++;
  /* #1107: @252 = @252' */
  /* #1108: @252 = (@368*@252) */
  for (i=0, rr=w252, cs=w252; i<3; ++i) (*rr++)  = (w368*(*cs++));
  /* #1109: @252 = @252' */
  /* #1110: (@2[318:321] += @252) */
  for (rr=w2+318, ss=w252; rr!=w2+321; rr+=1) *rr += *ss++;
  /* #1111: @384 = zeros(14x1,0nz) */
  /* #1112: @372 = (-@367) */
  for (i=0, rr=w372, cs=w367; i<14; ++i) *rr++ = (- *cs++ );
  /* #1113: {@385, @253} = adj1_f_disc(@246, @249, @384, @372) */
  arg1[0]=w246;
  arg1[1]=w249;
  arg1[2]=0;
  arg1[3]=w372;
  res1[0]=w385;
  res1[1]=w253;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1114: (@2[308:322] += @385) */
  for (rr=w2+308, ss=w385; rr!=w2+322; rr+=1) *rr += *ss++;
  /* #1115: (@2[322:336] += @367) */
  for (rr=w2+322, ss=w367; rr!=w2+336; rr+=1) *rr += *ss++;
  /* #1116: (@2[297:300] += @365) */
  for (rr=w2+297, ss=w365; rr!=w2+300; rr+=1) *rr += *ss++;
  /* #1117: @368 = (-@364) */
  w368 = (- w364 );
  /* #1118: (@2[307] += @368) */
  for (rr=w2+307, ss=(&w368); rr!=w2+308; rr+=1) *rr += *ss++;
  /* #1119: (@2[296] += @364) */
  for (rr=w2+296, ss=(&w364); rr!=w2+297; rr+=1) *rr += *ss++;
  /* #1120: @243 = (@243*@363) */
  for (i=0, rr=w243; i<3; ++i) (*rr++) *= w363;
  /* #1121: (@2[297:300] += @243) */
  for (rr=w2+297, ss=w243; rr!=w2+300; rr+=1) *rr += *ss++;
  /* #1122: @248 = @248' */
  /* #1123: @248 = (@363*@248) */
  for (i=0, rr=w248, cs=w248; i<3; ++i) (*rr++)  = (w363*(*cs++));
  /* #1124: @248 = @248' */
  /* #1125: (@2[304:307] += @248) */
  for (rr=w2+304, ss=w248; rr!=w2+307; rr+=1) *rr += *ss++;
  /* #1126: @384 = zeros(14x1,0nz) */
  /* #1127: @367 = (-@362) */
  for (i=0, rr=w367, cs=w362; i<14; ++i) *rr++ = (- *cs++ );
  /* #1128: {@385, @249} = adj1_f_disc(@242, @245, @384, @367) */
  arg1[0]=w242;
  arg1[1]=w245;
  arg1[2]=0;
  arg1[3]=w367;
  res1[0]=w385;
  res1[1]=w249;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1129: (@2[294:308] += @385) */
  for (rr=w2+294, ss=w385; rr!=w2+308; rr+=1) *rr += *ss++;
  /* #1130: (@2[308:322] += @362) */
  for (rr=w2+308, ss=w362; rr!=w2+322; rr+=1) *rr += *ss++;
  /* #1131: (@2[283:286] += @360) */
  for (rr=w2+283, ss=w360; rr!=w2+286; rr+=1) *rr += *ss++;
  /* #1132: @363 = (-@359) */
  w363 = (- w359 );
  /* #1133: (@2[293] += @363) */
  for (rr=w2+293, ss=(&w363); rr!=w2+294; rr+=1) *rr += *ss++;
  /* #1134: (@2[282] += @359) */
  for (rr=w2+282, ss=(&w359); rr!=w2+283; rr+=1) *rr += *ss++;
  /* #1135: @239 = (@239*@358) */
  for (i=0, rr=w239; i<3; ++i) (*rr++) *= w358;
  /* #1136: (@2[283:286] += @239) */
  for (rr=w2+283, ss=w239; rr!=w2+286; rr+=1) *rr += *ss++;
  /* #1137: @244 = @244' */
  /* #1138: @244 = (@358*@244) */
  for (i=0, rr=w244, cs=w244; i<3; ++i) (*rr++)  = (w358*(*cs++));
  /* #1139: @244 = @244' */
  /* #1140: (@2[290:293] += @244) */
  for (rr=w2+290, ss=w244; rr!=w2+293; rr+=1) *rr += *ss++;
  /* #1141: @384 = zeros(14x1,0nz) */
  /* #1142: @362 = (-@357) */
  for (i=0, rr=w362, cs=w357; i<14; ++i) *rr++ = (- *cs++ );
  /* #1143: {@385, @245} = adj1_f_disc(@238, @241, @384, @362) */
  arg1[0]=w238;
  arg1[1]=w241;
  arg1[2]=0;
  arg1[3]=w362;
  res1[0]=w385;
  res1[1]=w245;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1144: (@2[280:294] += @385) */
  for (rr=w2+280, ss=w385; rr!=w2+294; rr+=1) *rr += *ss++;
  /* #1145: (@2[294:308] += @357) */
  for (rr=w2+294, ss=w357; rr!=w2+308; rr+=1) *rr += *ss++;
  /* #1146: (@2[269:272] += @355) */
  for (rr=w2+269, ss=w355; rr!=w2+272; rr+=1) *rr += *ss++;
  /* #1147: @358 = (-@354) */
  w358 = (- w354 );
  /* #1148: (@2[279] += @358) */
  for (rr=w2+279, ss=(&w358); rr!=w2+280; rr+=1) *rr += *ss++;
  /* #1149: (@2[268] += @354) */
  for (rr=w2+268, ss=(&w354); rr!=w2+269; rr+=1) *rr += *ss++;
  /* #1150: @235 = (@235*@353) */
  for (i=0, rr=w235; i<3; ++i) (*rr++) *= w353;
  /* #1151: (@2[269:272] += @235) */
  for (rr=w2+269, ss=w235; rr!=w2+272; rr+=1) *rr += *ss++;
  /* #1152: @240 = @240' */
  /* #1153: @240 = (@353*@240) */
  for (i=0, rr=w240, cs=w240; i<3; ++i) (*rr++)  = (w353*(*cs++));
  /* #1154: @240 = @240' */
  /* #1155: (@2[276:279] += @240) */
  for (rr=w2+276, ss=w240; rr!=w2+279; rr+=1) *rr += *ss++;
  /* #1156: @384 = zeros(14x1,0nz) */
  /* #1157: @357 = (-@352) */
  for (i=0, rr=w357, cs=w352; i<14; ++i) *rr++ = (- *cs++ );
  /* #1158: {@385, @241} = adj1_f_disc(@234, @237, @384, @357) */
  arg1[0]=w234;
  arg1[1]=w237;
  arg1[2]=0;
  arg1[3]=w357;
  res1[0]=w385;
  res1[1]=w241;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1159: (@2[266:280] += @385) */
  for (rr=w2+266, ss=w385; rr!=w2+280; rr+=1) *rr += *ss++;
  /* #1160: (@2[280:294] += @352) */
  for (rr=w2+280, ss=w352; rr!=w2+294; rr+=1) *rr += *ss++;
  /* #1161: (@2[255:258] += @350) */
  for (rr=w2+255, ss=w350; rr!=w2+258; rr+=1) *rr += *ss++;
  /* #1162: @353 = (-@349) */
  w353 = (- w349 );
  /* #1163: (@2[265] += @353) */
  for (rr=w2+265, ss=(&w353); rr!=w2+266; rr+=1) *rr += *ss++;
  /* #1164: (@2[254] += @349) */
  for (rr=w2+254, ss=(&w349); rr!=w2+255; rr+=1) *rr += *ss++;
  /* #1165: @231 = (@231*@348) */
  for (i=0, rr=w231; i<3; ++i) (*rr++) *= w348;
  /* #1166: (@2[255:258] += @231) */
  for (rr=w2+255, ss=w231; rr!=w2+258; rr+=1) *rr += *ss++;
  /* #1167: @236 = @236' */
  /* #1168: @236 = (@348*@236) */
  for (i=0, rr=w236, cs=w236; i<3; ++i) (*rr++)  = (w348*(*cs++));
  /* #1169: @236 = @236' */
  /* #1170: (@2[262:265] += @236) */
  for (rr=w2+262, ss=w236; rr!=w2+265; rr+=1) *rr += *ss++;
  /* #1171: @384 = zeros(14x1,0nz) */
  /* #1172: @352 = (-@347) */
  for (i=0, rr=w352, cs=w347; i<14; ++i) *rr++ = (- *cs++ );
  /* #1173: {@385, @237} = adj1_f_disc(@230, @233, @384, @352) */
  arg1[0]=w230;
  arg1[1]=w233;
  arg1[2]=0;
  arg1[3]=w352;
  res1[0]=w385;
  res1[1]=w237;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1174: (@2[252:266] += @385) */
  for (rr=w2+252, ss=w385; rr!=w2+266; rr+=1) *rr += *ss++;
  /* #1175: (@2[266:280] += @347) */
  for (rr=w2+266, ss=w347; rr!=w2+280; rr+=1) *rr += *ss++;
  /* #1176: (@2[241:244] += @345) */
  for (rr=w2+241, ss=w345; rr!=w2+244; rr+=1) *rr += *ss++;
  /* #1177: @348 = (-@344) */
  w348 = (- w344 );
  /* #1178: (@2[251] += @348) */
  for (rr=w2+251, ss=(&w348); rr!=w2+252; rr+=1) *rr += *ss++;
  /* #1179: (@2[240] += @344) */
  for (rr=w2+240, ss=(&w344); rr!=w2+241; rr+=1) *rr += *ss++;
  /* #1180: @227 = (@227*@343) */
  for (i=0, rr=w227; i<3; ++i) (*rr++) *= w343;
  /* #1181: (@2[241:244] += @227) */
  for (rr=w2+241, ss=w227; rr!=w2+244; rr+=1) *rr += *ss++;
  /* #1182: @232 = @232' */
  /* #1183: @232 = (@343*@232) */
  for (i=0, rr=w232, cs=w232; i<3; ++i) (*rr++)  = (w343*(*cs++));
  /* #1184: @232 = @232' */
  /* #1185: (@2[248:251] += @232) */
  for (rr=w2+248, ss=w232; rr!=w2+251; rr+=1) *rr += *ss++;
  /* #1186: @384 = zeros(14x1,0nz) */
  /* #1187: @347 = (-@342) */
  for (i=0, rr=w347, cs=w342; i<14; ++i) *rr++ = (- *cs++ );
  /* #1188: {@385, @233} = adj1_f_disc(@226, @229, @384, @347) */
  arg1[0]=w226;
  arg1[1]=w229;
  arg1[2]=0;
  arg1[3]=w347;
  res1[0]=w385;
  res1[1]=w233;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1189: (@2[238:252] += @385) */
  for (rr=w2+238, ss=w385; rr!=w2+252; rr+=1) *rr += *ss++;
  /* #1190: (@2[252:266] += @342) */
  for (rr=w2+252, ss=w342; rr!=w2+266; rr+=1) *rr += *ss++;
  /* #1191: (@2[227:230] += @340) */
  for (rr=w2+227, ss=w340; rr!=w2+230; rr+=1) *rr += *ss++;
  /* #1192: @343 = (-@339) */
  w343 = (- w339 );
  /* #1193: (@2[237] += @343) */
  for (rr=w2+237, ss=(&w343); rr!=w2+238; rr+=1) *rr += *ss++;
  /* #1194: (@2[226] += @339) */
  for (rr=w2+226, ss=(&w339); rr!=w2+227; rr+=1) *rr += *ss++;
  /* #1195: @223 = (@223*@338) */
  for (i=0, rr=w223; i<3; ++i) (*rr++) *= w338;
  /* #1196: (@2[227:230] += @223) */
  for (rr=w2+227, ss=w223; rr!=w2+230; rr+=1) *rr += *ss++;
  /* #1197: @228 = @228' */
  /* #1198: @228 = (@338*@228) */
  for (i=0, rr=w228, cs=w228; i<3; ++i) (*rr++)  = (w338*(*cs++));
  /* #1199: @228 = @228' */
  /* #1200: (@2[234:237] += @228) */
  for (rr=w2+234, ss=w228; rr!=w2+237; rr+=1) *rr += *ss++;
  /* #1201: @384 = zeros(14x1,0nz) */
  /* #1202: @342 = (-@337) */
  for (i=0, rr=w342, cs=w337; i<14; ++i) *rr++ = (- *cs++ );
  /* #1203: {@385, @229} = adj1_f_disc(@222, @225, @384, @342) */
  arg1[0]=w222;
  arg1[1]=w225;
  arg1[2]=0;
  arg1[3]=w342;
  res1[0]=w385;
  res1[1]=w229;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1204: (@2[224:238] += @385) */
  for (rr=w2+224, ss=w385; rr!=w2+238; rr+=1) *rr += *ss++;
  /* #1205: (@2[238:252] += @337) */
  for (rr=w2+238, ss=w337; rr!=w2+252; rr+=1) *rr += *ss++;
  /* #1206: (@2[213:216] += @335) */
  for (rr=w2+213, ss=w335; rr!=w2+216; rr+=1) *rr += *ss++;
  /* #1207: @338 = (-@334) */
  w338 = (- w334 );
  /* #1208: (@2[223] += @338) */
  for (rr=w2+223, ss=(&w338); rr!=w2+224; rr+=1) *rr += *ss++;
  /* #1209: (@2[212] += @334) */
  for (rr=w2+212, ss=(&w334); rr!=w2+213; rr+=1) *rr += *ss++;
  /* #1210: @219 = (@219*@333) */
  for (i=0, rr=w219; i<3; ++i) (*rr++) *= w333;
  /* #1211: (@2[213:216] += @219) */
  for (rr=w2+213, ss=w219; rr!=w2+216; rr+=1) *rr += *ss++;
  /* #1212: @224 = @224' */
  /* #1213: @224 = (@333*@224) */
  for (i=0, rr=w224, cs=w224; i<3; ++i) (*rr++)  = (w333*(*cs++));
  /* #1214: @224 = @224' */
  /* #1215: (@2[220:223] += @224) */
  for (rr=w2+220, ss=w224; rr!=w2+223; rr+=1) *rr += *ss++;
  /* #1216: @384 = zeros(14x1,0nz) */
  /* #1217: @337 = (-@332) */
  for (i=0, rr=w337, cs=w332; i<14; ++i) *rr++ = (- *cs++ );
  /* #1218: {@385, @225} = adj1_f_disc(@218, @221, @384, @337) */
  arg1[0]=w218;
  arg1[1]=w221;
  arg1[2]=0;
  arg1[3]=w337;
  res1[0]=w385;
  res1[1]=w225;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1219: (@2[210:224] += @385) */
  for (rr=w2+210, ss=w385; rr!=w2+224; rr+=1) *rr += *ss++;
  /* #1220: (@2[224:238] += @332) */
  for (rr=w2+224, ss=w332; rr!=w2+238; rr+=1) *rr += *ss++;
  /* #1221: (@2[199:202] += @330) */
  for (rr=w2+199, ss=w330; rr!=w2+202; rr+=1) *rr += *ss++;
  /* #1222: @333 = (-@329) */
  w333 = (- w329 );
  /* #1223: (@2[209] += @333) */
  for (rr=w2+209, ss=(&w333); rr!=w2+210; rr+=1) *rr += *ss++;
  /* #1224: (@2[198] += @329) */
  for (rr=w2+198, ss=(&w329); rr!=w2+199; rr+=1) *rr += *ss++;
  /* #1225: @215 = (@215*@328) */
  for (i=0, rr=w215; i<3; ++i) (*rr++) *= w328;
  /* #1226: (@2[199:202] += @215) */
  for (rr=w2+199, ss=w215; rr!=w2+202; rr+=1) *rr += *ss++;
  /* #1227: @220 = @220' */
  /* #1228: @220 = (@328*@220) */
  for (i=0, rr=w220, cs=w220; i<3; ++i) (*rr++)  = (w328*(*cs++));
  /* #1229: @220 = @220' */
  /* #1230: (@2[206:209] += @220) */
  for (rr=w2+206, ss=w220; rr!=w2+209; rr+=1) *rr += *ss++;
  /* #1231: @384 = zeros(14x1,0nz) */
  /* #1232: @332 = (-@327) */
  for (i=0, rr=w332, cs=w327; i<14; ++i) *rr++ = (- *cs++ );
  /* #1233: {@385, @221} = adj1_f_disc(@214, @217, @384, @332) */
  arg1[0]=w214;
  arg1[1]=w217;
  arg1[2]=0;
  arg1[3]=w332;
  res1[0]=w385;
  res1[1]=w221;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1234: (@2[196:210] += @385) */
  for (rr=w2+196, ss=w385; rr!=w2+210; rr+=1) *rr += *ss++;
  /* #1235: (@2[210:224] += @327) */
  for (rr=w2+210, ss=w327; rr!=w2+224; rr+=1) *rr += *ss++;
  /* #1236: (@2[185:188] += @325) */
  for (rr=w2+185, ss=w325; rr!=w2+188; rr+=1) *rr += *ss++;
  /* #1237: @328 = (-@324) */
  w328 = (- w324 );
  /* #1238: (@2[195] += @328) */
  for (rr=w2+195, ss=(&w328); rr!=w2+196; rr+=1) *rr += *ss++;
  /* #1239: (@2[184] += @324) */
  for (rr=w2+184, ss=(&w324); rr!=w2+185; rr+=1) *rr += *ss++;
  /* #1240: @211 = (@211*@323) */
  for (i=0, rr=w211; i<3; ++i) (*rr++) *= w323;
  /* #1241: (@2[185:188] += @211) */
  for (rr=w2+185, ss=w211; rr!=w2+188; rr+=1) *rr += *ss++;
  /* #1242: @216 = @216' */
  /* #1243: @216 = (@323*@216) */
  for (i=0, rr=w216, cs=w216; i<3; ++i) (*rr++)  = (w323*(*cs++));
  /* #1244: @216 = @216' */
  /* #1245: (@2[192:195] += @216) */
  for (rr=w2+192, ss=w216; rr!=w2+195; rr+=1) *rr += *ss++;
  /* #1246: @384 = zeros(14x1,0nz) */
  /* #1247: @327 = (-@322) */
  for (i=0, rr=w327, cs=w322; i<14; ++i) *rr++ = (- *cs++ );
  /* #1248: {@385, @217} = adj1_f_disc(@210, @213, @384, @327) */
  arg1[0]=w210;
  arg1[1]=w213;
  arg1[2]=0;
  arg1[3]=w327;
  res1[0]=w385;
  res1[1]=w217;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1249: (@2[182:196] += @385) */
  for (rr=w2+182, ss=w385; rr!=w2+196; rr+=1) *rr += *ss++;
  /* #1250: (@2[196:210] += @322) */
  for (rr=w2+196, ss=w322; rr!=w2+210; rr+=1) *rr += *ss++;
  /* #1251: (@2[171:174] += @320) */
  for (rr=w2+171, ss=w320; rr!=w2+174; rr+=1) *rr += *ss++;
  /* #1252: @323 = (-@319) */
  w323 = (- w319 );
  /* #1253: (@2[181] += @323) */
  for (rr=w2+181, ss=(&w323); rr!=w2+182; rr+=1) *rr += *ss++;
  /* #1254: (@2[170] += @319) */
  for (rr=w2+170, ss=(&w319); rr!=w2+171; rr+=1) *rr += *ss++;
  /* #1255: @207 = (@207*@318) */
  for (i=0, rr=w207; i<3; ++i) (*rr++) *= w318;
  /* #1256: (@2[171:174] += @207) */
  for (rr=w2+171, ss=w207; rr!=w2+174; rr+=1) *rr += *ss++;
  /* #1257: @212 = @212' */
  /* #1258: @212 = (@318*@212) */
  for (i=0, rr=w212, cs=w212; i<3; ++i) (*rr++)  = (w318*(*cs++));
  /* #1259: @212 = @212' */
  /* #1260: (@2[178:181] += @212) */
  for (rr=w2+178, ss=w212; rr!=w2+181; rr+=1) *rr += *ss++;
  /* #1261: @384 = zeros(14x1,0nz) */
  /* #1262: @322 = (-@317) */
  for (i=0, rr=w322, cs=w317; i<14; ++i) *rr++ = (- *cs++ );
  /* #1263: {@385, @213} = adj1_f_disc(@206, @209, @384, @322) */
  arg1[0]=w206;
  arg1[1]=w209;
  arg1[2]=0;
  arg1[3]=w322;
  res1[0]=w385;
  res1[1]=w213;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1264: (@2[168:182] += @385) */
  for (rr=w2+168, ss=w385; rr!=w2+182; rr+=1) *rr += *ss++;
  /* #1265: (@2[182:196] += @317) */
  for (rr=w2+182, ss=w317; rr!=w2+196; rr+=1) *rr += *ss++;
  /* #1266: (@2[157:160] += @315) */
  for (rr=w2+157, ss=w315; rr!=w2+160; rr+=1) *rr += *ss++;
  /* #1267: @318 = (-@314) */
  w318 = (- w314 );
  /* #1268: (@2[167] += @318) */
  for (rr=w2+167, ss=(&w318); rr!=w2+168; rr+=1) *rr += *ss++;
  /* #1269: (@2[156] += @314) */
  for (rr=w2+156, ss=(&w314); rr!=w2+157; rr+=1) *rr += *ss++;
  /* #1270: @203 = (@203*@313) */
  for (i=0, rr=w203; i<3; ++i) (*rr++) *= w313;
  /* #1271: (@2[157:160] += @203) */
  for (rr=w2+157, ss=w203; rr!=w2+160; rr+=1) *rr += *ss++;
  /* #1272: @208 = @208' */
  /* #1273: @208 = (@313*@208) */
  for (i=0, rr=w208, cs=w208; i<3; ++i) (*rr++)  = (w313*(*cs++));
  /* #1274: @208 = @208' */
  /* #1275: (@2[164:167] += @208) */
  for (rr=w2+164, ss=w208; rr!=w2+167; rr+=1) *rr += *ss++;
  /* #1276: @384 = zeros(14x1,0nz) */
  /* #1277: @317 = (-@312) */
  for (i=0, rr=w317, cs=w312; i<14; ++i) *rr++ = (- *cs++ );
  /* #1278: {@385, @209} = adj1_f_disc(@202, @205, @384, @317) */
  arg1[0]=w202;
  arg1[1]=w205;
  arg1[2]=0;
  arg1[3]=w317;
  res1[0]=w385;
  res1[1]=w209;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1279: (@2[154:168] += @385) */
  for (rr=w2+154, ss=w385; rr!=w2+168; rr+=1) *rr += *ss++;
  /* #1280: (@2[168:182] += @312) */
  for (rr=w2+168, ss=w312; rr!=w2+182; rr+=1) *rr += *ss++;
  /* #1281: (@2[143:146] += @310) */
  for (rr=w2+143, ss=w310; rr!=w2+146; rr+=1) *rr += *ss++;
  /* #1282: @313 = (-@309) */
  w313 = (- w309 );
  /* #1283: (@2[153] += @313) */
  for (rr=w2+153, ss=(&w313); rr!=w2+154; rr+=1) *rr += *ss++;
  /* #1284: (@2[142] += @309) */
  for (rr=w2+142, ss=(&w309); rr!=w2+143; rr+=1) *rr += *ss++;
  /* #1285: @199 = (@199*@308) */
  for (i=0, rr=w199; i<3; ++i) (*rr++) *= w308;
  /* #1286: (@2[143:146] += @199) */
  for (rr=w2+143, ss=w199; rr!=w2+146; rr+=1) *rr += *ss++;
  /* #1287: @204 = @204' */
  /* #1288: @204 = (@308*@204) */
  for (i=0, rr=w204, cs=w204; i<3; ++i) (*rr++)  = (w308*(*cs++));
  /* #1289: @204 = @204' */
  /* #1290: (@2[150:153] += @204) */
  for (rr=w2+150, ss=w204; rr!=w2+153; rr+=1) *rr += *ss++;
  /* #1291: @384 = zeros(14x1,0nz) */
  /* #1292: @312 = (-@307) */
  for (i=0, rr=w312, cs=w307; i<14; ++i) *rr++ = (- *cs++ );
  /* #1293: {@385, @205} = adj1_f_disc(@198, @201, @384, @312) */
  arg1[0]=w198;
  arg1[1]=w201;
  arg1[2]=0;
  arg1[3]=w312;
  res1[0]=w385;
  res1[1]=w205;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1294: (@2[140:154] += @385) */
  for (rr=w2+140, ss=w385; rr!=w2+154; rr+=1) *rr += *ss++;
  /* #1295: (@2[154:168] += @307) */
  for (rr=w2+154, ss=w307; rr!=w2+168; rr+=1) *rr += *ss++;
  /* #1296: (@2[129:132] += @305) */
  for (rr=w2+129, ss=w305; rr!=w2+132; rr+=1) *rr += *ss++;
  /* #1297: @308 = (-@304) */
  w308 = (- w304 );
  /* #1298: (@2[139] += @308) */
  for (rr=w2+139, ss=(&w308); rr!=w2+140; rr+=1) *rr += *ss++;
  /* #1299: (@2[128] += @304) */
  for (rr=w2+128, ss=(&w304); rr!=w2+129; rr+=1) *rr += *ss++;
  /* #1300: @195 = (@195*@303) */
  for (i=0, rr=w195; i<3; ++i) (*rr++) *= w303;
  /* #1301: (@2[129:132] += @195) */
  for (rr=w2+129, ss=w195; rr!=w2+132; rr+=1) *rr += *ss++;
  /* #1302: @200 = @200' */
  /* #1303: @200 = (@303*@200) */
  for (i=0, rr=w200, cs=w200; i<3; ++i) (*rr++)  = (w303*(*cs++));
  /* #1304: @200 = @200' */
  /* #1305: (@2[136:139] += @200) */
  for (rr=w2+136, ss=w200; rr!=w2+139; rr+=1) *rr += *ss++;
  /* #1306: @384 = zeros(14x1,0nz) */
  /* #1307: @307 = (-@302) */
  for (i=0, rr=w307, cs=w302; i<14; ++i) *rr++ = (- *cs++ );
  /* #1308: {@385, @201} = adj1_f_disc(@194, @197, @384, @307) */
  arg1[0]=w194;
  arg1[1]=w197;
  arg1[2]=0;
  arg1[3]=w307;
  res1[0]=w385;
  res1[1]=w201;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1309: (@2[126:140] += @385) */
  for (rr=w2+126, ss=w385; rr!=w2+140; rr+=1) *rr += *ss++;
  /* #1310: (@2[140:154] += @302) */
  for (rr=w2+140, ss=w302; rr!=w2+154; rr+=1) *rr += *ss++;
  /* #1311: (@2[115:118] += @300) */
  for (rr=w2+115, ss=w300; rr!=w2+118; rr+=1) *rr += *ss++;
  /* #1312: @303 = (-@299) */
  w303 = (- w299 );
  /* #1313: (@2[125] += @303) */
  for (rr=w2+125, ss=(&w303); rr!=w2+126; rr+=1) *rr += *ss++;
  /* #1314: (@2[114] += @299) */
  for (rr=w2+114, ss=(&w299); rr!=w2+115; rr+=1) *rr += *ss++;
  /* #1315: @191 = (@191*@298) */
  for (i=0, rr=w191; i<3; ++i) (*rr++) *= w298;
  /* #1316: (@2[115:118] += @191) */
  for (rr=w2+115, ss=w191; rr!=w2+118; rr+=1) *rr += *ss++;
  /* #1317: @196 = @196' */
  /* #1318: @196 = (@298*@196) */
  for (i=0, rr=w196, cs=w196; i<3; ++i) (*rr++)  = (w298*(*cs++));
  /* #1319: @196 = @196' */
  /* #1320: (@2[122:125] += @196) */
  for (rr=w2+122, ss=w196; rr!=w2+125; rr+=1) *rr += *ss++;
  /* #1321: @384 = zeros(14x1,0nz) */
  /* #1322: @302 = (-@297) */
  for (i=0, rr=w302, cs=w297; i<14; ++i) *rr++ = (- *cs++ );
  /* #1323: {@385, @197} = adj1_f_disc(@190, @193, @384, @302) */
  arg1[0]=w190;
  arg1[1]=w193;
  arg1[2]=0;
  arg1[3]=w302;
  res1[0]=w385;
  res1[1]=w197;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1324: (@2[112:126] += @385) */
  for (rr=w2+112, ss=w385; rr!=w2+126; rr+=1) *rr += *ss++;
  /* #1325: (@2[126:140] += @297) */
  for (rr=w2+126, ss=w297; rr!=w2+140; rr+=1) *rr += *ss++;
  /* #1326: (@2[101:104] += @295) */
  for (rr=w2+101, ss=w295; rr!=w2+104; rr+=1) *rr += *ss++;
  /* #1327: @298 = (-@294) */
  w298 = (- w294 );
  /* #1328: (@2[111] += @298) */
  for (rr=w2+111, ss=(&w298); rr!=w2+112; rr+=1) *rr += *ss++;
  /* #1329: (@2[100] += @294) */
  for (rr=w2+100, ss=(&w294); rr!=w2+101; rr+=1) *rr += *ss++;
  /* #1330: @187 = (@187*@293) */
  for (i=0, rr=w187; i<3; ++i) (*rr++) *= w293;
  /* #1331: (@2[101:104] += @187) */
  for (rr=w2+101, ss=w187; rr!=w2+104; rr+=1) *rr += *ss++;
  /* #1332: @192 = @192' */
  /* #1333: @192 = (@293*@192) */
  for (i=0, rr=w192, cs=w192; i<3; ++i) (*rr++)  = (w293*(*cs++));
  /* #1334: @192 = @192' */
  /* #1335: (@2[108:111] += @192) */
  for (rr=w2+108, ss=w192; rr!=w2+111; rr+=1) *rr += *ss++;
  /* #1336: @384 = zeros(14x1,0nz) */
  /* #1337: @297 = (-@292) */
  for (i=0, rr=w297, cs=w292; i<14; ++i) *rr++ = (- *cs++ );
  /* #1338: {@385, @193} = adj1_f_disc(@186, @189, @384, @297) */
  arg1[0]=w186;
  arg1[1]=w189;
  arg1[2]=0;
  arg1[3]=w297;
  res1[0]=w385;
  res1[1]=w193;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1339: (@2[98:112] += @385) */
  for (rr=w2+98, ss=w385; rr!=w2+112; rr+=1) *rr += *ss++;
  /* #1340: (@2[112:126] += @292) */
  for (rr=w2+112, ss=w292; rr!=w2+126; rr+=1) *rr += *ss++;
  /* #1341: (@2[87:90] += @290) */
  for (rr=w2+87, ss=w290; rr!=w2+90; rr+=1) *rr += *ss++;
  /* #1342: @293 = (-@289) */
  w293 = (- w289 );
  /* #1343: (@2[97] += @293) */
  for (rr=w2+97, ss=(&w293); rr!=w2+98; rr+=1) *rr += *ss++;
  /* #1344: (@2[86] += @289) */
  for (rr=w2+86, ss=(&w289); rr!=w2+87; rr+=1) *rr += *ss++;
  /* #1345: @183 = (@183*@288) */
  for (i=0, rr=w183; i<3; ++i) (*rr++) *= w288;
  /* #1346: (@2[87:90] += @183) */
  for (rr=w2+87, ss=w183; rr!=w2+90; rr+=1) *rr += *ss++;
  /* #1347: @188 = @188' */
  /* #1348: @188 = (@288*@188) */
  for (i=0, rr=w188, cs=w188; i<3; ++i) (*rr++)  = (w288*(*cs++));
  /* #1349: @188 = @188' */
  /* #1350: (@2[94:97] += @188) */
  for (rr=w2+94, ss=w188; rr!=w2+97; rr+=1) *rr += *ss++;
  /* #1351: @384 = zeros(14x1,0nz) */
  /* #1352: @292 = (-@287) */
  for (i=0, rr=w292, cs=w287; i<14; ++i) *rr++ = (- *cs++ );
  /* #1353: {@385, @189} = adj1_f_disc(@182, @185, @384, @292) */
  arg1[0]=w182;
  arg1[1]=w185;
  arg1[2]=0;
  arg1[3]=w292;
  res1[0]=w385;
  res1[1]=w189;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1354: (@2[84:98] += @385) */
  for (rr=w2+84, ss=w385; rr!=w2+98; rr+=1) *rr += *ss++;
  /* #1355: (@2[98:112] += @287) */
  for (rr=w2+98, ss=w287; rr!=w2+112; rr+=1) *rr += *ss++;
  /* #1356: (@2[73:76] += @285) */
  for (rr=w2+73, ss=w285; rr!=w2+76; rr+=1) *rr += *ss++;
  /* #1357: @288 = (-@284) */
  w288 = (- w284 );
  /* #1358: (@2[83] += @288) */
  for (rr=w2+83, ss=(&w288); rr!=w2+84; rr+=1) *rr += *ss++;
  /* #1359: (@2[72] += @284) */
  for (rr=w2+72, ss=(&w284); rr!=w2+73; rr+=1) *rr += *ss++;
  /* #1360: @179 = (@179*@283) */
  for (i=0, rr=w179; i<3; ++i) (*rr++) *= w283;
  /* #1361: (@2[73:76] += @179) */
  for (rr=w2+73, ss=w179; rr!=w2+76; rr+=1) *rr += *ss++;
  /* #1362: @184 = @184' */
  /* #1363: @184 = (@283*@184) */
  for (i=0, rr=w184, cs=w184; i<3; ++i) (*rr++)  = (w283*(*cs++));
  /* #1364: @184 = @184' */
  /* #1365: (@2[80:83] += @184) */
  for (rr=w2+80, ss=w184; rr!=w2+83; rr+=1) *rr += *ss++;
  /* #1366: @384 = zeros(14x1,0nz) */
  /* #1367: @287 = (-@282) */
  for (i=0, rr=w287, cs=w282; i<14; ++i) *rr++ = (- *cs++ );
  /* #1368: {@385, @185} = adj1_f_disc(@178, @181, @384, @287) */
  arg1[0]=w178;
  arg1[1]=w181;
  arg1[2]=0;
  arg1[3]=w287;
  res1[0]=w385;
  res1[1]=w185;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1369: (@2[70:84] += @385) */
  for (rr=w2+70, ss=w385; rr!=w2+84; rr+=1) *rr += *ss++;
  /* #1370: (@2[84:98] += @282) */
  for (rr=w2+84, ss=w282; rr!=w2+98; rr+=1) *rr += *ss++;
  /* #1371: (@2[59:62] += @280) */
  for (rr=w2+59, ss=w280; rr!=w2+62; rr+=1) *rr += *ss++;
  /* #1372: @283 = (-@279) */
  w283 = (- w279 );
  /* #1373: (@2[69] += @283) */
  for (rr=w2+69, ss=(&w283); rr!=w2+70; rr+=1) *rr += *ss++;
  /* #1374: (@2[58] += @279) */
  for (rr=w2+58, ss=(&w279); rr!=w2+59; rr+=1) *rr += *ss++;
  /* #1375: @175 = (@175*@278) */
  for (i=0, rr=w175; i<3; ++i) (*rr++) *= w278;
  /* #1376: (@2[59:62] += @175) */
  for (rr=w2+59, ss=w175; rr!=w2+62; rr+=1) *rr += *ss++;
  /* #1377: @180 = @180' */
  /* #1378: @180 = (@278*@180) */
  for (i=0, rr=w180, cs=w180; i<3; ++i) (*rr++)  = (w278*(*cs++));
  /* #1379: @180 = @180' */
  /* #1380: (@2[66:69] += @180) */
  for (rr=w2+66, ss=w180; rr!=w2+69; rr+=1) *rr += *ss++;
  /* #1381: @384 = zeros(14x1,0nz) */
  /* #1382: @282 = (-@277) */
  for (i=0, rr=w282, cs=w277; i<14; ++i) *rr++ = (- *cs++ );
  /* #1383: {@385, @181} = adj1_f_disc(@174, @177, @384, @282) */
  arg1[0]=w174;
  arg1[1]=w177;
  arg1[2]=0;
  arg1[3]=w282;
  res1[0]=w385;
  res1[1]=w181;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1384: (@2[56:70] += @385) */
  for (rr=w2+56, ss=w385; rr!=w2+70; rr+=1) *rr += *ss++;
  /* #1385: (@2[70:84] += @277) */
  for (rr=w2+70, ss=w277; rr!=w2+84; rr+=1) *rr += *ss++;
  /* #1386: (@2[45:48] += @275) */
  for (rr=w2+45, ss=w275; rr!=w2+48; rr+=1) *rr += *ss++;
  /* #1387: @278 = (-@274) */
  w278 = (- w274 );
  /* #1388: (@2[55] += @278) */
  for (rr=w2+55, ss=(&w278); rr!=w2+56; rr+=1) *rr += *ss++;
  /* #1389: (@2[44] += @274) */
  for (rr=w2+44, ss=(&w274); rr!=w2+45; rr+=1) *rr += *ss++;
  /* #1390: @171 = (@171*@273) */
  for (i=0, rr=w171; i<3; ++i) (*rr++) *= w273;
  /* #1391: (@2[45:48] += @171) */
  for (rr=w2+45, ss=w171; rr!=w2+48; rr+=1) *rr += *ss++;
  /* #1392: @176 = @176' */
  /* #1393: @176 = (@273*@176) */
  for (i=0, rr=w176, cs=w176; i<3; ++i) (*rr++)  = (w273*(*cs++));
  /* #1394: @176 = @176' */
  /* #1395: (@2[52:55] += @176) */
  for (rr=w2+52, ss=w176; rr!=w2+55; rr+=1) *rr += *ss++;
  /* #1396: @384 = zeros(14x1,0nz) */
  /* #1397: @277 = (-@272) */
  for (i=0, rr=w277, cs=w272; i<14; ++i) *rr++ = (- *cs++ );
  /* #1398: {@385, @177} = adj1_f_disc(@170, @173, @384, @277) */
  arg1[0]=w170;
  arg1[1]=w173;
  arg1[2]=0;
  arg1[3]=w277;
  res1[0]=w385;
  res1[1]=w177;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1399: (@2[42:56] += @385) */
  for (rr=w2+42, ss=w385; rr!=w2+56; rr+=1) *rr += *ss++;
  /* #1400: (@2[56:70] += @272) */
  for (rr=w2+56, ss=w272; rr!=w2+70; rr+=1) *rr += *ss++;
  /* #1401: (@2[31:34] += @270) */
  for (rr=w2+31, ss=w270; rr!=w2+34; rr+=1) *rr += *ss++;
  /* #1402: @273 = (-@269) */
  w273 = (- w269 );
  /* #1403: (@2[41] += @273) */
  for (rr=w2+41, ss=(&w273); rr!=w2+42; rr+=1) *rr += *ss++;
  /* #1404: (@2[30] += @269) */
  for (rr=w2+30, ss=(&w269); rr!=w2+31; rr+=1) *rr += *ss++;
  /* #1405: @167 = (@167*@268) */
  for (i=0, rr=w167; i<3; ++i) (*rr++) *= w268;
  /* #1406: (@2[31:34] += @167) */
  for (rr=w2+31, ss=w167; rr!=w2+34; rr+=1) *rr += *ss++;
  /* #1407: @172 = @172' */
  /* #1408: @172 = (@268*@172) */
  for (i=0, rr=w172, cs=w172; i<3; ++i) (*rr++)  = (w268*(*cs++));
  /* #1409: @172 = @172' */
  /* #1410: (@2[38:41] += @172) */
  for (rr=w2+38, ss=w172; rr!=w2+41; rr+=1) *rr += *ss++;
  /* #1411: @384 = zeros(14x1,0nz) */
  /* #1412: @272 = (-@267) */
  for (i=0, rr=w272, cs=w267; i<14; ++i) *rr++ = (- *cs++ );
  /* #1413: {@385, @173} = adj1_f_disc(@166, @169, @384, @272) */
  arg1[0]=w166;
  arg1[1]=w169;
  arg1[2]=0;
  arg1[3]=w272;
  res1[0]=w385;
  res1[1]=w173;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1414: (@2[28:42] += @385) */
  for (rr=w2+28, ss=w385; rr!=w2+42; rr+=1) *rr += *ss++;
  /* #1415: (@2[42:56] += @267) */
  for (rr=w2+42, ss=w267; rr!=w2+56; rr+=1) *rr += *ss++;
  /* #1416: (@2[17:20] += @265) */
  for (rr=w2+17, ss=w265; rr!=w2+20; rr+=1) *rr += *ss++;
  /* #1417: @268 = (-@264) */
  w268 = (- w264 );
  /* #1418: (@2[27] += @268) */
  for (rr=w2+27, ss=(&w268); rr!=w2+28; rr+=1) *rr += *ss++;
  /* #1419: (@2[16] += @264) */
  for (rr=w2+16, ss=(&w264); rr!=w2+17; rr+=1) *rr += *ss++;
  /* #1420: @163 = (@163*@263) */
  for (i=0, rr=w163; i<3; ++i) (*rr++) *= w263;
  /* #1421: (@2[17:20] += @163) */
  for (rr=w2+17, ss=w163; rr!=w2+20; rr+=1) *rr += *ss++;
  /* #1422: @168 = @168' */
  /* #1423: @168 = (@263*@168) */
  for (i=0, rr=w168, cs=w168; i<3; ++i) (*rr++)  = (w263*(*cs++));
  /* #1424: @168 = @168' */
  /* #1425: (@2[24:27] += @168) */
  for (rr=w2+24, ss=w168; rr!=w2+27; rr+=1) *rr += *ss++;
  /* #1426: @384 = zeros(14x1,0nz) */
  /* #1427: @267 = (-@258) */
  for (i=0, rr=w267, cs=w258; i<14; ++i) *rr++ = (- *cs++ );
  /* #1428: {@385, @169} = adj1_f_disc(@161, @165, @384, @267) */
  arg1[0]=w161;
  arg1[1]=w165;
  arg1[2]=0;
  arg1[3]=w267;
  res1[0]=w385;
  res1[1]=w169;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1429: (@2[14:28] += @385) */
  for (rr=w2+14, ss=w385; rr!=w2+28; rr+=1) *rr += *ss++;
  /* #1430: (@2[28:42] += @258) */
  for (rr=w2+28, ss=w258; rr!=w2+42; rr+=1) *rr += *ss++;
  /* #1431: (@2[3:6] += @259) */
  for (rr=w2+3, ss=w259; rr!=w2+6; rr+=1) *rr += *ss++;
  /* #1432: @263 = (-@6) */
  w263 = (- w6 );
  /* #1433: (@2[13] += @263) */
  for (rr=w2+13, ss=(&w263); rr!=w2+14; rr+=1) *rr += *ss++;
  /* #1434: (@2[2] += @6) */
  for (rr=w2+2, ss=(&w6); rr!=w2+3; rr+=1) *rr += *ss++;
  /* #1435: @162 = (@162*@0) */
  for (i=0, rr=w162; i<3; ++i) (*rr++) *= w0;
  /* #1436: (@2[3:6] += @162) */
  for (rr=w2+3, ss=w162; rr!=w2+6; rr+=1) *rr += *ss++;
  /* #1437: @164 = @164' */
  /* #1438: @164 = (@0*@164) */
  for (i=0, rr=w164, cs=w164; i<3; ++i) (*rr++)  = (w0*(*cs++));
  /* #1439: @164 = @164' */
  /* #1440: (@2[10:13] += @164) */
  for (rr=w2+10, ss=w164; rr!=w2+13; rr+=1) *rr += *ss++;
  /* #1441: @384 = zeros(14x1,0nz) */
  /* #1442: @258 = (-@158) */
  for (i=0, rr=w258, cs=w158; i<14; ++i) *rr++ = (- *cs++ );
  /* #1443: {@385, @165} = adj1_f_disc(@159, @160, @384, @258) */
  arg1[0]=w159;
  arg1[1]=w160;
  arg1[2]=0;
  arg1[3]=w258;
  res1[0]=w385;
  res1[1]=w165;
  if (casadi_f26(arg1, res1, iw, w, 0)) return 1;
  /* #1444: (@2[:14] += @385) */
  for (rr=w2+0, ss=w385; rr!=w2+14; rr+=1) *rr += *ss++;
  /* #1445: (@2[14:28] += @158) */
  for (rr=w2+14, ss=w158; rr!=w2+28; rr+=1) *rr += *ss++;
  /* #1446: @150 = @150' */
  /* #1447: @0 = input[2][0] */
  w0 = arg[2] ? arg[2][0] : 0;
  /* #1448: @150 = (@150*@0) */
  for (i=0, rr=w150; i<7; ++i) (*rr++) *= w0;
  /* #1449: @156 = (-@150) */
  for (i=0, rr=w156, cs=w150; i<7; ++i) *rr++ = (- *cs++ );
  /* #1450: (@2[357:364] += @156) */
  for (rr=w2+357, ss=w156; rr!=w2+364; rr+=1) *rr += *ss++;
  /* #1451: (@2[350:357] += @150) */
  for (rr=w2+350, ss=w150; rr!=w2+357; rr+=1) *rr += *ss++;
  /* #1452: @150 = zeros(1x7) */
  casadi_clear(w150, 7);
  /* #1453: @155 = @155' */
  /* #1454: @155 = (@0*@155) */
  for (i=0, rr=w155, cs=w155; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1455: @387 = @157' */
  for (i=0, rr=w387, cs=w157; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1456: @150 = mac(@155,@387,@150) */
  for (i=0, rr=w150; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w155+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1457: @150 = @150' */
  /* #1458: @155 = (-@150) */
  for (i=0, rr=w155, cs=w150; i<7; ++i) *rr++ = (- *cs++ );
  /* #1459: (@2[357:364] += @155) */
  for (rr=w2+357, ss=w155; rr!=w2+364; rr+=1) *rr += *ss++;
  /* #1460: (@2[350:357] += @150) */
  for (rr=w2+350, ss=w150; rr!=w2+357; rr+=1) *rr += *ss++;
  /* #1461: @144 = @144' */
  /* #1462: @144 = (@144*@0) */
  for (i=0, rr=w144; i<7; ++i) (*rr++) *= w0;
  /* #1463: @150 = (-@144) */
  for (i=0, rr=w150, cs=w144; i<7; ++i) *rr++ = (- *cs++ );
  /* #1464: (@2[343:350] += @150) */
  for (rr=w2+343, ss=w150; rr!=w2+350; rr+=1) *rr += *ss++;
  /* #1465: (@2[336:343] += @144) */
  for (rr=w2+336, ss=w144; rr!=w2+343; rr+=1) *rr += *ss++;
  /* #1466: @144 = zeros(1x7) */
  casadi_clear(w144, 7);
  /* #1467: @149 = @149' */
  /* #1468: @149 = (@0*@149) */
  for (i=0, rr=w149, cs=w149; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1469: @387 = @151' */
  for (i=0, rr=w387, cs=w151; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1470: @144 = mac(@149,@387,@144) */
  for (i=0, rr=w144; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w149+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1471: @144 = @144' */
  /* #1472: @149 = (-@144) */
  for (i=0, rr=w149, cs=w144; i<7; ++i) *rr++ = (- *cs++ );
  /* #1473: (@2[343:350] += @149) */
  for (rr=w2+343, ss=w149; rr!=w2+350; rr+=1) *rr += *ss++;
  /* #1474: (@2[336:343] += @144) */
  for (rr=w2+336, ss=w144; rr!=w2+343; rr+=1) *rr += *ss++;
  /* #1475: @138 = @138' */
  /* #1476: @138 = (@138*@0) */
  for (i=0, rr=w138; i<7; ++i) (*rr++) *= w0;
  /* #1477: @144 = (-@138) */
  for (i=0, rr=w144, cs=w138; i<7; ++i) *rr++ = (- *cs++ );
  /* #1478: (@2[329:336] += @144) */
  for (rr=w2+329, ss=w144; rr!=w2+336; rr+=1) *rr += *ss++;
  /* #1479: (@2[322:329] += @138) */
  for (rr=w2+322, ss=w138; rr!=w2+329; rr+=1) *rr += *ss++;
  /* #1480: @138 = zeros(1x7) */
  casadi_clear(w138, 7);
  /* #1481: @143 = @143' */
  /* #1482: @143 = (@0*@143) */
  for (i=0, rr=w143, cs=w143; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1483: @387 = @145' */
  for (i=0, rr=w387, cs=w145; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1484: @138 = mac(@143,@387,@138) */
  for (i=0, rr=w138; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w143+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1485: @138 = @138' */
  /* #1486: @143 = (-@138) */
  for (i=0, rr=w143, cs=w138; i<7; ++i) *rr++ = (- *cs++ );
  /* #1487: (@2[329:336] += @143) */
  for (rr=w2+329, ss=w143; rr!=w2+336; rr+=1) *rr += *ss++;
  /* #1488: (@2[322:329] += @138) */
  for (rr=w2+322, ss=w138; rr!=w2+329; rr+=1) *rr += *ss++;
  /* #1489: @132 = @132' */
  /* #1490: @132 = (@132*@0) */
  for (i=0, rr=w132; i<7; ++i) (*rr++) *= w0;
  /* #1491: @138 = (-@132) */
  for (i=0, rr=w138, cs=w132; i<7; ++i) *rr++ = (- *cs++ );
  /* #1492: (@2[315:322] += @138) */
  for (rr=w2+315, ss=w138; rr!=w2+322; rr+=1) *rr += *ss++;
  /* #1493: (@2[308:315] += @132) */
  for (rr=w2+308, ss=w132; rr!=w2+315; rr+=1) *rr += *ss++;
  /* #1494: @132 = zeros(1x7) */
  casadi_clear(w132, 7);
  /* #1495: @137 = @137' */
  /* #1496: @137 = (@0*@137) */
  for (i=0, rr=w137, cs=w137; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1497: @387 = @139' */
  for (i=0, rr=w387, cs=w139; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1498: @132 = mac(@137,@387,@132) */
  for (i=0, rr=w132; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w137+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1499: @132 = @132' */
  /* #1500: @137 = (-@132) */
  for (i=0, rr=w137, cs=w132; i<7; ++i) *rr++ = (- *cs++ );
  /* #1501: (@2[315:322] += @137) */
  for (rr=w2+315, ss=w137; rr!=w2+322; rr+=1) *rr += *ss++;
  /* #1502: (@2[308:315] += @132) */
  for (rr=w2+308, ss=w132; rr!=w2+315; rr+=1) *rr += *ss++;
  /* #1503: @126 = @126' */
  /* #1504: @126 = (@126*@0) */
  for (i=0, rr=w126; i<7; ++i) (*rr++) *= w0;
  /* #1505: @132 = (-@126) */
  for (i=0, rr=w132, cs=w126; i<7; ++i) *rr++ = (- *cs++ );
  /* #1506: (@2[301:308] += @132) */
  for (rr=w2+301, ss=w132; rr!=w2+308; rr+=1) *rr += *ss++;
  /* #1507: (@2[294:301] += @126) */
  for (rr=w2+294, ss=w126; rr!=w2+301; rr+=1) *rr += *ss++;
  /* #1508: @126 = zeros(1x7) */
  casadi_clear(w126, 7);
  /* #1509: @131 = @131' */
  /* #1510: @131 = (@0*@131) */
  for (i=0, rr=w131, cs=w131; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1511: @387 = @133' */
  for (i=0, rr=w387, cs=w133; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1512: @126 = mac(@131,@387,@126) */
  for (i=0, rr=w126; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w131+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1513: @126 = @126' */
  /* #1514: @131 = (-@126) */
  for (i=0, rr=w131, cs=w126; i<7; ++i) *rr++ = (- *cs++ );
  /* #1515: (@2[301:308] += @131) */
  for (rr=w2+301, ss=w131; rr!=w2+308; rr+=1) *rr += *ss++;
  /* #1516: (@2[294:301] += @126) */
  for (rr=w2+294, ss=w126; rr!=w2+301; rr+=1) *rr += *ss++;
  /* #1517: @120 = @120' */
  /* #1518: @120 = (@120*@0) */
  for (i=0, rr=w120; i<7; ++i) (*rr++) *= w0;
  /* #1519: @126 = (-@120) */
  for (i=0, rr=w126, cs=w120; i<7; ++i) *rr++ = (- *cs++ );
  /* #1520: (@2[287:294] += @126) */
  for (rr=w2+287, ss=w126; rr!=w2+294; rr+=1) *rr += *ss++;
  /* #1521: (@2[280:287] += @120) */
  for (rr=w2+280, ss=w120; rr!=w2+287; rr+=1) *rr += *ss++;
  /* #1522: @120 = zeros(1x7) */
  casadi_clear(w120, 7);
  /* #1523: @125 = @125' */
  /* #1524: @125 = (@0*@125) */
  for (i=0, rr=w125, cs=w125; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1525: @387 = @127' */
  for (i=0, rr=w387, cs=w127; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1526: @120 = mac(@125,@387,@120) */
  for (i=0, rr=w120; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w125+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1527: @120 = @120' */
  /* #1528: @125 = (-@120) */
  for (i=0, rr=w125, cs=w120; i<7; ++i) *rr++ = (- *cs++ );
  /* #1529: (@2[287:294] += @125) */
  for (rr=w2+287, ss=w125; rr!=w2+294; rr+=1) *rr += *ss++;
  /* #1530: (@2[280:287] += @120) */
  for (rr=w2+280, ss=w120; rr!=w2+287; rr+=1) *rr += *ss++;
  /* #1531: @114 = @114' */
  /* #1532: @114 = (@114*@0) */
  for (i=0, rr=w114; i<7; ++i) (*rr++) *= w0;
  /* #1533: @120 = (-@114) */
  for (i=0, rr=w120, cs=w114; i<7; ++i) *rr++ = (- *cs++ );
  /* #1534: (@2[273:280] += @120) */
  for (rr=w2+273, ss=w120; rr!=w2+280; rr+=1) *rr += *ss++;
  /* #1535: (@2[266:273] += @114) */
  for (rr=w2+266, ss=w114; rr!=w2+273; rr+=1) *rr += *ss++;
  /* #1536: @114 = zeros(1x7) */
  casadi_clear(w114, 7);
  /* #1537: @119 = @119' */
  /* #1538: @119 = (@0*@119) */
  for (i=0, rr=w119, cs=w119; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1539: @387 = @121' */
  for (i=0, rr=w387, cs=w121; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1540: @114 = mac(@119,@387,@114) */
  for (i=0, rr=w114; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w119+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1541: @114 = @114' */
  /* #1542: @119 = (-@114) */
  for (i=0, rr=w119, cs=w114; i<7; ++i) *rr++ = (- *cs++ );
  /* #1543: (@2[273:280] += @119) */
  for (rr=w2+273, ss=w119; rr!=w2+280; rr+=1) *rr += *ss++;
  /* #1544: (@2[266:273] += @114) */
  for (rr=w2+266, ss=w114; rr!=w2+273; rr+=1) *rr += *ss++;
  /* #1545: @108 = @108' */
  /* #1546: @108 = (@108*@0) */
  for (i=0, rr=w108; i<7; ++i) (*rr++) *= w0;
  /* #1547: @114 = (-@108) */
  for (i=0, rr=w114, cs=w108; i<7; ++i) *rr++ = (- *cs++ );
  /* #1548: (@2[259:266] += @114) */
  for (rr=w2+259, ss=w114; rr!=w2+266; rr+=1) *rr += *ss++;
  /* #1549: (@2[252:259] += @108) */
  for (rr=w2+252, ss=w108; rr!=w2+259; rr+=1) *rr += *ss++;
  /* #1550: @108 = zeros(1x7) */
  casadi_clear(w108, 7);
  /* #1551: @113 = @113' */
  /* #1552: @113 = (@0*@113) */
  for (i=0, rr=w113, cs=w113; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1553: @387 = @115' */
  for (i=0, rr=w387, cs=w115; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1554: @108 = mac(@113,@387,@108) */
  for (i=0, rr=w108; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w113+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1555: @108 = @108' */
  /* #1556: @113 = (-@108) */
  for (i=0, rr=w113, cs=w108; i<7; ++i) *rr++ = (- *cs++ );
  /* #1557: (@2[259:266] += @113) */
  for (rr=w2+259, ss=w113; rr!=w2+266; rr+=1) *rr += *ss++;
  /* #1558: (@2[252:259] += @108) */
  for (rr=w2+252, ss=w108; rr!=w2+259; rr+=1) *rr += *ss++;
  /* #1559: @102 = @102' */
  /* #1560: @102 = (@102*@0) */
  for (i=0, rr=w102; i<7; ++i) (*rr++) *= w0;
  /* #1561: @108 = (-@102) */
  for (i=0, rr=w108, cs=w102; i<7; ++i) *rr++ = (- *cs++ );
  /* #1562: (@2[245:252] += @108) */
  for (rr=w2+245, ss=w108; rr!=w2+252; rr+=1) *rr += *ss++;
  /* #1563: (@2[238:245] += @102) */
  for (rr=w2+238, ss=w102; rr!=w2+245; rr+=1) *rr += *ss++;
  /* #1564: @102 = zeros(1x7) */
  casadi_clear(w102, 7);
  /* #1565: @107 = @107' */
  /* #1566: @107 = (@0*@107) */
  for (i=0, rr=w107, cs=w107; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1567: @387 = @109' */
  for (i=0, rr=w387, cs=w109; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1568: @102 = mac(@107,@387,@102) */
  for (i=0, rr=w102; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w107+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1569: @102 = @102' */
  /* #1570: @107 = (-@102) */
  for (i=0, rr=w107, cs=w102; i<7; ++i) *rr++ = (- *cs++ );
  /* #1571: (@2[245:252] += @107) */
  for (rr=w2+245, ss=w107; rr!=w2+252; rr+=1) *rr += *ss++;
  /* #1572: (@2[238:245] += @102) */
  for (rr=w2+238, ss=w102; rr!=w2+245; rr+=1) *rr += *ss++;
  /* #1573: @96 = @96' */
  /* #1574: @96 = (@96*@0) */
  for (i=0, rr=w96; i<7; ++i) (*rr++) *= w0;
  /* #1575: @102 = (-@96) */
  for (i=0, rr=w102, cs=w96; i<7; ++i) *rr++ = (- *cs++ );
  /* #1576: (@2[231:238] += @102) */
  for (rr=w2+231, ss=w102; rr!=w2+238; rr+=1) *rr += *ss++;
  /* #1577: (@2[224:231] += @96) */
  for (rr=w2+224, ss=w96; rr!=w2+231; rr+=1) *rr += *ss++;
  /* #1578: @96 = zeros(1x7) */
  casadi_clear(w96, 7);
  /* #1579: @101 = @101' */
  /* #1580: @101 = (@0*@101) */
  for (i=0, rr=w101, cs=w101; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1581: @387 = @103' */
  for (i=0, rr=w387, cs=w103; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1582: @96 = mac(@101,@387,@96) */
  for (i=0, rr=w96; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w101+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1583: @96 = @96' */
  /* #1584: @101 = (-@96) */
  for (i=0, rr=w101, cs=w96; i<7; ++i) *rr++ = (- *cs++ );
  /* #1585: (@2[231:238] += @101) */
  for (rr=w2+231, ss=w101; rr!=w2+238; rr+=1) *rr += *ss++;
  /* #1586: (@2[224:231] += @96) */
  for (rr=w2+224, ss=w96; rr!=w2+231; rr+=1) *rr += *ss++;
  /* #1587: @90 = @90' */
  /* #1588: @90 = (@90*@0) */
  for (i=0, rr=w90; i<7; ++i) (*rr++) *= w0;
  /* #1589: @96 = (-@90) */
  for (i=0, rr=w96, cs=w90; i<7; ++i) *rr++ = (- *cs++ );
  /* #1590: (@2[217:224] += @96) */
  for (rr=w2+217, ss=w96; rr!=w2+224; rr+=1) *rr += *ss++;
  /* #1591: (@2[210:217] += @90) */
  for (rr=w2+210, ss=w90; rr!=w2+217; rr+=1) *rr += *ss++;
  /* #1592: @90 = zeros(1x7) */
  casadi_clear(w90, 7);
  /* #1593: @95 = @95' */
  /* #1594: @95 = (@0*@95) */
  for (i=0, rr=w95, cs=w95; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1595: @387 = @97' */
  for (i=0, rr=w387, cs=w97; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1596: @90 = mac(@95,@387,@90) */
  for (i=0, rr=w90; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w95+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1597: @90 = @90' */
  /* #1598: @95 = (-@90) */
  for (i=0, rr=w95, cs=w90; i<7; ++i) *rr++ = (- *cs++ );
  /* #1599: (@2[217:224] += @95) */
  for (rr=w2+217, ss=w95; rr!=w2+224; rr+=1) *rr += *ss++;
  /* #1600: (@2[210:217] += @90) */
  for (rr=w2+210, ss=w90; rr!=w2+217; rr+=1) *rr += *ss++;
  /* #1601: @84 = @84' */
  /* #1602: @84 = (@84*@0) */
  for (i=0, rr=w84; i<7; ++i) (*rr++) *= w0;
  /* #1603: @90 = (-@84) */
  for (i=0, rr=w90, cs=w84; i<7; ++i) *rr++ = (- *cs++ );
  /* #1604: (@2[203:210] += @90) */
  for (rr=w2+203, ss=w90; rr!=w2+210; rr+=1) *rr += *ss++;
  /* #1605: (@2[196:203] += @84) */
  for (rr=w2+196, ss=w84; rr!=w2+203; rr+=1) *rr += *ss++;
  /* #1606: @84 = zeros(1x7) */
  casadi_clear(w84, 7);
  /* #1607: @89 = @89' */
  /* #1608: @89 = (@0*@89) */
  for (i=0, rr=w89, cs=w89; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1609: @387 = @91' */
  for (i=0, rr=w387, cs=w91; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1610: @84 = mac(@89,@387,@84) */
  for (i=0, rr=w84; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w89+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1611: @84 = @84' */
  /* #1612: @89 = (-@84) */
  for (i=0, rr=w89, cs=w84; i<7; ++i) *rr++ = (- *cs++ );
  /* #1613: (@2[203:210] += @89) */
  for (rr=w2+203, ss=w89; rr!=w2+210; rr+=1) *rr += *ss++;
  /* #1614: (@2[196:203] += @84) */
  for (rr=w2+196, ss=w84; rr!=w2+203; rr+=1) *rr += *ss++;
  /* #1615: @78 = @78' */
  /* #1616: @78 = (@78*@0) */
  for (i=0, rr=w78; i<7; ++i) (*rr++) *= w0;
  /* #1617: @84 = (-@78) */
  for (i=0, rr=w84, cs=w78; i<7; ++i) *rr++ = (- *cs++ );
  /* #1618: (@2[189:196] += @84) */
  for (rr=w2+189, ss=w84; rr!=w2+196; rr+=1) *rr += *ss++;
  /* #1619: (@2[182:189] += @78) */
  for (rr=w2+182, ss=w78; rr!=w2+189; rr+=1) *rr += *ss++;
  /* #1620: @78 = zeros(1x7) */
  casadi_clear(w78, 7);
  /* #1621: @83 = @83' */
  /* #1622: @83 = (@0*@83) */
  for (i=0, rr=w83, cs=w83; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1623: @387 = @85' */
  for (i=0, rr=w387, cs=w85; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1624: @78 = mac(@83,@387,@78) */
  for (i=0, rr=w78; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w83+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1625: @78 = @78' */
  /* #1626: @83 = (-@78) */
  for (i=0, rr=w83, cs=w78; i<7; ++i) *rr++ = (- *cs++ );
  /* #1627: (@2[189:196] += @83) */
  for (rr=w2+189, ss=w83; rr!=w2+196; rr+=1) *rr += *ss++;
  /* #1628: (@2[182:189] += @78) */
  for (rr=w2+182, ss=w78; rr!=w2+189; rr+=1) *rr += *ss++;
  /* #1629: @72 = @72' */
  /* #1630: @72 = (@72*@0) */
  for (i=0, rr=w72; i<7; ++i) (*rr++) *= w0;
  /* #1631: @78 = (-@72) */
  for (i=0, rr=w78, cs=w72; i<7; ++i) *rr++ = (- *cs++ );
  /* #1632: (@2[175:182] += @78) */
  for (rr=w2+175, ss=w78; rr!=w2+182; rr+=1) *rr += *ss++;
  /* #1633: (@2[168:175] += @72) */
  for (rr=w2+168, ss=w72; rr!=w2+175; rr+=1) *rr += *ss++;
  /* #1634: @72 = zeros(1x7) */
  casadi_clear(w72, 7);
  /* #1635: @77 = @77' */
  /* #1636: @77 = (@0*@77) */
  for (i=0, rr=w77, cs=w77; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1637: @387 = @79' */
  for (i=0, rr=w387, cs=w79; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1638: @72 = mac(@77,@387,@72) */
  for (i=0, rr=w72; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w77+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1639: @72 = @72' */
  /* #1640: @77 = (-@72) */
  for (i=0, rr=w77, cs=w72; i<7; ++i) *rr++ = (- *cs++ );
  /* #1641: (@2[175:182] += @77) */
  for (rr=w2+175, ss=w77; rr!=w2+182; rr+=1) *rr += *ss++;
  /* #1642: (@2[168:175] += @72) */
  for (rr=w2+168, ss=w72; rr!=w2+175; rr+=1) *rr += *ss++;
  /* #1643: @66 = @66' */
  /* #1644: @66 = (@66*@0) */
  for (i=0, rr=w66; i<7; ++i) (*rr++) *= w0;
  /* #1645: @72 = (-@66) */
  for (i=0, rr=w72, cs=w66; i<7; ++i) *rr++ = (- *cs++ );
  /* #1646: (@2[161:168] += @72) */
  for (rr=w2+161, ss=w72; rr!=w2+168; rr+=1) *rr += *ss++;
  /* #1647: (@2[154:161] += @66) */
  for (rr=w2+154, ss=w66; rr!=w2+161; rr+=1) *rr += *ss++;
  /* #1648: @66 = zeros(1x7) */
  casadi_clear(w66, 7);
  /* #1649: @71 = @71' */
  /* #1650: @71 = (@0*@71) */
  for (i=0, rr=w71, cs=w71; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1651: @387 = @73' */
  for (i=0, rr=w387, cs=w73; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1652: @66 = mac(@71,@387,@66) */
  for (i=0, rr=w66; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w71+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1653: @66 = @66' */
  /* #1654: @71 = (-@66) */
  for (i=0, rr=w71, cs=w66; i<7; ++i) *rr++ = (- *cs++ );
  /* #1655: (@2[161:168] += @71) */
  for (rr=w2+161, ss=w71; rr!=w2+168; rr+=1) *rr += *ss++;
  /* #1656: (@2[154:161] += @66) */
  for (rr=w2+154, ss=w66; rr!=w2+161; rr+=1) *rr += *ss++;
  /* #1657: @60 = @60' */
  /* #1658: @60 = (@60*@0) */
  for (i=0, rr=w60; i<7; ++i) (*rr++) *= w0;
  /* #1659: @66 = (-@60) */
  for (i=0, rr=w66, cs=w60; i<7; ++i) *rr++ = (- *cs++ );
  /* #1660: (@2[147:154] += @66) */
  for (rr=w2+147, ss=w66; rr!=w2+154; rr+=1) *rr += *ss++;
  /* #1661: (@2[140:147] += @60) */
  for (rr=w2+140, ss=w60; rr!=w2+147; rr+=1) *rr += *ss++;
  /* #1662: @60 = zeros(1x7) */
  casadi_clear(w60, 7);
  /* #1663: @65 = @65' */
  /* #1664: @65 = (@0*@65) */
  for (i=0, rr=w65, cs=w65; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1665: @387 = @67' */
  for (i=0, rr=w387, cs=w67; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1666: @60 = mac(@65,@387,@60) */
  for (i=0, rr=w60; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w65+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1667: @60 = @60' */
  /* #1668: @65 = (-@60) */
  for (i=0, rr=w65, cs=w60; i<7; ++i) *rr++ = (- *cs++ );
  /* #1669: (@2[147:154] += @65) */
  for (rr=w2+147, ss=w65; rr!=w2+154; rr+=1) *rr += *ss++;
  /* #1670: (@2[140:147] += @60) */
  for (rr=w2+140, ss=w60; rr!=w2+147; rr+=1) *rr += *ss++;
  /* #1671: @54 = @54' */
  /* #1672: @54 = (@54*@0) */
  for (i=0, rr=w54; i<7; ++i) (*rr++) *= w0;
  /* #1673: @60 = (-@54) */
  for (i=0, rr=w60, cs=w54; i<7; ++i) *rr++ = (- *cs++ );
  /* #1674: (@2[133:140] += @60) */
  for (rr=w2+133, ss=w60; rr!=w2+140; rr+=1) *rr += *ss++;
  /* #1675: (@2[126:133] += @54) */
  for (rr=w2+126, ss=w54; rr!=w2+133; rr+=1) *rr += *ss++;
  /* #1676: @54 = zeros(1x7) */
  casadi_clear(w54, 7);
  /* #1677: @59 = @59' */
  /* #1678: @59 = (@0*@59) */
  for (i=0, rr=w59, cs=w59; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1679: @387 = @61' */
  for (i=0, rr=w387, cs=w61; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1680: @54 = mac(@59,@387,@54) */
  for (i=0, rr=w54; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w59+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1681: @54 = @54' */
  /* #1682: @59 = (-@54) */
  for (i=0, rr=w59, cs=w54; i<7; ++i) *rr++ = (- *cs++ );
  /* #1683: (@2[133:140] += @59) */
  for (rr=w2+133, ss=w59; rr!=w2+140; rr+=1) *rr += *ss++;
  /* #1684: (@2[126:133] += @54) */
  for (rr=w2+126, ss=w54; rr!=w2+133; rr+=1) *rr += *ss++;
  /* #1685: @48 = @48' */
  /* #1686: @48 = (@48*@0) */
  for (i=0, rr=w48; i<7; ++i) (*rr++) *= w0;
  /* #1687: @54 = (-@48) */
  for (i=0, rr=w54, cs=w48; i<7; ++i) *rr++ = (- *cs++ );
  /* #1688: (@2[119:126] += @54) */
  for (rr=w2+119, ss=w54; rr!=w2+126; rr+=1) *rr += *ss++;
  /* #1689: (@2[112:119] += @48) */
  for (rr=w2+112, ss=w48; rr!=w2+119; rr+=1) *rr += *ss++;
  /* #1690: @48 = zeros(1x7) */
  casadi_clear(w48, 7);
  /* #1691: @53 = @53' */
  /* #1692: @53 = (@0*@53) */
  for (i=0, rr=w53, cs=w53; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1693: @387 = @55' */
  for (i=0, rr=w387, cs=w55; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1694: @48 = mac(@53,@387,@48) */
  for (i=0, rr=w48; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w53+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1695: @48 = @48' */
  /* #1696: @53 = (-@48) */
  for (i=0, rr=w53, cs=w48; i<7; ++i) *rr++ = (- *cs++ );
  /* #1697: (@2[119:126] += @53) */
  for (rr=w2+119, ss=w53; rr!=w2+126; rr+=1) *rr += *ss++;
  /* #1698: (@2[112:119] += @48) */
  for (rr=w2+112, ss=w48; rr!=w2+119; rr+=1) *rr += *ss++;
  /* #1699: @42 = @42' */
  /* #1700: @42 = (@42*@0) */
  for (i=0, rr=w42; i<7; ++i) (*rr++) *= w0;
  /* #1701: @48 = (-@42) */
  for (i=0, rr=w48, cs=w42; i<7; ++i) *rr++ = (- *cs++ );
  /* #1702: (@2[105:112] += @48) */
  for (rr=w2+105, ss=w48; rr!=w2+112; rr+=1) *rr += *ss++;
  /* #1703: (@2[98:105] += @42) */
  for (rr=w2+98, ss=w42; rr!=w2+105; rr+=1) *rr += *ss++;
  /* #1704: @42 = zeros(1x7) */
  casadi_clear(w42, 7);
  /* #1705: @47 = @47' */
  /* #1706: @47 = (@0*@47) */
  for (i=0, rr=w47, cs=w47; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1707: @387 = @49' */
  for (i=0, rr=w387, cs=w49; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1708: @42 = mac(@47,@387,@42) */
  for (i=0, rr=w42; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w47+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1709: @42 = @42' */
  /* #1710: @47 = (-@42) */
  for (i=0, rr=w47, cs=w42; i<7; ++i) *rr++ = (- *cs++ );
  /* #1711: (@2[105:112] += @47) */
  for (rr=w2+105, ss=w47; rr!=w2+112; rr+=1) *rr += *ss++;
  /* #1712: (@2[98:105] += @42) */
  for (rr=w2+98, ss=w42; rr!=w2+105; rr+=1) *rr += *ss++;
  /* #1713: @36 = @36' */
  /* #1714: @36 = (@36*@0) */
  for (i=0, rr=w36; i<7; ++i) (*rr++) *= w0;
  /* #1715: @42 = (-@36) */
  for (i=0, rr=w42, cs=w36; i<7; ++i) *rr++ = (- *cs++ );
  /* #1716: (@2[91:98] += @42) */
  for (rr=w2+91, ss=w42; rr!=w2+98; rr+=1) *rr += *ss++;
  /* #1717: (@2[84:91] += @36) */
  for (rr=w2+84, ss=w36; rr!=w2+91; rr+=1) *rr += *ss++;
  /* #1718: @36 = zeros(1x7) */
  casadi_clear(w36, 7);
  /* #1719: @41 = @41' */
  /* #1720: @41 = (@0*@41) */
  for (i=0, rr=w41, cs=w41; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1721: @387 = @43' */
  for (i=0, rr=w387, cs=w43; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1722: @36 = mac(@41,@387,@36) */
  for (i=0, rr=w36; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w41+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1723: @36 = @36' */
  /* #1724: @41 = (-@36) */
  for (i=0, rr=w41, cs=w36; i<7; ++i) *rr++ = (- *cs++ );
  /* #1725: (@2[91:98] += @41) */
  for (rr=w2+91, ss=w41; rr!=w2+98; rr+=1) *rr += *ss++;
  /* #1726: (@2[84:91] += @36) */
  for (rr=w2+84, ss=w36; rr!=w2+91; rr+=1) *rr += *ss++;
  /* #1727: @30 = @30' */
  /* #1728: @30 = (@30*@0) */
  for (i=0, rr=w30; i<7; ++i) (*rr++) *= w0;
  /* #1729: @36 = (-@30) */
  for (i=0, rr=w36, cs=w30; i<7; ++i) *rr++ = (- *cs++ );
  /* #1730: (@2[77:84] += @36) */
  for (rr=w2+77, ss=w36; rr!=w2+84; rr+=1) *rr += *ss++;
  /* #1731: (@2[70:77] += @30) */
  for (rr=w2+70, ss=w30; rr!=w2+77; rr+=1) *rr += *ss++;
  /* #1732: @30 = zeros(1x7) */
  casadi_clear(w30, 7);
  /* #1733: @35 = @35' */
  /* #1734: @35 = (@0*@35) */
  for (i=0, rr=w35, cs=w35; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1735: @387 = @37' */
  for (i=0, rr=w387, cs=w37; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1736: @30 = mac(@35,@387,@30) */
  for (i=0, rr=w30; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w35+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1737: @30 = @30' */
  /* #1738: @35 = (-@30) */
  for (i=0, rr=w35, cs=w30; i<7; ++i) *rr++ = (- *cs++ );
  /* #1739: (@2[77:84] += @35) */
  for (rr=w2+77, ss=w35; rr!=w2+84; rr+=1) *rr += *ss++;
  /* #1740: (@2[70:77] += @30) */
  for (rr=w2+70, ss=w30; rr!=w2+77; rr+=1) *rr += *ss++;
  /* #1741: @24 = @24' */
  /* #1742: @24 = (@24*@0) */
  for (i=0, rr=w24; i<7; ++i) (*rr++) *= w0;
  /* #1743: @30 = (-@24) */
  for (i=0, rr=w30, cs=w24; i<7; ++i) *rr++ = (- *cs++ );
  /* #1744: (@2[63:70] += @30) */
  for (rr=w2+63, ss=w30; rr!=w2+70; rr+=1) *rr += *ss++;
  /* #1745: (@2[56:63] += @24) */
  for (rr=w2+56, ss=w24; rr!=w2+63; rr+=1) *rr += *ss++;
  /* #1746: @24 = zeros(1x7) */
  casadi_clear(w24, 7);
  /* #1747: @29 = @29' */
  /* #1748: @29 = (@0*@29) */
  for (i=0, rr=w29, cs=w29; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1749: @387 = @31' */
  for (i=0, rr=w387, cs=w31; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1750: @24 = mac(@29,@387,@24) */
  for (i=0, rr=w24; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w29+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1751: @24 = @24' */
  /* #1752: @29 = (-@24) */
  for (i=0, rr=w29, cs=w24; i<7; ++i) *rr++ = (- *cs++ );
  /* #1753: (@2[63:70] += @29) */
  for (rr=w2+63, ss=w29; rr!=w2+70; rr+=1) *rr += *ss++;
  /* #1754: (@2[56:63] += @24) */
  for (rr=w2+56, ss=w24; rr!=w2+63; rr+=1) *rr += *ss++;
  /* #1755: @18 = @18' */
  /* #1756: @18 = (@18*@0) */
  for (i=0, rr=w18; i<7; ++i) (*rr++) *= w0;
  /* #1757: @24 = (-@18) */
  for (i=0, rr=w24, cs=w18; i<7; ++i) *rr++ = (- *cs++ );
  /* #1758: (@2[49:56] += @24) */
  for (rr=w2+49, ss=w24; rr!=w2+56; rr+=1) *rr += *ss++;
  /* #1759: (@2[42:49] += @18) */
  for (rr=w2+42, ss=w18; rr!=w2+49; rr+=1) *rr += *ss++;
  /* #1760: @18 = zeros(1x7) */
  casadi_clear(w18, 7);
  /* #1761: @23 = @23' */
  /* #1762: @23 = (@0*@23) */
  for (i=0, rr=w23, cs=w23; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1763: @387 = @25' */
  for (i=0, rr=w387, cs=w25; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1764: @18 = mac(@23,@387,@18) */
  for (i=0, rr=w18; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w23+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1765: @18 = @18' */
  /* #1766: @23 = (-@18) */
  for (i=0, rr=w23, cs=w18; i<7; ++i) *rr++ = (- *cs++ );
  /* #1767: (@2[49:56] += @23) */
  for (rr=w2+49, ss=w23; rr!=w2+56; rr+=1) *rr += *ss++;
  /* #1768: (@2[42:49] += @18) */
  for (rr=w2+42, ss=w18; rr!=w2+49; rr+=1) *rr += *ss++;
  /* #1769: @12 = @12' */
  /* #1770: @12 = (@12*@0) */
  for (i=0, rr=w12; i<7; ++i) (*rr++) *= w0;
  /* #1771: @18 = (-@12) */
  for (i=0, rr=w18, cs=w12; i<7; ++i) *rr++ = (- *cs++ );
  /* #1772: (@2[35:42] += @18) */
  for (rr=w2+35, ss=w18; rr!=w2+42; rr+=1) *rr += *ss++;
  /* #1773: (@2[28:35] += @12) */
  for (rr=w2+28, ss=w12; rr!=w2+35; rr+=1) *rr += *ss++;
  /* #1774: @12 = zeros(1x7) */
  casadi_clear(w12, 7);
  /* #1775: @17 = @17' */
  /* #1776: @17 = (@0*@17) */
  for (i=0, rr=w17, cs=w17; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1777: @387 = @19' */
  for (i=0, rr=w387, cs=w19; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1778: @12 = mac(@17,@387,@12) */
  for (i=0, rr=w12; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w17+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1779: @12 = @12' */
  /* #1780: @17 = (-@12) */
  for (i=0, rr=w17, cs=w12; i<7; ++i) *rr++ = (- *cs++ );
  /* #1781: (@2[35:42] += @17) */
  for (rr=w2+35, ss=w17; rr!=w2+42; rr+=1) *rr += *ss++;
  /* #1782: (@2[28:35] += @12) */
  for (rr=w2+28, ss=w12; rr!=w2+35; rr+=1) *rr += *ss++;
  /* #1783: @4 = @4' */
  /* #1784: @4 = (@4*@0) */
  for (i=0, rr=w4; i<7; ++i) (*rr++) *= w0;
  /* #1785: @12 = (-@4) */
  for (i=0, rr=w12, cs=w4; i<7; ++i) *rr++ = (- *cs++ );
  /* #1786: (@2[21:28] += @12) */
  for (rr=w2+21, ss=w12; rr!=w2+28; rr+=1) *rr += *ss++;
  /* #1787: (@2[14:21] += @4) */
  for (rr=w2+14, ss=w4; rr!=w2+21; rr+=1) *rr += *ss++;
  /* #1788: @4 = zeros(1x7) */
  casadi_clear(w4, 7);
  /* #1789: @11 = @11' */
  /* #1790: @11 = (@0*@11) */
  for (i=0, rr=w11, cs=w11; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1791: @387 = @13' */
  for (i=0, rr=w387, cs=w13; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1792: @4 = mac(@11,@387,@4) */
  for (i=0, rr=w4; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w11+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1793: @4 = @4' */
  /* #1794: @11 = (-@4) */
  for (i=0, rr=w11, cs=w4; i<7; ++i) *rr++ = (- *cs++ );
  /* #1795: (@2[21:28] += @11) */
  for (rr=w2+21, ss=w11; rr!=w2+28; rr+=1) *rr += *ss++;
  /* #1796: (@2[14:21] += @4) */
  for (rr=w2+14, ss=w4; rr!=w2+21; rr+=1) *rr += *ss++;
  /* #1797: @1 = @1' */
  /* #1798: @1 = (@1*@0) */
  for (i=0, rr=w1; i<7; ++i) (*rr++) *= w0;
  /* #1799: @4 = (-@1) */
  for (i=0, rr=w4, cs=w1; i<7; ++i) *rr++ = (- *cs++ );
  /* #1800: (@2[7:14] += @4) */
  for (rr=w2+7, ss=w4; rr!=w2+14; rr+=1) *rr += *ss++;
  /* #1801: (@2[:7] += @1) */
  for (rr=w2+0, ss=w1; rr!=w2+7; rr+=1) *rr += *ss++;
  /* #1802: @1 = zeros(1x7) */
  casadi_clear(w1, 7);
  /* #1803: @3 = @3' */
  /* #1804: @3 = (@0*@3) */
  for (i=0, rr=w3, cs=w3; i<7; ++i) (*rr++)  = (w0*(*cs++));
  /* #1805: @387 = @5' */
  for (i=0, rr=w387, cs=w5; i<7; ++i) for (j=0; j<7; ++j) rr[i+j*7] = *cs++;
  /* #1806: @1 = mac(@3,@387,@1) */
  for (i=0, rr=w1; i<7; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w3+j, tt=w387+i*7; k<7; ++k) *rr += ss[k*1]**tt++;
  /* #1807: @1 = @1' */
  /* #1808: @3 = (-@1) */
  for (i=0, rr=w3, cs=w1; i<7; ++i) *rr++ = (- *cs++ );
  /* #1809: (@2[7:14] += @3) */
  for (rr=w2+7, ss=w3; rr!=w2+14; rr+=1) *rr += *ss++;
  /* #1810: (@2[:7] += @1) */
  for (rr=w2+0, ss=w1; rr!=w2+7; rr+=1) *rr += *ss++;
  /* #1811: output[2][0] = @2 */
  casadi_copy(w2, 364, res[2]);
  /* #1812: @8 = zeros(4x25) */
  casadi_clear(w8, 100);
  /* #1813: (@8[96:99] += @381) */
  for (rr=w8+96, ss=w381; rr!=w8+99; rr+=1) *rr += *ss++;
  /* #1814: (@8[96:100] += @386) */
  for (rr=w8+96, ss=w386; rr!=w8+100; rr+=1) *rr += *ss++;
  /* #1815: (@8[92:95] += @376) */
  for (rr=w8+92, ss=w376; rr!=w8+95; rr+=1) *rr += *ss++;
  /* #1816: (@8[92:96] += @257) */
  for (rr=w8+92, ss=w257; rr!=w8+96; rr+=1) *rr += *ss++;
  /* #1817: (@8[88:91] += @371) */
  for (rr=w8+88, ss=w371; rr!=w8+91; rr+=1) *rr += *ss++;
  /* #1818: (@8[88:92] += @253) */
  for (rr=w8+88, ss=w253; rr!=w8+92; rr+=1) *rr += *ss++;
  /* #1819: (@8[84:87] += @366) */
  for (rr=w8+84, ss=w366; rr!=w8+87; rr+=1) *rr += *ss++;
  /* #1820: (@8[84:88] += @249) */
  for (rr=w8+84, ss=w249; rr!=w8+88; rr+=1) *rr += *ss++;
  /* #1821: (@8[80:83] += @361) */
  for (rr=w8+80, ss=w361; rr!=w8+83; rr+=1) *rr += *ss++;
  /* #1822: (@8[80:84] += @245) */
  for (rr=w8+80, ss=w245; rr!=w8+84; rr+=1) *rr += *ss++;
  /* #1823: (@8[76:79] += @356) */
  for (rr=w8+76, ss=w356; rr!=w8+79; rr+=1) *rr += *ss++;
  /* #1824: (@8[76:80] += @241) */
  for (rr=w8+76, ss=w241; rr!=w8+80; rr+=1) *rr += *ss++;
  /* #1825: (@8[72:75] += @351) */
  for (rr=w8+72, ss=w351; rr!=w8+75; rr+=1) *rr += *ss++;
  /* #1826: (@8[72:76] += @237) */
  for (rr=w8+72, ss=w237; rr!=w8+76; rr+=1) *rr += *ss++;
  /* #1827: (@8[68:71] += @346) */
  for (rr=w8+68, ss=w346; rr!=w8+71; rr+=1) *rr += *ss++;
  /* #1828: (@8[68:72] += @233) */
  for (rr=w8+68, ss=w233; rr!=w8+72; rr+=1) *rr += *ss++;
  /* #1829: (@8[64:67] += @341) */
  for (rr=w8+64, ss=w341; rr!=w8+67; rr+=1) *rr += *ss++;
  /* #1830: (@8[64:68] += @229) */
  for (rr=w8+64, ss=w229; rr!=w8+68; rr+=1) *rr += *ss++;
  /* #1831: (@8[60:63] += @336) */
  for (rr=w8+60, ss=w336; rr!=w8+63; rr+=1) *rr += *ss++;
  /* #1832: (@8[60:64] += @225) */
  for (rr=w8+60, ss=w225; rr!=w8+64; rr+=1) *rr += *ss++;
  /* #1833: (@8[56:59] += @331) */
  for (rr=w8+56, ss=w331; rr!=w8+59; rr+=1) *rr += *ss++;
  /* #1834: (@8[56:60] += @221) */
  for (rr=w8+56, ss=w221; rr!=w8+60; rr+=1) *rr += *ss++;
  /* #1835: (@8[52:55] += @326) */
  for (rr=w8+52, ss=w326; rr!=w8+55; rr+=1) *rr += *ss++;
  /* #1836: (@8[52:56] += @217) */
  for (rr=w8+52, ss=w217; rr!=w8+56; rr+=1) *rr += *ss++;
  /* #1837: (@8[48:51] += @321) */
  for (rr=w8+48, ss=w321; rr!=w8+51; rr+=1) *rr += *ss++;
  /* #1838: (@8[48:52] += @213) */
  for (rr=w8+48, ss=w213; rr!=w8+52; rr+=1) *rr += *ss++;
  /* #1839: (@8[44:47] += @316) */
  for (rr=w8+44, ss=w316; rr!=w8+47; rr+=1) *rr += *ss++;
  /* #1840: (@8[44:48] += @209) */
  for (rr=w8+44, ss=w209; rr!=w8+48; rr+=1) *rr += *ss++;
  /* #1841: (@8[40:43] += @311) */
  for (rr=w8+40, ss=w311; rr!=w8+43; rr+=1) *rr += *ss++;
  /* #1842: (@8[40:44] += @205) */
  for (rr=w8+40, ss=w205; rr!=w8+44; rr+=1) *rr += *ss++;
  /* #1843: (@8[36:39] += @306) */
  for (rr=w8+36, ss=w306; rr!=w8+39; rr+=1) *rr += *ss++;
  /* #1844: (@8[36:40] += @201) */
  for (rr=w8+36, ss=w201; rr!=w8+40; rr+=1) *rr += *ss++;
  /* #1845: (@8[32:35] += @301) */
  for (rr=w8+32, ss=w301; rr!=w8+35; rr+=1) *rr += *ss++;
  /* #1846: (@8[32:36] += @197) */
  for (rr=w8+32, ss=w197; rr!=w8+36; rr+=1) *rr += *ss++;
  /* #1847: (@8[28:31] += @296) */
  for (rr=w8+28, ss=w296; rr!=w8+31; rr+=1) *rr += *ss++;
  /* #1848: (@8[28:32] += @193) */
  for (rr=w8+28, ss=w193; rr!=w8+32; rr+=1) *rr += *ss++;
  /* #1849: (@8[24:27] += @291) */
  for (rr=w8+24, ss=w291; rr!=w8+27; rr+=1) *rr += *ss++;
  /* #1850: (@8[24:28] += @189) */
  for (rr=w8+24, ss=w189; rr!=w8+28; rr+=1) *rr += *ss++;
  /* #1851: (@8[20:23] += @286) */
  for (rr=w8+20, ss=w286; rr!=w8+23; rr+=1) *rr += *ss++;
  /* #1852: (@8[20:24] += @185) */
  for (rr=w8+20, ss=w185; rr!=w8+24; rr+=1) *rr += *ss++;
  /* #1853: (@8[16:19] += @281) */
  for (rr=w8+16, ss=w281; rr!=w8+19; rr+=1) *rr += *ss++;
  /* #1854: (@8[16:20] += @181) */
  for (rr=w8+16, ss=w181; rr!=w8+20; rr+=1) *rr += *ss++;
  /* #1855: (@8[12:15] += @276) */
  for (rr=w8+12, ss=w276; rr!=w8+15; rr+=1) *rr += *ss++;
  /* #1856: (@8[12:16] += @177) */
  for (rr=w8+12, ss=w177; rr!=w8+16; rr+=1) *rr += *ss++;
  /* #1857: (@8[8:11] += @271) */
  for (rr=w8+8, ss=w271; rr!=w8+11; rr+=1) *rr += *ss++;
  /* #1858: (@8[8:12] += @173) */
  for (rr=w8+8, ss=w173; rr!=w8+12; rr+=1) *rr += *ss++;
  /* #1859: (@8[4:7] += @266) */
  for (rr=w8+4, ss=w266; rr!=w8+7; rr+=1) *rr += *ss++;
  /* #1860: (@8[4:8] += @169) */
  for (rr=w8+4, ss=w169; rr!=w8+8; rr+=1) *rr += *ss++;
  /* #1861: (@8[:3] += @262) */
  for (rr=w8+0, ss=w262; rr!=w8+3; rr+=1) *rr += *ss++;
  /* #1862: (@8[:4] += @165) */
  for (rr=w8+0, ss=w165; rr!=w8+4; rr+=1) *rr += *ss++;
  /* #1863: @152 = @152' */
  /* #1864: @152 = (@152*@0) */
  for (i=0, rr=w152; i<4; ++i) (*rr++) *= w0;
  /* #1865: (@8[96:100] += @152) */
  for (rr=w8+96, ss=w152; rr!=w8+100; rr+=1) *rr += *ss++;
  /* #1866: @152 = zeros(1x4) */
  casadi_clear(w152, 4);
  /* #1867: @153 = @153' */
  /* #1868: @153 = (@0*@153) */
  for (i=0, rr=w153, cs=w153; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1869: @388 = @154' */
  for (i=0, rr=w388, cs=w154; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1870: @152 = mac(@153,@388,@152) */
  for (i=0, rr=w152; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w153+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1871: @152 = @152' */
  /* #1872: (@8[96:100] += @152) */
  for (rr=w8+96, ss=w152; rr!=w8+100; rr+=1) *rr += *ss++;
  /* #1873: @146 = @146' */
  /* #1874: @146 = (@146*@0) */
  for (i=0, rr=w146; i<4; ++i) (*rr++) *= w0;
  /* #1875: (@8[92:96] += @146) */
  for (rr=w8+92, ss=w146; rr!=w8+96; rr+=1) *rr += *ss++;
  /* #1876: @146 = zeros(1x4) */
  casadi_clear(w146, 4);
  /* #1877: @147 = @147' */
  /* #1878: @147 = (@0*@147) */
  for (i=0, rr=w147, cs=w147; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1879: @388 = @148' */
  for (i=0, rr=w388, cs=w148; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1880: @146 = mac(@147,@388,@146) */
  for (i=0, rr=w146; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w147+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1881: @146 = @146' */
  /* #1882: (@8[92:96] += @146) */
  for (rr=w8+92, ss=w146; rr!=w8+96; rr+=1) *rr += *ss++;
  /* #1883: @140 = @140' */
  /* #1884: @140 = (@140*@0) */
  for (i=0, rr=w140; i<4; ++i) (*rr++) *= w0;
  /* #1885: (@8[88:92] += @140) */
  for (rr=w8+88, ss=w140; rr!=w8+92; rr+=1) *rr += *ss++;
  /* #1886: @140 = zeros(1x4) */
  casadi_clear(w140, 4);
  /* #1887: @141 = @141' */
  /* #1888: @141 = (@0*@141) */
  for (i=0, rr=w141, cs=w141; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1889: @388 = @142' */
  for (i=0, rr=w388, cs=w142; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1890: @140 = mac(@141,@388,@140) */
  for (i=0, rr=w140; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w141+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1891: @140 = @140' */
  /* #1892: (@8[88:92] += @140) */
  for (rr=w8+88, ss=w140; rr!=w8+92; rr+=1) *rr += *ss++;
  /* #1893: @134 = @134' */
  /* #1894: @134 = (@134*@0) */
  for (i=0, rr=w134; i<4; ++i) (*rr++) *= w0;
  /* #1895: (@8[84:88] += @134) */
  for (rr=w8+84, ss=w134; rr!=w8+88; rr+=1) *rr += *ss++;
  /* #1896: @134 = zeros(1x4) */
  casadi_clear(w134, 4);
  /* #1897: @135 = @135' */
  /* #1898: @135 = (@0*@135) */
  for (i=0, rr=w135, cs=w135; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1899: @388 = @136' */
  for (i=0, rr=w388, cs=w136; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1900: @134 = mac(@135,@388,@134) */
  for (i=0, rr=w134; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w135+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1901: @134 = @134' */
  /* #1902: (@8[84:88] += @134) */
  for (rr=w8+84, ss=w134; rr!=w8+88; rr+=1) *rr += *ss++;
  /* #1903: @128 = @128' */
  /* #1904: @128 = (@128*@0) */
  for (i=0, rr=w128; i<4; ++i) (*rr++) *= w0;
  /* #1905: (@8[80:84] += @128) */
  for (rr=w8+80, ss=w128; rr!=w8+84; rr+=1) *rr += *ss++;
  /* #1906: @128 = zeros(1x4) */
  casadi_clear(w128, 4);
  /* #1907: @129 = @129' */
  /* #1908: @129 = (@0*@129) */
  for (i=0, rr=w129, cs=w129; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1909: @388 = @130' */
  for (i=0, rr=w388, cs=w130; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1910: @128 = mac(@129,@388,@128) */
  for (i=0, rr=w128; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w129+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1911: @128 = @128' */
  /* #1912: (@8[80:84] += @128) */
  for (rr=w8+80, ss=w128; rr!=w8+84; rr+=1) *rr += *ss++;
  /* #1913: @122 = @122' */
  /* #1914: @122 = (@122*@0) */
  for (i=0, rr=w122; i<4; ++i) (*rr++) *= w0;
  /* #1915: (@8[76:80] += @122) */
  for (rr=w8+76, ss=w122; rr!=w8+80; rr+=1) *rr += *ss++;
  /* #1916: @122 = zeros(1x4) */
  casadi_clear(w122, 4);
  /* #1917: @123 = @123' */
  /* #1918: @123 = (@0*@123) */
  for (i=0, rr=w123, cs=w123; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1919: @388 = @124' */
  for (i=0, rr=w388, cs=w124; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1920: @122 = mac(@123,@388,@122) */
  for (i=0, rr=w122; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w123+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1921: @122 = @122' */
  /* #1922: (@8[76:80] += @122) */
  for (rr=w8+76, ss=w122; rr!=w8+80; rr+=1) *rr += *ss++;
  /* #1923: @116 = @116' */
  /* #1924: @116 = (@116*@0) */
  for (i=0, rr=w116; i<4; ++i) (*rr++) *= w0;
  /* #1925: (@8[72:76] += @116) */
  for (rr=w8+72, ss=w116; rr!=w8+76; rr+=1) *rr += *ss++;
  /* #1926: @116 = zeros(1x4) */
  casadi_clear(w116, 4);
  /* #1927: @117 = @117' */
  /* #1928: @117 = (@0*@117) */
  for (i=0, rr=w117, cs=w117; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1929: @388 = @118' */
  for (i=0, rr=w388, cs=w118; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1930: @116 = mac(@117,@388,@116) */
  for (i=0, rr=w116; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w117+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1931: @116 = @116' */
  /* #1932: (@8[72:76] += @116) */
  for (rr=w8+72, ss=w116; rr!=w8+76; rr+=1) *rr += *ss++;
  /* #1933: @110 = @110' */
  /* #1934: @110 = (@110*@0) */
  for (i=0, rr=w110; i<4; ++i) (*rr++) *= w0;
  /* #1935: (@8[68:72] += @110) */
  for (rr=w8+68, ss=w110; rr!=w8+72; rr+=1) *rr += *ss++;
  /* #1936: @110 = zeros(1x4) */
  casadi_clear(w110, 4);
  /* #1937: @111 = @111' */
  /* #1938: @111 = (@0*@111) */
  for (i=0, rr=w111, cs=w111; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1939: @388 = @112' */
  for (i=0, rr=w388, cs=w112; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1940: @110 = mac(@111,@388,@110) */
  for (i=0, rr=w110; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w111+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1941: @110 = @110' */
  /* #1942: (@8[68:72] += @110) */
  for (rr=w8+68, ss=w110; rr!=w8+72; rr+=1) *rr += *ss++;
  /* #1943: @104 = @104' */
  /* #1944: @104 = (@104*@0) */
  for (i=0, rr=w104; i<4; ++i) (*rr++) *= w0;
  /* #1945: (@8[64:68] += @104) */
  for (rr=w8+64, ss=w104; rr!=w8+68; rr+=1) *rr += *ss++;
  /* #1946: @104 = zeros(1x4) */
  casadi_clear(w104, 4);
  /* #1947: @105 = @105' */
  /* #1948: @105 = (@0*@105) */
  for (i=0, rr=w105, cs=w105; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1949: @388 = @106' */
  for (i=0, rr=w388, cs=w106; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1950: @104 = mac(@105,@388,@104) */
  for (i=0, rr=w104; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w105+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1951: @104 = @104' */
  /* #1952: (@8[64:68] += @104) */
  for (rr=w8+64, ss=w104; rr!=w8+68; rr+=1) *rr += *ss++;
  /* #1953: @98 = @98' */
  /* #1954: @98 = (@98*@0) */
  for (i=0, rr=w98; i<4; ++i) (*rr++) *= w0;
  /* #1955: (@8[60:64] += @98) */
  for (rr=w8+60, ss=w98; rr!=w8+64; rr+=1) *rr += *ss++;
  /* #1956: @98 = zeros(1x4) */
  casadi_clear(w98, 4);
  /* #1957: @99 = @99' */
  /* #1958: @99 = (@0*@99) */
  for (i=0, rr=w99, cs=w99; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1959: @388 = @100' */
  for (i=0, rr=w388, cs=w100; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1960: @98 = mac(@99,@388,@98) */
  for (i=0, rr=w98; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w99+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1961: @98 = @98' */
  /* #1962: (@8[60:64] += @98) */
  for (rr=w8+60, ss=w98; rr!=w8+64; rr+=1) *rr += *ss++;
  /* #1963: @92 = @92' */
  /* #1964: @92 = (@92*@0) */
  for (i=0, rr=w92; i<4; ++i) (*rr++) *= w0;
  /* #1965: (@8[56:60] += @92) */
  for (rr=w8+56, ss=w92; rr!=w8+60; rr+=1) *rr += *ss++;
  /* #1966: @92 = zeros(1x4) */
  casadi_clear(w92, 4);
  /* #1967: @93 = @93' */
  /* #1968: @93 = (@0*@93) */
  for (i=0, rr=w93, cs=w93; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1969: @388 = @94' */
  for (i=0, rr=w388, cs=w94; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1970: @92 = mac(@93,@388,@92) */
  for (i=0, rr=w92; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w93+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1971: @92 = @92' */
  /* #1972: (@8[56:60] += @92) */
  for (rr=w8+56, ss=w92; rr!=w8+60; rr+=1) *rr += *ss++;
  /* #1973: @86 = @86' */
  /* #1974: @86 = (@86*@0) */
  for (i=0, rr=w86; i<4; ++i) (*rr++) *= w0;
  /* #1975: (@8[52:56] += @86) */
  for (rr=w8+52, ss=w86; rr!=w8+56; rr+=1) *rr += *ss++;
  /* #1976: @86 = zeros(1x4) */
  casadi_clear(w86, 4);
  /* #1977: @87 = @87' */
  /* #1978: @87 = (@0*@87) */
  for (i=0, rr=w87, cs=w87; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1979: @388 = @88' */
  for (i=0, rr=w388, cs=w88; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1980: @86 = mac(@87,@388,@86) */
  for (i=0, rr=w86; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w87+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1981: @86 = @86' */
  /* #1982: (@8[52:56] += @86) */
  for (rr=w8+52, ss=w86; rr!=w8+56; rr+=1) *rr += *ss++;
  /* #1983: @80 = @80' */
  /* #1984: @80 = (@80*@0) */
  for (i=0, rr=w80; i<4; ++i) (*rr++) *= w0;
  /* #1985: (@8[48:52] += @80) */
  for (rr=w8+48, ss=w80; rr!=w8+52; rr+=1) *rr += *ss++;
  /* #1986: @80 = zeros(1x4) */
  casadi_clear(w80, 4);
  /* #1987: @81 = @81' */
  /* #1988: @81 = (@0*@81) */
  for (i=0, rr=w81, cs=w81; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1989: @388 = @82' */
  for (i=0, rr=w388, cs=w82; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #1990: @80 = mac(@81,@388,@80) */
  for (i=0, rr=w80; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w81+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #1991: @80 = @80' */
  /* #1992: (@8[48:52] += @80) */
  for (rr=w8+48, ss=w80; rr!=w8+52; rr+=1) *rr += *ss++;
  /* #1993: @74 = @74' */
  /* #1994: @74 = (@74*@0) */
  for (i=0, rr=w74; i<4; ++i) (*rr++) *= w0;
  /* #1995: (@8[44:48] += @74) */
  for (rr=w8+44, ss=w74; rr!=w8+48; rr+=1) *rr += *ss++;
  /* #1996: @74 = zeros(1x4) */
  casadi_clear(w74, 4);
  /* #1997: @75 = @75' */
  /* #1998: @75 = (@0*@75) */
  for (i=0, rr=w75, cs=w75; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #1999: @388 = @76' */
  for (i=0, rr=w388, cs=w76; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2000: @74 = mac(@75,@388,@74) */
  for (i=0, rr=w74; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w75+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2001: @74 = @74' */
  /* #2002: (@8[44:48] += @74) */
  for (rr=w8+44, ss=w74; rr!=w8+48; rr+=1) *rr += *ss++;
  /* #2003: @68 = @68' */
  /* #2004: @68 = (@68*@0) */
  for (i=0, rr=w68; i<4; ++i) (*rr++) *= w0;
  /* #2005: (@8[40:44] += @68) */
  for (rr=w8+40, ss=w68; rr!=w8+44; rr+=1) *rr += *ss++;
  /* #2006: @68 = zeros(1x4) */
  casadi_clear(w68, 4);
  /* #2007: @69 = @69' */
  /* #2008: @69 = (@0*@69) */
  for (i=0, rr=w69, cs=w69; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2009: @388 = @70' */
  for (i=0, rr=w388, cs=w70; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2010: @68 = mac(@69,@388,@68) */
  for (i=0, rr=w68; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w69+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2011: @68 = @68' */
  /* #2012: (@8[40:44] += @68) */
  for (rr=w8+40, ss=w68; rr!=w8+44; rr+=1) *rr += *ss++;
  /* #2013: @62 = @62' */
  /* #2014: @62 = (@62*@0) */
  for (i=0, rr=w62; i<4; ++i) (*rr++) *= w0;
  /* #2015: (@8[36:40] += @62) */
  for (rr=w8+36, ss=w62; rr!=w8+40; rr+=1) *rr += *ss++;
  /* #2016: @62 = zeros(1x4) */
  casadi_clear(w62, 4);
  /* #2017: @63 = @63' */
  /* #2018: @63 = (@0*@63) */
  for (i=0, rr=w63, cs=w63; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2019: @388 = @64' */
  for (i=0, rr=w388, cs=w64; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2020: @62 = mac(@63,@388,@62) */
  for (i=0, rr=w62; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w63+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2021: @62 = @62' */
  /* #2022: (@8[36:40] += @62) */
  for (rr=w8+36, ss=w62; rr!=w8+40; rr+=1) *rr += *ss++;
  /* #2023: @56 = @56' */
  /* #2024: @56 = (@56*@0) */
  for (i=0, rr=w56; i<4; ++i) (*rr++) *= w0;
  /* #2025: (@8[32:36] += @56) */
  for (rr=w8+32, ss=w56; rr!=w8+36; rr+=1) *rr += *ss++;
  /* #2026: @56 = zeros(1x4) */
  casadi_clear(w56, 4);
  /* #2027: @57 = @57' */
  /* #2028: @57 = (@0*@57) */
  for (i=0, rr=w57, cs=w57; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2029: @388 = @58' */
  for (i=0, rr=w388, cs=w58; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2030: @56 = mac(@57,@388,@56) */
  for (i=0, rr=w56; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w57+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2031: @56 = @56' */
  /* #2032: (@8[32:36] += @56) */
  for (rr=w8+32, ss=w56; rr!=w8+36; rr+=1) *rr += *ss++;
  /* #2033: @50 = @50' */
  /* #2034: @50 = (@50*@0) */
  for (i=0, rr=w50; i<4; ++i) (*rr++) *= w0;
  /* #2035: (@8[28:32] += @50) */
  for (rr=w8+28, ss=w50; rr!=w8+32; rr+=1) *rr += *ss++;
  /* #2036: @50 = zeros(1x4) */
  casadi_clear(w50, 4);
  /* #2037: @51 = @51' */
  /* #2038: @51 = (@0*@51) */
  for (i=0, rr=w51, cs=w51; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2039: @388 = @52' */
  for (i=0, rr=w388, cs=w52; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2040: @50 = mac(@51,@388,@50) */
  for (i=0, rr=w50; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w51+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2041: @50 = @50' */
  /* #2042: (@8[28:32] += @50) */
  for (rr=w8+28, ss=w50; rr!=w8+32; rr+=1) *rr += *ss++;
  /* #2043: @44 = @44' */
  /* #2044: @44 = (@44*@0) */
  for (i=0, rr=w44; i<4; ++i) (*rr++) *= w0;
  /* #2045: (@8[24:28] += @44) */
  for (rr=w8+24, ss=w44; rr!=w8+28; rr+=1) *rr += *ss++;
  /* #2046: @44 = zeros(1x4) */
  casadi_clear(w44, 4);
  /* #2047: @45 = @45' */
  /* #2048: @45 = (@0*@45) */
  for (i=0, rr=w45, cs=w45; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2049: @388 = @46' */
  for (i=0, rr=w388, cs=w46; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2050: @44 = mac(@45,@388,@44) */
  for (i=0, rr=w44; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w45+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2051: @44 = @44' */
  /* #2052: (@8[24:28] += @44) */
  for (rr=w8+24, ss=w44; rr!=w8+28; rr+=1) *rr += *ss++;
  /* #2053: @38 = @38' */
  /* #2054: @38 = (@38*@0) */
  for (i=0, rr=w38; i<4; ++i) (*rr++) *= w0;
  /* #2055: (@8[20:24] += @38) */
  for (rr=w8+20, ss=w38; rr!=w8+24; rr+=1) *rr += *ss++;
  /* #2056: @38 = zeros(1x4) */
  casadi_clear(w38, 4);
  /* #2057: @39 = @39' */
  /* #2058: @39 = (@0*@39) */
  for (i=0, rr=w39, cs=w39; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2059: @388 = @40' */
  for (i=0, rr=w388, cs=w40; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2060: @38 = mac(@39,@388,@38) */
  for (i=0, rr=w38; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w39+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2061: @38 = @38' */
  /* #2062: (@8[20:24] += @38) */
  for (rr=w8+20, ss=w38; rr!=w8+24; rr+=1) *rr += *ss++;
  /* #2063: @32 = @32' */
  /* #2064: @32 = (@32*@0) */
  for (i=0, rr=w32; i<4; ++i) (*rr++) *= w0;
  /* #2065: (@8[16:20] += @32) */
  for (rr=w8+16, ss=w32; rr!=w8+20; rr+=1) *rr += *ss++;
  /* #2066: @32 = zeros(1x4) */
  casadi_clear(w32, 4);
  /* #2067: @33 = @33' */
  /* #2068: @33 = (@0*@33) */
  for (i=0, rr=w33, cs=w33; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2069: @388 = @34' */
  for (i=0, rr=w388, cs=w34; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2070: @32 = mac(@33,@388,@32) */
  for (i=0, rr=w32; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w33+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2071: @32 = @32' */
  /* #2072: (@8[16:20] += @32) */
  for (rr=w8+16, ss=w32; rr!=w8+20; rr+=1) *rr += *ss++;
  /* #2073: @26 = @26' */
  /* #2074: @26 = (@26*@0) */
  for (i=0, rr=w26; i<4; ++i) (*rr++) *= w0;
  /* #2075: (@8[12:16] += @26) */
  for (rr=w8+12, ss=w26; rr!=w8+16; rr+=1) *rr += *ss++;
  /* #2076: @26 = zeros(1x4) */
  casadi_clear(w26, 4);
  /* #2077: @27 = @27' */
  /* #2078: @27 = (@0*@27) */
  for (i=0, rr=w27, cs=w27; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2079: @388 = @28' */
  for (i=0, rr=w388, cs=w28; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2080: @26 = mac(@27,@388,@26) */
  for (i=0, rr=w26; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w27+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2081: @26 = @26' */
  /* #2082: (@8[12:16] += @26) */
  for (rr=w8+12, ss=w26; rr!=w8+16; rr+=1) *rr += *ss++;
  /* #2083: @20 = @20' */
  /* #2084: @20 = (@20*@0) */
  for (i=0, rr=w20; i<4; ++i) (*rr++) *= w0;
  /* #2085: (@8[8:12] += @20) */
  for (rr=w8+8, ss=w20; rr!=w8+12; rr+=1) *rr += *ss++;
  /* #2086: @20 = zeros(1x4) */
  casadi_clear(w20, 4);
  /* #2087: @21 = @21' */
  /* #2088: @21 = (@0*@21) */
  for (i=0, rr=w21, cs=w21; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2089: @388 = @22' */
  for (i=0, rr=w388, cs=w22; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2090: @20 = mac(@21,@388,@20) */
  for (i=0, rr=w20; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w21+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2091: @20 = @20' */
  /* #2092: (@8[8:12] += @20) */
  for (rr=w8+8, ss=w20; rr!=w8+12; rr+=1) *rr += *ss++;
  /* #2093: @14 = @14' */
  /* #2094: @14 = (@14*@0) */
  for (i=0, rr=w14; i<4; ++i) (*rr++) *= w0;
  /* #2095: (@8[4:8] += @14) */
  for (rr=w8+4, ss=w14; rr!=w8+8; rr+=1) *rr += *ss++;
  /* #2096: @14 = zeros(1x4) */
  casadi_clear(w14, 4);
  /* #2097: @15 = @15' */
  /* #2098: @15 = (@0*@15) */
  for (i=0, rr=w15, cs=w15; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2099: @388 = @16' */
  for (i=0, rr=w388, cs=w16; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2100: @14 = mac(@15,@388,@14) */
  for (i=0, rr=w14; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w15+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2101: @14 = @14' */
  /* #2102: (@8[4:8] += @14) */
  for (rr=w8+4, ss=w14; rr!=w8+8; rr+=1) *rr += *ss++;
  /* #2103: @7 = @7' */
  /* #2104: @7 = (@7*@0) */
  for (i=0, rr=w7; i<4; ++i) (*rr++) *= w0;
  /* #2105: (@8[:4] += @7) */
  for (rr=w8+0, ss=w7; rr!=w8+4; rr+=1) *rr += *ss++;
  /* #2106: @7 = zeros(1x4) */
  casadi_clear(w7, 4);
  /* #2107: @9 = @9' */
  /* #2108: @9 = (@0*@9) */
  for (i=0, rr=w9, cs=w9; i<4; ++i) (*rr++)  = (w0*(*cs++));
  /* #2109: @388 = @10' */
  for (i=0, rr=w388, cs=w10; i<4; ++i) for (j=0; j<4; ++j) rr[i+j*4] = *cs++;
  /* #2110: @7 = mac(@9,@388,@7) */
  for (i=0, rr=w7; i<4; ++i) for (j=0; j<1; ++j, ++rr) for (k=0, ss=w9+j, tt=w388+i*4; k<4; ++k) *rr += ss[k*1]**tt++;
  /* #2111: @7 = @7' */
  /* #2112: (@8[:4] += @7) */
  for (rr=w8+0, ss=w7; rr!=w8+4; rr+=1) *rr += *ss++;
  /* #2113: output[2][1] = @8 */
  if (res[2]) casadi_copy(w8, 100, res[2]+364);
  /* #2114: @158 = zeros(14x1) */
  casadi_clear(w158, 14);
  /* #2115: output[3][0] = @158 */
  casadi_copy(w158, 14, res[3]);
  return 0;
}

/* qpsol:(h[464x464,5496nz],g[464],a[564x464,1389nz],lba[564],uba[564],lbx[464],ubx[464],x0[464],lam_x0[464],lam_a0[564],q[],p[])->(x[464],cost,lam_a[564],lam_x[464]) */
static int casadi_f28(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  int flag;
  struct casadi_qp_data d_qp;
  struct casadi_qp_prob p_qp;
  struct casadi_qrqp_data d;
  struct casadi_qrqp_prob p;
  d_qp.prob = &p_qp;
  p_qp.sp_a = casadi_s61;
  p_qp.sp_h = casadi_s91;
  casadi_qp_setup(&p_qp);
  casadi_qp_init(&d_qp, &iw, &w);
  d_qp.h = arg[0];
  d_qp.g = arg[1];
  d_qp.a = arg[2];
  d_qp.lbx = arg[5];
  d_qp.ubx = arg[6];
  d_qp.lba = arg[3];
  d_qp.uba = arg[4];
  d_qp.x0 = arg[7];
  d_qp.lam_x0 = arg[8];
  d_qp.lam_a0 = arg[9];
  d_qp.f = res[1];
  d_qp.x = res[0];
  d_qp.lam_x = res[3];
  d_qp.lam_a = res[2];
  p.qp = &p_qp;
  p.sp_at = casadi_s62;
  p.sp_kkt = casadi_s92;
  p.sp_v = casadi_s93;
  p.sp_r = casadi_s94;
  p.prinv = casadi_s95;
  p.pc =  casadi_s96;
  casadi_qrqp_setup(&p);
  p.max_iter = 1000;
  p.min_lam = 0;
  p.constr_viol_tol = 1e-08;
  p.dual_inf_tol = 1e-08;
  d.prob = &p;
  d.qp = &d_qp;
  casadi_qrqp_init(&d, &iw, &w);
  /* Pass bounds on z */
  if (arg[5]) {
    casadi_copy(arg[5], 464, d.lbz);
  } else {
    casadi_fill(d.lbz, 464, -casadi_inf);
  }
  if (arg[3]) {
    casadi_copy(arg[3], 564, d.lbz+464);
  } else {
    casadi_fill(d.lbz+464, 564, -casadi_inf);
  }
  if (arg[6]) {
    casadi_copy(arg[6], 464, d.ubz);
  } else {
    casadi_fill(d.ubz, 464, casadi_inf);
  }
  if (arg[4]) {
    casadi_copy(arg[4], 564, d.ubz+464);
  } else {
    casadi_fill(d.ubz+464, 564, casadi_inf);
  }
  /* Pass initial guess */
  if (arg[7]) {
    casadi_copy(arg[7], 464, d.z);
  } else {
    casadi_clear(d.z, 464);
  }
  casadi_fill(d.z+464, 564, casadi_nan);
  if (arg[8]) {
    casadi_copy(arg[8], 464, d.lam);
  } else {
    casadi_clear(d.lam, 464);
  }
  if (arg[9]) {
    casadi_copy(arg[9], 564, d.lam+464);
  } else {
    casadi_clear(d.lam+464, 564);
  }
  /* Solve QP */
  if (casadi_qrqp_reset(&d)) return 1;
  while (1) {
    flag = casadi_qrqp_prepare(&d);
    if (flag || casadi_qrqp_iterate(&d)) break;
  }
  /* Get solution */
  if (res[1]) casadi_copy(&d.f, 1, res[1]);
  if (res[0]) casadi_copy(d.z, 464, res[0]);
  if (res[3]) casadi_copy(d.lam, 464, res[3]);
  if (res[2]) casadi_copy(d.lam+464, 564, res[2]);
  if (d.status == QP_SUCCESS) {;
    return 0;
  } else if (d.status == QP_NO_SEARCH_DIR) {
    return 4;
  } else {
    return -1;
  }
  return 0;
}

/* solver:(x0[464],p[14],lbx[464],ubx[464],lbg[564],ubg[564],lam_x0[464],lam_g0[564])->(x[464],f,g[564],lam_x[464],lam_g[564],lam_p[14]) */
static int casadi_f1(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int iter_count=0, ls_iter=0, *m_iw;
  casadi_real F_sens, du_inf, dx_norminf, fk_cand, l1, l1_cand, l1_infeas, m_f, **m_res=res+6, *m_w, pr_inf, sigma=0.0, t=0.0, tl1;
  const casadi_real **m_arg=arg+8, *m_p=arg[1], one=1;
  int ret;
  struct casadi_nlpsol_data d_nlp;
  struct casadi_nlpsol_prob p_nlp;
  struct casadi_sqpmethod_data d;
  struct casadi_sqpmethod_prob p;
  d_nlp.prob = &p_nlp;
  p_nlp.nx = 464;
  p_nlp.ng = 564;
  p_nlp.np = 14;
  p_nlp.detect_bounds.ng = 0;
  casadi_nlpsol_init(&d_nlp, &arg, &res, &iw, &w);
  d_nlp.p = arg[1];
  d_nlp.lbx = arg[2];
  d_nlp.ubx = arg[3];
  d_nlp.lbg = arg[4];
  d_nlp.ubg = arg[5];
  d_nlp.x0 = arg[0];
  d_nlp.lam_x0 = arg[6];
  d_nlp.lam_g0 = arg[7];
  d_nlp.x = res[0];
  d_nlp.f = res[1];
  d_nlp.g = res[2];
  d_nlp.lam_x = res[3];
  d_nlp.lam_g = res[4];
  d_nlp.lam_p = res[5];
  if (d_nlp.x0) {
    casadi_copy(d_nlp.x0, 464, d_nlp.z);
  } else {
    casadi_clear(d_nlp.z, 464);
  }
  if (d_nlp.lam_x0) {
    casadi_copy(d_nlp.lam_x0, 464, d_nlp.lam);
  } else {
    casadi_clear(d_nlp.lam, 464);
  }
  if (d_nlp.lam_g0) {
    casadi_copy(d_nlp.lam_g0, 564, d_nlp.lam+464);
  } else {
    casadi_clear(d_nlp.lam+464, 564);
  }
  if (d_nlp.lbx) {
    casadi_copy(d_nlp.lbx, 464, d_nlp.lbz);
  } else {
    casadi_fill(d_nlp.lbz, 464, -casadi_inf);
  }
  if (d_nlp.ubx) {
    casadi_copy(d_nlp.ubx, 464, d_nlp.ubz);
  } else {
    casadi_fill(d_nlp.ubz, 464, casadi_inf);
  }
  if (d_nlp.lbg) {
    casadi_copy(d_nlp.lbg, 564, d_nlp.lbz+464);
  } else {
    casadi_fill(d_nlp.lbz+464, 564, -casadi_inf);
  }
  if (d_nlp.ubg) {
    casadi_copy(d_nlp.ubg, 564, d_nlp.ubz+464);
  } else {
    casadi_fill(d_nlp.ubz+464, 564, casadi_inf);
  }
  d.prob = &p;
  p.sp_h = casadi_s91;
  p.sp_a = casadi_s61;
  p.merit_memsize = 4;
  p.max_iter_ls = 3;
  p.nlp = &p_nlp;
  casadi_sqpmethod_init(&d, &iw, &w, 0, 0);
  m_w = w;
  m_iw = iw;
  casadi_clear(d.dx, 464);
  /* MAIN OPTIMIZATION LOOP */
  while (1) {
    /* Evaluate f, g and first order derivative information */
    m_arg[0] = d_nlp.z;
    m_arg[1] = m_p;
    m_res[0] = &m_f;
    m_res[1] = d.gf;
    m_res[2] = d_nlp.z+464;
    m_res[3] = d.Jk;
    if (casadi_f7(m_arg, m_res, m_iw, m_w, 0)) return 1;
    /* Evaluate the gradient of the Lagrangian */
    casadi_copy(d.gf, 464, d.gLag);
    casadi_mv(d.Jk, casadi_s61, d_nlp.lam+464, d.gLag, 1);
    casadi_axpy(464, 1.0, d_nlp.lam, d.gLag);
    /* Primal infeasability */
    pr_inf = casadi_max_viol(1028, d_nlp.z, d_nlp.lbz, d_nlp.ubz);
    /* inf-norm of lagrange gradient */
    du_inf = casadi_norm_inf(464, d.gLag);
    /* inf-norm of step */
    dx_norminf = casadi_norm_inf(464, d.dx);
    /* Checking convergence criteria */
    if (iter_count >= 0 && pr_inf < 1e-06 && du_inf < 1e-06) break;
    if (iter_count >= 50) break;
    if (iter_count >= 1 && iter_count >= 0 && dx_norminf <= 1e-10) break;
    /* Update/reset exact Hessian */
    m_arg[0] = d_nlp.z;
    m_arg[1] = m_p;
    m_arg[2] = &one;
    m_arg[3] = d_nlp.lam+464;
    m_res[0] = d.Bk;
    if (casadi_f16(m_arg, m_res, m_iw, m_w, 0)) return 1;
    /* Formulate the QP */
    casadi_copy(d_nlp.lbz, 1028, d.lbdz);
    casadi_axpy(1028, -1.0, d_nlp.z, d.lbdz);
    casadi_copy(d_nlp.ubz, 1028, d.ubdz);
    casadi_axpy(1028, -1.0, d_nlp.z, d.ubdz);
    /* Initial guess */
    casadi_copy(d_nlp.lam, 1028, d.dlam);
    casadi_clear(d.dx, 464);
    /* Increase counter */
    iter_count++;
    /* Solve the QP */
    m_arg[0] = 0;
    m_arg[1] = 0;
    m_arg[2] = 0;
    m_arg[3] = 0;
    m_arg[4] = 0;
    m_arg[5] = 0;
    m_arg[6] = 0;
    m_arg[7] = 0;
    m_arg[8] = 0;
    m_arg[9] = 0;
    m_arg[10] = 0;
    m_arg[11] = 0;
    m_arg[0] = d.Bk;
    m_arg[1] = d.gf;
    m_arg[7] = d.dx;
    m_arg[8] = d.dlam;
    m_arg[9] = d.dlam+464;
    m_arg[5] = d.lbdz;
    m_arg[6] = d.ubdz;
    m_arg[2] = d.Jk;
    m_arg[3] = d.lbdz+464;
    m_arg[4] = d.ubdz+464;
    m_res[0] = 0;
    m_res[1] = 0;
    m_res[2] = 0;
    m_res[3] = 0;
    m_res[0] = d.dx;
    m_res[3] = d.dlam;
    m_res[2] = d.dlam+464;
    ret = casadi_f28(m_arg, m_res, m_iw, m_w, 0);
    if (ret == -1000) return -1000;
    /* Calculate penalty parameter of merit function */
    sigma = casadi_fmax(sigma, (1.01*casadi_norm_inf(1028, d.dlam)));;
    /* Calculate L1-merit function in the actual iterate */
    l1_infeas = casadi_sum_viol(1028, d_nlp.z, d_nlp.lbz, d_nlp.ubz);
    l1 = m_f + sigma * l1_infeas;
    /* Detecting indefiniteness */
    /* Right-hand side of Armijo condition */
    F_sens = casadi_dot(464, d.dx, d.gf);
    tl1 = F_sens - sigma * l1_infeas;
    /* Stepsize */
    t = 1.0;
    /* Merit function value in candidate */
    l1_cand = 0.0;
    /* Reset line-search counter, success marker */
    ls_iter = 0;
    /* Line-search loop */
    while (1) {
      /*  Increase counter */
      ls_iter++;
      /* Candidate step */
      casadi_copy(d_nlp.z, 464, d.z_cand);
      casadi_axpy(464, t, d.dx, d.z_cand);
      /* Evaluating objective and constraints */
      m_arg[0] = d.z_cand;
      m_arg[1] = m_p;
      m_res[0] = &fk_cand;
      m_res[1] = d.z_cand+464;
      if (casadi_f2(m_arg, m_res, m_iw, m_w, 0)) {
        /* Avoid infinite recursion */
        if (ls_iter == 3) {
          break;
        }
        /* line-search failed, skip iteration */
        t = 0.8* t;
        continue;
      }
      /* Calculating merit-function in candidate */
      l1_cand = fk_cand + sigma * casadi_sum_viol(1028, d.z_cand, d_nlp.lbz, d_nlp.ubz);
      if (l1_cand <= l1 + t * 0.0001* tl1) {
        break;
      }
      /* Line-search not successful, but we accept it. */
      if (ls_iter == 3) {
        break;
      }
      /* Backtracking */
      t = 0.8* t;
    }
    /* Candidate accepted, update dual variables */
    casadi_scal(1028, 1-t, d_nlp.lam);
    casadi_axpy(1028, t, d.dlam, d_nlp.lam);
    casadi_scal(464, t, d.dx);
    /* Take step */
    casadi_axpy(464, 1.0, d.dx, d_nlp.z);
  }
  m_arg[0] = d_nlp.z;
  m_arg[1] = m_p;
  m_arg[2] = &one;
  m_arg[3] = d_nlp.lam+464;
  m_res[0] = 0;
  m_res[1] = 0;
  m_res[2] = 0;
  m_res[3] = d_nlp.lam_p;
  if (casadi_f25(m_arg, m_res, m_iw, m_w, 0)) return 1;
  casadi_scal(14, -1.0, d_nlp.lam_p);
  if (res[0]) casadi_copy(d_nlp.z, 464, res[0]);
  if (res[2]) casadi_copy(d_nlp.z+464, 564, res[2]);
  if (res[3]) casadi_copy(d_nlp.lam, 464, res[3]);
  if (res[4]) casadi_copy(d_nlp.lam+464, 564, res[4]);
  if (res[5]) casadi_copy(d_nlp.lam_p, 14, res[5]);
  if (res[1]) casadi_copy(&m_f, 1, res[1]);
  return 0;
}

/* helper:(i0[464],i1[14],i2[564])->(o0[4x25],o1[14x26]) */
static int casadi_f29(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real *w0=w+0, *w1=w+100;
  /* #0: @0 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+364 : 0, 100, w0);
  /* #1: output[0][0] = @0 */
  casadi_copy(w0, 100, res[0]);
  /* #2: @1 = input[0][0] */
  casadi_copy(arg[0], 364, w1);
  /* #3: output[1][0] = @1 */
  casadi_copy(w1, 364, res[1]);
  return 0;
}

/* F:(xx0[14],uu[4x25],xx[14x26])->(uu_opt[4x25],xx_pred[14x26]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i;
  casadi_real **res1=res+2, *rr;
  const casadi_real **arg1=arg+3, *cs;
  casadi_real *w0=w+77445, *w1=w+77809, *w2=w+77909, *w3=w+78373, *w4=w+78387, *w5=w+78851, *w6=w+79315, w7, w8, *w9=w+79331, *w10=w+79334, *w11=w+79337, w12, w13, *w14=w+79353, *w15=w+79356, *w16=w+79359, w17, w18, *w19=w+79375, *w20=w+79378, *w21=w+79381, w22, w23, *w24=w+79397, *w25=w+79400, *w26=w+79403, w27, w28, *w29=w+79419, *w30=w+79422, *w31=w+79425, w32, w33, *w34=w+79441, *w35=w+79444, *w36=w+79447, w37, w38, *w39=w+79463, *w40=w+79466, *w41=w+79469, w42, w43, *w44=w+79485, *w45=w+79488, *w46=w+79491, w47, w48, *w49=w+79507, *w50=w+79510, *w51=w+79513, w52, w53, *w54=w+79529, *w55=w+79532, *w56=w+79535, w57, w58, *w59=w+79551, *w60=w+79554, *w61=w+79557, w62, w63, *w64=w+79573, *w65=w+79576, *w66=w+79579, w67, w68, *w69=w+79595, *w70=w+79598, *w71=w+79601, w72, w73, *w74=w+79617, *w75=w+79620, *w76=w+79623, w77, w78, *w79=w+79639, *w80=w+79642, *w81=w+79645, w82, w83, *w84=w+79661, *w85=w+79664, *w86=w+79667, w87, w88, *w89=w+79683, *w90=w+79686, *w91=w+79689, w92, w93, *w94=w+79705, *w95=w+79708, *w96=w+79711, w97, w98, *w99=w+79727, *w100=w+79730, *w101=w+79733, w102, w103, *w104=w+79749, *w105=w+79752, *w106=w+79755, w107, w108, *w109=w+79771, *w110=w+79774, *w111=w+79777, w112, w113, *w114=w+79793, *w115=w+79796, *w116=w+79799, w117, w118, *w119=w+79815, *w120=w+79818, *w121=w+79821, w122, w123, *w124=w+79837, *w125=w+79840, *w126=w+79843, w127, w128, *w129=w+79859, *w130=w+79862, *w131=w+79865, *w132=w+80429, *w133=w+80993, *w134=w+81457, *w135=w+82021, *w136=w+82485;
  /* #0: @0 = input[2][0] */
  casadi_copy(arg[2], 364, w0);
  /* #1: @0 = vec(@0) */
  /* #2: @1 = input[1][0] */
  casadi_copy(arg[1], 100, w1);
  /* #3: @1 = vec(@1) */
  /* #4: @2 = vertcat(@0, @1) */
  rr=w2;
  for (i=0, cs=w0; i<364; ++i) *rr++ = *cs++;
  for (i=0, cs=w1; i<100; ++i) *rr++ = *cs++;
  /* #5: @3 = input[0][0] */
  casadi_copy(arg[0], 14, w3);
  /* #6: @4 = -inf(464x1) */
  casadi_fill(w4, 464, -casadi_inf);
  /* #7: @5 = inf(464x1) */
  casadi_fill(w5, 464, casadi_inf);
  /* #8: @6 = zeros(14x1) */
  casadi_clear(w6, 14);
  /* #9: @7 = -0.5 */
  w7 = -5.0000000000000000e-01;
  /* #10: @8 = -inf */
  w8 = -casadi_inf;
  /* #11: @9 = all_-8.5(3x1) */
  casadi_fill(w9, 3, -8.5000000000000000e+00);
  /* #12: @10 = all_-3(3x1) */
  casadi_fill(w10, 3, -3.);
  /* #13: @11 = zeros(14x1) */
  casadi_clear(w11, 14);
  /* #14: @12 = -0.5 */
  w12 = -5.0000000000000000e-01;
  /* #15: @13 = -inf */
  w13 = -casadi_inf;
  /* #16: @14 = all_-8.5(3x1) */
  casadi_fill(w14, 3, -8.5000000000000000e+00);
  /* #17: @15 = all_-3(3x1) */
  casadi_fill(w15, 3, -3.);
  /* #18: @16 = zeros(14x1) */
  casadi_clear(w16, 14);
  /* #19: @17 = -0.5 */
  w17 = -5.0000000000000000e-01;
  /* #20: @18 = -inf */
  w18 = -casadi_inf;
  /* #21: @19 = all_-8.5(3x1) */
  casadi_fill(w19, 3, -8.5000000000000000e+00);
  /* #22: @20 = all_-3(3x1) */
  casadi_fill(w20, 3, -3.);
  /* #23: @21 = zeros(14x1) */
  casadi_clear(w21, 14);
  /* #24: @22 = -0.5 */
  w22 = -5.0000000000000000e-01;
  /* #25: @23 = -inf */
  w23 = -casadi_inf;
  /* #26: @24 = all_-8.5(3x1) */
  casadi_fill(w24, 3, -8.5000000000000000e+00);
  /* #27: @25 = all_-3(3x1) */
  casadi_fill(w25, 3, -3.);
  /* #28: @26 = zeros(14x1) */
  casadi_clear(w26, 14);
  /* #29: @27 = -0.5 */
  w27 = -5.0000000000000000e-01;
  /* #30: @28 = -inf */
  w28 = -casadi_inf;
  /* #31: @29 = all_-8.5(3x1) */
  casadi_fill(w29, 3, -8.5000000000000000e+00);
  /* #32: @30 = all_-3(3x1) */
  casadi_fill(w30, 3, -3.);
  /* #33: @31 = zeros(14x1) */
  casadi_clear(w31, 14);
  /* #34: @32 = -0.5 */
  w32 = -5.0000000000000000e-01;
  /* #35: @33 = -inf */
  w33 = -casadi_inf;
  /* #36: @34 = all_-8.5(3x1) */
  casadi_fill(w34, 3, -8.5000000000000000e+00);
  /* #37: @35 = all_-3(3x1) */
  casadi_fill(w35, 3, -3.);
  /* #38: @36 = zeros(14x1) */
  casadi_clear(w36, 14);
  /* #39: @37 = -0.5 */
  w37 = -5.0000000000000000e-01;
  /* #40: @38 = -inf */
  w38 = -casadi_inf;
  /* #41: @39 = all_-8.5(3x1) */
  casadi_fill(w39, 3, -8.5000000000000000e+00);
  /* #42: @40 = all_-3(3x1) */
  casadi_fill(w40, 3, -3.);
  /* #43: @41 = zeros(14x1) */
  casadi_clear(w41, 14);
  /* #44: @42 = -0.5 */
  w42 = -5.0000000000000000e-01;
  /* #45: @43 = -inf */
  w43 = -casadi_inf;
  /* #46: @44 = all_-8.5(3x1) */
  casadi_fill(w44, 3, -8.5000000000000000e+00);
  /* #47: @45 = all_-3(3x1) */
  casadi_fill(w45, 3, -3.);
  /* #48: @46 = zeros(14x1) */
  casadi_clear(w46, 14);
  /* #49: @47 = -0.5 */
  w47 = -5.0000000000000000e-01;
  /* #50: @48 = -inf */
  w48 = -casadi_inf;
  /* #51: @49 = all_-8.5(3x1) */
  casadi_fill(w49, 3, -8.5000000000000000e+00);
  /* #52: @50 = all_-3(3x1) */
  casadi_fill(w50, 3, -3.);
  /* #53: @51 = zeros(14x1) */
  casadi_clear(w51, 14);
  /* #54: @52 = -0.5 */
  w52 = -5.0000000000000000e-01;
  /* #55: @53 = -inf */
  w53 = -casadi_inf;
  /* #56: @54 = all_-8.5(3x1) */
  casadi_fill(w54, 3, -8.5000000000000000e+00);
  /* #57: @55 = all_-3(3x1) */
  casadi_fill(w55, 3, -3.);
  /* #58: @56 = zeros(14x1) */
  casadi_clear(w56, 14);
  /* #59: @57 = -0.5 */
  w57 = -5.0000000000000000e-01;
  /* #60: @58 = -inf */
  w58 = -casadi_inf;
  /* #61: @59 = all_-8.5(3x1) */
  casadi_fill(w59, 3, -8.5000000000000000e+00);
  /* #62: @60 = all_-3(3x1) */
  casadi_fill(w60, 3, -3.);
  /* #63: @61 = zeros(14x1) */
  casadi_clear(w61, 14);
  /* #64: @62 = -0.5 */
  w62 = -5.0000000000000000e-01;
  /* #65: @63 = -inf */
  w63 = -casadi_inf;
  /* #66: @64 = all_-8.5(3x1) */
  casadi_fill(w64, 3, -8.5000000000000000e+00);
  /* #67: @65 = all_-3(3x1) */
  casadi_fill(w65, 3, -3.);
  /* #68: @66 = zeros(14x1) */
  casadi_clear(w66, 14);
  /* #69: @67 = -0.5 */
  w67 = -5.0000000000000000e-01;
  /* #70: @68 = -inf */
  w68 = -casadi_inf;
  /* #71: @69 = all_-8.5(3x1) */
  casadi_fill(w69, 3, -8.5000000000000000e+00);
  /* #72: @70 = all_-3(3x1) */
  casadi_fill(w70, 3, -3.);
  /* #73: @71 = zeros(14x1) */
  casadi_clear(w71, 14);
  /* #74: @72 = -0.5 */
  w72 = -5.0000000000000000e-01;
  /* #75: @73 = -inf */
  w73 = -casadi_inf;
  /* #76: @74 = all_-8.5(3x1) */
  casadi_fill(w74, 3, -8.5000000000000000e+00);
  /* #77: @75 = all_-3(3x1) */
  casadi_fill(w75, 3, -3.);
  /* #78: @76 = zeros(14x1) */
  casadi_clear(w76, 14);
  /* #79: @77 = -0.5 */
  w77 = -5.0000000000000000e-01;
  /* #80: @78 = -inf */
  w78 = -casadi_inf;
  /* #81: @79 = all_-8.5(3x1) */
  casadi_fill(w79, 3, -8.5000000000000000e+00);
  /* #82: @80 = all_-3(3x1) */
  casadi_fill(w80, 3, -3.);
  /* #83: @81 = zeros(14x1) */
  casadi_clear(w81, 14);
  /* #84: @82 = -0.5 */
  w82 = -5.0000000000000000e-01;
  /* #85: @83 = -inf */
  w83 = -casadi_inf;
  /* #86: @84 = all_-8.5(3x1) */
  casadi_fill(w84, 3, -8.5000000000000000e+00);
  /* #87: @85 = all_-3(3x1) */
  casadi_fill(w85, 3, -3.);
  /* #88: @86 = zeros(14x1) */
  casadi_clear(w86, 14);
  /* #89: @87 = -0.5 */
  w87 = -5.0000000000000000e-01;
  /* #90: @88 = -inf */
  w88 = -casadi_inf;
  /* #91: @89 = all_-8.5(3x1) */
  casadi_fill(w89, 3, -8.5000000000000000e+00);
  /* #92: @90 = all_-3(3x1) */
  casadi_fill(w90, 3, -3.);
  /* #93: @91 = zeros(14x1) */
  casadi_clear(w91, 14);
  /* #94: @92 = -0.5 */
  w92 = -5.0000000000000000e-01;
  /* #95: @93 = -inf */
  w93 = -casadi_inf;
  /* #96: @94 = all_-8.5(3x1) */
  casadi_fill(w94, 3, -8.5000000000000000e+00);
  /* #97: @95 = all_-3(3x1) */
  casadi_fill(w95, 3, -3.);
  /* #98: @96 = zeros(14x1) */
  casadi_clear(w96, 14);
  /* #99: @97 = -0.5 */
  w97 = -5.0000000000000000e-01;
  /* #100: @98 = -inf */
  w98 = -casadi_inf;
  /* #101: @99 = all_-8.5(3x1) */
  casadi_fill(w99, 3, -8.5000000000000000e+00);
  /* #102: @100 = all_-3(3x1) */
  casadi_fill(w100, 3, -3.);
  /* #103: @101 = zeros(14x1) */
  casadi_clear(w101, 14);
  /* #104: @102 = -0.5 */
  w102 = -5.0000000000000000e-01;
  /* #105: @103 = -inf */
  w103 = -casadi_inf;
  /* #106: @104 = all_-8.5(3x1) */
  casadi_fill(w104, 3, -8.5000000000000000e+00);
  /* #107: @105 = all_-3(3x1) */
  casadi_fill(w105, 3, -3.);
  /* #108: @106 = zeros(14x1) */
  casadi_clear(w106, 14);
  /* #109: @107 = -0.5 */
  w107 = -5.0000000000000000e-01;
  /* #110: @108 = -inf */
  w108 = -casadi_inf;
  /* #111: @109 = all_-8.5(3x1) */
  casadi_fill(w109, 3, -8.5000000000000000e+00);
  /* #112: @110 = all_-3(3x1) */
  casadi_fill(w110, 3, -3.);
  /* #113: @111 = zeros(14x1) */
  casadi_clear(w111, 14);
  /* #114: @112 = -0.5 */
  w112 = -5.0000000000000000e-01;
  /* #115: @113 = -inf */
  w113 = -casadi_inf;
  /* #116: @114 = all_-8.5(3x1) */
  casadi_fill(w114, 3, -8.5000000000000000e+00);
  /* #117: @115 = all_-3(3x1) */
  casadi_fill(w115, 3, -3.);
  /* #118: @116 = zeros(14x1) */
  casadi_clear(w116, 14);
  /* #119: @117 = -0.5 */
  w117 = -5.0000000000000000e-01;
  /* #120: @118 = -inf */
  w118 = -casadi_inf;
  /* #121: @119 = all_-8.5(3x1) */
  casadi_fill(w119, 3, -8.5000000000000000e+00);
  /* #122: @120 = all_-3(3x1) */
  casadi_fill(w120, 3, -3.);
  /* #123: @121 = zeros(14x1) */
  casadi_clear(w121, 14);
  /* #124: @122 = -0.5 */
  w122 = -5.0000000000000000e-01;
  /* #125: @123 = -inf */
  w123 = -casadi_inf;
  /* #126: @124 = all_-8.5(3x1) */
  casadi_fill(w124, 3, -8.5000000000000000e+00);
  /* #127: @125 = all_-3(3x1) */
  casadi_fill(w125, 3, -3.);
  /* #128: @126 = zeros(14x1) */
  casadi_clear(w126, 14);
  /* #129: @127 = -0.5 */
  w127 = -5.0000000000000000e-01;
  /* #130: @128 = -inf */
  w128 = -casadi_inf;
  /* #131: @129 = all_-8.5(3x1) */
  casadi_fill(w129, 3, -8.5000000000000000e+00);
  /* #132: @130 = all_-3(3x1) */
  casadi_fill(w130, 3, -3.);
  /* #133: @131 = vertcat(@6, @7, @8, @9, @10, @11, @12, @13, @14, @15, @16, @17, @18, @19, @20, @21, @22, @23, @24, @25, @26, @27, @28, @29, @30, @31, @32, @33, @34, @35, @36, @37, @38, @39, @40, @41, @42, @43, @44, @45, @46, @47, @48, @49, @50, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60, @61, @62, @63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79, @80, @81, @82, @83, @84, @85, @86, @87, @88, @89, @90, @91, @92, @93, @94, @95, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105, @106, @107, @108, @109, @110, @111, @112, @113, @114, @115, @116, @117, @118, @119, @120, @121, @122, @123, @124, @125, @126, @127, @128, @129, @130, @3) */
  rr=w131;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  *rr++ = w7;
  *rr++ = w8;
  for (i=0, cs=w9; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<14; ++i) *rr++ = *cs++;
  *rr++ = w12;
  *rr++ = w13;
  for (i=0, cs=w14; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  *rr++ = w17;
  *rr++ = w18;
  for (i=0, cs=w19; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w20; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w21; i<14; ++i) *rr++ = *cs++;
  *rr++ = w22;
  *rr++ = w23;
  for (i=0, cs=w24; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w25; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<14; ++i) *rr++ = *cs++;
  *rr++ = w27;
  *rr++ = w28;
  for (i=0, cs=w29; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  *rr++ = w32;
  *rr++ = w33;
  for (i=0, cs=w34; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w35; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<14; ++i) *rr++ = *cs++;
  *rr++ = w37;
  *rr++ = w38;
  for (i=0, cs=w39; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<14; ++i) *rr++ = *cs++;
  *rr++ = w42;
  *rr++ = w43;
  for (i=0, cs=w44; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<14; ++i) *rr++ = *cs++;
  *rr++ = w47;
  *rr++ = w48;
  for (i=0, cs=w49; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  *rr++ = w52;
  *rr++ = w53;
  for (i=0, cs=w54; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  *rr++ = w57;
  *rr++ = w58;
  for (i=0, cs=w59; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w61; i<14; ++i) *rr++ = *cs++;
  *rr++ = w62;
  *rr++ = w63;
  for (i=0, cs=w64; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<14; ++i) *rr++ = *cs++;
  *rr++ = w67;
  *rr++ = w68;
  for (i=0, cs=w69; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<14; ++i) *rr++ = *cs++;
  *rr++ = w72;
  *rr++ = w73;
  for (i=0, cs=w74; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<14; ++i) *rr++ = *cs++;
  *rr++ = w77;
  *rr++ = w78;
  for (i=0, cs=w79; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w80; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w81; i<14; ++i) *rr++ = *cs++;
  *rr++ = w82;
  *rr++ = w83;
  for (i=0, cs=w84; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w85; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w86; i<14; ++i) *rr++ = *cs++;
  *rr++ = w87;
  *rr++ = w88;
  for (i=0, cs=w89; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w90; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w91; i<14; ++i) *rr++ = *cs++;
  *rr++ = w92;
  *rr++ = w93;
  for (i=0, cs=w94; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w95; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w96; i<14; ++i) *rr++ = *cs++;
  *rr++ = w97;
  *rr++ = w98;
  for (i=0, cs=w99; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w100; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w101; i<14; ++i) *rr++ = *cs++;
  *rr++ = w102;
  *rr++ = w103;
  for (i=0, cs=w104; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w105; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w106; i<14; ++i) *rr++ = *cs++;
  *rr++ = w107;
  *rr++ = w108;
  for (i=0, cs=w109; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w110; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w111; i<14; ++i) *rr++ = *cs++;
  *rr++ = w112;
  *rr++ = w113;
  for (i=0, cs=w114; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w115; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w116; i<14; ++i) *rr++ = *cs++;
  *rr++ = w117;
  *rr++ = w118;
  for (i=0, cs=w119; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w120; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w121; i<14; ++i) *rr++ = *cs++;
  *rr++ = w122;
  *rr++ = w123;
  for (i=0, cs=w124; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w125; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w126; i<14; ++i) *rr++ = *cs++;
  *rr++ = w127;
  *rr++ = w128;
  for (i=0, cs=w129; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w130; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w3; i<14; ++i) *rr++ = *cs++;
  /* #134: @7 = inf */
  w7 = casadi_inf;
  /* #135: @8 = 0 */
  w8 = 0.;
  /* #136: @9 = all_8.5(3x1) */
  casadi_fill(w9, 3, 8.5000000000000000e+00);
  /* #137: @10 = all_3(3x1) */
  casadi_fill(w10, 3, 3.);
  /* #138: @12 = inf */
  w12 = casadi_inf;
  /* #139: @13 = 0 */
  w13 = 0.;
  /* #140: @14 = all_8.5(3x1) */
  casadi_fill(w14, 3, 8.5000000000000000e+00);
  /* #141: @15 = all_3(3x1) */
  casadi_fill(w15, 3, 3.);
  /* #142: @17 = inf */
  w17 = casadi_inf;
  /* #143: @18 = 0 */
  w18 = 0.;
  /* #144: @19 = all_8.5(3x1) */
  casadi_fill(w19, 3, 8.5000000000000000e+00);
  /* #145: @20 = all_3(3x1) */
  casadi_fill(w20, 3, 3.);
  /* #146: @22 = inf */
  w22 = casadi_inf;
  /* #147: @23 = 0 */
  w23 = 0.;
  /* #148: @24 = all_8.5(3x1) */
  casadi_fill(w24, 3, 8.5000000000000000e+00);
  /* #149: @25 = all_3(3x1) */
  casadi_fill(w25, 3, 3.);
  /* #150: @27 = inf */
  w27 = casadi_inf;
  /* #151: @28 = 0 */
  w28 = 0.;
  /* #152: @29 = all_8.5(3x1) */
  casadi_fill(w29, 3, 8.5000000000000000e+00);
  /* #153: @30 = all_3(3x1) */
  casadi_fill(w30, 3, 3.);
  /* #154: @32 = inf */
  w32 = casadi_inf;
  /* #155: @33 = 0 */
  w33 = 0.;
  /* #156: @34 = all_8.5(3x1) */
  casadi_fill(w34, 3, 8.5000000000000000e+00);
  /* #157: @35 = all_3(3x1) */
  casadi_fill(w35, 3, 3.);
  /* #158: @37 = inf */
  w37 = casadi_inf;
  /* #159: @38 = 0 */
  w38 = 0.;
  /* #160: @39 = all_8.5(3x1) */
  casadi_fill(w39, 3, 8.5000000000000000e+00);
  /* #161: @40 = all_3(3x1) */
  casadi_fill(w40, 3, 3.);
  /* #162: @42 = inf */
  w42 = casadi_inf;
  /* #163: @43 = 0 */
  w43 = 0.;
  /* #164: @44 = all_8.5(3x1) */
  casadi_fill(w44, 3, 8.5000000000000000e+00);
  /* #165: @45 = all_3(3x1) */
  casadi_fill(w45, 3, 3.);
  /* #166: @47 = inf */
  w47 = casadi_inf;
  /* #167: @48 = 0 */
  w48 = 0.;
  /* #168: @49 = all_8.5(3x1) */
  casadi_fill(w49, 3, 8.5000000000000000e+00);
  /* #169: @50 = all_3(3x1) */
  casadi_fill(w50, 3, 3.);
  /* #170: @52 = inf */
  w52 = casadi_inf;
  /* #171: @53 = 0 */
  w53 = 0.;
  /* #172: @54 = all_8.5(3x1) */
  casadi_fill(w54, 3, 8.5000000000000000e+00);
  /* #173: @55 = all_3(3x1) */
  casadi_fill(w55, 3, 3.);
  /* #174: @57 = inf */
  w57 = casadi_inf;
  /* #175: @58 = 0 */
  w58 = 0.;
  /* #176: @59 = all_8.5(3x1) */
  casadi_fill(w59, 3, 8.5000000000000000e+00);
  /* #177: @60 = all_3(3x1) */
  casadi_fill(w60, 3, 3.);
  /* #178: @62 = inf */
  w62 = casadi_inf;
  /* #179: @63 = 0 */
  w63 = 0.;
  /* #180: @64 = all_8.5(3x1) */
  casadi_fill(w64, 3, 8.5000000000000000e+00);
  /* #181: @65 = all_3(3x1) */
  casadi_fill(w65, 3, 3.);
  /* #182: @67 = inf */
  w67 = casadi_inf;
  /* #183: @68 = 0 */
  w68 = 0.;
  /* #184: @69 = all_8.5(3x1) */
  casadi_fill(w69, 3, 8.5000000000000000e+00);
  /* #185: @70 = all_3(3x1) */
  casadi_fill(w70, 3, 3.);
  /* #186: @72 = inf */
  w72 = casadi_inf;
  /* #187: @73 = 0 */
  w73 = 0.;
  /* #188: @74 = all_8.5(3x1) */
  casadi_fill(w74, 3, 8.5000000000000000e+00);
  /* #189: @75 = all_3(3x1) */
  casadi_fill(w75, 3, 3.);
  /* #190: @77 = inf */
  w77 = casadi_inf;
  /* #191: @78 = 0 */
  w78 = 0.;
  /* #192: @79 = all_8.5(3x1) */
  casadi_fill(w79, 3, 8.5000000000000000e+00);
  /* #193: @80 = all_3(3x1) */
  casadi_fill(w80, 3, 3.);
  /* #194: @82 = inf */
  w82 = casadi_inf;
  /* #195: @83 = 0 */
  w83 = 0.;
  /* #196: @84 = all_8.5(3x1) */
  casadi_fill(w84, 3, 8.5000000000000000e+00);
  /* #197: @85 = all_3(3x1) */
  casadi_fill(w85, 3, 3.);
  /* #198: @87 = inf */
  w87 = casadi_inf;
  /* #199: @88 = 0 */
  w88 = 0.;
  /* #200: @89 = all_8.5(3x1) */
  casadi_fill(w89, 3, 8.5000000000000000e+00);
  /* #201: @90 = all_3(3x1) */
  casadi_fill(w90, 3, 3.);
  /* #202: @92 = inf */
  w92 = casadi_inf;
  /* #203: @93 = 0 */
  w93 = 0.;
  /* #204: @94 = all_8.5(3x1) */
  casadi_fill(w94, 3, 8.5000000000000000e+00);
  /* #205: @95 = all_3(3x1) */
  casadi_fill(w95, 3, 3.);
  /* #206: @97 = inf */
  w97 = casadi_inf;
  /* #207: @98 = 0 */
  w98 = 0.;
  /* #208: @99 = all_8.5(3x1) */
  casadi_fill(w99, 3, 8.5000000000000000e+00);
  /* #209: @100 = all_3(3x1) */
  casadi_fill(w100, 3, 3.);
  /* #210: @102 = inf */
  w102 = casadi_inf;
  /* #211: @103 = 0 */
  w103 = 0.;
  /* #212: @104 = all_8.5(3x1) */
  casadi_fill(w104, 3, 8.5000000000000000e+00);
  /* #213: @105 = all_3(3x1) */
  casadi_fill(w105, 3, 3.);
  /* #214: @107 = inf */
  w107 = casadi_inf;
  /* #215: @108 = 0 */
  w108 = 0.;
  /* #216: @109 = all_8.5(3x1) */
  casadi_fill(w109, 3, 8.5000000000000000e+00);
  /* #217: @110 = all_3(3x1) */
  casadi_fill(w110, 3, 3.);
  /* #218: @112 = inf */
  w112 = casadi_inf;
  /* #219: @113 = 0 */
  w113 = 0.;
  /* #220: @114 = all_8.5(3x1) */
  casadi_fill(w114, 3, 8.5000000000000000e+00);
  /* #221: @115 = all_3(3x1) */
  casadi_fill(w115, 3, 3.);
  /* #222: @117 = inf */
  w117 = casadi_inf;
  /* #223: @118 = 0 */
  w118 = 0.;
  /* #224: @119 = all_8.5(3x1) */
  casadi_fill(w119, 3, 8.5000000000000000e+00);
  /* #225: @120 = all_3(3x1) */
  casadi_fill(w120, 3, 3.);
  /* #226: @122 = inf */
  w122 = casadi_inf;
  /* #227: @123 = 0 */
  w123 = 0.;
  /* #228: @124 = all_8.5(3x1) */
  casadi_fill(w124, 3, 8.5000000000000000e+00);
  /* #229: @125 = all_3(3x1) */
  casadi_fill(w125, 3, 3.);
  /* #230: @127 = inf */
  w127 = casadi_inf;
  /* #231: @128 = 0 */
  w128 = 0.;
  /* #232: @129 = all_8.5(3x1) */
  casadi_fill(w129, 3, 8.5000000000000000e+00);
  /* #233: @130 = all_3(3x1) */
  casadi_fill(w130, 3, 3.);
  /* #234: @132 = vertcat(@6, @7, @8, @9, @10, @11, @12, @13, @14, @15, @16, @17, @18, @19, @20, @21, @22, @23, @24, @25, @26, @27, @28, @29, @30, @31, @32, @33, @34, @35, @36, @37, @38, @39, @40, @41, @42, @43, @44, @45, @46, @47, @48, @49, @50, @51, @52, @53, @54, @55, @56, @57, @58, @59, @60, @61, @62, @63, @64, @65, @66, @67, @68, @69, @70, @71, @72, @73, @74, @75, @76, @77, @78, @79, @80, @81, @82, @83, @84, @85, @86, @87, @88, @89, @90, @91, @92, @93, @94, @95, @96, @97, @98, @99, @100, @101, @102, @103, @104, @105, @106, @107, @108, @109, @110, @111, @112, @113, @114, @115, @116, @117, @118, @119, @120, @121, @122, @123, @124, @125, @126, @127, @128, @129, @130, @3) */
  rr=w132;
  for (i=0, cs=w6; i<14; ++i) *rr++ = *cs++;
  *rr++ = w7;
  *rr++ = w8;
  for (i=0, cs=w9; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w10; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<14; ++i) *rr++ = *cs++;
  *rr++ = w12;
  *rr++ = w13;
  for (i=0, cs=w14; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w16; i<14; ++i) *rr++ = *cs++;
  *rr++ = w17;
  *rr++ = w18;
  for (i=0, cs=w19; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w20; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w21; i<14; ++i) *rr++ = *cs++;
  *rr++ = w22;
  *rr++ = w23;
  for (i=0, cs=w24; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w25; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w26; i<14; ++i) *rr++ = *cs++;
  *rr++ = w27;
  *rr++ = w28;
  for (i=0, cs=w29; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w30; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w31; i<14; ++i) *rr++ = *cs++;
  *rr++ = w32;
  *rr++ = w33;
  for (i=0, cs=w34; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w35; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w36; i<14; ++i) *rr++ = *cs++;
  *rr++ = w37;
  *rr++ = w38;
  for (i=0, cs=w39; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w40; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w41; i<14; ++i) *rr++ = *cs++;
  *rr++ = w42;
  *rr++ = w43;
  for (i=0, cs=w44; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w45; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w46; i<14; ++i) *rr++ = *cs++;
  *rr++ = w47;
  *rr++ = w48;
  for (i=0, cs=w49; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w50; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w51; i<14; ++i) *rr++ = *cs++;
  *rr++ = w52;
  *rr++ = w53;
  for (i=0, cs=w54; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w55; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w56; i<14; ++i) *rr++ = *cs++;
  *rr++ = w57;
  *rr++ = w58;
  for (i=0, cs=w59; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w60; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w61; i<14; ++i) *rr++ = *cs++;
  *rr++ = w62;
  *rr++ = w63;
  for (i=0, cs=w64; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w65; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w66; i<14; ++i) *rr++ = *cs++;
  *rr++ = w67;
  *rr++ = w68;
  for (i=0, cs=w69; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w70; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w71; i<14; ++i) *rr++ = *cs++;
  *rr++ = w72;
  *rr++ = w73;
  for (i=0, cs=w74; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w75; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w76; i<14; ++i) *rr++ = *cs++;
  *rr++ = w77;
  *rr++ = w78;
  for (i=0, cs=w79; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w80; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w81; i<14; ++i) *rr++ = *cs++;
  *rr++ = w82;
  *rr++ = w83;
  for (i=0, cs=w84; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w85; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w86; i<14; ++i) *rr++ = *cs++;
  *rr++ = w87;
  *rr++ = w88;
  for (i=0, cs=w89; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w90; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w91; i<14; ++i) *rr++ = *cs++;
  *rr++ = w92;
  *rr++ = w93;
  for (i=0, cs=w94; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w95; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w96; i<14; ++i) *rr++ = *cs++;
  *rr++ = w97;
  *rr++ = w98;
  for (i=0, cs=w99; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w100; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w101; i<14; ++i) *rr++ = *cs++;
  *rr++ = w102;
  *rr++ = w103;
  for (i=0, cs=w104; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w105; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w106; i<14; ++i) *rr++ = *cs++;
  *rr++ = w107;
  *rr++ = w108;
  for (i=0, cs=w109; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w110; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w111; i<14; ++i) *rr++ = *cs++;
  *rr++ = w112;
  *rr++ = w113;
  for (i=0, cs=w114; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w115; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w116; i<14; ++i) *rr++ = *cs++;
  *rr++ = w117;
  *rr++ = w118;
  for (i=0, cs=w119; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w120; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w121; i<14; ++i) *rr++ = *cs++;
  *rr++ = w122;
  *rr++ = w123;
  for (i=0, cs=w124; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w125; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w126; i<14; ++i) *rr++ = *cs++;
  *rr++ = w127;
  *rr++ = w128;
  for (i=0, cs=w129; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w130; i<3; ++i) *rr++ = *cs++;
  for (i=0, cs=w3; i<14; ++i) *rr++ = *cs++;
  /* #235: @133 = zeros(464x1) */
  casadi_clear(w133, 464);
  /* #236: @134 = zeros(564x1) */
  casadi_clear(w134, 564);
  /* #237: {@135, NULL, NULL, NULL, @136, NULL} = solver(@2, @3, @4, @5, @131, @132, @133, @134) */
  arg1[0]=w2;
  arg1[1]=w3;
  arg1[2]=w4;
  arg1[3]=w5;
  arg1[4]=w131;
  arg1[5]=w132;
  arg1[6]=w133;
  arg1[7]=w134;
  res1[0]=w135;
  res1[1]=0;
  res1[2]=0;
  res1[3]=0;
  res1[4]=w136;
  res1[5]=0;
  if (casadi_f1(arg1, res1, iw, w, 0)) return 1;
  /* #238: {@1, @0} = helper(@135, @3, @136) */
  arg1[0]=w135;
  arg1[1]=w3;
  arg1[2]=w136;
  res1[0]=w1;
  res1[1]=w0;
  if (casadi_f29(arg1, res1, iw, w, 0)) return 1;
  /* #239: output[0][0] = @1 */
  casadi_copy(w1, 100, res[0]);
  /* #240: output[1][0] = @0 */
  casadi_copy(w0, 364, res[1]);
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int F(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int F_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int F_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void F_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int F_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void F_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void F_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void F_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int F_n_in(void) { return 3;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int F_n_out(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real F_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* F_name_in(casadi_int i) {
  switch (i) {
    case 0: return "xx0";
    case 1: return "uu";
    case 2: return "xx";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* F_name_out(casadi_int i) {
  switch (i) {
    case 0: return "uu_opt";
    case 1: return "xx_pred";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* F_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s97;
    case 1: return casadi_s98;
    case 2: return casadi_s99;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* F_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s98;
    case 1: return casadi_s99;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int F_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 145;
  if (sz_res) *sz_res = 138;
  if (sz_iw) *sz_iw = 5140;
  if (sz_w) *sz_w = 83049;
  return 0;
}

casadi_int main_F(casadi_int argc, char* argv[]) {
  casadi_int j;
  casadi_real* a;
  const casadi_real* r;
  casadi_int flag;
  casadi_int iw[5140];
  casadi_real w[83991];
  const casadi_real* arg[145];
  casadi_real* res[138];
  arg[0] = w+0;
  arg[1] = w+14;
  arg[2] = w+114;
  res[0] = w+478;
  res[1] = w+578;
  a = w;
  for (j=0; j<478; ++j) if (scanf("%lg", a++)<=0) return 2;
  flag = F(arg, res, iw, w+942, 0);
  if (flag) return flag;
  r = w+478;
  for (j=0; j<464; ++j) CASADI_PRINTF("%g ", *r++);
  CASADI_PRINTF("\n");
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT casadi_functions* F_functions(void) {
  static casadi_functions fun = {
    F_incref,
    F_decref,
    F_checkout,
    F_release,
    F_default_in,
    F_n_in,
    F_n_out,
    F_name_in,
    F_name_out,
    F_sparsity_in,
    F_sparsity_out,
    F_work,
    F
  };
  return &fun;
}

CASADI_SYMBOL_EXPORT int main(int argc, char* argv[]) {
  if (argc<2) {
    /* name error */
  } else if (strcmp(argv[1], "F")==0) {
    return main_F(argc-2, argv+2);
  }
  fprintf(stderr, "First input should be a command string. Possible values: 'F'\nNote: you may use function.generate_input to create a command string.\n");
  return 1;
}
